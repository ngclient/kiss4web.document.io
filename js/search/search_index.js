var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/classes/Account.html",[0,0.216,1,2.628]],["body/classes/Account.html",[0,0.348,1,5.218,2,0.063,3,0.063,4,0.063,5,5.966,6,0.218,7,0.675,8,1.439,9,7.727,10,3.711,11,7.099,12,7.099,13,0.547,14,7.537,15,0.509,16,7.537,17,0.462,18,0.007,19,0.277,20,0.356,21,0.361,22,2.012,23,5.966,24,4.805,25,5.966,26,5.966,27,0.054,28,1.659,29,5.966,30,5.966,31,5.966,32,5.966,33,4.879,34,5.966,35,4.879,36,5.966,37,0.005,38,0.005]],["title/classes/ActionHandler.html",[0,0.216,39,3.369]],["body/classes/ActionHandler.html",[0,0.368,2,0.069,3,0.069,4,0.069,6,0.238,7,0.714,15,0.489,18,0.007,20,0.342,22,1.826,27,0.059,37,0.005,38,0.005,39,5.742,40,8.959,41,6.525,42,8.959,43,8.959,44,5.618,45,3.594,46,1.354,47,1.306,48,4.081,49,6.525,50,4.787,51,2.239,52,6.525,53,6.525,54,0.303,55,0.869]],["title/classes/AddFailAction.html",[0,0.216,56,2.628]],["body/classes/AddFailAction.html",[0,0.424,1,2.307,2,0.043,3,0.043,4,0.043,6,0.15,7,0.525,8,1.018,13,0.376,15,0.389,17,0.318,18,0.007,19,0.191,20,0.377,21,0.248,27,0.084,28,1.593,37,0.004,38,0.004,46,0.922,47,0.889,51,2.093,54,0.366,56,3.84,57,2.387,58,1.318,59,2.129,60,2.583,61,1.196,62,5.859,63,4.104,64,3.533,65,4.293,66,2.475,67,2.475,68,0.886,69,2.067,70,1.174,71,1.093,72,0.568,73,1.174,74,2.344,75,0.856,76,5.612,77,1.714,78,2.093,79,1.363,80,2.093,81,3.426,82,2.475,83,1.39,84,3.533,85,2.475,86,2.475,87,3.368,88,2.475,89,2.475,90,2.475,91,2.475,92,1.174,93,2.564,94,2.475,95,2.475,96,2.34,97,1.714,98,2.486,99,2.34,100,1.714,101,1.153,102,1.873,103,1.363,104,3.293,105,2.475,106,3.293,107,2.475,108,3.293,109,2.475,110,2.475,111,3.293,112,2.475,113,3.293,114,2.475,115,3.293,116,2.475,117,3.293,118,2.475,119,3.293,120,2.475]],["title/classes/AddNewAction.html",[0,0.216,104,2.628]],["body/classes/AddNewAction.html",[0,0.424,1,2.307,2,0.043,3,0.043,4,0.043,6,0.15,7,0.525,8,1.018,13,0.376,15,0.389,17,0.318,18,0.007,19,0.191,20,0.377,21,0.248,27,0.084,28,1.565,37,0.004,38,0.004,46,0.646,47,0.623,51,2.093,54,0.366,56,3.293,57,2.387,58,1.318,59,2.129,60,2.583,61,1.196,64,2.475,65,4.293,66,2.475,67,2.475,68,0.886,69,2.181,70,1.174,71,1.093,72,0.568,73,1.174,74,2.344,75,0.856,76,5.612,77,1.714,78,2.093,79,1.363,80,2.093,81,3.426,82,2.475,83,1.39,84,3.533,85,2.475,86,2.475,87,3.368,88,2.475,89,2.475,90,2.475,91,2.475,92,1.174,93,2.564,94,2.475,95,2.475,96,2.34,97,1.714,98,2.486,99,2.34,100,1.714,101,1.153,102,1.873,103,1.363,104,3.84,105,3.533,106,3.293,107,2.475,108,3.293,109,2.475,110,2.475,111,3.293,112,2.475,113,3.293,114,2.475,115,3.293,116,2.475,117,3.293,118,2.475,119,3.293,120,2.475,121,5.859,122,4.104]],["title/classes/AddSuccessAction.html",[0,0.216,106,2.628]],["body/classes/AddSuccessAction.html",[0,0.424,1,2.307,2,0.043,3,0.043,4,0.043,6,0.15,7,0.525,8,1.018,13,0.376,15,0.389,17,0.318,18,0.007,19,0.191,20,0.377,21,0.248,27,0.084,28,1.565,37,0.004,38,0.004,46,0.646,47,0.623,51,2.093,54,0.366,56,3.293,57,2.387,58,1.318,59,2.129,60,2.583,61,1.196,64,2.475,65,4.293,66,2.475,67,2.475,68,0.886,69,2.181,70,1.174,71,1.093,72,0.568,73,1.174,74,2.344,75,0.856,76,5.612,77,1.714,78,2.093,79,1.363,80,2.093,81,3.426,82,2.475,83,1.39,84,3.533,85,2.475,86,2.475,87,3.368,88,2.475,89,2.475,90,2.475,91,2.475,92,1.174,93,2.564,94,2.475,95,2.475,96,2.34,97,1.714,98,2.486,99,2.34,100,1.714,101,1.153,102,1.873,103,1.363,104,3.293,105,2.475,106,3.84,107,3.533,108,3.293,109,2.475,110,2.475,111,3.293,112,2.475,113,3.293,114,2.475,115,3.293,116,2.475,117,3.293,118,2.475,119,3.293,120,2.475,123,5.859,124,4.104]],["title/classes/AddUserAction.html",[0,0.216,125,2.719]],["body/classes/AddUserAction.html",[0,0.42,2,0.051,3,0.051,4,0.051,6,0.175,7,0.586,8,0.974,13,0.44,15,0.423,17,0.372,18,0.007,19,0.223,20,0.378,21,0.291,27,0.084,28,1.448,37,0.004,38,0.004,46,0.756,47,0.729,54,0.345,58,1.306,59,2.127,60,2.581,61,1.399,68,1.037,70,1.374,71,1.279,72,0.665,73,1.374,78,1.837,80,1.837,81,2.209,83,2.702,98,2.474,125,4.322,126,2.897,127,2.794,128,6.538,129,4.803,130,4.099,131,3.348,132,3.012,133,5.621,134,3.578,135,3.012,136,3.012,137,3.012,138,4.209,139,3.012,140,3.012,141,3.012,142,3.012,143,2.897,144,3.802,145,3.012,146,3.802,147,3.012,148,3.802,149,3.012,150,3.802,151,3.012,152,3.802,153,3.012,154,3.802,155,3.012,156,3.802,157,3.012]],["title/injectables/AppApiClient.html",[158,0.942,159,3.369]],["body/injectables/AppApiClient.html",[0,0.263,2,0.06,3,0.06,4,0.06,6,0.208,8,1.401,15,0.46,17,0.441,18,0.007,19,0.264,20,0.291,21,0.344,27,0.052,28,1.328,37,0.005,38,0.005,54,0.41,55,0.759,158,1.629,159,5.273,160,5.694,161,1.754,162,3.748,163,8.532,164,7.595,165,5.694,166,6.612,167,4.141,168,5.069,169,5.694,170,6.513,171,1.728,172,3.514,173,5.984,174,5.694,175,5.694,176,5.984,177,3.748,178,5.069,179,4.785,180,4.349,181,5.588,182,4.349,183,3.2,184,5.273,185,4.349,186,2.325,187,4.349,188,5.069,189,3.434,190,4.104,191,5.069,192,3.899,193,5.01,194,3.571,195,2.758,196,5.694,197,5.694,198,5.694,199,5.694,200,5.694,201,2.835,202,2.618,203,1.572,204,3.004,205,2.006,206,5.694,207,5.694,208,5.694]],["title/components/AppComponent.html",[209,0.819,210,1.583]],["body/components/AppComponent.html",[0,0.256,2,0.04,3,0.04,4,0.04,6,0.138,7,0.496,8,1.283,13,0.507,15,0.48,17,0.294,18,0.007,19,0.334,20,0.285,21,0.229,27,0.034,37,0.004,38,0.004,45,2.729,46,0.597,47,0.575,48,1.942,54,0.355,55,0.505,58,0.795,69,1.326,74,1.085,83,1.874,92,1.869,101,1.835,134,1.7,161,1.326,171,1.374,184,4.708,203,1.527,205,1.336,209,1.338,210,2.432,211,1.363,212,1.621,213,3.791,214,4.989,215,3.004,216,1.259,217,4.226,218,2.754,219,6.248,220,3.295,221,1.989,222,5.532,223,7.974,224,2.632,225,4.606,226,5.485,227,3.479,228,4.917,229,4.917,230,2.596,231,3.97,232,5.532,233,3.791,234,2.455,235,3.791,236,3.791,237,4.524,238,3.699,239,4.226,240,3.987,241,3.791,242,3.788,243,3.791,244,3.791,245,1.363,246,3.375,247,3.1,248,1.836,249,3.791,250,3.791,251,3.791,252,2.732,253,2.896,254,2.896,255,1.309,256,3.791,257,2.596,258,3.375,259,2.479,260,1.836,261,3.1,262,1.989,263,3.375,264,2.896,265,3.791,266,3.791,267,3.791,268,3.791,269,3.791,270,3.791,271,2.063,272,2.479,273,2.479,274,1.085,275,1.989,276,1.989,277,1.769,278,2.211,279,1.363,280,1.363,281,1.284,282,2.933,283,1.363,284,1.363,285,1.284,286,1.336,287,1.189,288,1.363,289,1.284,290,1.363,291,1.284,292,1.874,293,1.989,294,1.284,295,1.709,296,1.363,297,1.259,298,1.363,299,1.284,300,1.989,301,1.284,302,1.989,303,1.212,304,1.284,305,1.065,306,1.363,307,1.284,308,1.363,309,1.284,310,1.309,311,1.363,312,1.259,313,1.363,314,1.284,315,1.085,316,1.363,317,1.284,318,1.212,319,1.989,320,1.259,321,1.363,322,1.363,323,1.284,324,1.363,325,1.259,326,1.363,327,1.259,328,1.363,329,1.259,330,1.363,331,1.259,332,1.363,333,1.284,334,1.363,335,1.363,336,1.284,337,1.284,338,1.336,339,1.284,340,1.146,341,1.363,342,1.284,343,1.363,344,1.284,345,1.363,346,1.259,347,1.363,348,1.259,349,1.189,350,1.259,351,1.363,352,1.259,353,1.309,354,1.309,355,1.363]],["title/modules/AppModule.html",[356,1.337,357,3.571]],["body/modules/AppModule.html",[0,0.227,2,0.034,3,0.034,4,0.034,18,0.007,27,0.068,37,0.003,38,0.003,51,1.38,54,0.451,55,0.43,68,1.283,72,0.447,159,5.417,171,0.94,189,1.949,190,5.417,191,2.877,192,2.213,201,2.958,204,1.705,210,3.001,216,1.073,218,3.554,219,4.068,231,1.609,239,2.468,240,4.282,245,1.162,254,2.468,255,1.696,260,1.565,262,1.162,271,1.758,274,0.925,282,1.864,295,0.845,318,1.033,356,2.235,357,7.333,358,3.043,359,3.135,360,3.233,361,2.877,362,2.877,363,2.877,364,2.877,365,2.877,366,2.877,367,5.417,368,5.144,369,5.144,370,5.147,371,5.147,372,4.534,373,5.417,374,4.916,375,4.856,376,4.916,377,4.916,378,2.673,379,1.053,380,1.655,381,3.232,382,2.643,383,2.857,384,4.017,385,4.017,386,3.752,387,2.673,388,3.212,389,1.879,390,4.017,391,2.643,392,2.761,393,1.565,394,2.258,395,4.912,396,4.017,397,2.026,398,4.912,399,2.643,400,3.232,401,2.329,402,2.026,403,2.329,404,3.232,405,2.877,406,3.232,407,2.213,408,3.554,409,2.329,410,3.212,411,2.643,412,3.232,413,2.643,414,3.232,415,2.643,416,3.232,417,2.643,418,3.232,419,2.643,420,3.232,421,3.232,422,2.643,423,3.232,424,2.877,425,2.643,426,2.643,427,5.289,428,2.213,429,2.877,430,2.877,431,2.877,432,2.877,433,4.912,434,4.912,435,3.232,436,3.232,437,3.232,438,2.026,439,3.232,440,5.908,441,2.113,442,3.232,443,3.232,444,2.591,445,1.802,446,2.213,447,2.877,448,2.643,449,2.329,450,4.306,451,2.468,452,3.363,453,4.912,454,2.643,455,3.232,456,3.232,457,2.877,458,3.232,459,3.232,460,2.468,461,2.468,462,3.232,463,2.643,464,3.232,465,3.232,466,3.232,467,3.232,468,3.232,469,3.232,470,3.232,471,3.232,472,3.232,473,3.232,474,3.232,475,3.232,476,5.289,477,2.857,478,2.643,479,3.232,480,2.877,481,2.877,482,3.232,483,2.643,484,3.232,485,3.232,486,3.232,487,3.232,488,3.232,489,3.232,490,3.232,491,3.232,492,3.232,493,3.232,494,3.232,495,3.232,496,2.643,497,4.912,498,3.232,499,2.877,500,4.372,501,3.232,502,3.232,503,3.232,504,2.643,505,3.232,506,3.232,507,2.643,508,3.232,509,3.232,510,3.232,511,3.232,512,3.232,513,3.232,514,3.232,515,3.232,516,3.232,517,3.232,518,3.232]],["title/modules/AppRoutingModule.html",[356,1.337,367,3.369]],["body/modules/AppRoutingModule.html",[0,0.3,2,0.068,3,0.068,4,0.068,18,0.007,27,0.072,37,0.005,38,0.005,54,0.398,55,0.864,69,1.903,72,0.897,134,2.908,183,5.245,245,2.331,260,3.845,295,2.077,356,1.855,367,5.721,394,3.65,519,5.773,520,4.673,521,4.788,522,6.485,523,7.938,524,6.485,525,6.485,526,8.94,527,6.485,528,5.303,529,6.485,530,6.485,531,5.773,532,6.485,533,6.485,534,6.485]],["title/injectables/AppSandbox.html",[158,0.942,219,3.201]],["body/injectables/AppSandbox.html",[0,0.222,2,0.051,3,0.051,4,0.051,6,0.175,7,0.586,8,1.418,13,0.599,15,0.49,17,0.506,18,0.007,19,0.304,20,0.26,21,0.483,22,1.02,27,0.044,37,0.004,38,0.004,46,1.314,47,0.729,54,0.416,55,0.64,60,1.326,68,1.037,72,1.155,83,1.627,101,1.35,158,1.498,161,1.567,171,1.685,195,2.327,219,4.476,224,2.09,234,2.569,240,4.711,248,2.327,252,3.461,262,2.35,282,1.507,305,2.345,318,2.09,375,5.313,389,3.802,408,4.155,409,3.461,428,3.289,444,2.534,445,2.927,446,5.462,452,4.476,504,5.346,535,4.803,536,7.101,537,7.978,538,6.538,539,7.978,540,7.978,541,3.669,542,6.538,543,3.557,544,4.803,545,5.346,546,6.538,547,4.803,548,4.803,549,4.803,550,6.538,551,4.099,552,3.669,553,3.289,554,3.669,555,2.391,556,3.461,557,4.803,558,4.803,559,5.819,560,6.538,561,4.803,562,4.803,563,4.803,564,4.276,565,4.803,566,4.803,567,4.803,568,4.803,569,4.803,570,4.803,571,5.462,572,4.803,573,4.803,574,4.276,575,4.803,576,3.928]],["title/injectables/AppService.html",[158,0.942,190,3.369]],["body/injectables/AppService.html",[0,0.261,2,0.059,3,0.059,4,0.059,6,0.206,15,0.458,17,0.624,18,0.007,19,0.374,20,0.32,21,0.487,27,0.051,37,0.005,38,0.005,44,4.561,51,1.586,54,0.338,55,0.752,75,1.774,101,2.61,158,1.714,161,1.743,171,1.724,172,3.079,186,2.304,190,5.242,202,3.91,212,1.998,536,6.475,577,5.643,578,5.884,579,7.274,580,7.274,581,7.274,582,7.274,583,5.643,584,7.274,585,5.643,586,6.128,587,6.954,588,7.197,589,6.954,590,7.274,591,7.274,592,6.128,593,7.274,594,5.643,595,3.039,596,4.615,597,2.725,598,5.643]],["title/injectables/AuthApiClient.html",[158,0.942,370,3.201]],["body/injectables/AuthApiClient.html",[0,0.244,2,0.056,3,0.056,4,0.056,6,0.193,8,1.32,15,0.397,17,0.41,18,0.007,19,0.246,20,0.31,21,0.472,27,0.048,37,0.005,38,0.005,51,1.486,54,0.431,55,0.705,72,0.732,83,2.809,131,2.71,134,3.72,138,4.548,158,1.572,161,1.672,167,3.572,171,1.587,172,3.298,179,4.561,180,5.959,181,5.327,182,4.041,183,2.973,184,3.812,185,4.041,186,2.16,187,4.041,189,3.191,192,3.622,193,4.775,194,4.373,195,2.563,201,2.634,202,2.433,248,2.563,370,4.775,372,3.191,380,3.572,402,3.317,597,1.982,599,5.29,600,6.974,601,5.29,602,5.327,603,6.213,604,4.056,605,6.974,606,5.29,607,5.327,608,6.208,609,4.326,610,4.326,611,5.29,612,5.29,613,5.29,614,4.709,615,5.29,616,6.974,617,5.342,618,6.974,619,6.974,620,6.974,621,6.974,622,6.208,623,5.29,624,5.29,625,5.29,626,5.29,627,5.29,628,3.46]],["title/injectables/AuthEffects.html",[158,0.942,415,3.823]],["body/injectables/AuthEffects.html",[0,0.184,2,0.042,3,0.071,4,0.042,6,0.209,7,0.513,13,0.525,15,0.382,17,0.308,18,0.007,19,0.185,20,0.267,21,0.24,27,0.036,28,1.039,37,0.004,38,0.004,46,0.901,47,0.869,51,2.277,54,0.424,55,0.529,59,2.022,60,1.58,68,1.236,70,1.137,72,0.792,83,1.346,127,2.311,131,3.437,134,2.567,138,3.02,158,1.352,167,2.932,171,1.55,172,3.331,186,1.623,224,2.145,240,4.125,247,4.682,255,2.536,370,5.719,380,2.932,408,3.874,410,5.968,415,4.682,429,3.538,438,2.492,450,3.453,452,5.027,463,4.682,478,4.682,543,3.651,592,4.125,608,6.535,628,3.744,629,3.974,630,5.725,631,5.725,632,5.725,633,5.725,634,5.725,635,5.725,636,5.725,637,5.725,638,6.004,639,5.725,640,4.125,641,5.725,642,5.725,643,8.105,644,5.725,645,7.342,646,5.725,647,5.096,648,5.725,649,5.725,650,4.372,651,5.725,652,5.096,653,5.725,654,7.342,655,7.342,656,2.721,657,3.974,658,5.027,659,5.725,660,5.027,661,5.725,662,3.92,663,4.372,664,8.105,665,5.725,666,5.725,667,5.725,668,5.725,669,5.725,670,5.725,671,5.725,672,5.725,673,5.725,674,5.725,675,5.725,676,5.725,677,5.725,678,5.725,679,5.725,680,5.096,681,5.027,682,5.725,683,3.974,684,5.725,685,5.725,686,4.372,687,5.725,688,5.725,689,5.725,690,5.725,691,3.974,692,2.599,693,2.492,694,2.599,695,2.721,696,3.974]],["title/injectables/AuthGuard.html",[158,0.942,371,3.201]],["body/injectables/AuthGuard.html",[0,0.273,2,0.062,3,0.062,4,0.062,6,0.216,13,0.542,15,0.468,17,0.637,18,0.007,19,0.382,20,0.327,21,0.498,22,1.746,27,0.054,37,0.005,38,0.005,45,3.613,48,3.027,54,0.382,55,0.787,58,0.849,72,0.818,92,1.691,134,2.65,158,1.658,161,1.796,171,1.707,172,2.261,230,4.046,231,4.54,245,2.124,255,2.841,260,2.863,271,3.215,371,5.13,647,5.26,697,5.909,698,6.607,699,6.669,700,5.909,701,6.669,702,7.074,703,7.7,704,5.909,705,7.492,706,5.909,707,3.564,708,3.215,709,3.564,710,5.909,711,5.909,712,7.492,713,5.26,714,3.437,715,3.437,716,4.046,717,4.833,718,5.909,719,4.833]],["title/modules/AuthModule.html",[356,1.337,720,3.571]],["body/modules/AuthModule.html",[0,0.264,2,0.06,3,0.06,4,0.06,18,0.007,27,0.067,37,0.005,38,0.005,54,0.45,55,0.76,189,3.441,218,4.028,274,1.632,312,3.001,318,1.824,356,2.096,358,2.922,359,4.269,360,3.104,370,6.187,372,5.45,378,3.986,379,1.859,380,2.922,385,4.666,386,4.357,388,3.731,389,3.318,392,4.117,393,2.763,394,3.368,396,5.991,397,3.577,403,4.111,441,4.79,444,3.01,445,2.093,447,6.521,449,4.111,610,4.666,720,7.33,721,5.078,722,5.078,723,5.078,724,5.705,725,6.512,726,5.705,727,5.595,728,5.078,729,5.078,730,4.593,731,4.666,732,5.705]],["title/modules/AuthRoutingModule.html",[356,1.337,725,3.369]],["body/modules/AuthRoutingModule.html",[0,0.319,2,0.073,3,0.073,4,0.073,18,0.007,27,0.075,37,0.006,38,0.006,54,0.424,55,0.919,72,0.955,183,3.878,209,1.209,245,2.48,260,3.992,312,2.737,356,1.974,394,3.789,520,4.972,521,4.97,725,5.939,729,6.141,733,6.899,734,6.899,735,6.899]],["title/injectables/AuthSandbox.html",[158,0.942,372,2.82]],["body/injectables/AuthSandbox.html",[0,0.179,2,0.041,3,0.041,4,0.041,6,0.141,7,0.503,8,1.397,13,0.514,15,0.506,17,0.562,18,0.007,19,0.337,20,0.319,21,0.438,27,0.035,28,0.702,37,0.004,38,0.004,46,1.04,47,1.003,54,0.418,55,0.515,59,1.255,68,0.835,72,0.535,75,0.807,83,2.874,101,1.856,131,1.98,134,3.251,158,1.331,161,1.345,171,1.68,195,1.873,224,2.765,225,4.642,229,4.963,230,2.647,231,3.997,234,2.37,237,4.589,238,3.511,242,3.842,245,1.39,248,2.718,252,2.786,253,2.953,255,1.335,259,2.528,260,3.2,264,4.286,272,2.528,273,2.528,372,3.385,407,2.647,408,3.832,409,2.786,543,3.944,551,3.519,552,2.953,553,2.647,554,2.953,555,1.925,556,2.786,571,4.523,574,3.441,578,5.034,597,2.102,603,4.044,607,2.953,638,4.589,708,2.104,714,3.264,715,3.264,736,3.866,737,7.553,738,6.872,739,5.612,740,7.248,741,5.612,742,7.248,743,5.928,744,5.672,745,5.612,746,5.612,747,3.866,748,5.612,749,3.842,750,3.842,751,3.866,752,5.612,753,3.866,754,5.612,755,3.866,756,3.866,757,3.866,758,6.452,759,3.866,760,3.866,761,3.866,762,3.162,763,3.866,764,3.866,765,3.162,766,3.866,767,3.866,768,3.866,769,3.866,770,3.866,771,3.441,772,2.953,773,3.866,774,3.441,775,3.866,776,3.866,777,3.866,778,3.866,779,3.441,780,3.866,781,3.866,782,3.866,783,3.866,784,3.866,785,3.866,786,3.866,787,4.995,788,5.612,789,3.441,790,3.441,791,3.866]],["title/directives/AuthorizeDirective.html",[277,1.494,350,1.553]],["body/directives/AuthorizeDirective.html",[0,0.276,2,0.063,3,0.063,4,0.063,6,0.218,13,0.691,15,0.47,17,0.584,18,0.007,19,0.35,20,0.328,21,0.456,22,1.266,27,0.054,37,0.005,38,0.005,44,4.726,48,3.056,54,0.416,55,0.795,68,1.288,72,0.825,171,1.141,172,2.282,216,1.981,220,2.552,224,2.641,234,1.837,262,2.145,277,2.641,350,2.503,372,5.599,382,4.879,408,4.113,708,3.246,792,5.966,793,8.952,794,3.8,795,5.966,796,9.142,797,7.355,798,7.099,799,5.966,800,7.537,801,4.879,802,5.966,803,5.966,804,5.966,805,5.31,806,3.147,807,5.31,808,5.31]],["title/injectables/AuthorizeGuard.html",[158,0.942,373,3.369]],["body/injectables/AuthorizeGuard.html",[0,0.274,2,0.062,3,0.062,4,0.062,6,0.216,13,0.544,15,0.469,17,0.638,18,0.007,19,0.383,20,0.328,21,0.498,27,0.054,37,0.005,38,0.005,44,4.709,48,3.038,54,0.431,55,0.79,58,0.852,72,0.821,101,1.667,158,1.661,161,1.8,171,1.657,172,2.269,186,2.422,224,2.769,230,4.062,231,4.545,245,2.132,260,2.873,372,5.592,373,5.412,382,4.851,692,3.879,693,3.719,694,3.879,698,6.616,701,6.685,702,7.084,703,5.28,709,3.578,805,5.28,806,3.129,807,5.28,808,5.28,809,5.932,810,7.51,811,5.932,812,5.932,813,7.51,814,5.932,815,5.932,816,5.932]],["title/classes/BaseComponent.html",[0,0.216,817,2.82]],["body/classes/BaseComponent.html",[0,0.341,2,0.061,3,0.061,4,0.061,6,0.21,7,0.661,8,1.425,13,0.529,15,0.516,17,0.572,18,0.007,19,0.343,20,0.352,21,0.446,22,1.98,27,0.052,37,0.005,38,0.005,54,0.378,55,0.768,161,1.768,171,1.556,209,1.011,224,2.6,234,1.776,387,4.665,388,3.772,389,3.355,555,4.049,817,4.449,818,5.768,819,5.376,820,5.171,821,5.376,822,5.376,823,4.626,824,4.626,825,5.556,826,7.377,827,4.986,828,5.768,829,5.768,830,5.768,831,4.626,832,5.768,833,3.617,834,5.768,835,5.768,836,5.134,837,5.768,838,5.768,839,5.768,840,5.768]],["title/components/BreadCrumbComponent.html",[209,0.819,281,1.583]],["body/components/BreadCrumbComponent.html",[0,0.223,2,0.051,3,0.051,4,0.051,6,0.176,13,0.684,15,0.373,18,0.007,19,0.346,27,0.044,37,0.005,38,0.005,54,0.224,55,0.644,58,0.943,69,1.573,92,2.133,161,1.573,171,0.924,203,1.812,205,1.703,209,1.465,210,1.637,211,1.737,212,1.85,215,3.428,216,1.605,220,3.352,221,2.36,227,3.874,234,1.488,274,1.383,275,2.36,276,2.36,277,2.099,278,2.462,279,1.737,280,1.737,281,2.709,282,3.04,283,3.272,284,1.737,285,1.637,286,1.703,287,1.516,288,1.737,289,1.637,290,1.737,291,1.637,292,2.223,293,2.36,294,1.637,295,1.951,296,1.737,297,1.605,298,1.737,299,1.637,300,2.36,301,1.637,302,2.36,303,1.545,304,1.637,305,1.358,306,1.737,307,1.637,308,1.737,309,1.637,310,1.669,311,1.737,312,1.605,313,1.737,314,1.637,315,1.383,316,1.737,317,1.637,318,1.545,319,2.36,320,1.605,321,1.737,322,1.737,323,1.637,324,1.737,325,1.605,326,1.737,327,1.605,328,1.737,329,1.605,330,1.737,331,1.605,332,1.737,333,1.637,334,1.737,335,1.737,336,1.637,337,1.637,338,1.703,339,1.637,340,1.461,341,1.737,342,1.637,343,1.737,344,1.637,345,1.737,346,1.605,347,1.737,348,1.605,349,1.516,350,1.605,351,1.737,352,1.605,353,1.669,354,1.669,355,1.737,454,5.369,841,7.456,842,6.637,843,4.833,844,7.998,845,2.511,846,6.565,847,6.565,848,4.833,849,4.833]],["title/interfaces/CanComponentDeactivate.html",[850,1.615,851,3.823]],["body/interfaces/CanComponentDeactivate.html",[0,0.311,2,0.071,3,0.071,4,0.071,6,0.245,7,0.727,18,0.007,20,0.267,27,0.074,37,0.006,38,0.006,45,2.808,54,0.405,55,0.895,58,0.965,158,1.635,171,1.286,172,3.104,186,2.745,245,2.416,271,3.657,374,4.395,450,4.893,850,2.802,851,7.127,852,5.983,853,8.379,854,5.983,855,5.983,856,7.222]],["title/injectables/CanDeactivateGuard.html",[158,0.942,374,3.057]],["body/injectables/CanDeactivateGuard.html",[0,0.305,2,0.07,3,0.07,4,0.07,6,0.241,15,0.376,17,0.512,18,0.007,19,0.307,20,0.263,21,0.4,27,0.073,37,0.006,38,0.006,45,2.76,54,0.402,55,0.88,58,0.949,158,1.743,161,1.925,171,1.536,172,3.072,186,2.699,209,1.158,245,2.375,271,3.595,374,5.251,850,2.282,851,7.359,852,5.882,853,8.208,854,5.882,855,7.148,856,7.148,857,6.608]],["title/classes/ClassRightModel.html",[0,0.216,827,2.719]],["body/classes/ClassRightModel.html",[0,0.361,2,0.066,3,0.066,4,0.066,6,0.23,7,0.7,13,0.579,15,0.518,17,0.489,18,0.007,19,0.293,20,0.362,21,0.382,22,2.086,27,0.057,37,0.005,38,0.005,827,4.542,858,9.273,859,6.315,860,8.255,861,7.885,862,7.885,863,7.885,864,7.81,865,7.81,866,6.315,867,6.315,868,6.315,869,6.315,870,6.315,871,6.315,872,6.315,873,6.315,874,6.315,875,6.315]],["title/modules/ComponentsModule.html",[356,1.337,730,2.931]],["body/modules/ComponentsModule.html",[0,0.257,2,0.059,3,0.059,4,0.059,18,0.007,27,0.08,37,0.005,38,0.005,54,0.442,55,0.741,72,0.997,209,1.401,218,2.77,245,2,274,1.592,277,2.704,342,3.219,350,3.157,352,3.157,356,2.062,358,2.849,359,4.218,360,3.027,378,3.922,379,1.812,380,2.849,383,3.235,392,4.051,393,2.695,394,3.314,396,5.894,397,3.488,441,4.713,444,2.935,445,2.041,521,4.347,727,5.505,730,6.027,876,4.952,877,4.952,878,4.952,879,5.563,880,5.505,881,3.488,882,5.194,883,4.009,884,5.563,885,5.563,886,5.563,887,5.563]],["title/injectables/ConfigService.html",[158,0.942,375,2.82]],["body/injectables/ConfigService.html",[0,0.214,2,0.049,3,0.049,4,0.092,6,0.169,7,0.571,13,0.425,15,0.485,17,0.565,18,0.007,19,0.339,20,0.339,21,0.475,27,0.042,37,0.004,38,0.004,47,0.968,51,2.049,54,0.383,55,0.617,72,0.882,74,2.543,75,0.966,158,1.47,161,1.529,171,1.763,172,1.772,186,1.892,192,3.172,193,4.994,194,2.905,224,2.722,263,6.995,375,3.846,399,5.216,401,6.137,402,2.905,477,4.953,483,6.965,519,7.767,597,2.389,604,2.694,617,5.642,693,2.905,708,2.521,709,2.794,750,6.086,765,6.965,888,4.633,889,7.581,890,7.858,891,6.378,892,3.789,893,6.378,894,6.378,895,4.633,896,6.995,897,5.662,898,6.378,899,4.633,900,4.633,901,5.677,902,5.216,903,6.378,904,6.378,905,5.216,906,4.633,907,4.633,908,4.633,909,4.633,910,4.633,911,5.677,912,5.677,913,4.633,914,4.633,915,4.633,916,4.633,917,4.633,918,3.338,919,4.633,920,4.633,921,2.186,922,4.633,923,4.124,924,4.633,925,4.633,926,4.633]],["title/components/ControlWebDavComponent.html",[209,0.819,285,1.583]],["body/components/ControlWebDavComponent.html",[0,0.103,2,0.024,3,0.024,4,0.039,6,0.082,7,0.329,13,0.428,15,0.516,17,0.462,18,0.007,19,0.34,20,0.324,21,0.361,22,1.868,27,0.042,28,1.164,37,0.003,38,0.003,45,1.95,46,1.113,47,0.906,48,1.146,51,1.903,54,0.17,55,0.298,58,0.527,59,1.637,65,1.113,69,0.88,72,1.11,80,0.628,83,1.83,92,1.336,161,0.88,171,1.508,193,1.531,203,1.013,205,2.102,209,1.045,210,0.757,211,0.804,212,1.159,215,2.147,216,0.743,217,1.708,220,3.126,221,1.32,224,2.862,227,2.617,234,2.575,271,1.217,274,0.64,275,1.32,276,1.32,277,1.173,278,1.837,279,0.804,280,0.804,281,0.757,282,2.723,283,0.804,284,0.804,285,1.83,286,2.386,287,3.042,288,0.804,289,0.757,290,0.804,291,0.757,292,1.243,293,1.32,294,0.757,295,1.221,296,0.804,297,0.743,298,0.804,299,0.757,300,1.32,301,0.757,302,1.32,303,0.715,304,0.757,305,0.628,306,0.804,307,0.757,308,0.804,309,0.757,310,0.772,311,0.804,312,0.743,313,0.804,314,0.757,315,0.64,316,0.804,317,0.757,318,0.715,319,1.32,320,0.743,321,0.804,322,0.804,323,0.757,324,0.804,325,0.743,326,0.804,327,0.743,328,0.804,329,0.743,330,0.804,331,0.743,332,0.804,333,0.757,334,0.804,335,0.804,336,0.757,337,0.757,338,0.788,339,0.757,340,1.109,341,0.804,342,0.757,343,0.804,344,0.757,345,0.804,346,0.743,347,0.804,348,0.743,349,0.702,350,0.743,351,0.804,352,0.743,353,0.772,354,0.772,355,0.804,359,1.18,450,3.867,496,3.002,555,3.646,617,4.842,794,2.612,806,1.18,845,1.404,889,4.81,923,1.991,927,6.564,928,6.957,929,1.991,930,3.818,931,3.671,932,3.671,933,3.671,934,4.127,935,6.412,936,6.412,937,5.403,938,6.412,939,5.403,940,5.403,941,5.403,942,5.403,943,3.671,944,3.671,945,4.419,946,5.403,947,3.671,948,3.671,949,4.669,950,4.669,951,4.669,952,3.671,953,4.156,954,4.156,955,3.671,956,2.237,957,2.237,958,2.237,959,3.671,960,4.81,961,2.237,962,3.671,963,5.173,964,2.237,965,3.566,966,2.237,967,2.237,968,2.237,969,3.671,970,2.237,971,1.708,972,2.237,973,3.002,974,2.237,975,4.669,976,0.956,977,2.237,978,2.237,979,2.237,980,2.237,981,2.237,982,4.669,983,2.237,984,2.237,985,2.237,986,2.237,987,2.237,988,2.237,989,2.237,990,2.237,991,2.237,992,2.237,993,2.237,994,2.237,995,1.612,996,1.257,997,1.531,998,2.237,999,2.237,1000,1.991,1001,1.991,1002,1.991,1003,1.991,1004,1.991,1005,2.237,1006,2.237,1007,2.237,1008,2.237,1009,2.237,1010,2.237,1011,2.237,1012,2.237,1013,2.237,1014,2.237,1015,2.237,1016,2.237,1017,3.671,1018,2.237,1019,2.237,1020,2.237,1021,3.671,1022,2.237,1023,1.708,1024,2.645,1025,2.237,1026,3.566,1027,2.237,1028,2.237,1029,3.671,1030,3.671,1031,2.237,1032,2.237,1033,2.237,1034,2.237,1035,2.237,1036,2.927,1037,2.237,1038,2.237,1039,2.237,1040,5.403,1041,2.237,1042,3.671,1043,2.237,1044,2.237,1045,3.671,1046,3.671,1047,5.403,1048,3.671,1049,2.237,1050,2.237,1051,2.237,1052,2.237,1053,2.237,1054,2.237,1055,3.671,1056,3.671,1057,2.237,1058,2.237,1059,2.237,1060,2.237,1061,2.237,1062,2.237,1063,2.237,1064,2.237,1065,2.237,1066,2.237,1067,1.991,1068,2.237,1069,2.237,1070,2.237,1071,2.237,1072,2.237,1073,2.237,1074,2.237,1075,2.237,1076,3.671,1077,2.237,1078,2.237,1079,2.237,1080,2.237,1081,2.237,1082,2.237,1083,2.237,1084,2.237,1085,1.991,1086,3.671,1087,2.237,1088,1.991,1089,2.237,1090,3.002,1091,3.671,1092,3.671]],["title/modules/ControlWebDavModule.html",[356,1.337,1093,3.369]],["body/modules/ControlWebDavModule.html",[0,0.3,2,0.068,3,0.068,4,0.068,18,0.007,27,0.081,37,0.005,38,0.005,54,0.416,55,0.866,218,3.235,274,1.859,285,3.307,286,2.289,287,2.694,356,2.274,358,3.328,359,4.53,360,3.536,378,4.325,379,2.117,380,3.328,392,4.467,393,3.148,394,3.655,927,4.683,928,4.963,1093,6.814,1094,5.784,1095,5.784,1096,5.784,1097,6.498,1098,6.498]],["title/classes/DeleteAction.html",[0,0.216,115,2.628]],["body/classes/DeleteAction.html",[0,0.424,1,2.319,2,0.043,3,0.043,4,0.043,6,0.151,7,0.527,8,1.021,13,0.378,15,0.39,17,0.32,18,0.007,19,0.192,20,0.377,21,0.25,27,0.084,28,1.567,37,0.004,38,0.004,46,0.649,47,0.626,51,2.098,54,0.367,56,3.305,57,2.4,58,1.319,59,2.13,60,2.585,61,1.202,64,2.488,65,4.299,66,2.488,67,2.488,68,0.891,69,2.069,70,1.18,71,1.099,72,0.571,73,1.18,74,2.348,75,0.861,76,5.617,77,1.723,78,2.098,79,1.37,80,2.098,81,3.434,82,2.488,83,1.397,84,3.547,85,2.488,86,2.488,87,3.373,88,2.488,89,2.488,90,2.488,91,2.488,92,1.18,93,2.574,94,2.488,95,2.488,96,2.349,97,1.723,98,2.489,99,2.349,100,1.723,101,1.159,102,1.88,103,1.37,104,3.305,105,2.488,106,3.305,107,2.488,108,3.305,109,2.488,110,2.488,111,3.305,112,2.488,113,3.305,114,2.488,115,3.851,116,3.547,117,3.305,118,2.488,119,3.305,120,2.488,1099,5.881,1100,4.126]],["title/classes/DeleteFailAction.html",[0,0.216,119,2.628]],["body/classes/DeleteFailAction.html",[0,0.424,1,2.307,2,0.043,3,0.043,4,0.043,6,0.15,7,0.525,8,1.018,13,0.376,15,0.389,17,0.318,18,0.007,19,0.191,20,0.377,21,0.248,27,0.084,28,1.593,37,0.004,38,0.004,46,0.922,47,0.889,51,2.093,54,0.366,56,3.293,57,2.387,58,1.318,59,2.129,60,2.583,61,1.196,64,2.475,65,4.293,66,2.475,67,2.475,68,0.886,69,2.067,70,1.174,71,1.093,72,0.568,73,1.174,74,2.344,75,0.856,76,5.612,77,1.714,78,2.093,79,1.363,80,2.093,81,3.426,82,2.475,83,1.39,84,3.533,85,2.475,86,2.475,87,3.368,88,2.475,89,2.475,90,2.475,91,2.475,92,1.174,93,2.564,94,2.475,95,2.475,96,2.34,97,1.714,98,2.486,99,2.34,100,1.714,101,1.153,102,1.873,103,1.363,104,3.293,105,2.475,106,3.293,107,2.475,108,3.293,109,2.475,110,2.475,111,3.293,112,2.475,113,3.293,114,2.475,115,3.293,116,2.475,117,3.293,118,2.475,119,3.84,120,3.533,1101,5.859,1102,4.104]],["title/classes/DeleteItemSelectedAction.html",[0,0.216,1103,2.466]],["body/classes/DeleteItemSelectedAction.html",[0,0.428,2,0.044,3,0.044,4,0.044,6,0.152,7,0.53,8,0.882,13,0.382,15,0.392,17,0.323,18,0.007,19,0.193,20,0.379,21,0.252,22,1.257,27,0.085,28,1.537,37,0.004,38,0.004,46,0.656,47,0.632,54,0.275,58,1.331,59,2.132,60,2.601,61,1.213,68,0.899,71,1.109,72,0.576,73,1.191,74,1.191,75,1.235,78,1.17,79,1.383,80,1.17,87,1.663,98,2.539,102,1.892,103,1.383,162,3.032,201,3.429,202,2.722,203,1.634,204,4.18,255,1.438,262,2.476,305,1.17,379,1.357,445,1.528,921,1.965,1103,3.633,1104,2.266,1105,5.919,1106,4.164,1107,3.327,1108,2.341,1109,3.327,1110,2.341,1111,2.341,1112,2.341,1113,2.341,1114,2.341,1115,2.341,1116,2.341,1117,2.341,1118,2.341,1119,2.341,1120,2.341,1121,2.341,1122,2.341,1123,2.341,1124,2.341,1125,2.341,1126,1.74,1127,1.74,1128,2.341,1129,3.871,1130,2.341,1131,2.341,1132,3.123,1133,2.341,1134,3.123,1135,2.341,1136,3.123,1137,2.341,1138,3.123,1139,2.341,1140,3.123,1141,2.341,1142,3.123,1143,2.341,1144,2.947,1145,2.341,1146,2.264,1147,1.74,1148,3.327,1149,3.327,1150,3.123,1151,2.341,1152,3.123]],["title/classes/DeleteSuccessAction.html",[0,0.216,117,2.628]],["body/classes/DeleteSuccessAction.html",[0,0.424,1,2.307,2,0.043,3,0.043,4,0.043,6,0.15,7,0.525,8,1.018,13,0.376,15,0.389,17,0.318,18,0.007,19,0.191,20,0.377,21,0.248,27,0.084,28,1.593,37,0.004,38,0.004,46,0.922,47,0.889,51,2.093,54,0.366,56,3.293,57,2.387,58,1.318,59,2.129,60,2.583,61,1.196,64,2.475,65,4.293,66,2.475,67,2.475,68,0.886,69,2.067,70,1.174,71,1.093,72,0.568,73,1.174,74,2.344,75,0.856,76,5.612,77,1.714,78,2.093,79,1.363,80,2.093,81,3.426,82,2.475,83,1.39,84,3.533,85,2.475,86,2.475,87,3.368,88,2.475,89,2.475,90,2.475,91,2.475,92,1.174,93,2.564,94,2.475,95,2.475,96,2.34,97,1.714,98,2.486,99,2.34,100,1.714,101,1.153,102,1.873,103,1.363,104,3.293,105,2.475,106,3.293,107,2.475,108,3.293,109,2.475,110,2.475,111,3.293,112,2.475,113,3.293,114,2.475,115,3.293,116,2.475,117,3.84,118,3.533,119,3.293,120,2.475,1153,5.859,1154,4.104]],["title/classes/DoLoginAction.html",[0,0.216,144,2.719]],["body/classes/DoLoginAction.html",[0,0.419,2,0.05,3,0.05,4,0.05,6,0.174,7,0.583,8,0.97,13,0.438,15,0.421,17,0.37,18,0.007,19,0.222,20,0.378,21,0.289,27,0.083,28,1.444,37,0.004,38,0.004,46,0.752,47,0.725,54,0.344,58,1.304,59,2.126,60,2.578,61,1.391,68,1.031,70,1.366,71,1.271,72,0.66,73,1.366,78,1.829,80,1.829,81,2.195,83,2.509,98,2.471,125,3.786,126,2.879,127,2.777,130,2.993,131,4.402,132,2.993,133,5.613,134,3.735,135,2.993,136,2.993,137,2.993,138,4.198,139,2.993,140,2.993,141,2.993,142,2.993,143,2.879,144,4.309,145,4.082,146,3.786,147,2.993,148,3.786,149,2.993,150,3.786,151,2.993,152,3.786,153,2.993,154,3.786,155,2.993,156,3.786,157,2.993,1155,6.51,1156,4.774]],["title/classes/DoLoginFailAction.html",[0,0.216,148,2.719]],["body/classes/DoLoginFailAction.html",[0,0.42,2,0.05,3,0.05,4,0.05,6,0.175,7,0.585,8,0.973,13,0.44,15,0.422,17,0.372,18,0.007,19,0.223,20,0.378,21,0.29,27,0.084,28,1.514,37,0.004,38,0.004,46,1.028,47,0.991,54,0.345,58,1.305,59,2.116,60,2.58,61,1.397,68,1.036,70,1.372,71,1.277,72,0.664,73,1.372,78,1.835,80,1.835,81,2.205,83,2.515,98,2.473,125,3.798,126,2.892,130,3.007,131,3.345,132,3.007,133,5.619,134,3.576,135,3.007,136,3.007,137,3.007,138,4.206,139,3.007,140,3.007,141,3.007,142,3.007,143,2.892,144,3.798,145,3.007,146,3.798,147,3.007,148,4.319,149,4.095,150,3.798,151,3.007,152,3.798,153,3.007,154,3.798,155,3.007,156,3.798,157,3.007,1157,6.531,1158,4.796]],["title/classes/DoLoginSuccessAction.html",[0,0.216,146,2.719]],["body/classes/DoLoginSuccessAction.html",[0,0.42,2,0.051,3,0.051,4,0.051,6,0.176,7,0.588,8,0.977,13,0.442,15,0.424,17,0.374,18,0.007,19,0.224,20,0.378,21,0.292,27,0.084,28,1.451,37,0.004,38,0.004,46,0.76,47,0.732,54,0.346,58,1.307,59,2.118,60,2.583,61,1.406,68,1.042,70,1.381,71,1.285,72,0.668,73,1.381,78,1.843,80,1.843,81,2.219,83,2.523,98,2.477,125,3.814,126,2.91,130,3.026,131,3.359,132,3.026,133,5.628,134,3.585,135,3.026,136,3.026,137,3.026,138,4.217,139,3.026,140,3.026,141,3.026,142,3.026,143,2.91,144,3.814,145,3.026,146,4.333,147,4.112,148,3.814,149,3.026,150,3.814,151,3.026,152,3.814,153,3.026,154,3.814,155,3.026,156,3.814,157,3.026,1159,6.558,1160,4.825]],["title/classes/DoLogoutAction.html",[0,0.216,150,2.719]],["body/classes/DoLogoutAction.html",[0,0.419,2,0.05,3,0.05,4,0.05,6,0.174,7,0.583,8,0.97,13,0.438,15,0.421,17,0.37,18,0.007,19,0.222,20,0.378,21,0.289,27,0.083,28,1.511,37,0.004,38,0.004,46,1.025,47,0.988,54,0.344,58,1.304,59,2.126,60,2.578,61,1.391,68,1.031,70,1.366,71,1.271,72,0.66,73,1.366,78,1.829,80,1.829,81,2.195,83,2.509,98,2.471,125,3.786,126,2.879,127,2.777,130,2.993,131,3.335,132,2.993,133,5.613,134,3.569,135,2.993,136,2.993,137,2.993,138,4.393,139,2.993,140,2.993,141,2.993,142,2.993,143,2.879,144,3.786,145,2.993,146,3.786,147,2.993,148,3.786,149,2.993,150,4.309,151,4.082,152,3.786,153,2.993,154,3.786,155,2.993,156,3.786,157,2.993,1161,6.51,1162,4.774]],["title/classes/DoLogoutFailAction.html",[0,0.216,154,2.719]],["body/classes/DoLogoutFailAction.html",[0,0.42,2,0.05,3,0.05,4,0.05,6,0.175,7,0.585,8,0.973,13,0.44,15,0.422,17,0.372,18,0.007,19,0.223,20,0.378,21,0.29,27,0.084,28,1.514,37,0.004,38,0.004,46,1.028,47,0.991,54,0.345,58,1.305,59,2.116,60,2.58,61,1.397,68,1.036,70,1.372,71,1.277,72,0.664,73,1.372,78,1.835,80,1.835,81,2.205,83,2.515,98,2.473,125,3.798,126,2.892,130,3.007,131,3.345,132,3.007,133,5.619,134,3.576,135,3.007,136,3.007,137,3.007,138,4.206,139,3.007,140,3.007,141,3.007,142,3.007,143,2.892,144,3.798,145,3.007,146,3.798,147,3.007,148,3.798,149,3.007,150,3.798,151,3.007,152,3.798,153,3.007,154,4.319,155,4.095,156,3.798,157,3.007,1163,6.531,1164,4.796]],["title/classes/DoLogoutSuccessAction.html",[0,0.216,152,2.719]],["body/classes/DoLogoutSuccessAction.html",[0,0.42,2,0.05,3,0.05,4,0.05,6,0.175,7,0.585,8,0.973,13,0.44,15,0.422,17,0.372,18,0.007,19,0.223,20,0.378,21,0.29,27,0.084,28,1.514,37,0.004,38,0.004,46,1.028,47,0.991,54,0.345,58,1.305,59,2.116,60,2.58,61,1.397,68,1.036,70,1.372,71,1.277,72,0.664,73,1.372,78,1.835,80,1.835,81,2.205,83,2.515,98,2.473,125,3.798,126,2.892,130,3.007,131,3.345,132,3.007,133,5.619,134,3.576,135,3.007,136,3.007,137,3.007,138,4.206,139,3.007,140,3.007,141,3.007,142,3.007,143,2.892,144,3.798,145,3.007,146,3.798,147,3.007,148,3.798,149,3.007,150,3.798,151,3.007,152,4.319,153,4.095,154,3.798,155,3.007,156,3.798,157,3.007,1165,6.531,1166,4.796]],["title/classes/DocumentCreate.html",[0,0.216,162,2.394]],["body/classes/DocumentCreate.html",[0,0.428,2,0.044,3,0.044,4,0.044,6,0.151,7,0.528,8,0.879,13,0.38,15,0.391,17,0.321,18,0.007,19,0.192,20,0.379,21,0.251,22,1.252,27,0.085,28,1.569,37,0.004,38,0.004,46,0.928,47,0.895,54,0.274,58,1.33,59,2.131,60,2.599,61,1.207,68,0.895,71,1.103,72,0.573,73,1.185,74,1.185,75,1.23,78,1.164,79,1.376,80,1.164,87,1.654,98,2.537,102,1.885,103,1.376,162,3.517,201,3.419,202,2.712,203,1.627,204,4.171,255,1.431,262,2.468,305,1.164,379,1.35,445,1.52,921,1.954,1103,3.111,1104,2.254,1107,2.328,1108,2.328,1109,3.314,1110,2.328,1111,2.328,1112,2.328,1113,2.328,1114,2.328,1115,2.328,1116,2.328,1117,2.328,1118,2.328,1119,2.328,1120,2.328,1121,2.328,1122,2.328,1123,2.328,1124,2.328,1125,2.328,1126,1.73,1127,1.73,1128,2.328,1129,3.859,1130,2.328,1131,2.328,1132,3.111,1133,2.328,1134,3.111,1135,2.328,1136,3.111,1137,2.328,1138,3.111,1139,2.328,1140,3.111,1141,2.328,1142,3.111,1143,2.328,1144,2.936,1145,2.328,1146,2.256,1147,1.73,1148,3.314,1149,3.859,1150,3.111,1151,2.328,1152,3.111,1167,5.897,1168,4.142]],["title/classes/DocumentCreateError.html",[0,0.216,1152,2.466]],["body/classes/DocumentCreateError.html",[0,0.428,2,0.044,3,0.044,4,0.044,6,0.151,7,0.528,8,0.879,13,0.38,15,0.391,17,0.321,18,0.007,19,0.192,20,0.379,21,0.251,22,1.252,27,0.085,28,1.569,37,0.004,38,0.004,46,0.928,47,0.895,54,0.274,58,1.33,59,2.131,60,2.599,61,1.207,68,0.895,71,1.103,72,0.573,73,1.185,74,1.185,75,1.23,78,1.164,79,1.376,80,1.164,87,1.654,98,2.537,102,1.885,103,1.376,162,3.02,201,3.419,202,2.712,203,1.627,204,4.171,255,1.431,262,2.468,305,1.164,379,1.35,445,1.52,921,1.954,1103,3.111,1104,2.254,1107,2.328,1108,2.328,1109,3.314,1110,2.328,1111,2.328,1112,2.328,1113,2.328,1114,2.328,1115,2.328,1116,2.328,1117,2.328,1118,2.328,1119,2.328,1120,2.328,1121,2.328,1122,2.328,1123,2.328,1124,2.328,1125,2.328,1126,1.73,1127,1.73,1128,2.328,1129,3.859,1130,2.328,1131,2.328,1132,3.111,1133,2.328,1134,3.111,1135,2.328,1136,3.111,1137,2.328,1138,3.111,1139,2.328,1140,3.111,1141,2.328,1142,3.111,1143,2.328,1144,2.936,1145,2.328,1146,2.256,1147,1.73,1148,3.314,1149,3.859,1150,3.111,1151,2.328,1152,3.623,1169,5.897,1170,4.142]],["title/classes/DocumentCreateSuccess.html",[0,0.216,1150,2.466]],["body/classes/DocumentCreateSuccess.html",[0,0.428,2,0.044,3,0.044,4,0.044,6,0.151,7,0.528,8,0.879,13,0.38,15,0.391,17,0.321,18,0.007,19,0.192,20,0.379,21,0.251,22,1.252,27,0.085,28,1.569,37,0.004,38,0.004,46,0.928,47,0.895,54,0.274,58,1.33,59,2.131,60,2.599,61,1.207,68,0.895,71,1.103,72,0.573,73,1.185,74,1.185,75,1.23,78,1.164,79,1.376,80,1.164,87,1.654,98,2.537,102,1.885,103,1.376,162,3.02,201,3.419,202,2.712,203,1.627,204,4.171,255,1.431,262,2.468,305,1.164,379,1.35,445,1.52,921,1.954,1103,3.111,1104,2.254,1107,2.328,1108,2.328,1109,3.314,1110,2.328,1111,2.328,1112,2.328,1113,2.328,1114,2.328,1115,2.328,1116,2.328,1117,2.328,1118,2.328,1119,2.328,1120,2.328,1121,2.328,1122,2.328,1123,2.328,1124,2.328,1125,2.328,1126,1.73,1127,1.73,1128,2.328,1129,3.859,1130,2.328,1131,2.328,1132,3.111,1133,2.328,1134,3.111,1135,2.328,1136,3.111,1137,2.328,1138,3.111,1139,2.328,1140,3.111,1141,2.328,1142,3.111,1143,2.328,1144,2.936,1145,2.328,1146,2.256,1147,1.73,1148,3.314,1149,3.314,1150,3.623,1151,3.314,1152,3.111,1171,5.897,1172,4.142]],["title/components/DocumentGenerationComponent.html",[209,0.819,289,1.583]],["body/components/DocumentGenerationComponent.html",[0,0.192,2,0.044,3,0.044,4,0.044,6,0.151,13,0.63,15,0.492,17,0.321,18,0.007,19,0.348,20,0.314,21,0.251,22,1.253,27,0.038,37,0.004,38,0.004,46,1.082,47,0.63,50,3.835,51,1.165,54,0.274,55,0.552,58,0.848,69,1.415,92,1.966,161,1.415,166,5.62,170,6.117,171,1.314,203,2.516,205,1.461,209,1.386,210,1.405,211,1.491,212,1.706,215,3.16,216,1.378,220,3.318,221,2.122,227,3.627,234,1.817,238,2.009,274,1.187,275,2.122,276,2.122,277,1.887,278,2.305,279,1.491,280,1.491,281,1.405,282,2.99,283,1.491,284,1.491,285,1.405,286,1.461,287,1.301,288,1.491,289,2.535,290,1.491,291,1.405,292,1.999,293,2.122,294,1.405,295,1.798,296,1.491,297,1.378,298,1.491,299,1.405,300,2.122,301,1.405,302,2.122,303,1.326,304,1.405,305,1.165,306,1.491,307,1.405,308,1.491,309,1.405,310,1.433,311,1.491,312,1.378,313,1.491,314,1.405,315,1.187,316,1.491,317,1.405,318,1.326,319,2.122,320,1.378,321,1.491,322,1.491,323,1.405,324,1.491,325,1.378,326,1.491,327,1.378,328,1.491,329,1.378,330,1.491,331,1.378,332,1.491,333,1.405,334,1.491,335,1.491,336,1.405,337,1.405,338,1.461,339,1.405,340,1.254,341,1.491,342,1.405,343,1.491,344,1.405,345,1.491,346,1.378,347,1.491,348,1.378,349,1.301,350,1.378,351,1.491,352,1.378,353,1.433,354,1.433,355,1.491,460,4.508,607,3.168,640,2.989,650,3.168,794,3.703,845,2.258,973,6.47,1173,5.517,1174,7.195,1175,4.148,1176,5.903,1177,5.903,1178,5.254,1179,6.117,1180,4.073,1181,6.117,1182,5.903,1183,4.148,1184,6.664,1185,4.148,1186,4.148,1187,4.148,1188,4.148,1189,5.903,1190,4.148,1191,2.84,1192,2.124,1193,3.692,1194,4.148]],["title/modules/DocumentGenerationModule.html",[356,1.337,1195,3.369]],["body/modules/DocumentGenerationModule.html",[0,0.279,2,0.064,3,0.064,4,0.064,18,0.007,27,0.079,37,0.005,38,0.005,54,0.417,55,0.804,171,1.154,203,2.292,218,4.135,274,1.726,282,1.893,289,3.275,356,2.172,358,3.091,359,4.382,360,3.284,378,4.131,379,1.966,380,3.091,392,4.267,393,2.923,394,3.491,452,4.132,460,4.609,640,4.349,650,4.609,1173,3.784,1174,4.935,1191,6.278,1195,6.844,1196,5.372,1197,5.372,1198,5.372,1199,5.372,1200,6.035,1201,6.035,1202,6.035,1203,6.035,1204,5.372,1205,5.372,1206,5.372,1207,6.035]],["title/components/DocumentReportViewerComponent.html",[209,0.819,291,1.583]],["body/components/DocumentReportViewerComponent.html",[0,0.178,2,0.041,3,0.041,4,0.041,6,0.141,7,0.502,13,0.354,15,0.482,17,0.434,18,0.007,19,0.357,20,0.306,21,0.339,27,0.035,37,0.004,38,0.004,54,0.336,55,0.514,58,0.805,69,1.343,72,0.775,92,1.887,161,1.343,167,2.869,171,1.262,172,1.475,186,1.575,203,2.386,205,1.359,209,1.347,210,1.306,211,1.386,212,1.637,216,1.281,220,3.3,221,2.014,234,1.725,262,1.386,274,1.103,275,2.603,276,2.014,277,1.791,278,2.229,279,1.386,280,1.386,281,1.306,282,2.965,283,1.386,284,1.386,285,1.306,286,2.709,287,1.757,288,1.386,289,1.306,290,1.386,291,2.452,292,3.265,293,2.014,294,1.306,295,1.726,296,1.386,297,1.281,298,1.386,299,1.306,300,2.014,301,1.306,302,2.014,303,1.233,304,1.306,305,1.084,306,1.386,307,1.306,308,1.386,309,1.306,310,1.332,311,1.386,312,1.281,313,1.386,314,1.306,315,1.103,316,1.386,317,1.306,318,1.233,319,2.014,320,1.281,321,1.386,322,1.386,323,1.306,324,1.386,325,1.281,326,1.386,327,1.281,328,1.386,329,1.281,330,1.386,331,1.281,332,1.386,333,1.306,334,1.386,335,1.386,336,1.306,337,1.306,338,1.359,339,1.306,340,1.166,341,1.386,342,1.306,343,1.386,344,1.306,345,1.386,346,1.281,347,1.386,348,1.281,349,1.21,350,1.281,351,1.386,352,1.281,353,1.332,354,1.332,355,1.386,709,2.326,794,3.169,801,3.154,845,2.143,930,5.395,945,5.921,995,5.217,996,3.708,997,5.667,1173,5.42,1208,7.069,1209,3.433,1210,5.872,1211,5.602,1212,4.986,1213,7.24,1214,7.24,1215,8.277,1216,3.433,1217,5.602,1218,4.581,1219,5.602,1220,3.857,1221,3.433,1222,3.857,1223,3.857,1224,3.857,1225,3.857,1226,3.857,1227,3.433,1228,3.857,1229,3.857,1230,3.857,1231,3.857,1232,4.986,1233,3.857,1234,3.857,1235,3.857,1236,7.24,1237,3.857,1238,3.857,1239,3.857,1240,3.857,1241,3.857,1242,3.857]],["title/modules/DocumentReportViewerModule.html",[356,1.337,1243,3.369]],["body/modules/DocumentReportViewerModule.html",[0,0.278,2,0.063,3,0.063,4,0.063,18,0.007,27,0.079,37,0.005,38,0.005,54,0.425,55,0.801,203,1.659,218,4.128,274,1.72,291,3.274,292,2.948,336,3.274,356,2.167,358,3.079,359,4.374,360,3.271,378,4.121,379,1.959,380,3.079,392,4.257,393,2.912,394,3.482,1173,3.769,1208,4.916,1243,6.966,1244,5.351,1245,5.351,1246,5.351,1247,5.351,1248,6.996,1249,6.012,1250,6.012,1251,7.573,1252,5.351]],["title/injectables/DocumentsHelper.html",[158,0.942,1191,3.201]],["body/injectables/DocumentsHelper.html",[0,0.253,2,0.058,3,0.058,4,0.058,6,0.2,15,0.406,17,0.553,18,0.007,19,0.331,20,0.379,21,0.432,27,0.05,37,0.005,38,0.005,46,0.862,51,1.538,54,0.369,55,0.729,72,1.163,75,1.142,158,1.599,161,1.71,171,1.518,224,2.536,234,1.686,650,6.06,707,4.302,708,2.979,749,5.433,934,6.06,976,3.049,1023,4.182,1024,5.718,1026,6.42,1173,4.975,1191,4.884,1253,7.063,1254,5.475,1255,7.133,1256,7.133,1257,7.133,1258,5.475,1259,7.133,1260,7.483,1261,5.475,1262,5.475,1263,5.475,1264,5.475,1265,8.938,1266,5.475,1267,5.475,1268,5.475,1269,5.475,1270,7.133,1271,5.475,1272,5.475,1273,5.475,1274,5.475,1275,5.475,1276,5.475,1277,5.475,1278,8.406,1279,5.475,1280,7.133,1281,5.475,1282,5.475,1283,5.475,1284,5.475,1285,5.475,1286,4.874,1287,5.475]],["title/injectables/DossierApiClient.html",[158,0.942,376,3.057]],["body/injectables/DossierApiClient.html",[0,0.278,2,0.063,3,0.063,4,0.063,6,0.219,8,1.236,15,0.342,17,0.466,18,0.007,19,0.279,20,0.301,21,0.364,27,0.055,28,1.091,37,0.005,38,0.005,54,0.432,55,0.801,158,1.671,161,1.815,167,3.079,171,1.586,172,3.172,173,4.916,176,6.194,177,3.879,178,5.351,179,4.953,180,4.592,181,5.784,183,3.379,184,4.332,185,4.592,186,2.455,187,4.592,188,5.351,189,3.626,192,4.116,193,5.186,194,3.769,195,2.912,212,1.492,248,2.912,376,4.953,407,4.116,609,6.781,806,3.171,1288,4.568,1289,6.012,1290,6.742,1291,6.012,1292,6.012,1293,4.332,1294,5.351,1295,2.696,1296,5.351,1297,6.012,1298,6.012,1299,6.012,1300,6.012,1301,6.012,1302,6.012,1303,5.351,1304,6.012]],["title/components/DossierDetailsComponent.html",[209,0.819,294,1.583]],["body/components/DossierDetailsComponent.html",[0,0.215,2,0.049,3,0.049,4,0.049,6,0.17,13,0.67,15,0.364,18,0.007,19,0.34,20,0.185,27,0.042,37,0.004,38,0.004,54,0.297,55,0.62,69,1.533,70,1.331,92,2.091,93,3.446,203,1.765,205,1.639,209,1.446,210,1.576,211,1.673,212,1.814,215,2.14,216,1.546,220,3.344,221,2.3,274,1.331,275,2.3,276,2.3,277,2.045,278,2.424,279,1.673,280,1.673,281,1.576,282,3.028,283,1.673,284,1.673,285,1.576,286,1.639,287,1.46,288,1.673,289,1.576,290,1.673,291,1.576,292,2.166,293,2.3,294,2.666,295,2.414,296,1.673,297,1.546,298,1.673,299,1.576,300,2.3,301,1.576,302,2.3,303,1.488,304,1.576,305,1.307,306,1.673,307,1.576,308,1.673,309,1.576,310,1.607,311,1.673,312,1.546,313,1.673,314,1.576,315,1.331,316,1.673,317,1.576,318,1.488,319,2.3,320,1.546,321,1.673,322,1.673,323,1.576,324,1.673,325,1.546,326,1.673,327,1.546,328,1.673,329,1.546,330,1.673,331,1.546,332,1.673,333,1.576,334,1.673,335,1.673,336,1.576,337,1.576,338,1.639,339,1.576,340,1.406,341,1.673,342,1.576,343,1.673,344,1.576,345,1.673,346,1.546,347,1.673,348,1.546,349,1.46,350,1.546,351,1.673,352,1.546,353,1.607,354,1.607,355,1.673,595,1.944,794,3.446,845,2.447,1305,5.979,1306,6.508,1307,6.508,1308,4.653,1309,6.397,1310,6.397,1311,5.979,1312,6.397,1313,5.006,1314,6.397,1315,6.397,1316,6.397,1317,6.397]],["title/injectables/DossierEffects.html",[158,0.942,422,3.823]],["body/injectables/DossierEffects.html",[0,0.246,2,0.056,3,0.056,4,0.056,6,0.256,7,0.628,13,0.642,15,0.399,17,0.413,18,0.007,19,0.247,20,0.278,21,0.322,27,0.048,37,0.005,38,0.005,46,0.838,47,0.809,51,1.968,54,0.446,55,0.709,59,2.022,68,1.513,70,1.524,71,1.418,72,0.969,158,1.578,167,2.728,171,1.34,172,3.181,186,2.175,212,1.739,224,2.503,295,1.394,349,2.198,376,5.913,408,4.302,410,5.119,422,5.729,432,4.741,438,3.34,543,4.26,595,2.225,609,5.729,628,4.581,656,3.647,658,4.797,660,4.797,662,4.797,663,5.351,681,4.797,692,3.483,693,3.34,694,3.483,695,3.647,1290,7.403,1295,3.511,1296,4.741,1313,3.647,1318,5.326,1319,5.326,1320,7.006,1321,7.006,1322,7.006,1323,7.006,1324,7.006,1325,7.006,1326,7.006,1327,5.326,1328,4.741,1329,5.326]],["title/classes/DossierFilterModel.html",[0,0.216,1295,2.097]],["body/classes/DossierFilterModel.html",[0,0.328,2,0.057,3,0.057,4,0.057,6,0.198,7,0.708,13,0.498,15,0.524,17,0.421,18,0.007,19,0.253,20,0.366,21,0.585,27,0.065,28,1.522,37,0.005,38,0.005,45,4.123,58,1.02,72,0.752,75,1.65,850,1.878,976,2.324,1295,3.185,1330,8.295,1331,4.84,1332,7.296,1333,4.589,1334,4.589,1335,4.589,1336,4.589,1337,4.589,1338,4.589,1339,6.643,1340,3.637,1341,7.101,1342,5.437,1343,5.437,1344,5.437,1345,5.437,1346,5.437,1347,5.437,1348,2.785,1349,2.785,1350,2.785]],["title/components/DossierNavigatorComponent.html",[209,0.819,297,1.553]],["body/components/DossierNavigatorComponent.html",[0,0.137,2,0.031,3,0.031,4,0.031,6,0.108,7,0.412,8,1.266,13,0.421,15,0.505,17,0.532,18,0.007,19,0.364,20,0.32,21,0.415,22,1.457,27,0.027,37,0.003,38,0.003,46,0.466,47,0.45,48,3.515,50,1.517,51,0.832,54,0.352,55,0.395,58,0.66,69,1.101,72,0.41,83,1.556,92,1.61,101,1.581,161,1.101,171,1.538,195,2.226,203,1.268,205,1.044,209,1.203,210,1.003,211,1.065,212,1.397,214,4.299,215,2.588,216,0.984,220,3.225,221,1.652,224,2.751,225,4.139,226,4.844,227,3.072,228,4.342,229,4.342,231,3.772,234,2.529,237,2.423,238,2.726,242,3.146,245,1.065,248,1.435,257,2.028,258,2.637,260,2.726,271,4.122,272,1.937,273,1.937,274,0.848,275,1.652,276,1.652,277,1.469,278,1.952,279,1.065,280,1.065,281,1.003,282,2.859,283,1.065,284,1.065,285,1.003,286,1.044,287,0.929,288,1.065,289,1.003,290,1.065,291,1.003,292,1.556,293,1.652,294,1.003,295,2.103,296,1.065,297,2.106,298,1.065,299,1.003,300,1.652,301,1.003,302,1.652,303,0.947,304,1.003,305,0.832,306,1.065,307,1.003,308,1.065,309,1.003,310,1.023,311,1.065,312,0.984,313,1.065,314,1.003,315,0.848,316,1.065,317,1.003,318,0.947,319,1.652,320,0.984,321,1.065,322,1.065,323,1.003,324,1.065,325,0.984,326,1.065,327,0.984,328,1.065,329,0.984,330,1.065,331,0.984,332,1.065,333,1.003,334,1.065,335,1.065,336,1.003,337,1.003,338,1.044,339,1.003,340,0.895,341,1.065,342,1.003,343,1.065,344,1.003,345,1.065,346,0.984,347,1.065,348,0.984,349,0.929,350,0.984,351,1.065,352,0.984,353,1.023,354,1.023,355,1.065,387,2.5,555,2.287,595,1.237,708,1.612,717,3.758,743,5.186,772,2.263,817,4.722,819,3.529,820,3.394,821,3.529,822,3.529,823,2.881,824,1.858,825,4.553,827,2.672,831,1.858,833,1.858,845,1.758,996,1.665,1288,5.123,1295,3.078,1311,3.758,1313,4.342,1351,8.495,1352,2.962,1353,2.113,1354,2.113,1355,4.595,1356,4.595,1357,5.645,1358,5.326,1359,4.595,1360,4.09,1361,4.09,1362,4.595,1363,4.595,1364,2.962,1365,2.353,1366,2.962,1367,2.962,1368,4.09,1369,2.962,1370,4.09,1371,2.962,1372,2.962,1373,2.962,1374,4.488,1375,1.937,1376,1.937,1377,2.962,1378,2.962,1379,1.937,1380,1.937,1381,1.937,1382,2.135,1383,2.423,1384,1.362,1385,2.135,1386,1.937,1387,1.937,1388,2.962,1389,2.962,1390,2.962,1391,2.962,1392,2.962,1393,2.962,1394,2.637,1395,2.962,1396,2.962,1397,2.637,1398,2.962,1399,2.962,1400,2.637,1401,2.962,1402,2.962,1403,2.637,1404,2.962,1405,2.962,1406,2.637,1407,2.962,1408,2.962,1409,2.637,1410,2.962,1411,2.962,1412,2.962,1413,2.962,1414,2.962,1415,2.962,1416,2.637,1417,2.962]],["title/modules/DossierNavigatorModule.html",[356,1.337,1418,3.571]],["body/modules/DossierNavigatorModule.html",[0,0.223,2,0.051,3,0.051,4,0.051,18,0.007,27,0.06,37,0.004,38,0.004,54,0.451,55,0.643,189,2.91,209,0.846,212,1.628,218,3.709,245,1.735,274,1.381,295,1.716,297,2.864,314,2.92,315,1.381,346,2.864,348,2.864,356,2.287,358,2.472,359,3.93,360,2.626,376,5.638,378,3.568,379,1.572,380,2.472,383,2.806,385,5.363,386,3.686,388,4.289,389,2.806,390,3.946,391,3.946,392,3.686,393,2.338,394,3.015,397,3.026,403,3.477,441,4.289,444,2.546,445,1.77,521,3.955,528,3.946,727,3.686,730,4.112,731,3.946,880,5.009,881,4.112,1288,2.91,1293,6.213,1294,4.295,1358,5.406,1385,3.477,1418,7.436,1419,4.295,1420,4.295,1421,4.295,1422,4.295,1423,6.213,1424,5.903,1425,4.825,1426,4.295,1427,3.946,1428,4.295,1429,4.295,1430,4.295,1431,3.946,1432,3.686,1433,4.295,1434,4.825,1435,4.295,1436,3.946,1437,4.295]],["title/classes/DossierNavigatorTreeModel.html",[0,0.216,595,1.953]],["body/classes/DossierNavigatorTreeModel.html",[0,0.292,2,0.048,3,0.048,4,0.048,6,0.167,7,0.649,10,3.506,13,0.419,15,0.545,17,0.354,18,0.007,19,0.394,20,0.386,21,0.594,27,0.057,28,1.749,37,0.004,38,0.004,58,0.908,72,0.633,75,1.511,595,2.64,850,1.579,976,1.954,1192,4.538,1339,6.264,1340,3.237,1348,2.342,1349,2.342,1350,2.342,1438,4.07,1439,6.936,1440,7.3,1441,7.3,1442,7.3,1443,7.3,1444,7.3,1445,7.3,1446,7.3,1447,7.3,1448,6.264,1449,7.3,1450,7.3,1451,6.32,1452,4.572,1453,4.572,1454,4.572,1455,4.572,1456,4.572,1457,4.572,1458,4.572,1459,4.572,1460,4.572,1461,4.572,1462,4.572,1463,4.572,1464,4.572,1465,4.572,1466,4.572,1467,4.572]],["title/modules/DossierRoutingModule.html",[356,1.337,1423,3.369]],["body/modules/DossierRoutingModule.html",[0,0.291,2,0.066,3,0.066,4,0.066,18,0.007,27,0.071,37,0.005,38,0.005,54,0.441,55,0.839,72,0.872,183,4.761,209,1.484,212,1.936,245,2.265,260,3.778,297,2.591,346,2.591,348,2.591,356,1.803,371,5.341,374,4.121,394,3.586,425,5.154,426,5.154,520,4.541,521,4.704,528,5.154,698,4.813,1288,3.801,1423,5.621,1429,5.61,1430,5.61,1431,5.154,1432,4.813,1436,5.154,1437,5.61,1468,6.302,1469,5.61,1470,6.302,1471,6.302]],["title/injectables/DossierSandbox.html",[158,0.942,1358,2.931]],["body/injectables/DossierSandbox.html",[0,0.137,2,0.031,3,0.031,4,0.031,6,0.108,7,0.411,8,1.409,13,0.421,15,0.495,17,0.532,18,0.007,19,0.319,20,0.301,21,0.415,22,0.628,27,0.027,28,1.021,37,0.003,38,0.003,46,1.143,47,1.102,51,0.832,54,0.388,55,0.394,59,1.027,68,0.639,72,0.409,74,1.314,83,1.002,87,1.182,101,1.58,158,1.133,161,1.1,171,1.449,195,1.434,212,1.139,224,2.569,225,4.138,228,4.34,229,4.34,230,2.026,231,3.614,234,2.575,238,3.07,242,3.144,245,1.064,248,1.434,257,2.026,259,3.678,264,2.261,272,1.935,273,1.935,295,1.201,376,4.953,407,2.026,408,3.415,409,2.133,477,2.67,543,3.061,551,2.879,552,2.261,553,2.026,554,2.261,555,1.473,556,2.133,571,6.459,595,1.236,604,2.67,708,1.61,714,1.721,715,1.721,744,5.186,787,2.635,806,1.561,1036,5.325,1144,2.286,1146,2.425,1288,5.302,1295,1.327,1313,5.727,1328,2.635,1357,5.642,1358,2.879,1365,2.352,1394,4.087,1397,4.087,1400,4.087,1403,4.087,1406,4.087,1409,4.087,1428,2.635,1472,2.96,1473,5.642,1474,6.338,1475,6.338,1476,5.642,1477,4.591,1478,4.591,1479,4.591,1480,4.591,1481,4.591,1482,2.96,1483,4.591,1484,2.96,1485,2.96,1486,2.96,1487,4.591,1488,2.96,1489,2.96,1490,4.087,1491,2.96,1492,4.591,1493,2.96,1494,4.591,1495,2.96,1496,4.591,1497,2.96,1498,4.591,1499,2.96,1500,4.591,1501,8.493,1502,8.493,1503,4.591,1504,8.605,1505,4.591,1506,6.338,1507,4.591,1508,4.591,1509,6.338,1510,4.591,1511,4.591,1512,4.591,1513,2.96,1514,2.96,1515,3.309,1516,2.635,1517,2.96,1518,4.087,1519,2.96,1520,2.635,1521,2.96,1522,2.635,1523,2.96,1524,2.635,1525,2.635,1526,2.96,1527,2.635,1528,2.96,1529,2.96,1530,2.96,1531,2.42,1532,2.96,1533,2.635,1534,2.635,1535,2.635,1536,2.635,1537,2.635,1538,2.96,1539,3.309,1540,2.635,1541,2.42]],["title/injectables/DossierService.html",[158,0.942,1293,3.369]],["body/injectables/DossierService.html",[0,0.282,2,0.064,3,0.064,4,0.064,6,0.223,7,0.685,15,0.435,17,0.473,18,0.007,19,0.284,20,0.243,21,0.369,27,0.056,37,0.005,38,0.005,51,1.715,54,0.407,55,0.813,75,1.595,101,2.459,158,1.764,161,1.833,171,1.463,172,2.336,177,3.127,186,2.493,202,3.516,212,2.237,224,2.669,248,2.958,578,5.236,586,5.511,587,6.254,589,6.254,592,5.511,595,3.488,596,4.993,597,2.287,806,3.221,1288,5.036,1293,5.511,1303,5.435,1358,3.828,1385,4.4,1542,6.105,1543,8.753,1544,6.807,1545,7.647,1546,6.105,1547,6.105,1548,6.105,1549,6.105]],["title/directives/DynamicTabsDirective.html",[277,1.494,352,1.553]],["body/directives/DynamicTabsDirective.html",[0,0.312,2,0.071,3,0.071,4,0.071,6,0.246,7,0.729,8,1.212,13,0.619,15,0.463,17,0.523,18,0.007,19,0.314,20,0.323,21,0.408,27,0.061,37,0.006,38,0.006,54,0.314,55,0.899,98,1.863,216,2.242,220,2.755,277,2.791,352,2.702,353,2.809,354,2.809,797,8.256,798,7.705,1550,8.731,1551,6.75,1552,6.75,1553,6.75,1554,6.75]],["title/modules/ExceptionsModule.html",[356,1.337,1555,3.571]],["body/modules/ExceptionsModule.html",[0,0.29,2,0.066,3,0.066,4,0.066,18,0.007,27,0.071,37,0.005,38,0.005,54,0.441,55,0.836,218,3.125,274,1.796,320,3.075,325,3.075,356,2.226,358,3.215,359,4.461,360,3.415,378,4.233,379,2.045,380,3.215,392,4.373,393,3.041,394,3.578,403,4.523,441,5.088,444,3.311,445,2.303,531,5.587,1555,7.352,1556,5.587,1557,5.587,1558,5.587,1559,6.673,1560,6.277,1561,5.587,1562,5.587]],["title/modules/ExceptionsRoutingModule.html",[356,1.337,1559,3.369]],["body/modules/ExceptionsRoutingModule.html",[0,0.314,2,0.072,3,0.072,4,0.072,18,0.007,27,0.074,37,0.006,38,0.006,54,0.432,55,0.905,72,0.94,183,4.59,209,1.431,245,2.442,260,4.241,320,2.712,325,2.712,356,1.944,394,3.755,520,4.896,521,4.925,1559,5.885,1561,6.048,1562,6.048,1563,6.794,1564,6.048,1565,6.048,1566,6.794]],["title/classes/GetTreeDetailAction.html",[0,0.216,1567,2.466]],["body/classes/GetTreeDetailAction.html",[0,0.422,2,0.044,3,0.044,4,0.044,6,0.154,7,0.535,8,0.89,13,0.386,15,0.394,17,0.327,18,0.007,19,0.196,20,0.378,21,0.255,27,0.085,28,1.084,37,0.004,38,0.004,46,0.663,47,0.64,54,0.322,58,1.313,59,2.12,60,2.592,61,1.228,68,0.91,70,1.206,71,1.122,72,0.826,73,1.206,74,2.365,75,0.879,77,1.761,78,1.184,79,1.4,80,1.184,96,2.385,97,1.761,98,2.499,99,2.385,100,1.761,101,1.184,102,1.909,103,1.4,177,2.159,212,1.871,255,1.456,262,2.146,295,1.814,315,2.157,379,1.373,595,1.761,597,1.579,1126,1.761,1127,1.761,1146,2.284,1147,1.761,1295,3.961,1333,2.224,1334,3.15,1335,3.15,1336,2.224,1337,2.224,1338,2.224,1365,3.058,1567,3.657,1568,2.293,1569,5.97,1570,4.215,1571,3.355,1572,3.896,1573,2.369,1574,2.369,1575,2.369,1576,4.645,1577,2.369,1578,2.369,1579,2.369,1580,2.369,1581,2.369,1582,2.369,1583,2.369,1584,2.293,1585,2.369,1586,2.293,1587,2.369,1588,2.293,1589,2.369,1590,2.293,1591,2.369,1592,2.293,1593,2.369,1594,2.293,1595,2.369,1596,2.293,1597,2.293,1598,2.293,1599,2.293,1600,2.293,1601,2.293,1602,2.293]],["title/components/HeaderComponent.html",[209,0.819,299,1.583]],["body/components/HeaderComponent.html",[0,0.165,2,0.037,3,0.037,4,0.037,6,0.13,7,0.473,8,0.939,13,0.485,15,0.518,17,0.488,18,0.007,19,0.362,20,0.359,21,0.381,22,1.714,27,0.032,37,0.004,38,0.004,45,2.632,46,0.561,47,0.541,48,2.707,50,4.581,51,1.958,54,0.293,55,0.475,69,1.267,71,0.949,72,0.493,74,1.994,92,1.802,101,2.191,138,3.324,161,1.267,171,1.205,203,1.458,205,1.255,209,1.366,210,1.206,211,1.281,212,1.564,216,1.183,220,3.279,221,1.9,224,2.228,234,1.94,238,3.911,274,1.019,275,1.9,276,1.9,277,1.689,278,2.146,279,1.281,280,1.281,281,1.206,282,2.935,283,1.281,284,1.281,285,1.206,286,1.255,287,1.118,288,1.281,289,1.206,290,1.281,291,1.206,292,1.79,293,1.9,294,1.206,295,1.648,296,1.281,297,1.183,298,1.281,299,2.36,300,1.9,301,1.206,302,1.9,303,2.228,304,1.206,305,1.001,306,1.281,307,1.206,308,1.281,309,1.206,310,1.23,311,1.281,312,1.183,313,1.281,314,1.206,315,1.802,316,1.281,317,1.206,318,1.139,319,1.9,320,1.183,321,1.281,322,1.281,323,1.206,324,1.281,325,1.183,326,1.281,327,1.183,328,1.281,329,1.183,330,1.281,331,1.183,332,1.281,333,1.206,334,1.281,335,1.281,336,1.206,337,1.206,338,2.456,339,1.206,340,1.077,341,1.281,342,1.206,343,1.281,344,1.206,345,1.281,346,1.183,347,1.281,348,1.183,349,1.118,350,1.183,351,1.281,352,1.183,353,1.23,354,1.23,355,1.281,617,3.619,765,2.913,794,3.708,845,2.022,995,5.023,997,4.772,1090,4.322,1180,4.392,1192,1.825,1216,3.171,1218,4.322,1353,2.43,1354,2.43,1384,1.638,1603,3.563,1604,5.285,1605,5.285,1606,6.97,1607,7.799,1608,5.285,1609,5.285,1610,5.152,1611,5.152,1612,5.152,1613,5.608,1614,5.152,1615,5.152,1616,6.3,1617,5.152,1618,4.812,1619,5.285,1620,3.563,1621,3.563,1622,3.563,1623,3.563,1624,3.563,1625,3.563,1626,3.563,1627,3.563,1628,3.563,1629,3.563,1630,5.285,1631,3.563,1632,5.608,1633,5.285,1634,3.563,1635,3.563,1636,3.563,1637,3.563,1638,2.721,1639,3.563,1640,3.563,1641,6.3,1642,3.563,1643,3.563,1644,3.171,1645,3.171,1646,4.704]],["title/components/HorizontalNavigationComponent.html",[209,0.819,301,1.583]],["body/components/HorizontalNavigationComponent.html",[0,0.214,2,0.049,3,0.049,4,0.049,6,0.169,8,1.086,15,0.415,17,0.358,18,0.007,19,0.365,20,0.253,21,0.28,27,0.042,37,0.004,38,0.004,50,4.022,51,1.3,54,0.215,55,0.616,69,1.527,92,2.085,101,1.79,161,1.527,171,0.885,203,1.758,205,1.63,209,1.443,210,1.567,211,1.663,212,1.809,216,1.536,220,3.342,221,2.29,234,1.424,238,2.241,274,1.323,275,2.29,276,2.29,277,2.037,278,2.418,279,1.663,280,1.663,281,1.567,282,3.007,283,1.663,284,1.663,285,1.567,286,1.63,287,1.451,288,1.663,289,1.567,290,1.663,291,1.567,292,2.158,293,2.29,294,1.567,295,1.907,296,1.663,297,1.536,298,1.663,299,1.567,300,2.29,301,2.659,302,2.823,303,2.33,304,1.567,305,1.3,306,1.663,307,1.567,308,1.663,309,1.567,310,1.598,311,1.663,312,1.536,313,1.663,314,1.567,315,1.323,316,1.663,317,1.567,318,1.479,319,2.29,320,1.536,321,1.663,322,1.663,323,1.567,324,1.663,325,1.536,326,1.663,327,1.536,328,1.663,329,1.536,330,1.663,331,1.536,332,1.663,333,1.567,334,1.663,335,1.663,336,1.567,337,1.567,338,1.63,339,1.567,340,2.373,341,1.663,342,1.567,343,1.663,344,1.567,345,1.663,346,1.536,347,1.663,348,1.536,349,1.451,350,1.536,351,1.663,352,1.536,353,1.598,354,1.598,355,1.663,617,4.362,794,3.437,845,2.437,1036,2.901,1180,4.273,1353,2.93,1354,2.93,1384,2.127,1611,5.96,1618,4.866,1647,7.853,1648,6.99,1649,4.626,1650,7.853,1651,6.371,1652,6.371,1653,4.626,1654,4.626,1655,6.371,1656,4.626,1657,4.626]],["title/classes/HttpAdapter.html",[0,0.216,1658,3.823]],["body/classes/HttpAdapter.html",[0,0.37,2,0.069,3,0.069,4,0.069,6,0.24,15,0.374,17,0.509,18,0.007,19,0.305,20,0.261,21,0.397,27,0.06,37,0.005,38,0.005,54,0.305,72,0.908,161,1.917,171,1.65,402,4.117,450,5.203,578,5.409,749,6.148,912,5.845,976,2.807,1036,4.117,1658,6.542,1659,6.566,1660,7.999,1661,7.999,1662,7.993,1663,6.566,1664,7.121,1665,6.566,1666,6.566,1667,5.845,1668,8.627,1669,6.566,1670,5.845]],["title/injectables/HttpResponseHandler.html",[158,0.942,1671,3.571]],["body/injectables/HttpResponseHandler.html",[0,0.125,2,0.045,3,0.069,4,0.029,6,0.099,8,0.793,13,0.393,15,0.473,17,0.621,18,0.007,19,0.372,20,0.318,21,0.485,22,1.882,27,0.025,37,0.003,38,0.003,46,0.427,47,1.062,54,0.325,55,0.361,72,0.911,83,1.453,92,1.227,101,1.205,134,1.924,158,1.072,161,1.028,171,1.738,172,2.678,183,2.411,186,1.108,224,3.024,230,1.858,231,3.485,234,2.685,239,3.276,245,0.975,264,3.276,282,0.851,318,2.854,375,4.421,387,3.808,401,3.091,428,1.858,444,1.431,445,2.415,446,5.019,448,5.995,449,1.955,500,3.818,545,3.508,576,4.35,597,3.001,604,5.072,707,3.208,714,3.094,715,3.094,716,1.858,719,3.508,749,6.153,750,2.937,806,2.806,896,3.818,897,3.091,902,3.508,921,4.287,971,6.596,1023,2.072,1024,5.476,1026,5.599,1564,4.735,1565,4.735,1667,2.415,1670,2.415,1671,3.276,1672,2.713,1673,4.289,1674,4.289,1675,6.045,1676,4.289,1677,4.289,1678,6.045,1679,4.289,1680,4.289,1681,4.289,1682,4.289,1683,4.289,1684,2.713,1685,4.289,1686,2.713,1687,4.289,1688,4.289,1689,4.289,1690,2.713,1691,4.289,1692,2.713,1693,7.763,1694,8.312,1695,4.289,1696,2.713,1697,7.33,1698,7.33,1699,4.289,1700,2.713,1701,4.289,1702,2.713,1703,5.319,1704,4.289,1705,2.713,1706,4.289,1707,2.713,1708,5.319,1709,4.289,1710,2.713,1711,4.289,1712,4.289,1713,2.713,1714,4.289,1715,4.289,1716,2.713,1717,2.713,1718,2.713,1719,2.713,1720,2.713,1721,2.713,1722,2.713,1723,2.713,1724,2.713,1725,2.713,1726,2.713,1727,2.713,1728,2.713,1729,2.713,1730,2.713,1731,2.713,1732,4.289,1733,4.289,1734,4.289,1735,3.818,1736,4.289,1737,2.713,1738,2.713,1739,4.289,1740,4.289,1741,2.713,1742,2.713,1743,2.713,1744,2.713,1745,2.713,1746,4.289,1747,2.713,1748,2.713,1749,2.713,1750,2.713,1751,3.818,1752,4.289,1753,5.319,1754,2.713,1755,2.713,1756,2.713,1757,2.713,1758,2.713,1759,2.713,1760,2.713,1761,2.713,1762,2.713,1763,2.937,1764,2.713,1765,2.713,1766,2.713,1767,2.713,1768,2.713,1769,2.713]],["title/injectables/HttpService.html",[158,0.942,179,3.057]],["body/injectables/HttpService.html",[0,0.191,2,0.043,3,0.072,4,0.043,6,0.151,8,0.877,13,0.54,15,0.491,17,0.531,18,0.007,19,0.318,20,0.297,21,0.415,22,1.249,27,0.054,28,0.75,37,0.004,38,0.004,54,0.401,55,0.55,127,3.423,158,1.382,161,1.791,171,1.77,172,3.141,179,3.849,186,1.687,189,2.492,234,1.272,282,1.296,305,1.161,375,5.096,401,5.917,402,2.59,428,2.829,450,4.135,451,3.155,477,5.024,555,4.81,586,4.242,597,2.205,614,3.678,714,4.914,715,4.914,749,6.018,892,3.379,911,3.678,918,2.977,976,1.766,1000,3.678,1658,3.379,1662,6.652,1664,5.24,1671,5.708,1770,3.678,1771,7.473,1772,7.473,1773,7.473,1774,7.473,1775,7.473,1776,6.857,1777,6.857,1778,7.521,1779,6.857,1780,4.131,1781,4.131,1782,4.131,1783,4.131,1784,4.131,1785,4.131,1786,5.886,1787,7.824,1788,4.131,1789,7.473,1790,5.886,1791,5.886,1792,4.131,1793,6.857,1794,6.91,1795,6.91,1796,3.678,1797,3.678,1798,4.131,1799,4.131,1800,4.131,1801,3.678,1802,3.678,1803,3.678,1804,3.678,1805,4.131,1806,4.131,1807,4.131,1808,4.131,1809,4.131,1810,4.131,1811,4.131,1812,4.131,1813,4.131,1814,4.131,1815,4.131,1816,4.131,1817,4.131,1818,4.131]],["title/modules/HttpServiceModule.html",[356,1.337,368,3.369]],["body/modules/HttpServiceModule.html",[0,0.318,2,0.072,3,0.072,4,0.072,18,0.007,27,0.063,37,0.006,38,0.006,54,0.433,55,0.917,171,1.317,179,5.382,218,3.427,356,1.969,368,6.345,392,4.626,393,3.335,394,4.048,578,4.317,1671,6.286,1797,6.128,1819,6.884,1820,7.326,1821,6.884,1822,6.128]],["title/interfaces/IDossierFilterModel.html",[850,1.615,1332,3.823]],["body/interfaces/IDossierFilterModel.html",[0,0.268,2,0.061,3,0.061,4,0.061,6,0.212,7,0.731,18,0.007,20,0.367,21,0.587,27,0.067,28,1.56,37,0.005,38,0.005,45,4.143,58,0.835,72,0.804,75,1.546,850,2.56,1295,2.606,1330,5.173,1331,5.173,1332,7.03,1333,4.685,1334,4.685,1335,4.685,1336,4.685,1337,4.685,1338,4.685,1339,6.783,1340,2.976,1348,2.976,1349,2.976,1350,2.976]],["title/interfaces/IDossierNavigatorTreeModel.html",[850,1.615,1439,3.823]],["body/interfaces/IDossierNavigatorTreeModel.html",[0,0.228,2,0.052,3,0.052,4,0.052,6,0.18,7,0.674,10,3.598,18,0.007,19,0.391,20,0.388,21,0.596,27,0.06,28,1.762,37,0.005,38,0.005,58,0.707,72,0.681,75,1.387,595,2.057,850,2.296,1192,4.618,1339,6.429,1340,2.522,1348,2.522,1349,2.522,1350,2.522,1438,4.383,1439,6.591,1440,7.493,1441,7.493,1442,7.493,1443,7.493,1444,7.493,1445,7.493,1446,7.493,1447,7.493,1448,6.429,1449,7.493,1450,7.493]],["title/interfaces/IMenuModel.html",[850,1.615,1823,3.823]],["body/interfaces/IMenuModel.html",[0,0.258,2,0.059,3,0.059,4,0.059,6,0.204,7,0.718,10,3.75,18,0.007,19,0.407,20,0.368,21,0.579,22,2.031,24,4.925,27,0.066,28,1.537,37,0.005,38,0.005,45,3.871,58,0.802,75,1.507,278,1.719,340,2.651,707,5.29,850,2.495,965,6.699,1192,4.747,1340,2.859,1348,2.859,1349,2.859,1350,2.859,1823,7.579,1824,4.97,1825,6.699,1826,6.006,1827,6.699,1828,3.823]],["title/interfaces/IPerson.html",[850,1.615,1829,3.823]],["body/interfaces/IPerson.html",[0,0.291,2,0.066,3,0.066,4,0.066,6,0.23,7,0.759,8,1.356,10,3.889,18,0.007,19,0.423,20,0.362,21,0.535,22,2.065,27,0.071,37,0.005,38,0.005,69,1.51,72,0.872,75,1.627,850,2.694,1340,3.228,1348,3.228,1349,3.228,1350,3.228,1829,6.928,1830,5.61,1831,8.098,1832,8.098,1833,8.098]],["title/interfaces/ISearchBoxModel.html",[850,1.615,1834,3.823]],["body/interfaces/ISearchBoxModel.html",[0,0.296,2,0.067,3,0.067,4,0.067,6,0.234,7,0.764,10,3.907,18,0.007,19,0.424,20,0.363,21,0.539,27,0.072,37,0.005,38,0.005,58,0.92,75,1.644,278,1.972,850,2.721,1192,4.56,1340,3.281,1348,3.281,1349,3.281,1350,3.281,1826,6.258,1834,7.28,1835,5.702,1836,5.702,1837,8.136,1838,8.136,1839,4.892]],["title/interfaces/ISidebarMenuModel.html",[850,1.615,1840,3.823]],["body/interfaces/ISidebarMenuModel.html",[0,0.238,2,0.054,3,0.054,4,0.054,6,0.188,7,0.69,10,3.655,18,0.007,19,0.397,20,0.378,21,0.587,22,2.046,24,4.777,27,0.062,28,1.491,37,0.005,38,0.005,45,3.95,58,0.741,75,1.431,278,1.589,340,2.584,477,4.777,707,5.157,850,2.369,1192,4.667,1340,2.643,1348,2.643,1349,2.643,1350,2.643,1448,6.531,1825,6.531,1826,5.855,1827,6.531,1840,6.717,1841,4.593,1842,4.593,1843,7.611,1844,7.611,1845,7.611,1846,5.61,1847,4.22]],["title/interfaces/ITemplateModel.html",[850,1.615,1848,3.823]],["body/interfaces/ITemplateModel.html",[0,0.3,2,0.068,3,0.068,4,0.068,6,0.237,7,0.712,18,0.007,20,0.341,22,2.073,27,0.072,28,1.179,37,0.005,38,0.005,58,0.933,70,1.859,287,2.038,850,2.745,927,4.683,934,7.009,963,4.963,1848,7.317,1849,5.784,1850,8.169,1851,8.169,1852,5.784,1853,5.784,1854,7.075,1855,5.784,1856,5.784,1857,5.784,1858,5.784,1859,5.784]],["title/classes/ITreeNavModel.html",[0,0.216,1860,3.823]],["body/classes/ITreeNavModel.html",[0,0.391,2,0.066,3,0.066,4,0.066,6,0.229,7,0.758,10,3.887,15,0.503,18,0.007,20,0.352,22,2.064,24,5.145,27,0.071,37,0.005,38,0.005,58,0.903,75,1.625,194,5.701,278,1.936,1340,3.221,1348,3.221,1349,3.221,1350,3.221,1382,4.532,1860,7.234,1861,8.093,1862,5.599,1863,8.093,1864,8.093,1865,6.289,1866,6.289,1867,6.289,1868,6.289]],["title/interfaces/LanguageModel.html",[850,1.615,1869,4.162]],["body/interfaces/LanguageModel.html",[2,0.071,3,0.071,4,0.071,6,0.247,7,0.731,18,0.007,19,0.422,20,0.361,21,0.582,22,2.083,27,0.062,37,0.006,38,0.006,461,6.932,850,2.817,1539,6.541,1869,7.26,1870,6.78,1871,9.076]],["title/components/LanguageSelectorComponent.html",[209,0.819,304,1.583]],["body/components/LanguageSelectorComponent.html",[0,0.174,2,0.04,3,0.04,4,0.04,6,0.137,7,0.493,8,1.334,13,0.345,15,0.497,17,0.504,18,0.007,19,0.37,20,0.327,21,0.394,22,1.382,27,0.034,28,0.684,37,0.004,38,0.004,45,2.719,46,0.867,47,0.836,48,3.668,50,3.668,51,1.059,54,0.175,55,0.502,58,0.791,69,1.32,72,0.521,92,1.862,101,1.548,161,1.32,171,1.37,203,1.52,205,1.328,209,1.335,210,1.276,211,1.355,212,1.616,215,2.993,216,1.252,217,4.207,220,3.303,221,1.98,227,3.469,234,2.45,238,2.668,274,1.078,275,1.98,276,1.98,277,1.761,278,2.205,279,1.355,280,1.355,281,1.276,282,2.93,283,1.355,284,1.355,285,1.276,286,1.328,287,1.182,288,1.355,289,1.276,290,1.355,291,1.276,292,1.865,293,1.98,294,1.276,295,1.703,296,1.355,297,1.252,298,1.355,299,1.276,300,1.98,301,1.276,302,1.98,303,1.205,304,2.425,305,1.829,306,1.355,307,1.276,308,1.355,309,1.276,310,1.301,311,1.355,312,1.252,313,1.355,314,1.276,315,1.078,316,1.355,317,1.276,318,1.205,319,1.98,320,1.252,321,1.355,322,1.355,323,1.276,324,1.355,325,1.252,326,1.355,327,1.252,328,1.355,329,1.252,330,1.355,331,1.252,332,1.355,333,1.276,334,1.355,335,1.355,336,1.276,337,1.276,338,1.328,339,1.276,340,2.164,341,1.355,342,1.276,343,1.355,344,1.276,345,1.355,346,1.252,347,1.355,348,1.252,349,1.182,350,1.252,351,1.355,352,1.252,353,1.301,354,1.301,355,1.355,461,2.878,559,4.903,588,3.082,709,2.273,794,3.335,845,2.107,997,5.448,1180,3.896,1353,2.533,1354,2.533,1384,1.733,1539,2.716,1610,5.324,1613,6.782,1617,4.505,1693,6.375,1872,3.768,1873,5.508,1874,5.508,1875,7.161,1876,5.508,1877,7.161,1878,3.768,1879,5.508,1880,3.768,1881,3.768,1882,3.768,1883,3.768,1884,5.508,1885,3.768,1886,3.768,1887,4.903,1888,3.768,1889,3.768,1890,3.768,1891,3.768,1892,5.508,1893,3.768,1894,3.768,1895,5.508,1896,3.768,1897,3.768,1898,7.161,1899,3.768,1900,3.768,1901,3.768,1902,5.508]],["title/components/LayoutContainer.html",[209,0.819,307,1.583]],["body/components/LayoutContainer.html",[0,0.237,2,0.036,3,0.036,4,0.036,6,0.125,7,0.459,8,1.248,13,0.47,15,0.499,17,0.397,18,0.007,19,0.34,20,0.326,21,0.31,22,1.778,27,0.031,37,0.004,38,0.004,45,2.141,46,0.968,47,0.933,54,0.357,55,0.455,58,0.736,69,1.228,83,2.082,92,1.759,101,1.727,161,1.228,167,1.751,171,1.399,172,1.308,186,1.396,203,1.414,205,1.204,209,1.282,210,1.158,211,1.229,212,1.526,214,4.695,215,2.827,216,1.135,220,3.268,221,1.842,224,2.727,225,4.412,226,5.216,227,3.308,228,4.676,234,2.252,257,2.341,259,2.236,261,2.796,272,2.236,273,2.236,274,0.978,275,1.842,276,1.842,277,1.638,278,2.103,279,1.229,280,1.229,281,1.158,282,2.931,283,1.229,284,1.229,285,1.158,286,1.204,287,1.072,288,1.229,289,1.158,290,1.229,291,1.158,292,1.736,293,1.842,294,1.158,295,1.608,296,1.229,297,1.135,298,1.229,299,1.158,300,1.842,301,1.158,302,1.842,303,1.965,304,1.158,305,0.961,306,1.229,307,2.313,308,1.229,309,1.158,310,1.181,311,1.229,312,1.135,313,1.229,314,1.158,315,0.978,316,1.229,317,1.158,318,1.093,319,1.842,320,1.135,321,1.229,322,1.229,323,1.158,324,1.229,325,1.135,326,1.229,327,1.135,328,1.229,329,1.135,330,1.229,331,1.135,332,1.229,333,1.158,334,1.229,335,1.229,336,1.158,337,1.158,338,1.204,339,1.158,340,1.033,341,1.229,342,1.158,343,1.229,344,1.158,345,1.229,346,1.135,347,1.229,348,1.135,349,1.072,350,1.135,351,1.229,352,1.135,353,1.181,354,1.181,355,1.229,375,4.632,428,2.341,708,1.86,714,4.764,715,4.764,716,2.341,772,2.611,774,3.043,794,2.989,902,2.796,996,2.88,997,5.009,1192,1.751,1614,5.585,1615,5.585,1618,3.914,1794,6.281,1795,6.281,1903,3.419,1904,5.125,1905,5.125,1906,6.829,1907,6.323,1908,6.829,1909,5.472,1910,3.419,1911,5.125,1912,3.419,1913,3.419,1914,3.419,1915,3.419,1916,4.562,1917,3.419,1918,3.419,1919,3.419,1920,3.419,1921,3.419,1922,3.419,1923,3.419,1924,3.043,1925,3.419,1926,3.419,1927,3.419,1928,5.125,1929,3.419,1930,3.419,1931,3.419,1932,3.419,1933,3.419,1934,4.562,1935,3.419]],["title/modules/LayoutContainersModule.html",[356,1.337,1424,3.201]],["body/modules/LayoutContainersModule.html",[0,0.185,2,0.042,3,0.042,4,0.042,18,0.007,27,0.071,37,0.004,38,0.004,54,0.443,55,0.534,72,0.555,209,0.703,218,3.357,245,1.441,274,1.147,281,3.037,294,3.037,299,3.037,301,3.037,304,3.037,307,3.037,309,3.037,310,2.329,317,3.037,323,3.037,333,3.037,337,3.037,339,3.037,344,3.037,356,1.648,358,2.054,359,3.558,360,2.182,378,3.135,379,1.306,380,2.054,383,2.332,392,3.238,393,1.942,394,2.649,441,3.768,444,2.115,445,1.471,521,3.475,730,3.613,842,3.569,880,4.401,881,2.514,995,2.889,1232,6.003,1306,3.569,1307,3.569,1424,6.772,1648,3.569,1907,5.858,1924,3.569,1936,3.569,1937,3.569,1938,3.569,1939,3.569,1940,4.01,1941,4.01,1942,4.01,1943,4.01,1944,4.01,1945,4.01,1946,3.569,1947,5.761,1948,4.01,1949,3.569,1950,4.01,1951,4.01,1952,4.01,1953,3.569,1954,3.569,1955,3.569,1956,4.01,1957,4.01,1958,4.01,1959,3.569,1960,4.01,1961,4.01,1962,4.01,1963,4.01,1964,4.01]],["title/injectables/LayoutSandbox.html",[158,0.942,1907,3.369]],["body/injectables/LayoutSandbox.html",[0,0.152,2,0.035,3,0.035,4,0.035,6,0.12,7,0.446,8,1.452,13,0.456,15,0.524,17,0.557,18,0.007,19,0.334,20,0.301,21,0.435,27,0.03,37,0.003,38,0.003,46,1.238,47,1.193,54,0.404,55,0.438,68,0.71,71,0.876,72,0.455,74,2.058,101,1.688,138,3.533,158,1.21,161,1.193,171,1.664,195,1.593,224,2.842,225,4.339,228,4.586,229,4.586,231,3.914,234,2.802,238,3.244,242,3.409,245,1.182,257,2.252,259,3.255,272,2.151,273,2.151,303,2.744,340,1.505,408,3.768,444,1.735,445,1.207,446,5.383,541,2.512,543,2.709,551,3.121,553,2.252,555,1.638,556,2.37,564,5.962,571,5.543,588,2.69,597,1.232,604,3.895,617,3.409,708,1.79,714,3.493,715,3.493,716,4.112,719,2.69,737,5.962,758,2.928,762,2.69,965,2.512,996,1.849,1036,4.511,1192,3.076,1516,2.928,1610,5.477,1611,5.477,1612,5.477,1617,4.071,1618,3.802,1887,4.431,1907,3.587,1916,4.431,1934,6.738,1965,3.289,1966,6.698,1967,6.698,1968,4.978,1969,4.978,1970,6.698,1971,6.698,1972,6.698,1973,4.978,1974,4.978,1975,3.289,1976,4.978,1977,3.289,1978,3.289,1979,3.289,1980,4.431,1981,3.289,1982,3.289,1983,3.289,1984,3.289,1985,3.289,1986,3.289,1987,4.978,1988,3.289,1989,4.978,1990,3.289,1991,4.978,1992,3.289,1993,3.289,1994,4.978,1995,3.289,1996,4.978,1997,3.289,1998,4.978,1999,3.289,2000,3.289,2001,2.928,2002,3.289,2003,2.928,2004,3.289,2005,3.289,2006,3.289,2007,2.928,2008,3.289,2009,3.289,2010,3.289,2011,3.289,2012,3.289,2013,4.978,2014,3.289,2015,2.928,2016,2.928,2017,4.978,2018,4.978,2019,4.978,2020,3.289,2021,3.289,2022,3.289,2023,3.289]],["title/components/LeftSidebarComponent.html",[209,0.819,309,1.583]],["body/components/LeftSidebarComponent.html",[0,0.163,2,0.037,3,0.037,4,0.037,6,0.129,7,0.471,13,0.482,15,0.471,17,0.538,18,0.007,19,0.374,20,0.295,21,0.42,27,0.032,37,0.004,38,0.004,45,3.099,47,0.798,50,1.81,54,0.244,55,0.471,58,0.755,69,1.259,72,0.489,92,1.794,161,1.259,171,1.328,183,2.953,203,1.45,205,1.245,209,1.3,210,1.197,211,1.271,212,1.723,216,1.174,220,3.277,221,1.889,224,2.75,234,2.479,261,4.297,262,1.271,274,1.011,275,1.889,276,1.889,277,1.679,278,2.138,279,1.271,280,1.271,281,1.197,282,2.932,283,1.271,284,1.271,285,1.197,286,1.245,287,1.109,288,1.271,289,1.197,290,1.271,291,1.197,292,1.779,293,1.889,294,1.197,295,1.641,296,1.271,297,1.174,298,1.271,299,1.197,300,1.889,301,1.197,302,1.889,303,1.13,304,1.197,305,0.993,306,1.271,307,1.197,308,1.271,309,2.351,310,2.781,311,1.271,312,1.174,313,1.271,314,1.197,315,1.011,316,1.271,317,1.197,318,1.13,319,1.889,320,1.174,321,1.271,322,1.271,323,1.197,324,1.271,325,1.174,326,1.271,327,1.174,328,1.271,329,1.174,330,1.271,331,1.174,332,1.271,333,1.197,334,1.271,335,1.271,336,1.197,337,1.197,338,1.245,339,1.197,340,1.068,341,1.271,342,1.197,343,1.271,344,1.197,345,1.271,346,1.174,347,1.271,348,1.174,349,1.109,350,1.174,351,1.271,352,1.174,353,1.221,354,1.221,355,1.271,444,1.865,445,3.035,446,4.754,499,3.146,794,3.248,801,2.89,845,2.01,930,5.128,945,5.678,995,5.003,996,1.986,997,6.22,1090,4.297,1180,1.923,1192,2.691,1218,5.128,1305,6.912,1353,2.416,1354,2.416,1384,1.625,1632,6.605,1644,3.146,1645,3.146,1909,6.605,1959,7.524,2024,3.534,2025,6.943,2026,5.254,2027,5.254,2028,6.943,2029,5.254,2030,5.254,2031,6.271,2032,3.534,2033,6.943,2034,3.534,2035,5.254,2036,3.534,2037,5.254,2038,3.534,2039,5.254,2040,3.534,2041,5.254,2042,3.534,2043,3.534,2044,3.534,2045,3.534,2046,3.534,2047,3.534,2048,5.254,2049,6.943,2050,3.534,2051,3.534,2052,6.271,2053,3.534,2054,3.534,2055,3.534,2056,3.534,2057,3.534,2058,3.534,2059,3.534,2060,6.943]],["title/classes/LoadAction.html",[0,0.216,96,1.867]],["body/classes/LoadAction.html",[0,0.422,2,0.044,3,0.044,4,0.044,6,0.152,7,0.53,8,0.882,13,0.382,15,0.392,17,0.323,18,0.007,19,0.193,20,0.378,21,0.252,27,0.085,28,1.074,37,0.004,38,0.004,46,0.656,47,0.632,54,0.32,58,1.31,59,2.125,60,2.588,61,1.213,68,0.899,70,1.191,71,1.109,72,0.819,73,1.191,74,2.355,75,0.869,77,1.74,78,1.17,79,1.383,80,1.17,96,2.751,97,2.473,98,2.493,99,2.364,100,1.74,101,1.17,102,1.892,103,1.383,127,2.422,177,2.133,212,1.966,255,1.438,262,2.128,295,1.962,315,2.267,379,1.357,595,1.74,597,1.56,1126,1.74,1127,1.74,1146,2.264,1147,1.74,1295,4.126,1333,2.197,1334,3.123,1335,3.123,1336,2.197,1337,2.197,1338,2.197,1365,3.032,1567,3.123,1568,2.266,1571,2.341,1572,3.871,1573,2.341,1574,2.341,1575,2.341,1576,4.627,1577,2.341,1578,2.341,1579,2.341,1580,2.341,1581,2.341,1582,2.341,1583,2.341,1584,2.266,1585,2.341,1586,2.266,1587,2.341,1588,2.266,1589,2.341,1590,2.266,1591,2.341,1592,2.266,1593,2.341,1594,2.266,1595,2.341,1596,2.266,1597,2.266,1598,2.266,1599,2.266,1600,2.266,1601,2.266,1602,2.266,2061,5.919,2062,4.164]],["title/classes/LoadApiLangsAction.html",[0,0.216,1140,2.466]],["body/classes/LoadApiLangsAction.html",[0,0.428,2,0.044,3,0.044,4,0.044,6,0.151,7,0.528,8,0.879,13,0.38,15,0.391,17,0.321,18,0.007,19,0.192,20,0.379,21,0.251,22,1.252,27,0.085,28,1.569,37,0.004,38,0.004,46,0.928,47,0.895,54,0.274,58,1.33,59,2.131,60,2.599,61,1.207,68,0.895,71,1.103,72,0.573,73,1.185,74,1.185,75,1.23,78,1.164,79,1.376,80,1.164,87,1.654,98,2.537,102,1.885,103,1.376,162,3.02,201,3.419,202,2.712,203,1.627,204,4.171,255,1.431,262,2.468,305,1.164,379,1.35,445,1.52,921,1.954,1103,3.111,1104,2.254,1107,2.328,1108,2.328,1109,3.314,1110,2.328,1111,2.328,1112,2.328,1113,2.328,1114,2.328,1115,2.328,1116,2.328,1117,2.328,1118,2.328,1119,2.328,1120,2.328,1121,2.328,1122,2.328,1123,2.328,1124,2.328,1125,2.328,1126,1.73,1127,1.73,1128,2.328,1129,3.859,1130,2.328,1131,2.328,1132,3.111,1133,2.328,1134,3.111,1135,2.328,1136,3.111,1137,2.328,1138,3.111,1139,2.328,1140,3.623,1141,3.314,1142,3.111,1143,2.328,1144,2.936,1145,2.328,1146,2.256,1147,1.73,1148,3.314,1149,3.314,1150,3.111,1151,2.328,1152,3.111,2063,5.897,2064,4.142]],["title/classes/LoadApiRolesAction.html",[0,0.216,1136,2.466]],["body/classes/LoadApiRolesAction.html",[0,0.428,2,0.044,3,0.044,4,0.044,6,0.151,7,0.528,8,0.879,13,0.38,15,0.391,17,0.321,18,0.007,19,0.192,20,0.379,21,0.251,22,1.252,27,0.085,28,1.569,37,0.004,38,0.004,46,0.928,47,0.895,54,0.274,58,1.33,59,2.131,60,2.599,61,1.207,68,0.895,71,1.103,72,0.573,73,1.185,74,1.185,75,1.23,78,1.164,79,1.376,80,1.164,87,1.654,98,2.537,102,1.885,103,1.376,162,3.02,201,3.419,202,2.712,203,1.627,204,4.171,255,1.431,262,2.468,305,1.164,379,1.35,445,1.52,921,1.954,1103,3.111,1104,2.254,1107,2.328,1108,2.328,1109,3.314,1110,2.328,1111,2.328,1112,2.328,1113,2.328,1114,2.328,1115,2.328,1116,2.328,1117,2.328,1118,2.328,1119,2.328,1120,2.328,1121,2.328,1122,2.328,1123,2.328,1124,2.328,1125,2.328,1126,1.73,1127,1.73,1128,2.328,1129,3.859,1130,2.328,1131,2.328,1132,3.111,1133,2.328,1134,3.111,1135,2.328,1136,3.623,1137,3.314,1138,3.111,1139,2.328,1140,3.111,1141,2.328,1142,3.111,1143,2.328,1144,2.936,1145,2.328,1146,2.256,1147,1.73,1148,3.314,1149,3.314,1150,3.111,1151,2.328,1152,3.111,2065,5.897,2066,4.142]],["title/classes/LoadFailAction.html",[0,0.216,102,1.494]],["body/classes/LoadFailAction.html",[0,0.422,2,0.044,3,0.044,4,0.044,6,0.153,7,0.533,8,0.886,13,0.384,15,0.393,17,0.325,18,0.007,19,0.195,20,0.378,21,0.254,27,0.085,28,1.255,37,0.004,38,0.004,46,0.936,47,0.903,54,0.321,58,1.312,59,2.118,60,2.59,61,1.221,68,0.905,70,1.199,71,1.116,72,0.823,73,1.199,74,2.36,75,0.875,77,1.751,78,1.178,79,1.392,80,1.178,96,2.376,97,1.751,98,2.497,99,2.376,100,1.751,101,1.178,102,2.21,103,1.975,177,2.147,212,1.867,255,1.448,262,2.138,295,1.808,315,2.152,379,1.366,595,1.751,597,1.57,1126,1.751,1127,1.751,1146,2.275,1147,1.751,1295,3.956,1333,2.212,1334,3.138,1335,3.138,1336,2.212,1337,2.212,1338,2.212,1365,3.046,1567,3.138,1568,2.281,1571,2.356,1572,3.885,1573,2.356,1574,2.356,1575,2.356,1576,4.637,1577,2.356,1578,2.356,1579,2.356,1580,2.356,1581,2.356,1582,2.356,1583,2.356,1584,2.281,1585,2.356,1586,2.281,1587,2.356,1588,2.281,1589,2.356,1590,2.281,1591,2.356,1592,2.281,1593,2.356,1594,2.281,1595,2.356,1596,2.281,1597,2.281,1598,2.281,1599,2.281,1600,2.281,1601,2.281,1602,2.281,2067,5.948,2068,4.192]],["title/classes/LoadSuccessAction.html",[0,0.216,99,1.867]],["body/classes/LoadSuccessAction.html",[0,0.422,2,0.044,3,0.044,4,0.044,6,0.153,7,0.533,8,0.886,13,0.384,15,0.393,17,0.325,18,0.007,19,0.195,20,0.378,21,0.254,27,0.085,28,1.079,37,0.004,38,0.004,46,0.66,47,0.636,54,0.321,58,1.312,59,2.118,60,2.59,61,1.221,68,0.905,70,1.199,71,1.116,72,0.823,73,1.199,74,2.36,75,0.875,77,1.751,78,1.178,79,1.392,80,1.178,96,2.376,97,1.751,98,2.497,99,2.761,100,2.484,101,2.232,102,1.901,103,1.392,177,2.147,212,1.867,255,1.448,262,2.138,295,1.808,315,2.152,379,1.366,595,1.751,597,1.57,1126,1.751,1127,1.751,1146,2.275,1147,1.751,1295,3.956,1333,2.212,1334,3.138,1335,3.138,1336,2.212,1337,2.212,1338,2.212,1365,3.046,1567,3.138,1568,2.281,1571,2.356,1572,3.885,1573,2.356,1574,2.356,1575,2.356,1576,4.637,1577,2.356,1578,2.356,1579,2.356,1580,2.356,1581,2.356,1582,2.356,1583,2.356,1584,2.281,1585,2.356,1586,2.281,1587,2.356,1588,2.281,1589,2.356,1590,2.281,1591,2.356,1592,2.281,1593,2.356,1594,2.281,1595,2.356,1596,2.281,1597,2.281,1598,2.281,1599,2.281,1600,2.281,1601,2.281,1602,2.281,2069,5.948,2070,4.192]],["title/components/LoginComponent.html",[209,0.819,312,1.553]],["body/components/LoginComponent.html",[0,0.132,2,0.03,3,0.03,4,0.03,6,0.105,7,0.401,8,1.392,11,6.122,12,5.528,13,0.411,15,0.502,17,0.427,18,0.007,19,0.333,20,0.335,21,0.333,22,1.435,24,3.206,27,0.026,33,2.345,35,2.345,37,0.003,38,0.003,45,2.303,46,0.451,47,0.435,48,2.294,51,0.806,54,0.333,55,0.382,58,0.643,69,1.074,72,0.397,92,1.577,131,3.192,134,3.213,161,1.074,171,1.37,195,2.17,201,2.23,203,1.236,205,1.01,209,1.184,210,0.971,211,1.031,212,1.368,214,4.21,215,2.535,216,0.952,220,3.215,221,1.61,224,1.762,226,4.759,227,3.018,234,2.305,238,3.626,271,1.56,274,0.82,275,1.61,276,1.61,277,1.432,278,1.918,279,1.031,280,1.031,281,0.971,282,2.809,283,1.031,284,1.031,285,0.971,286,1.01,287,0.9,288,1.031,289,0.971,290,1.031,291,0.971,292,1.517,293,1.61,294,0.971,295,1.442,296,1.031,297,0.952,298,1.031,299,0.971,300,1.61,301,0.971,302,1.61,303,0.917,304,0.971,305,0.806,306,1.031,307,0.971,308,1.031,309,0.971,310,0.99,311,1.031,312,2.07,313,1.031,314,0.971,315,0.82,316,1.031,317,0.971,318,0.917,319,1.61,320,0.952,321,1.031,322,1.031,323,0.971,324,1.031,325,0.952,326,1.031,327,0.952,328,1.031,329,0.952,330,1.031,331,0.952,332,1.031,333,0.971,334,1.031,335,1.031,336,0.971,337,0.971,338,1.01,339,0.971,340,0.867,341,1.031,342,0.971,343,1.031,344,0.971,345,1.031,346,0.952,347,1.031,348,0.952,349,0.9,350,0.952,351,1.031,352,0.952,353,0.99,354,0.99,355,1.031,372,5.083,387,2.437,397,1.798,399,2.345,402,1.798,445,2.987,450,2.702,452,3.067,551,2.809,555,2.23,592,3.228,597,1.678,602,5.472,603,5.867,610,2.345,714,1.668,715,1.668,716,1.963,817,4.671,819,3.457,820,3.325,821,3.457,822,3.457,823,2.809,824,1.798,825,4.493,827,2.605,831,1.798,833,1.798,845,1.714,1353,2.06,1354,2.06,1374,4.42,1375,1.875,1376,1.875,1379,1.875,1380,1.875,1381,1.875,1384,1.318,1386,1.875,1387,1.875,1646,5.547,2071,2.867,2072,4.48,2073,4.48,2074,7.165,2075,6.231,2076,4.48,2077,5.513,2078,7.165,2079,4.48,2080,2.867,2081,4.48,2082,3.988,2083,6.017,2084,4.48,2085,2.867,2086,2.867,2087,4.48,2088,2.867,2089,3.988,2090,2.867,2091,5.547,2092,2.867,2093,7.485,2094,2.867,2095,2.867,2096,2.867,2097,4.48,2098,2.867,2099,2.867,2100,2.867,2101,2.867,2102,2.867,2103,2.867,2104,2.867,2105,2.867,2106,4.48,2107,2.867,2108,2.867,2109,2.867,2110,2.867,2111,2.553,2112,2.867,2113,2.867,2114,2.867,2115,2.867,2116,2.867,2117,2.867,2118,2.867,2119,2.867,2120,2.867,2121,2.867,2122,2.867,2123,4.48,2124,4.48,2125,4.48,2126,4.48,2127,4.48,2128,4.48,2129,4.48,2130,6.231,2131,6.231,2132,4.48,2133,4.48,2134,4.48,2135,4.48,2136,2.867]],["title/classes/LoginForm.html",[0,0.216,131,2.394]],["body/classes/LoginForm.html",[0,0.345,2,0.062,3,0.062,4,0.062,6,0.214,7,0.669,8,1.465,11,7.059,12,7.059,13,0.539,15,0.526,17,0.455,18,0.007,19,0.273,20,0.368,21,0.355,22,1.933,27,0.053,28,1.567,33,4.806,35,4.806,37,0.005,38,0.005,131,4.202,2137,5.876,2138,8.632,2139,8.632,2140,8.632,2141,8.632,2142,7.465,2143,7.465,2144,5.876,2145,5.876,2146,5.876,2147,5.876,2148,5.876,2149,5.876,2150,5.876,2151,5.876,2152,5.876,2153,5.876,2154,5.876,2155,5.876,2156,5.876,2157,5.876,2158,5.876]],["title/classes/MenuModel.html",[0,0.216,1828,3.201]],["body/classes/MenuModel.html",[0,0.322,2,0.056,3,0.056,4,0.056,6,0.193,7,0.699,10,3.686,13,0.485,15,0.527,17,0.41,18,0.007,19,0.411,20,0.368,21,0.577,22,2.015,24,4.824,27,0.063,28,1.506,37,0.005,38,0.005,45,3.827,58,1.002,75,1.628,278,1.629,340,2.606,707,5.2,850,1.827,965,6.585,976,2.262,1192,4.693,1340,3.572,1348,2.71,1349,2.71,1350,2.71,1823,7.653,1824,4.709,1825,6.585,1826,5.903,1827,6.585,1828,4.775,2159,6.974,2160,5.29,2161,5.29,2162,5.29,2163,5.29,2164,5.29,2165,5.29,2166,5.29]],["title/injectables/MenusEffects.html",[158,0.942,413,3.823]],["body/injectables/MenusEffects.html",[0,0.255,2,0.058,3,0.058,4,0.058,6,0.29,7,0.642,13,0.657,15,0.408,17,0.427,18,0.007,19,0.256,20,0.285,21,0.334,27,0.05,37,0.005,38,0.005,46,0.868,47,0.837,51,2.013,54,0.448,55,0.734,59,2.039,68,1.548,70,1.577,158,1.604,167,2.824,171,1.371,172,3.224,186,2.252,224,2.291,303,2.291,349,2.248,408,4.35,410,5.206,413,5.861,438,3.457,543,4.332,628,4.686,656,3.775,658,4.907,660,4.907,662,4.907,681,4.907,686,5.473,692,3.606,693,3.457,694,3.606,695,3.775,1828,3.775,2003,4.908,2015,6.379,2167,5.514,2168,8.429,2169,5.514,2170,7.166,2171,7.166,2172,7.166,2173,7.166,2174,7.166,2175,5.514,2176,5.514,2177,5.514,2178,4.509,2179,5.514]],["title/components/NavFiltersComponent.html",[209,0.819,314,1.583]],["body/components/NavFiltersComponent.html",[0,0.17,2,0.039,3,0.039,4,0.039,6,0.134,7,0.485,13,0.588,15,0.486,18,0.007,19,0.298,20,0.333,27,0.033,37,0.004,38,0.004,46,0.851,47,0.821,50,4.791,51,2.351,54,0.251,55,0.49,69,1.296,92,1.836,203,1.492,205,1.295,209,1.321,210,1.245,211,1.321,212,1.592,216,1.221,220,3.287,221,1.944,238,3.821,248,1.78,274,1.052,275,1.944,276,1.944,277,1.729,278,2.179,279,1.321,280,1.321,281,1.245,282,2.92,283,1.321,284,1.321,285,1.245,286,1.295,287,1.153,288,1.321,289,1.245,290,1.321,291,1.245,292,1.831,293,1.944,294,1.245,295,1.973,296,1.321,297,1.221,298,1.321,299,1.245,300,1.944,301,1.245,302,1.944,303,1.175,304,1.245,305,1.033,306,1.321,307,1.245,308,1.321,309,1.245,310,1.269,311,1.321,312,1.221,313,1.321,314,2.396,315,2.333,316,1.321,317,1.245,318,1.175,319,1.944,320,1.221,321,1.321,322,1.321,323,1.245,324,1.321,325,1.221,326,1.321,327,1.221,328,1.321,329,1.221,330,1.321,331,1.221,332,1.321,333,1.245,334,1.321,335,1.321,336,1.245,337,1.245,338,1.295,339,1.245,340,1.111,341,1.321,342,1.245,343,1.321,344,1.245,345,1.321,346,1.221,347,1.321,348,1.221,349,1.153,350,1.221,351,1.321,352,1.221,353,1.269,354,1.269,355,1.321,477,3.145,794,3.097,845,2.069,1036,5.585,1180,4.646,1288,5.237,1295,3.382,1353,2.487,1354,2.487,1365,3.863,1384,1.69,1433,7.729,1476,6.299,2180,8.683,2181,3.675,2182,5.408,2183,5.408,2184,6.416,2185,6.416,2186,6.416,2187,6.416,2188,6.416,2189,6.416,2190,5.408,2191,3.675,2192,3.675,2193,3.675,2194,3.675,2195,3.675,2196,3.675,2197,5.408,2198,5.408,2199,5.408,2200,5.408,2201,5.408,2202,5.408,2203,5.408,2204,5.408,2205,5.408,2206,5.408,2207,5.408,2208,5.408,2209,3.675]],["title/components/NotificationBoxComponent.html",[209,0.819,317,1.583]],["body/components/NotificationBoxComponent.html",[0,0.223,2,0.051,3,0.051,4,0.051,6,0.176,13,0.684,15,0.373,18,0.007,19,0.346,27,0.044,37,0.005,38,0.005,54,0.224,55,0.644,58,0.943,69,1.573,92,2.133,161,1.573,171,0.924,203,1.812,205,1.703,209,1.465,210,1.637,211,1.737,212,1.85,215,3.428,216,1.605,220,3.352,221,2.36,227,3.874,234,1.488,274,1.383,275,2.36,276,2.36,277,2.099,278,2.462,279,1.737,280,1.737,281,1.637,282,3.04,283,1.737,284,1.737,285,1.637,286,1.703,287,1.516,288,1.737,289,1.637,290,1.737,291,1.637,292,2.223,293,2.36,294,1.637,295,1.951,296,1.737,297,1.605,298,1.737,299,1.637,300,2.36,301,1.637,302,2.36,303,1.545,304,1.637,305,1.358,306,1.737,307,1.637,308,1.737,309,1.637,310,1.669,311,1.737,312,1.605,313,1.737,314,1.637,315,1.383,316,1.737,317,2.709,318,2.91,319,2.36,320,1.605,321,1.737,322,1.737,323,1.637,324,1.737,325,1.605,326,1.737,327,1.605,328,1.737,329,1.605,330,1.737,331,1.605,332,1.737,333,1.637,334,1.737,335,1.737,336,1.637,337,1.637,338,1.703,339,1.637,340,1.461,341,1.737,342,1.637,343,1.737,344,1.637,345,1.737,346,1.605,347,1.737,348,1.605,349,1.516,350,1.605,351,1.737,352,1.605,353,1.669,354,1.669,355,1.737,454,5.369,845,2.511,1638,6.109,1953,6.637,2210,7.456,2211,4.302,2212,5.844,2213,5.844,2214,4.833,2215,4.833]],["title/components/PageBadGatewayComponent.html",[209,0.819,320,1.553]],["body/components/PageBadGatewayComponent.html",[0,0.198,2,0.045,3,0.045,4,0.045,6,0.157,7,0.542,8,1.044,13,0.394,15,0.433,17,0.333,18,0.007,19,0.353,20,0.241,21,0.26,27,0.039,37,0.004,38,0.004,54,0.325,55,0.572,58,0.869,69,1.45,92,2.293,161,1.45,171,1.157,203,1.67,205,1.513,209,1.405,210,1.455,211,1.544,212,1.739,215,3.221,216,1.427,220,3.326,221,2.175,224,1.373,227,3.684,234,1.863,245,1.544,260,3.393,274,1.229,275,2.175,276,2.175,277,1.934,278,2.341,279,1.544,280,1.544,281,1.455,282,2.981,283,1.544,284,1.544,285,1.455,286,1.513,287,1.348,288,1.544,289,1.455,290,1.544,291,1.455,292,2.049,293,2.175,294,1.455,295,1.833,296,1.544,297,1.427,298,1.544,299,1.455,300,2.175,301,1.455,302,2.175,303,1.373,304,1.455,305,1.207,306,1.544,307,1.455,308,1.544,309,1.455,310,1.484,311,1.544,312,1.427,313,1.544,314,1.455,315,1.229,316,1.544,317,1.455,318,1.373,319,2.175,320,2.526,321,2.518,322,1.544,323,1.455,324,1.544,325,1.427,326,1.544,327,1.427,328,1.544,329,1.427,330,1.544,331,1.427,332,1.544,333,1.455,334,1.544,335,1.544,336,1.455,337,1.455,338,1.513,339,1.455,340,1.298,341,1.544,342,1.455,343,1.544,344,1.455,345,1.544,346,1.427,347,1.544,348,1.427,349,1.348,350,1.427,351,1.544,352,1.427,353,1.484,354,1.484,355,1.544,393,2.081,445,3.051,463,4.949,709,2.591,743,6.219,845,2.315,971,6.352,1353,2.782,1354,2.782,1384,1.975,2216,4.296,2217,6.051,2218,6.051,2219,5.48,2220,3.824,2221,6.352,2222,4.296,2223,4.296,2224,4.296,2225,4.296,2226,4.296,2227,4.296,2228,4.296,2229,3.824,2230,6.051,2231,6.051,2232,6.051]],["title/components/PageContentComponent.html",[209,0.819,323,1.583]],["body/components/PageContentComponent.html",[0,0.235,2,0.054,3,0.054,4,0.054,13,0.702,15,0.29,18,0.007,19,0.356,27,0.046,37,0.005,38,0.005,54,0.237,55,0.678,69,1.63,92,2.436,194,4.264,203,1.877,205,1.794,209,1.492,210,1.725,211,1.831,212,1.9,216,1.691,220,3.362,221,2.445,274,1.457,275,2.445,276,2.445,277,2.174,278,2.516,279,1.831,280,1.831,281,1.725,282,3.039,283,1.831,284,1.831,285,1.725,286,1.794,287,1.597,288,1.831,289,1.725,290,1.831,291,1.725,292,2.303,293,2.445,294,1.725,295,2.003,296,1.831,297,1.691,298,1.831,299,1.725,300,2.445,301,1.725,302,2.445,303,1.628,304,1.725,305,1.431,306,1.831,307,1.725,308,1.831,309,1.725,310,1.759,311,1.831,312,1.691,313,1.831,314,1.725,315,1.457,316,1.831,317,1.725,318,1.628,319,2.445,320,1.691,321,1.831,322,1.831,323,2.767,324,1.831,325,1.691,326,1.831,327,1.691,328,1.831,329,1.691,330,1.831,331,1.691,332,1.831,333,1.725,334,1.831,335,1.831,336,1.725,337,1.725,338,1.794,339,1.725,340,1.539,341,1.831,342,1.725,343,1.831,344,1.725,345,1.831,346,1.691,347,1.831,348,1.691,349,1.597,350,1.691,351,1.831,352,1.691,353,1.759,354,1.759,355,1.831,1353,3.127,1354,3.127,1384,2.342,2233,6.8,2234,5.092,2235,6.8,2236,5.092]],["title/components/PageNotFoundComponent.html",[209,0.819,325,1.553]],["body/components/PageNotFoundComponent.html",[0,0.213,2,0.049,3,0.049,4,0.049,6,0.168,8,1.084,13,0.423,15,0.362,17,0.357,18,0.007,19,0.364,20,0.183,21,0.279,27,0.042,37,0.004,38,0.004,54,0.295,55,0.614,69,1.524,92,2.354,161,1.524,171,0.882,203,1.755,205,1.625,209,1.442,210,1.562,211,1.658,212,1.806,216,1.532,220,3.342,221,2.286,234,1.42,274,1.32,275,2.286,276,2.286,277,2.033,278,2.415,279,1.658,280,1.658,281,1.562,282,3.006,283,1.658,284,1.658,285,1.562,286,1.625,287,1.447,288,1.658,289,1.562,290,1.658,291,1.562,292,2.153,293,2.286,294,1.562,295,1.904,296,1.658,297,1.532,298,1.658,299,1.562,300,2.286,301,1.562,302,2.286,303,1.474,304,1.562,305,1.296,306,1.658,307,1.562,308,1.658,309,1.562,310,1.593,311,1.658,312,1.532,313,1.658,314,1.562,315,1.32,316,1.658,317,1.562,318,1.474,319,2.286,320,1.532,321,1.658,322,1.658,323,1.562,324,1.658,325,2.605,326,1.658,327,1.532,328,1.658,329,1.532,330,1.658,331,1.532,332,1.658,333,1.562,334,1.658,335,1.658,336,1.562,337,1.562,338,1.625,339,1.562,340,1.394,341,1.658,342,1.562,343,1.658,344,1.562,345,1.658,346,1.532,347,1.658,348,1.532,349,1.447,350,1.532,351,1.658,352,1.532,353,1.593,354,1.593,355,1.658,393,2.234,445,3.12,709,2.782,845,2.432,1353,2.924,1354,2.924,1384,2.121,2219,5.652,2220,4.106,2221,6.496,2229,4.106,2237,4.612,2238,6.358,2239,6.358,2240,6.358,2241,4.612,2242,4.612,2243,6.358,2244,6.358,2245,6.358]],["title/classes/Person.html",[0,0.216,69,1.12]],["body/classes/Person.html",[0,0.346,2,0.062,3,0.062,4,0.062,6,0.216,7,0.737,8,1.454,10,3.816,13,0.542,15,0.519,17,0.458,18,0.007,19,0.424,20,0.363,21,0.54,22,2.047,27,0.068,37,0.005,38,0.005,69,1.796,72,0.818,75,1.716,850,2.041,976,2.526,1340,3.837,1348,3.027,1349,3.027,1350,3.027,1829,7.074,1830,5.26,1831,7.946,1832,7.946,1833,7.946,2246,7.492,2247,5.909,2248,5.909,2249,5.909,2250,5.909]],["title/components/PersonFormComponent.html",[209,0.819,327,1.553]],["body/components/PersonFormComponent.html",[0,0.123,2,0.028,3,0.028,4,0.028,6,0.097,7,0.38,8,1.283,13,0.388,15,0.513,17,0.408,18,0.007,19,0.323,20,0.334,21,0.319,22,1.547,27,0.039,37,0.003,38,0.003,39,6.372,46,1.094,47,1.055,48,1.368,50,1.368,51,2.124,54,0.37,55,0.356,58,0.609,69,1.951,72,0.37,92,1.506,93,1.17,161,1.015,167,1.368,171,1.525,195,2.052,203,1.654,205,1.493,209,1.145,210,0.905,211,0.96,212,1.307,215,2.421,216,0.887,217,2.041,219,4.989,220,3.191,221,1.523,224,2.647,227,2.903,231,3.628,234,2.012,245,0.96,246,2.378,248,1.294,271,2.865,274,0.764,275,1.523,276,1.523,277,1.354,278,1.845,279,0.96,280,0.96,281,0.905,282,2.812,283,0.96,284,0.96,285,0.905,286,2.111,287,0.838,288,0.96,289,0.905,290,0.96,291,0.905,292,1.435,293,1.523,294,0.905,295,1.378,296,0.96,297,0.887,298,0.96,299,0.905,300,1.523,301,0.905,302,1.523,303,0.854,304,0.905,305,0.751,306,0.96,307,0.905,308,0.96,309,0.905,310,0.923,311,0.96,312,0.887,313,0.96,314,0.905,315,0.764,316,0.96,317,0.905,318,0.854,319,1.523,320,0.887,321,0.96,322,0.96,323,0.905,324,0.96,325,0.887,326,0.96,327,1.99,328,0.96,329,0.887,330,0.96,331,0.887,332,0.96,333,0.905,334,0.96,335,0.96,336,0.905,337,0.905,338,0.941,339,0.905,340,0.807,341,0.96,342,0.905,343,0.96,344,0.905,345,0.96,346,0.887,347,0.96,348,0.887,349,0.838,350,0.887,351,0.96,352,0.887,353,0.923,354,0.923,355,0.96,383,1.554,387,2.305,393,1.294,477,3.062,555,2.109,603,3.053,794,1.17,806,1.409,817,4.559,819,3.302,820,3.176,821,3.302,822,3.302,823,2.657,824,1.675,825,4.36,827,2.464,831,1.675,833,1.675,845,1.621,881,1.675,953,5.334,954,5.334,996,2.381,1001,2.378,1002,2.378,1003,2.378,1004,2.378,1180,1.454,1191,1.829,1204,2.378,1205,2.378,1206,2.378,1353,1.948,1354,1.948,1374,4.273,1375,1.747,1376,1.747,1379,1.747,1380,1.747,1381,1.747,1384,1.228,1386,1.747,1387,1.747,1763,2.901,2219,3.794,2221,5.565,2251,7.174,2252,7.174,2253,2.672,2254,4.237,2255,4.237,2256,5.334,2257,5.334,2258,5.334,2259,5.334,2260,5.334,2261,5.993,2262,4.993,2263,5.993,2264,3.772,2265,5.334,2266,5.993,2267,2.672,2268,3.772,2269,2.672,2270,3.772,2271,4.687,2272,4.687,2273,4.687,2274,4.687,2275,2.672,2276,2.672,2277,2.672,2278,2.672,2279,2.672,2280,2.672,2281,2.672,2282,5.31,2283,2.672,2284,5.265,2285,2.672,2286,4.687,2287,2.672,2288,4.901,2289,2.672,2290,2.672,2291,2.672,2292,4.237,2293,2.672,2294,1.829,2295,2.378,2296,2.185,2297,2.185,2298,2.672,2299,2.185,2300,5.265,2301,2.672,2302,2.672,2303,2.672,2304,2.672,2305,2.672,2306,2.672,2307,3.772,2308,4.237,2309,4.237,2310,2.672,2311,2.672,2312,2.672,2313,2.672,2314,4.237,2315,3.772,2316,2.672,2317,2.672,2318,2.378,2319,2.041,2320,2.378,2321,2.041,2322,2.672]],["title/components/PersonListComponent.html",[209,0.819,329,1.553]],["body/components/PersonListComponent.html",[0,0.159,2,0.036,3,0.036,4,0.036,6,0.126,7,0.461,8,1.31,13,0.472,15,0.505,17,0.478,18,0.007,19,0.358,20,0.334,21,0.373,22,1.557,27,0.031,37,0.004,38,0.004,39,5.287,51,0.967,54,0.371,55,0.458,58,0.74,69,2.197,75,0.718,92,1.96,161,1.234,171,1.473,195,2.495,203,1.421,205,1.212,209,1.285,210,1.165,211,1.237,212,1.532,215,2.838,216,1.143,220,3.269,221,1.851,224,2.683,227,3.319,231,3.974,234,2.371,245,1.237,248,1.667,271,1.872,274,0.984,275,1.851,276,1.851,277,1.646,278,2.109,279,1.237,280,1.237,281,1.165,282,2.921,283,1.237,284,1.237,285,1.165,286,1.212,287,1.079,288,1.237,289,1.165,290,1.237,291,1.165,292,1.744,293,1.851,294,1.165,295,1.615,296,1.237,297,1.143,298,1.237,299,1.165,300,1.851,301,1.165,302,1.851,303,1.1,304,1.165,305,0.967,306,1.237,307,1.165,308,1.237,309,1.165,310,1.188,311,1.237,312,1.143,313,1.237,314,1.165,315,0.984,316,1.237,317,1.165,318,1.1,319,1.851,320,1.143,321,1.237,322,1.237,323,1.165,324,1.237,325,1.143,326,1.237,327,1.143,328,1.237,329,2.276,330,1.237,331,1.143,332,1.237,333,1.165,334,1.237,335,1.237,336,1.165,337,1.165,338,1.212,339,1.165,340,1.04,341,1.237,342,1.165,343,1.237,344,1.165,345,1.237,346,1.143,347,1.237,348,1.143,349,1.936,350,1.143,351,1.237,352,1.143,353,1.188,354,1.188,355,1.237,383,2.001,387,2.802,555,2.564,817,4.95,819,3.87,820,3.722,821,3.87,822,3.87,823,3.229,824,2.158,825,4.828,827,2.995,831,2.158,833,2.158,845,1.97,881,2.158,996,1.934,1353,2.368,1354,2.368,1374,4.798,1375,2.25,1376,2.25,1379,2.25,1380,2.25,1381,2.25,1384,1.582,1386,2.25,1387,2.25,2251,6.863,2262,5.299,2288,2.814,2294,2.356,2296,2.814,2297,2.814,2299,2.814,2307,3.063,2319,2.628,2321,2.628,2323,6.863,2324,3.063,2325,4.584,2326,4.584,2327,6.099,2328,6.852,2329,6.852,2330,6.852,2331,4.584,2332,4.584,2333,3.441,2334,3.441,2335,3.063,2336,5.15,2337,3.441,2338,3.063,2339,3.063,2340,2.814,2341,3.441,2342,3.441,2343,3.441,2344,3.441,2345,3.441,2346,3.441,2347,3.441,2348,3.441,2349,3.441]],["title/injectables/PersonsApiClient.html",[158,0.942,377,3.057]],["body/injectables/PersonsApiClient.html",[0,0.206,2,0.047,3,0.047,4,0.047,6,0.162,8,1.403,10,4.025,15,0.462,17,0.598,18,0.007,19,0.359,20,0.323,21,0.467,24,4.891,27,0.04,28,1.474,37,0.004,38,0.004,54,0.401,55,0.593,65,3.554,69,2.315,75,0.928,87,2.477,93,2.714,134,2.781,158,1.438,161,1.486,167,4.159,168,3.96,171,1.732,172,3.5,173,3.638,176,6.315,179,4.055,180,4.736,181,4.736,182,3.398,183,2.5,184,4.469,185,3.398,186,1.817,187,3.398,189,2.683,192,3.046,193,4.246,194,2.789,195,2.155,377,4.055,597,3.042,602,5.898,603,4.469,604,3.606,897,6.06,1383,3.638,2295,3.96,2350,4.448,2351,6.201,2352,5.52,2353,6.874,2354,6.201,2355,5.52,2356,4.448,2357,4.448,2358,4.448,2359,4.448,2360,4.448,2361,4.448,2362,4.448,2363,4.448,2364,4.448,2365,4.448,2366,4.448,2367,4.448,2368,3.96,2369,3.206,2370,3.96,2371,4.448,2372,4.448,2373,3.638,2374,4.448,2375,4.448,2376,4.448,2377,4.448,2378,4.448,2379,4.448,2380,4.448,2381,4.448,2382,4.448,2383,4.448,2384,4.448,2385,4.448,2386,4.448]],["title/components/PersonsComponent.html",[209,0.819,331,1.553]],["body/components/PersonsComponent.html",[0,0.171,2,0.039,3,0.039,4,0.039,6,0.135,7,0.486,8,1.274,13,0.498,15,0.501,17,0.549,18,0.007,19,0.379,20,0.325,21,0.429,22,1.733,27,0.034,37,0.004,38,0.004,46,0.581,47,0.561,54,0.397,55,0.492,58,0.779,69,1.811,92,1.841,161,1.301,171,1.445,195,2.629,203,1.498,205,1.301,209,1.324,210,1.251,211,1.327,212,1.597,215,2.958,216,1.227,220,3.289,221,1.951,224,2.057,225,2.227,227,3.436,231,4.065,234,2.184,245,1.327,248,1.789,274,1.056,275,1.951,276,1.951,277,1.735,278,2.184,279,1.327,280,1.327,281,1.251,282,2.949,283,1.327,284,1.327,285,1.251,286,1.301,287,1.158,288,1.327,289,1.251,290,1.327,291,1.251,292,1.838,293,1.951,294,1.251,295,1.683,296,1.327,297,1.227,298,1.327,299,1.251,300,1.951,301,1.251,302,1.951,303,1.18,304,1.251,305,1.038,306,1.327,307,1.251,308,1.327,309,1.251,310,1.275,311,1.327,312,1.227,313,1.327,314,1.251,315,1.056,316,1.327,317,1.251,318,1.18,319,1.951,320,1.227,321,1.327,322,1.327,323,1.251,324,1.327,325,1.227,326,1.327,327,1.227,328,1.327,329,1.227,330,1.327,331,2.356,332,1.327,333,1.251,334,1.327,335,1.327,336,1.251,337,1.251,338,1.301,339,1.251,340,1.116,341,1.327,342,1.251,343,1.327,344,1.251,345,1.327,346,1.227,347,1.327,348,1.227,349,1.158,350,1.227,351,1.327,352,1.227,353,1.275,354,1.275,355,1.327,387,2.953,407,2.528,555,2.702,708,2.009,798,3.02,817,5.053,819,4.034,820,3.88,821,4.034,822,4.034,823,3.403,824,2.315,825,4.954,827,3.156,831,2.315,833,2.315,845,2.076,996,2.075,1311,4.438,1353,2.495,1354,2.495,1360,4.831,1361,4.831,1368,4.831,1370,4.831,1374,4.941,1375,2.415,1376,2.415,1379,2.415,1380,2.415,1381,2.415,1382,2.661,1383,3.02,1384,1.698,1386,2.415,1387,2.415,1416,3.287,2262,5.377,2294,2.528,2296,3.02,2297,3.02,2299,3.02,2387,3.693,2388,5.427,2389,5.427,2390,7.092,2391,5.427,2392,3.693,2393,3.693,2394,3.693,2395,5.427,2396,3.693,2397,3.693,2398,3.693,2399,3.693,2400,3.693]],["title/injectables/PersonsEffects.html",[158,0.942,411,3.823]],["body/injectables/PersonsEffects.html",[0,0.194,2,0.044,3,0.044,4,0.044,6,0.217,7,0.534,10,1.797,13,0.546,15,0.428,17,0.326,18,0.007,19,0.195,20,0.299,21,0.254,27,0.038,37,0.004,38,0.004,46,1.09,47,1.051,51,2.386,54,0.434,55,0.56,59,1.899,65,2.093,68,1.287,69,1.659,70,1.203,87,1.679,93,2.608,158,1.395,167,3.546,171,1.624,172,3.463,186,1.717,224,2.213,255,1.452,349,1.869,377,5.553,402,2.636,408,3.959,410,5.553,411,4.873,431,3.742,438,2.636,543,3.767,628,5.553,656,2.878,658,5.815,660,5.815,662,5.815,663,3.211,681,5.815,686,6.307,692,2.749,693,2.636,694,2.749,695,2.878,905,4.873,1796,3.742,2352,6.704,2353,6.704,2355,3.742,2401,4.203,2402,7.531,2403,4.203,2404,5.959,2405,5.959,2406,5.959,2407,8.492,2408,5.959,2409,5.959,2410,4.203,2411,5.959,2412,5.959,2413,5.959,2414,5.304,2415,5.959,2416,4.203,2417,5.959,2418,5.304,2419,5.959,2420,5.959,2421,5.959,2422,4.203,2423,3.742,2424,4.203,2425,3.742,2426,4.203,2427,3.742,2428,4.203,2429,4.203,2430,4.203,2431,4.203,2432,4.203,2433,4.203,2434,4.203]],["title/modules/PersonsModule.html",[356,1.337,2435,3.571]],["body/modules/PersonsModule.html",[0,0.213,2,0.049,3,0.049,4,0.049,18,0.007,27,0.058,37,0.004,38,0.004,54,0.451,55,0.614,69,1.88,218,3.623,245,1.658,274,1.32,287,1.995,292,2.153,327,2.825,329,2.825,331,2.825,356,2.082,358,2.362,359,3.839,360,2.51,377,5.562,378,3.46,379,1.503,380,2.362,383,2.682,386,3.523,388,4.158,389,2.682,390,3.772,391,3.772,392,3.574,393,2.234,394,2.924,397,2.892,403,3.324,441,4.158,444,2.433,445,1.692,521,3.835,727,4.856,730,3.987,731,3.772,880,4.856,881,2.892,928,3.523,1093,6.129,1174,3.772,1195,6.129,1208,3.772,1243,6.129,1424,5.823,1426,4.106,1427,3.772,1432,3.523,1435,4.106,2252,3.772,2262,5.129,2294,3.158,2323,3.772,2369,6.129,2370,4.106,2435,7.489,2436,4.106,2437,4.106,2438,4.106,2439,4.106,2440,6.129,2441,6.129,2442,4.612,2443,4.612,2444,4.612,2445,6.358,2446,4.612,2447,4.612,2448,4.106,2449,4.106,2450,4.106,2451,4.106]],["title/injectables/PersonsResolver.html",[158,0.942,2441,3.369]],["body/injectables/PersonsResolver.html",[0,0.263,2,0.06,3,0.06,4,0.06,6,0.207,7,0.655,8,1.315,10,3.124,13,0.521,15,0.485,17,0.566,18,0.007,19,0.339,20,0.321,21,0.442,27,0.052,37,0.005,38,0.005,54,0.375,55,0.757,58,0.816,69,2.114,75,1.525,93,3.199,98,1.569,158,1.628,161,1.752,171,1.545,224,2.582,234,1.75,240,5.267,245,2.043,259,4.779,260,4.373,349,2.293,597,3.026,702,6.973,1067,6.506,2262,5.753,2294,3.892,2318,5.06,2441,5.267,2452,5.684,2453,7.59,2454,7.59,2455,5.684,2456,7.308,2457,7.308,2458,5.684,2459,7.308,2460,7.308,2461,7.308,2462,5.684,2463,7.308,2464,5.684,2465,5.684]],["title/modules/PersonsRoutingModule.html",[356,1.337,2440,3.369]],["body/modules/PersonsRoutingModule.html",[0,0.276,2,0.063,3,0.063,4,0.063,18,0.007,19,0.278,27,0.069,37,0.005,38,0.005,44,3.748,54,0.444,55,0.796,69,2.082,72,0.827,75,1.247,93,2.616,183,4.648,209,1.449,245,2.149,260,3.655,327,2.506,329,2.506,331,2.506,349,1.875,356,1.71,371,5.167,373,5.438,374,3.909,387,3.252,394,3.47,405,5.321,425,4.888,426,4.888,520,4.307,521,4.551,698,4.565,1432,4.565,1469,5.321,2251,4.888,2252,4.888,2323,4.888,2340,4.888,2440,5.438,2441,5.438,2449,5.321,2450,5.321,2451,5.321,2454,5.321,2466,5.977,2467,5.977,2468,5.977,2469,5.977,2470,5.977,2471,5.977]],["title/injectables/PersonsSandbox.html",[158,0.942,2262,2.82]],["body/injectables/PersonsSandbox.html",[0,0.148,2,0.062,3,0.034,4,0.034,6,0.117,7,0.437,8,1.454,10,1.37,13,0.448,15,0.519,17,0.604,18,0.007,19,0.362,20,0.344,21,0.471,22,1.781,27,0.029,28,1.073,37,0.003,38,0.003,46,1.264,47,1.219,51,1.371,54,0.407,55,0.427,59,1.478,68,0.692,69,2.157,72,0.443,74,1.891,81,1.474,83,1.653,93,2.893,101,1.661,158,1.191,161,1.17,171,1.605,195,1.553,224,2.63,225,4.29,228,4.525,229,4.525,231,3.879,234,2.748,238,3.202,242,3.342,245,1.152,248,1.553,257,2.195,259,3.866,272,2.096,273,2.096,340,1.475,377,5.095,407,2.195,408,3.541,409,2.31,541,2.448,543,2.656,551,3.061,552,2.448,553,2.195,554,2.448,555,1.596,556,2.31,571,5.335,604,3.844,638,3.992,708,1.744,714,1.864,715,1.864,716,2.195,744,5.335,771,2.853,772,2.448,806,1.691,976,1.37,1144,2.43,1146,2.528,1490,4.345,1515,3.517,1518,2.853,1520,2.853,1522,2.853,1524,2.853,1525,2.853,1527,2.853,1533,2.853,1534,2.853,1535,4.345,1536,2.853,1537,2.853,1539,3.517,1540,2.853,1541,2.621,2262,2.944,2265,4.345,2286,6.671,2320,2.853,2368,2.853,2414,2.853,2418,2.853,2423,2.853,2425,2.853,2427,2.853,2448,2.853,2472,3.205,2473,6.609,2474,5.883,2475,6.609,2476,6.609,2477,6.609,2478,4.881,2479,4.881,2480,6.609,2481,4.881,2482,4.881,2483,4.881,2484,4.881,2485,3.205,2486,4.881,2487,3.205,2488,4.881,2489,3.205,2490,3.205,2491,4.881,2492,5.883,2493,3.205,2494,2.853,2495,3.205,2496,3.205,2497,4.881,2498,3.205,2499,3.205,2500,3.205,2501,4.881,2502,3.205,2503,4.881,2504,3.205,2505,4.881,2506,3.205,2507,4.881,2508,3.205,2509,4.881,2510,3.205,2511,4.881,2512,3.205,2513,3.205,2514,3.205,2515,3.205,2516,3.205,2517,3.205,2518,2.853,2519,3.205,2520,3.205,2521,3.205,2522,3.205,2523,3.205,2524,3.205,2525,3.205]],["title/injectables/PersonsService.html",[158,0.942,2369,3.369]],["body/injectables/PersonsService.html",[0,0.217,2,0.049,3,0.049,4,0.049,6,0.171,7,0.576,10,3.742,15,0.486,17,0.641,18,0.007,19,0.384,20,0.329,21,0.501,24,4.813,27,0.043,28,0.851,37,0.004,38,0.004,51,2.219,54,0.367,55,0.624,65,3.201,69,2.359,75,1.341,87,2.568,93,2.815,101,2.219,127,3.74,158,1.591,161,1.541,171,1.75,172,1.793,182,4.911,186,1.915,202,3.631,224,2.346,248,2.271,578,5.947,586,5.691,587,5.259,589,6.458,592,5.691,596,3.834,597,3.202,905,6.458,1544,5.724,2262,2.828,2294,3.21,2369,4.634,2453,7.03,2518,4.173,2526,4.688,2527,6.43,2528,6.43,2529,6.43,2530,6.43,2531,6.43,2532,4.688,2533,6.43,2534,4.688,2535,6.43,2536,4.688,2537,6.43,2538,4.688,2539,6.43,2540,4.688,2541,4.688,2542,4.688,2543,4.688,2544,4.688]],["title/modules/PipesModule.html",[356,1.337,882,3.369]],["body/modules/PipesModule.html",[0,0.307,2,0.07,3,0.07,4,0.07,18,0.007,27,0.084,37,0.006,38,0.006,54,0.403,55,0.884,72,0.918,218,3.304,274,1.899,356,2.303,358,3.399,359,4.572,360,3.611,378,4.38,379,2.162,380,3.399,394,3.702,882,6.844,883,6.245,2545,5.907,2546,5.907,2547,5.907,2548,7.448,2549,6.636,2550,6.636]],["title/components/ProfileBarComponent.html",[209,0.819,333,1.583]],["body/components/ProfileBarComponent.html",[0,0.211,2,0.048,3,0.048,4,0.048,6,0.167,13,0.664,15,0.444,18,0.007,19,0.336,20,0.288,22,1.658,27,0.042,37,0.004,38,0.004,50,3.999,51,1.283,54,0.212,55,0.608,69,1.513,92,2.071,138,3.818,203,1.742,205,1.608,209,1.436,210,1.546,211,1.641,212,1.796,216,1.516,220,3.339,221,2.27,238,2.211,274,1.306,275,2.27,276,2.27,277,2.018,278,2.404,279,1.641,280,1.641,281,1.546,282,3.003,283,1.641,284,1.641,285,1.546,286,1.608,287,1.432,288,1.641,289,1.546,290,1.641,291,1.546,292,2.138,293,2.27,294,1.546,295,1.893,296,1.641,297,1.516,298,1.641,299,1.546,300,2.27,301,1.546,302,2.27,303,1.459,304,1.546,305,1.283,306,1.641,307,1.546,308,1.641,309,1.546,310,1.577,311,1.641,312,1.516,313,1.641,314,1.546,315,1.306,316,1.641,317,1.546,318,1.459,319,2.27,320,1.516,321,1.641,322,1.641,323,1.546,324,1.641,325,1.516,326,1.641,327,1.516,328,1.641,329,1.516,330,1.641,331,1.516,332,1.641,333,2.644,334,3.124,335,1.641,336,1.546,337,1.546,338,1.608,339,1.546,340,1.38,341,1.641,342,1.546,343,1.641,344,1.546,345,1.641,346,1.516,347,1.641,348,1.516,349,1.432,350,1.516,351,1.641,352,1.516,353,1.577,354,1.577,355,1.641,445,2.316,794,3.588,845,2.415,1180,4.249,1353,2.903,1354,2.903,1384,2.099,1614,6.703,1615,5.919,1949,7.297,2551,8.197,2552,4.565,2553,6.313,2554,6.313,2555,6.313,2556,6.313,2557,4.565,2558,4.565,2559,6.313]],["title/classes/RemoveUserAction.html",[0,0.216,156,2.719]],["body/classes/RemoveUserAction.html",[0,0.42,2,0.051,3,0.051,4,0.051,6,0.176,7,0.588,8,0.977,13,0.442,15,0.424,17,0.374,18,0.007,19,0.224,20,0.378,21,0.292,27,0.084,28,1.451,37,0.004,38,0.004,46,0.76,47,0.732,54,0.346,58,1.307,59,2.118,60,2.583,61,1.406,68,1.042,70,1.381,71,1.285,72,0.668,73,1.381,78,1.843,80,1.843,81,2.219,83,2.523,98,2.477,125,3.814,126,2.91,130,3.026,131,3.359,132,3.026,133,5.628,134,3.585,135,3.026,136,3.026,137,3.026,138,4.217,139,3.026,140,3.026,141,3.026,142,3.026,143,2.91,144,3.814,145,3.026,146,3.814,147,3.026,148,3.814,149,3.026,150,3.814,151,3.026,152,3.814,153,3.026,154,3.814,155,3.026,156,4.333,157,4.112,2560,6.558,2561,4.825]],["title/injectables/ReportService.html",[158,0.942,1248,3.571]],["body/injectables/ReportService.html",[0,0.277,2,0.063,3,0.063,4,0.063,6,0.219,7,0.678,13,0.55,15,0.495,17,0.586,18,0.007,19,0.351,20,0.329,21,0.458,22,1.606,27,0.055,37,0.005,38,0.005,46,0.945,47,0.911,54,0.385,55,0.799,158,1.669,161,1.813,171,1.664,172,3.169,186,2.45,189,3.619,224,2.648,292,3.037,401,5.451,604,3.49,709,3.619,892,4.907,921,3.569,1173,5.623,1248,5.777,1778,7.743,2562,6,2563,8.698,2564,7.564,2565,8.698,2566,7.564,2567,7.564,2568,8.698,2569,6,2570,6,2571,7.564,2572,6,2573,6,2574,6]],["title/components/ReportViewerComponent.html",[209,0.819,336,1.583]],["body/components/ReportViewerComponent.html",[0,0.193,2,0.044,3,0.044,4,0.044,6,0.153,13,0.633,15,0.483,17,0.324,18,0.007,19,0.349,20,0.316,21,0.253,22,1.261,27,0.038,37,0.004,38,0.004,46,1.087,47,0.636,50,3.851,51,1.176,54,0.194,55,0.558,69,1.424,92,1.976,161,1.424,166,5.649,171,1.137,203,1.906,205,1.475,209,1.391,210,1.418,211,1.505,212,1.714,215,1.925,216,1.391,220,3.32,221,2.136,234,1.289,238,2.028,274,1.198,275,2.136,276,2.136,277,1.899,278,2.315,279,1.505,280,1.505,281,1.418,282,2.994,283,1.505,284,1.505,285,1.418,286,1.475,287,1.313,288,1.505,289,1.418,290,1.505,291,1.418,292,3.22,293,2.136,294,1.418,295,1.807,296,1.505,297,1.391,298,1.505,299,1.418,300,2.136,301,1.418,302,2.136,303,1.338,304,1.418,305,1.176,306,1.505,307,1.418,308,1.505,309,1.418,310,1.446,311,1.505,312,1.391,313,1.505,314,1.418,315,1.198,316,1.505,317,1.418,318,1.338,319,2.136,320,1.391,321,1.505,322,1.505,323,1.418,324,1.505,325,1.391,326,1.505,327,1.391,328,1.505,329,1.391,330,1.505,331,1.391,332,1.505,333,1.418,334,1.505,335,1.505,336,2.546,337,1.418,338,1.475,339,1.418,340,1.265,341,1.505,342,1.418,343,1.505,344,1.418,345,1.505,346,1.391,347,1.505,348,1.391,349,1.313,350,1.391,351,1.505,352,1.391,353,1.446,354,1.446,355,1.505,607,3.198,794,3.713,845,2.273,973,6.493,1173,5.435,1178,5.289,1179,6.149,1180,4.091,1181,6.149,1184,6.692,1192,2.144,1193,3.727,1209,3.727,1210,5.289,1212,5.289,1221,3.727,1252,8.354,2575,5.942,2576,6.907,2577,5.942,2578,4.187,2579,4.187,2580,4.187,2581,5.942,2582,4.187,2583,4.187]],["title/classes/ResetState.html",[0,0.216,1146,1.788]],["body/classes/ResetState.html",[0,0.422,2,0.044,3,0.044,4,0.044,6,0.153,7,0.533,8,0.886,13,0.384,15,0.393,17,0.325,18,0.007,19,0.195,20,0.378,21,0.254,27,0.085,28,1.255,37,0.004,38,0.004,46,0.936,47,0.903,54,0.321,58,1.312,59,2.118,60,2.59,61,1.221,68,0.905,70,1.199,71,1.116,72,0.823,73,1.199,74,2.36,75,0.875,77,1.751,78,1.178,79,1.392,80,1.178,96,2.376,97,1.751,98,2.497,99,2.376,100,1.751,101,1.178,102,1.901,103,1.392,177,2.147,212,1.867,255,1.448,262,2.138,295,1.808,315,2.152,379,1.366,595,1.751,597,1.57,1126,1.751,1127,1.751,1146,2.644,1147,2.484,1295,3.956,1333,2.212,1334,3.138,1335,3.138,1336,2.212,1337,2.212,1338,2.212,1365,3.046,1567,3.138,1568,2.281,1571,2.356,1572,3.885,1573,2.356,1574,2.356,1575,2.356,1576,4.637,1577,2.356,1578,2.356,1579,2.356,1580,2.356,1581,2.356,1582,2.356,1583,2.356,1584,2.281,1585,2.356,1586,2.281,1587,2.356,1588,2.281,1589,2.356,1590,2.281,1591,2.356,1592,2.281,1593,2.356,1594,2.281,1595,2.356,1596,2.281,1597,2.281,1598,2.281,1599,2.281,1600,2.281,1601,2.281,1602,2.281,2584,5.948,2585,4.192]],["title/classes/Sandbox.html",[0,0.216,551,2.931]],["body/classes/Sandbox.html",[0,0.304,2,0.051,3,0.051,4,0.051,6,0.177,7,0.589,8,1.448,13,0.444,15,0.511,17,0.51,18,0.007,19,0.306,20,0.351,21,0.398,22,1.907,27,0.044,37,0.005,38,0.005,46,1.261,47,1.311,54,0.41,55,0.646,68,1.047,70,1.387,71,1.291,72,0.671,83,2.712,158,0.977,161,1.577,171,1.428,172,3.606,186,1.98,234,2.025,252,4.741,253,5.025,340,1.988,408,4.473,483,5.38,541,3.703,543,3.58,551,4.125,571,3.319,597,1.816,680,4.315,713,4.315,762,3.965,836,4.315,1531,6.549,1539,6.636,1541,3.965,2001,4.315,2586,4.848,2587,8.008,2588,8.008,2589,6.579,2590,8.008,2591,6.579,2592,6.579,2593,4.848,2594,4.848,2595,6.579,2596,4.848,2597,6.579,2598,4.848,2599,6.579,2600,6.579,2601,4.848,2602,6.579,2603,6.579,2604,4.848,2605,6.579,2606,5.38,2607,4.848,2608,4.848,2609,4.848,2610,4.848]],["title/pipes/SanitizeHtmlPipe.html",[883,3.369,2548,3.571]],["body/pipes/SanitizeHtmlPipe.html",[0,0.312,2,0.071,3,0.071,4,0.071,15,0.384,17,0.523,18,0.007,19,0.406,20,0.268,21,0.408,22,1.853,27,0.061,37,0.006,38,0.006,54,0.378,55,0.899,58,0.97,161,1.618,171,1.556,216,2.242,388,4.414,389,3.926,586,4.865,709,4.071,883,6.292,2548,6.213,2611,6.75,2612,8.134,2613,8.134,2614,6.75,2615,6.75,2616,8.731,2617,8.134,2618,8.134,2619,6.75,2620,6.75]],["title/components/SearchBoxComponent.html",[209,0.819,337,1.583]],["body/components/SearchBoxComponent.html",[0,0.228,2,0.052,3,0.052,4,0.052,6,0.18,15,0.281,18,0.006,19,0.35,20,0.196,27,0.045,37,0.005,38,0.005,50,2.526,54,0.229,55,0.657,69,1.595,92,2.155,101,1.87,203,1.837,205,1.738,209,1.476,210,1.67,211,1.773,212,1.87,216,1.638,220,3.356,221,2.393,274,1.411,275,2.393,276,2.393,277,2.128,278,2.483,279,1.773,280,1.773,281,1.67,282,3.029,283,1.773,284,1.773,285,1.67,286,1.738,287,1.547,288,1.773,289,1.67,290,1.773,291,1.67,292,2.254,293,2.393,294,1.67,295,1.971,296,1.773,297,1.638,298,1.773,299,1.67,300,2.393,301,1.67,302,2.899,303,1.577,304,1.67,305,1.386,306,1.773,307,1.67,308,1.773,309,1.67,310,1.703,311,1.773,312,1.638,313,1.773,314,1.67,315,1.411,316,1.773,317,1.67,318,1.577,319,2.393,320,1.638,321,1.773,322,1.773,323,1.67,324,1.773,325,1.638,326,1.773,327,1.638,328,1.773,329,1.638,330,1.773,331,1.638,332,1.773,333,1.67,334,1.773,335,1.773,336,1.67,337,2.731,338,3.125,339,1.67,340,1.491,341,1.773,342,1.67,343,1.773,344,1.67,345,1.773,346,1.638,347,1.773,348,1.638,349,1.547,350,1.638,351,1.773,352,1.638,353,1.703,354,1.703,355,1.773,794,3.53,845,2.546,1180,2.683,1353,3.06,1354,3.06,1384,2.268,1612,6.161,1638,5.083,1946,5.925,2211,4.39,2212,5.925,2213,5.925,2621,6.656,2622,4.932]],["title/injectables/SearchBoxDatasEffects.html",[158,0.942,419,3.823]],["body/injectables/SearchBoxDatasEffects.html",[0,0.253,2,0.058,3,0.058,4,0.058,6,0.289,7,0.639,13,0.654,15,0.406,17,0.424,18,0.007,19,0.254,20,0.284,21,0.331,27,0.05,37,0.005,38,0.005,46,0.862,47,0.831,51,2.004,54,0.447,55,0.729,59,2.035,68,1.541,70,1.566,158,1.599,167,2.804,171,1.364,172,3.216,186,2.236,224,2.28,303,2.28,349,2.238,408,4.34,410,5.189,419,5.834,438,3.433,543,4.317,628,4.665,656,3.749,658,4.884,660,4.884,662,4.884,681,4.884,686,5.448,692,3.581,693,3.433,694,3.581,695,3.749,1839,4.182,2007,4.874,2178,4.478,2373,4.478,2623,7.934,2624,5.475,2625,8.406,2626,5.475,2627,7.133,2628,7.133,2629,7.133,2630,7.133,2631,7.133,2632,7.133,2633,5.475,2634,5.475,2635,5.475,2636,5.475]],["title/classes/SearchBoxModel.html",[0,0.216,1839,3.571]],["body/classes/SearchBoxModel.html",[0,0.35,2,0.063,3,0.063,4,0.063,6,0.22,7,0.744,10,3.838,13,0.552,15,0.521,17,0.467,18,0.007,19,0.426,20,0.364,21,0.543,27,0.069,37,0.005,38,0.005,58,1.089,75,1.731,278,1.854,850,2.08,976,2.575,1192,4.461,1340,3.884,1348,3.085,1349,3.085,1350,3.085,1826,6.147,1834,7.495,1835,8.281,1836,5.362,1837,7.991,1838,7.991,1839,5.791,2637,7.583,2638,6.023,2639,6.023,2640,6.023,2641,6.023]],["title/classes/SelectAction.html",[0,0.216,2642,3.571]],["body/classes/SelectAction.html",[0,0.412,2,0.057,3,0.057,4,0.057,6,0.198,7,0.635,8,1.056,13,0.497,15,0.449,17,0.42,18,0.007,19,0.252,20,0.379,21,0.328,27,0.083,28,1.286,37,0.005,38,0.005,46,0.853,47,0.823,54,0.367,58,1.28,59,2.101,60,2.57,61,1.579,68,1.17,70,1.55,71,1.443,72,0.75,73,1.55,74,2.395,77,2.263,78,1.522,79,1.8,80,1.522,96,2.83,97,2.263,98,2.398,99,2.83,100,2.263,101,1.522,102,2.265,103,1.8,127,3.151,303,2.265,340,2.141,1828,3.71,2642,6.029,2643,4.431,2644,7.085,2645,5.418,2646,6.307,2647,7.734,2648,6.307,2649,4.823,2650,5.411,2651,4.823]],["title/components/SelectedActionsComponent.html",[209,0.819,339,1.583]],["body/components/SelectedActionsComponent.html",[0,0.167,2,0.038,3,0.038,4,0.038,6,0.132,7,0.478,13,0.582,15,0.505,17,0.413,18,0.007,19,0.348,20,0.344,21,0.323,22,1.663,27,0.033,37,0.004,38,0.004,45,2.651,46,1.233,47,1.189,50,4.152,51,1.499,54,0.248,55,0.481,58,0.766,59,1.193,69,1.279,92,1.816,101,1.499,161,1.279,171,1.214,203,1.472,205,1.271,209,1.311,210,1.222,211,1.297,212,1.575,215,2.918,216,1.198,220,3.282,221,1.918,227,3.397,234,2.304,238,2.584,271,2.902,274,1.032,275,1.918,276,1.918,277,1.705,278,2.159,279,1.297,280,1.297,281,1.222,282,2.94,283,1.297,284,1.297,285,1.222,286,1.271,287,1.132,288,1.297,289,1.222,290,1.297,291,1.222,292,1.807,293,1.918,294,1.222,295,1.661,296,1.297,297,1.198,298,1.297,299,1.222,300,1.918,301,1.222,302,1.918,303,1.153,304,1.222,305,1.014,306,1.297,307,1.222,308,1.297,309,1.222,310,1.246,311,1.297,312,1.198,313,1.297,314,1.222,315,1.032,316,1.297,317,1.222,318,1.153,319,1.918,320,1.198,321,1.297,322,1.297,323,1.222,324,1.297,325,1.198,326,1.297,327,1.198,328,1.297,329,1.198,330,1.297,331,1.198,332,1.297,333,1.222,334,1.297,335,1.297,336,1.222,337,1.222,338,1.271,339,2.375,340,2.45,341,1.297,342,1.222,343,1.297,344,1.222,345,1.297,346,1.198,347,1.297,348,1.198,349,1.132,350,1.198,351,1.297,352,1.198,353,1.246,354,1.246,355,1.297,383,2.098,578,3.345,794,3.07,806,2.814,845,2.041,881,2.262,996,2.028,1036,3.345,1180,4.072,1305,7.332,1353,2.453,1354,2.453,1384,1.659,1531,5.191,1954,7.981,1955,7.981,2652,3.608,2653,5.334,2654,5.334,2655,7.013,2656,7.013,2657,7.013,2658,7.013,2659,7.013,2660,5.334,2661,5.334,2662,6.347,2663,6.347,2664,5.334,2665,3.608,2666,3.608,2667,3.608,2668,5.334,2669,3.608,2670,5.334,2671,3.608,2672,3.608,2673,3.608,2674,5.334,2675,3.608,2676,4.749,2677,3.608,2678,4.749,2679,3.608,2680,3.608,2681,3.608,2682,3.608,2683,3.608,2684,3.608,2685,5.334,2686,5.334,2687,5.334]],["title/classes/SelectedActionsModel.html",[0,0.216,1515,3.369]],["body/classes/SelectedActionsModel.html",[0,0.383,2,0.073,3,0.073,4,0.073,6,0.254,7,0.742,10,3.914,15,0.521,18,0.007,19,0.425,20,0.364,27,0.063,37,0.006,38,0.006,75,1.91,707,5.522,1515,5.97,2688,6.961,2689,6.961,2690,6.961,2691,6.961,2692,6.961]],["title/classes/SetActiveAction.html",[0,0.216,1584,2.544]],["body/classes/SetActiveAction.html",[0,0.422,2,0.044,3,0.044,4,0.044,6,0.152,7,0.531,8,0.884,13,0.383,15,0.392,17,0.323,18,0.007,19,0.194,20,0.378,21,0.417,27,0.085,28,1.076,37,0.004,38,0.004,46,0.657,47,0.634,54,0.32,58,1.311,59,2.117,60,2.589,61,1.216,68,0.902,70,1.195,71,1.112,72,0.821,73,1.195,74,2.357,75,0.871,77,1.744,78,1.173,79,1.387,80,1.173,96,2.369,97,1.744,98,2.495,99,2.369,100,1.744,101,1.173,102,1.896,103,1.387,177,2.139,212,1.864,255,1.442,262,2.132,295,1.805,315,2.148,379,1.36,595,1.744,597,1.564,976,1.785,1126,1.744,1127,1.744,1146,2.269,1147,1.744,1295,4.128,1333,2.203,1334,3.129,1335,3.129,1336,2.203,1337,2.203,1338,2.203,1365,3.038,1567,3.129,1568,2.272,1571,2.347,1572,3.876,1573,2.347,1574,2.347,1575,2.347,1576,4.631,1577,2.347,1578,2.347,1579,2.347,1580,2.347,1581,2.347,1582,2.347,1583,2.347,1584,3.227,1585,3.333,1586,2.272,1587,2.347,1588,2.272,1589,2.347,1590,2.272,1591,2.347,1592,2.272,1593,2.347,1594,2.272,1595,2.347,1596,2.272,1597,2.272,1598,2.272,1599,2.272,1600,2.272,1601,2.272,1602,2.272,2693,5.931,2694,4.175]],["title/classes/SetArchivedAction.html",[0,0.216,1588,2.544]],["body/classes/SetArchivedAction.html",[0,0.422,2,0.044,3,0.044,4,0.044,6,0.152,7,0.531,8,0.884,13,0.383,15,0.392,17,0.323,18,0.007,19,0.194,20,0.378,21,0.417,27,0.085,28,1.076,37,0.004,38,0.004,46,0.657,47,0.634,54,0.32,58,1.311,59,2.117,60,2.589,61,1.216,68,0.902,70,1.195,71,1.112,72,0.821,73,1.195,74,2.357,75,0.871,77,1.744,78,1.173,79,1.387,80,1.173,96,2.369,97,1.744,98,2.495,99,2.369,100,1.744,101,1.173,102,1.896,103,1.387,177,2.139,212,1.864,255,1.442,262,2.132,295,1.805,315,2.148,379,1.36,595,1.744,597,1.564,976,1.785,1126,1.744,1127,1.744,1146,2.269,1147,1.744,1295,4.128,1333,2.203,1334,3.129,1335,3.129,1336,2.203,1337,2.203,1338,2.203,1365,3.038,1567,3.129,1568,2.272,1571,2.347,1572,3.876,1573,2.347,1574,2.347,1575,2.347,1576,4.631,1577,2.347,1578,2.347,1579,2.347,1580,2.347,1581,2.347,1582,2.347,1583,2.347,1584,2.272,1585,2.347,1586,2.272,1587,2.347,1588,3.227,1589,3.333,1590,2.272,1591,2.347,1592,2.272,1593,2.347,1594,2.272,1595,2.347,1596,2.272,1597,2.272,1598,2.272,1599,2.272,1600,2.272,1601,2.272,1602,2.272,2695,5.931,2696,4.175]],["title/classes/SetAvaiableMenu.html",[0,0.216,2650,3.571]],["body/classes/SetAvaiableMenu.html",[0,0.412,2,0.057,3,0.057,4,0.057,6,0.199,7,0.637,8,1.06,13,0.499,15,0.45,17,0.422,18,0.007,19,0.253,20,0.379,21,0.329,27,0.083,28,1.29,37,0.005,38,0.005,46,0.857,47,0.827,54,0.368,58,1.282,59,2.084,60,2.573,61,1.587,68,1.176,70,1.558,71,1.451,72,0.754,73,1.558,74,2.4,77,2.275,78,1.53,79,1.809,80,1.53,96,2.839,97,2.275,98,2.402,99,2.839,100,2.275,101,1.53,102,2.273,103,1.809,303,1.741,340,2.149,1828,3.729,2642,5.43,2643,4.454,2646,4.849,2647,7.747,2648,6.328,2649,4.849,2650,6.045,2651,6.328,2697,7.109,2698,5.447]],["title/classes/SetAvailableLanguagesAction.html",[0,0.216,1142,2.466]],["body/classes/SetAvailableLanguagesAction.html",[0,0.428,2,0.044,3,0.044,4,0.044,6,0.152,7,0.53,8,0.882,13,0.382,15,0.392,17,0.323,18,0.007,19,0.193,20,0.379,21,0.252,22,1.257,27,0.085,28,1.537,37,0.004,38,0.004,46,0.656,47,0.632,54,0.275,58,1.331,59,2.132,60,2.601,61,1.213,68,0.899,71,1.109,72,0.576,73,1.191,74,1.191,75,1.235,78,1.17,79,1.383,80,1.17,87,1.663,98,2.539,102,1.892,103,1.383,162,3.032,201,3.429,202,2.722,203,1.634,204,4.18,255,1.438,262,2.476,305,1.17,379,1.357,445,1.528,921,1.965,1103,3.123,1104,2.266,1107,2.341,1108,2.341,1109,3.327,1110,2.341,1111,2.341,1112,2.341,1113,2.341,1114,2.341,1115,2.341,1116,2.341,1117,2.341,1118,2.341,1119,2.341,1120,2.341,1121,2.341,1122,2.341,1123,2.341,1124,2.341,1125,2.341,1126,1.74,1127,1.74,1128,2.341,1129,3.871,1130,2.341,1131,2.341,1132,3.123,1133,2.341,1134,3.123,1135,2.341,1136,3.123,1137,2.341,1138,3.123,1139,2.341,1140,3.123,1141,2.341,1142,3.633,1143,3.327,1144,2.947,1145,2.341,1146,2.264,1147,1.74,1148,3.327,1149,3.327,1150,3.123,1151,2.341,1152,3.123,2699,5.919,2700,4.164]],["title/classes/SetAvailableRolesAction.html",[0,0.216,1138,2.466]],["body/classes/SetAvailableRolesAction.html",[0,0.428,2,0.044,3,0.044,4,0.044,6,0.152,7,0.53,8,0.882,13,0.382,15,0.392,17,0.323,18,0.007,19,0.193,20,0.379,21,0.252,22,1.257,27,0.085,28,1.537,37,0.004,38,0.004,46,0.656,47,0.632,54,0.275,58,1.331,59,2.132,60,2.601,61,1.213,68,0.899,71,1.109,72,0.576,73,1.191,74,1.191,75,1.235,78,1.17,79,1.383,80,1.17,87,1.663,98,2.539,102,1.892,103,1.383,162,3.032,201,3.429,202,2.722,203,1.634,204,4.18,255,1.438,262,2.476,305,1.17,379,1.357,445,1.528,921,1.965,1103,3.123,1104,2.266,1107,2.341,1108,2.341,1109,3.327,1110,2.341,1111,2.341,1112,2.341,1113,2.341,1114,2.341,1115,2.341,1116,2.341,1117,2.341,1118,2.341,1119,2.341,1120,2.341,1121,2.341,1122,2.341,1123,2.341,1124,2.341,1125,2.341,1126,1.74,1127,1.74,1128,2.341,1129,3.871,1130,2.341,1131,2.341,1132,3.123,1133,2.341,1134,3.123,1135,2.341,1136,3.123,1137,2.341,1138,3.633,1139,3.327,1140,3.123,1141,2.341,1142,3.123,1143,2.341,1144,2.947,1145,2.341,1146,2.264,1147,1.74,1148,3.327,1149,3.327,1150,3.123,1151,2.341,1152,3.123,2701,5.919,2702,4.164]],["title/classes/SetClosedAction.html",[0,0.216,1586,2.544]],["body/classes/SetClosedAction.html",[0,0.422,2,0.044,3,0.044,4,0.044,6,0.152,7,0.531,8,0.884,13,0.383,15,0.392,17,0.323,18,0.007,19,0.194,20,0.378,21,0.417,27,0.085,28,1.076,37,0.004,38,0.004,46,0.657,47,0.634,54,0.32,58,1.311,59,2.117,60,2.589,61,1.216,68,0.902,70,1.195,71,1.112,72,0.821,73,1.195,74,2.357,75,0.871,77,1.744,78,1.173,79,1.387,80,1.173,96,2.369,97,1.744,98,2.495,99,2.369,100,1.744,101,1.173,102,1.896,103,1.387,177,2.139,212,1.864,255,1.442,262,2.132,295,1.805,315,2.148,379,1.36,595,1.744,597,1.564,976,1.785,1126,1.744,1127,1.744,1146,2.269,1147,1.744,1295,4.128,1333,2.203,1334,3.129,1335,3.129,1336,2.203,1337,2.203,1338,2.203,1365,3.038,1567,3.129,1568,2.272,1571,2.347,1572,3.876,1573,2.347,1574,2.347,1575,2.347,1576,4.631,1577,2.347,1578,2.347,1579,2.347,1580,2.347,1581,2.347,1582,2.347,1583,2.347,1584,2.272,1585,2.347,1586,3.227,1587,3.333,1588,2.272,1589,2.347,1590,2.272,1591,2.347,1592,2.272,1593,2.347,1594,2.272,1595,2.347,1596,2.272,1597,2.272,1598,2.272,1599,2.272,1600,2.272,1601,2.272,1602,2.272,2703,5.931,2704,4.175]],["title/classes/SetCultureAction.html",[0,0.216,1134,2.466]],["body/classes/SetCultureAction.html",[0,0.428,2,0.044,3,0.044,4,0.044,6,0.151,7,0.528,8,0.879,13,0.38,15,0.391,17,0.321,18,0.007,19,0.192,20,0.379,21,0.251,22,1.744,27,0.085,28,1.535,37,0.004,38,0.004,46,0.652,47,0.629,54,0.274,58,1.33,59,2.131,60,2.599,61,1.207,68,0.895,71,1.103,72,0.573,73,1.185,74,1.185,75,1.23,78,1.164,79,1.376,80,1.164,87,1.654,98,2.537,102,1.885,103,1.376,162,3.02,201,3.419,202,2.712,203,1.627,204,4.171,255,1.431,262,2.468,305,1.164,379,1.35,445,1.52,921,1.954,1103,3.111,1104,2.254,1107,2.328,1108,2.328,1109,3.314,1110,2.328,1111,2.328,1112,2.328,1113,2.328,1114,2.328,1115,2.328,1116,2.328,1117,2.328,1118,2.328,1119,2.328,1120,2.328,1121,2.328,1122,2.328,1123,2.328,1124,2.328,1125,2.328,1126,1.73,1127,1.73,1128,2.328,1129,3.859,1130,2.328,1131,2.328,1132,3.111,1133,2.328,1134,3.623,1135,3.314,1136,3.111,1137,2.328,1138,3.111,1139,2.328,1140,3.111,1141,2.328,1142,3.111,1143,2.328,1144,2.936,1145,2.328,1146,2.256,1147,1.73,1148,3.314,1149,3.314,1150,3.111,1151,2.328,1152,3.111,2705,5.897,2706,4.142]],["title/classes/SetIncludeGroupAction.html",[0,0.216,1590,2.544]],["body/classes/SetIncludeGroupAction.html",[0,0.422,2,0.044,3,0.044,4,0.044,6,0.152,7,0.531,8,0.884,13,0.383,15,0.392,17,0.323,18,0.007,19,0.194,20,0.378,21,0.417,27,0.085,28,1.076,37,0.004,38,0.004,46,0.657,47,0.634,54,0.32,58,1.311,59,2.117,60,2.589,61,1.216,68,0.902,70,1.195,71,1.112,72,0.821,73,1.195,74,2.357,75,0.871,77,1.744,78,1.173,79,1.387,80,1.173,96,2.369,97,1.744,98,2.495,99,2.369,100,1.744,101,1.173,102,1.896,103,1.387,177,2.139,212,1.864,255,1.442,262,2.132,295,1.805,315,2.148,379,1.36,595,1.744,597,1.564,976,1.785,1126,1.744,1127,1.744,1146,2.269,1147,1.744,1295,4.128,1333,2.203,1334,3.129,1335,3.129,1336,2.203,1337,2.203,1338,2.203,1365,3.038,1567,3.129,1568,2.272,1571,2.347,1572,3.876,1573,2.347,1574,2.347,1575,2.347,1576,4.631,1577,2.347,1578,2.347,1579,2.347,1580,2.347,1581,2.347,1582,2.347,1583,2.347,1584,2.272,1585,2.347,1586,2.272,1587,2.347,1588,2.272,1589,2.347,1590,3.227,1591,3.333,1592,2.272,1593,2.347,1594,2.272,1595,2.347,1596,2.272,1597,2.272,1598,2.272,1599,2.272,1600,2.272,1601,2.272,1602,2.272,2707,5.931,2708,4.175]],["title/classes/SetIncludeGuestAction.html",[0,0.216,1592,2.544]],["body/classes/SetIncludeGuestAction.html",[0,0.422,2,0.044,3,0.044,4,0.044,6,0.152,7,0.531,8,0.884,13,0.383,15,0.392,17,0.323,18,0.007,19,0.194,20,0.378,21,0.417,27,0.085,28,1.076,37,0.004,38,0.004,46,0.657,47,0.634,54,0.32,58,1.311,59,2.117,60,2.589,61,1.216,68,0.902,70,1.195,71,1.112,72,0.821,73,1.195,74,2.357,75,0.871,77,1.744,78,1.173,79,1.387,80,1.173,96,2.369,97,1.744,98,2.495,99,2.369,100,1.744,101,1.173,102,1.896,103,1.387,177,2.139,212,1.864,255,1.442,262,2.132,295,1.805,315,2.148,379,1.36,595,1.744,597,1.564,976,1.785,1126,1.744,1127,1.744,1146,2.269,1147,1.744,1295,4.128,1333,2.203,1334,3.129,1335,3.129,1336,2.203,1337,2.203,1338,2.203,1365,3.038,1567,3.129,1568,2.272,1571,2.347,1572,3.876,1573,2.347,1574,2.347,1575,2.347,1576,4.631,1577,2.347,1578,2.347,1579,2.347,1580,2.347,1581,2.347,1582,2.347,1583,2.347,1584,2.272,1585,2.347,1586,2.272,1587,2.347,1588,2.272,1589,2.347,1590,2.272,1591,2.347,1592,3.227,1593,3.333,1594,2.272,1595,2.347,1596,2.272,1597,2.272,1598,2.272,1599,2.272,1600,2.272,1601,2.272,1602,2.272,2709,5.931,2710,4.175]],["title/classes/SetIncludeTasksAction.html",[0,0.216,1594,2.544]],["body/classes/SetIncludeTasksAction.html",[0,0.422,2,0.044,3,0.044,4,0.044,6,0.152,7,0.531,8,0.884,13,0.383,15,0.392,17,0.323,18,0.007,19,0.194,20,0.378,21,0.417,27,0.085,28,1.076,37,0.004,38,0.004,46,0.657,47,0.634,54,0.32,58,1.311,59,2.117,60,2.589,61,1.216,68,0.902,70,1.195,71,1.112,72,0.821,73,1.195,74,2.357,75,0.871,77,1.744,78,1.173,79,1.387,80,1.173,96,2.369,97,1.744,98,2.495,99,2.369,100,1.744,101,1.173,102,1.896,103,1.387,177,2.139,212,1.864,255,1.442,262,2.132,295,1.805,315,2.148,379,1.36,595,1.744,597,1.564,976,1.785,1126,1.744,1127,1.744,1146,2.269,1147,1.744,1295,4.128,1333,2.203,1334,3.129,1335,3.129,1336,2.203,1337,2.203,1338,2.203,1365,3.038,1567,3.129,1568,2.272,1571,2.347,1572,3.876,1573,2.347,1574,2.347,1575,2.347,1576,4.631,1577,2.347,1578,2.347,1579,2.347,1580,2.347,1581,2.347,1582,2.347,1583,2.347,1584,2.272,1585,2.347,1586,2.272,1587,2.347,1588,2.272,1589,2.347,1590,2.272,1591,2.347,1592,2.272,1593,2.347,1594,3.227,1595,3.333,1596,2.272,1597,2.272,1598,2.272,1599,2.272,1600,2.272,1601,2.272,1602,2.272,2711,5.931,2712,4.175]],["title/classes/SetLanguageAction.html",[0,0.216,1132,2.466]],["body/classes/SetLanguageAction.html",[0,0.428,2,0.043,3,0.043,4,0.043,6,0.151,7,0.527,8,0.876,13,0.378,15,0.39,17,0.32,18,0.007,19,0.192,20,0.379,21,0.25,22,1.742,27,0.085,28,1.533,37,0.004,38,0.004,46,0.649,47,0.626,54,0.273,58,1.329,59,2.137,60,2.598,61,1.202,68,0.891,71,1.099,72,0.571,73,1.18,74,1.18,75,1.227,78,1.159,79,1.37,80,1.159,87,1.648,98,2.535,102,1.88,103,1.37,127,2.4,162,3.012,201,3.411,202,2.704,203,1.623,204,4.165,255,1.425,262,2.685,305,1.159,379,1.344,445,1.514,921,1.946,1103,3.102,1104,2.245,1107,2.319,1108,2.319,1109,3.305,1110,2.319,1111,2.319,1112,2.319,1113,2.319,1114,2.319,1115,2.319,1116,2.319,1117,2.319,1118,2.319,1119,2.319,1120,2.319,1121,2.319,1122,2.319,1123,2.319,1124,2.319,1125,2.319,1126,1.723,1127,1.723,1128,2.319,1129,3.851,1130,2.319,1131,2.319,1132,3.615,1133,3.305,1134,3.102,1135,2.319,1136,3.102,1137,2.319,1138,3.102,1139,2.319,1140,3.102,1141,2.319,1142,3.102,1143,2.319,1144,2.928,1145,2.319,1146,2.25,1147,1.723,1148,3.305,1149,3.305,1150,3.102,1151,2.319,1152,3.102,2713,5.881,2714,4.126]],["title/injectables/SettingsEffects.html",[158,0.942,417,3.823]],["body/injectables/SettingsEffects.html",[0,0.229,2,0.052,3,0.052,4,0.052,6,0.244,7,0.598,13,0.612,15,0.43,17,0.384,18,0.007,19,0.23,20,0.3,21,0.3,27,0.045,37,0.005,38,0.005,44,3.107,46,1.051,47,1.014,51,2.27,54,0.439,55,0.66,59,1.986,68,1.442,70,1.418,158,1.522,159,6.4,164,7.193,167,3.42,171,1.546,172,3.397,186,2.024,212,1.657,224,2.414,349,2.095,408,4.2,410,5.516,417,5.461,430,4.411,438,3.107,543,4.109,553,3.393,628,5.284,656,3.393,658,5.533,660,5.533,662,5.533,663,5.1,681,5.533,692,3.241,693,3.107,694,3.241,695,3.393,2715,4.955,2716,8.081,2717,4.955,2718,6.677,2719,6.677,2720,6.677,2721,6.677,2722,6.677,2723,6.677,2724,6.677,2725,4.955,2726,6.677,2727,6.677,2728,6.677,2729,6.677,2730,6.677,2731,6.677,2732,6.677,2733,4.955,2734,4.955]],["title/classes/SidebarMenuModel.html",[0,0.216,1847,3.823]],["body/classes/SidebarMenuModel.html",[0,0.301,2,0.05,3,0.05,4,0.05,6,0.174,7,0.664,10,3.56,13,0.438,15,0.531,17,0.37,18,0.007,19,0.399,20,0.376,21,0.584,22,2.027,24,4.628,27,0.059,28,1.444,37,0.004,38,0.004,45,3.902,58,0.935,75,1.546,278,1.47,340,2.517,477,4.628,707,5.023,850,1.649,976,2.041,1192,4.585,1340,3.335,1348,2.445,1349,2.445,1350,2.445,1448,6.36,1825,6.36,1826,5.702,1827,6.36,1840,7.028,1841,8.372,1842,4.25,1843,7.413,1844,7.413,1845,7.413,1846,5.324,1847,5.324,2735,6.51,2736,4.774,2737,4.774,2738,4.774,2739,4.774,2740,4.774,2741,4.774,2742,4.774,2743,4.774,2744,4.774,2745,4.774]],["title/components/SpinnerComponent.html",[209,0.819,342,1.583]],["body/components/SpinnerComponent.html",[0,0.231,2,0.053,3,0.053,4,0.053,6,0.182,15,0.382,18,0.006,19,0.352,20,0.267,22,1.425,27,0.045,37,0.005,38,0.005,45,2.804,54,0.232,55,0.665,69,1.609,74,1.92,92,2.169,203,1.853,205,1.76,209,1.482,210,1.692,211,1.796,212,1.882,216,1.659,220,3.358,221,2.413,274,1.429,275,2.413,276,2.413,277,2.146,278,2.496,279,1.796,280,1.796,281,1.692,282,3.033,283,1.796,284,1.796,285,1.692,286,1.76,287,1.567,288,1.796,289,1.692,290,1.796,291,1.692,292,2.273,293,2.413,294,1.692,295,1.984,296,1.796,297,1.659,298,1.796,299,1.692,300,2.413,301,1.692,302,2.413,303,1.597,304,1.692,305,1.403,306,1.796,307,1.692,308,1.796,309,1.692,310,1.725,311,1.796,312,1.659,313,1.796,314,1.692,315,1.429,316,1.796,317,1.692,318,1.597,319,2.413,320,1.659,321,1.796,322,1.796,323,1.692,324,1.796,325,1.659,326,1.796,327,1.659,328,1.796,329,1.659,330,1.796,331,1.659,332,1.796,333,1.692,334,1.796,335,1.796,336,1.692,337,1.692,338,1.76,339,1.692,340,1.51,341,1.796,342,2.745,343,1.796,344,1.692,345,1.796,346,1.659,347,1.796,348,1.659,349,1.567,350,1.659,351,1.796,352,1.659,353,1.725,354,1.725,355,1.796,794,3.702,845,2.568,2746,4.995,2747,6.713,2748,6.713,2749,6.713,2750,7.582,2751,7.582,2752,4.995,2753,4.995]],["title/interfaces/State.html",[255,1.615,850,1.615]],["body/interfaces/State.html",[2,0.059,3,0.031,4,0.031,6,0.107,7,0.409,18,0.007,20,0.326,27,0.089,37,0.004,38,0.003,46,0.462,51,1.282,54,0.388,58,0.422,59,1.251,68,0.634,69,1.81,72,1.343,75,0.612,93,1.285,127,1.707,134,3.065,171,0.872,212,1.132,220,1.895,239,2.241,254,2.241,255,3.189,262,2.6,295,0.768,303,2.312,310,1.014,338,1.034,356,1.305,408,3.759,450,5.033,452,3.123,476,7.429,477,1.707,478,3.73,480,4.98,504,2.4,640,2.115,714,4.391,715,4.391,717,2.4,728,2.612,750,3.123,850,2.36,1473,6.083,1638,2.241,1794,6.174,1795,6.174,1980,6.083,2178,2.4,2474,6.083,2678,2.612,2754,2.935,2755,4.561,2756,5.595,2757,4.561,2758,4.561,2759,4.561,2760,5.595,2761,5.595,2762,4.561,2763,5.595,2764,5.595,2765,5.595,2766,5.595,2767,5.595,2768,5.595,2769,5.595,2770,2.612,2771,2.935,2772,2.612,2773,4.561,2774,2.935,2775,2.935,2776,4.561,2777,2.935,2778,2.935,2779,2.935,2780,5.595,2781,2.935,2782,2.935,2783,2.935,2784,2.935,2785,2.935,2786,2.935,2787,2.935,2788,2.612,2789,2.935,2790,2.935,2791,2.935,2792,2.935,2793,2.935,2794,2.935,2795,2.935,2796,2.935,2797,2.935,2798,2.935,2799,2.935,2800,2.935,2801,2.935,2802,2.935,2803,2.935,2804,2.935,2805,2.935,2806,2.935,2807,2.935,2808,2.935,2809,2.935,2810,5.595,2811,4.561,2812,2.935,2813,2.935,2814,2.935,2815,2.935,2816,2.935,2817,2.935,2818,2.935,2819,2.935,2820,2.935,2821,2.935,2822,2.935,2823,4.561,2824,2.935,2825,2.612,2826,2.935,2827,2.935,2828,2.935,2829,2.935,2830,2.935,2831,2.935,2832,7.55,2833,2.935,2834,2.935,2835,2.935,2836,2.935,2837,2.935,2838,2.935,2839,2.935,2840,2.935,2841,2.935,2842,2.935,2843,2.935,2844,2.935,2845,2.935,2846,2.935,2847,2.935,2848,4.561,2849,6.31,2850,4.561,2851,2.935,2852,2.935,2853,2.935,2854,2.935,2855,2.935,2856,2.935,2857,4.561,2858,7.234,2859,4.561,2860,2.935,2861,2.935,2862,2.935,2863,2.935,2864,2.935,2865,2.935,2866,2.935,2867,2.935,2868,2.935,2869,2.935,2870,4.561,2871,6.31,2872,4.561,2873,2.935,2874,2.935,2875,2.935,2876,2.935,2877,2.935,2878,2.935,2879,4.561,2880,7.234,2881,4.561,2882,2.935,2883,2.935,2884,2.935,2885,2.935,2886,2.935,2887,2.935,2888,2.935,2889,2.935,2890,2.935,2891,4.561,2892,6.31,2893,4.561,2894,2.935,2895,2.935,2896,2.935,2897,2.935,2898,2.935,2899,2.935,2900,4.561,2901,7.234,2902,4.561,2903,2.935,2904,2.935,2905,2.935,2906,2.935,2907,2.935,2908,2.935,2909,2.935,2910,2.935]],["title/classes/TemplateModel.html",[0,0.216,963,3.571]],["body/classes/TemplateModel.html",[0,0.354,2,0.065,3,0.065,4,0.065,6,0.224,7,0.687,13,0.562,15,0.499,17,0.475,18,0.007,19,0.285,20,0.348,21,0.371,22,2.057,27,0.07,28,1.112,37,0.005,38,0.005,58,1.101,70,2.193,287,2.831,850,2.117,927,6.503,934,6.892,963,5.855,976,2.62,1848,7.528,1849,5.456,1850,8.033,1851,8.033,1852,6.824,1853,5.456,1854,6.824,1855,5.456,1856,5.456,1857,5.456,1858,5.456,1859,5.456,2911,7.666,2912,6.129,2913,6.129]],["title/components/ToolbarsComponent.html",[209,0.819,344,1.583]],["body/components/ToolbarsComponent.html",[0,0.19,2,0.043,3,0.043,4,0.043,6,0.15,8,1.019,13,0.627,15,0.499,17,0.318,18,0.007,19,0.346,20,0.335,21,0.249,22,1.245,27,0.037,37,0.004,38,0.004,39,6.81,45,2.45,46,1.241,47,1.197,48,3.004,50,3.819,51,2.467,54,0.272,55,0.547,69,1.405,70,1.176,92,1.956,161,1.405,171,0.786,203,1.618,205,1.448,209,1.381,210,1.392,211,1.477,212,1.697,216,1.365,220,3.315,221,2.108,234,1.805,238,1.991,274,1.176,275,2.108,276,2.108,277,1.875,278,2.295,279,1.477,280,1.477,281,1.392,282,2.987,283,1.477,284,1.477,285,1.392,286,1.448,287,1.289,288,1.477,289,1.392,290,1.477,291,1.392,292,1.986,293,2.108,294,1.392,295,1.789,296,1.477,297,1.365,298,1.477,299,1.392,300,2.108,301,1.392,302,2.108,303,1.314,304,1.392,305,1.155,306,1.477,307,1.392,308,1.477,309,1.392,310,1.419,311,1.477,312,1.365,313,1.477,314,1.392,315,1.176,316,1.477,317,1.392,318,1.314,319,2.108,320,1.365,321,1.477,322,1.477,323,1.392,324,1.477,325,1.365,326,1.477,327,1.365,328,1.477,329,1.365,330,1.477,331,1.365,332,1.477,333,1.392,334,1.477,335,1.477,336,1.392,337,1.392,338,1.448,339,1.392,340,1.242,341,1.477,342,1.392,343,1.477,344,2.525,345,1.477,346,1.365,347,1.477,348,1.365,349,1.289,350,1.365,351,1.477,352,1.365,353,1.419,354,1.419,355,1.477,794,3.843,820,4.754,845,2.243,1036,2.577,1180,4.056,1353,2.696,1354,2.696,1384,1.89,2219,4.226,2256,6.086,2257,6.086,2258,6.086,2327,6.086,2914,4.11,2915,5.864,2916,5.864,2917,5.864,2918,6.837,2919,6.837,2920,5.864,2921,4.11,2922,4.11,2923,4.11,2924,4.11,2925,4.11,2926,4.11,2927,5.864,2928,4.11,2929,4.11]],["title/components/TreeDetailComponent.html",[209,0.819,346,1.553]],["body/components/TreeDetailComponent.html",[0,0.152,2,0.035,3,0.035,4,0.035,6,0.12,7,0.446,8,1.297,13,0.456,15,0.506,17,0.465,18,0.007,19,0.352,20,0.329,21,0.363,22,1.527,27,0.03,37,0.003,38,0.003,46,0.518,47,0.499,54,0.365,55,0.438,58,0.715,69,1.193,92,1.718,93,3.149,161,1.193,167,1.685,171,1.448,195,2.411,203,1.374,205,1.159,209,1.261,210,1.114,211,1.182,212,2.057,215,2.762,216,1.092,220,3.257,221,1.79,224,2.513,227,3.244,231,3.914,234,2.33,245,1.182,248,1.593,274,0.941,275,1.79,276,1.79,277,1.591,278,2.062,279,1.182,280,1.182,281,1.114,282,2.903,283,1.182,284,1.182,285,1.114,286,1.159,287,1.032,288,1.182,289,1.114,290,1.182,291,1.114,292,1.686,293,1.79,294,1.114,295,2.057,296,1.182,297,1.092,298,1.182,299,1.114,300,1.79,301,1.114,302,1.79,303,1.051,304,1.114,305,0.924,306,1.182,307,1.114,308,1.182,309,1.114,310,1.136,311,1.182,312,1.092,313,1.182,314,1.114,315,0.941,316,1.182,317,1.114,318,1.051,319,1.79,320,1.092,321,1.182,322,1.182,323,1.114,324,1.182,325,1.092,326,1.182,327,1.092,328,1.182,329,1.092,330,1.182,331,1.092,332,1.182,333,1.114,334,1.182,335,1.182,336,1.114,337,1.114,338,1.159,339,1.114,340,0.994,341,1.182,342,1.114,343,1.182,344,1.114,345,1.182,346,2.225,347,1.182,348,1.092,349,1.032,350,1.092,351,1.182,352,1.092,353,1.136,354,1.136,355,1.182,383,1.913,387,2.709,393,1.593,477,3.493,555,2.478,595,1.374,794,1.44,817,4.883,819,3.766,820,3.622,821,3.766,822,3.766,823,3.121,824,2.062,825,4.746,827,2.895,831,2.062,833,2.062,845,1.904,881,2.062,996,2.798,1288,5.095,1313,4.586,1358,5.456,1374,4.705,1375,2.151,1376,2.151,1379,2.151,1380,2.151,1381,2.151,1385,2.37,1386,2.151,1387,2.151,1436,6.909,1763,3.409,2219,4.328,2221,6.004,2259,5.962,2260,5.962,2264,4.431,2268,4.431,2270,4.431,2271,5.346,2272,5.346,2273,5.346,2274,5.346,2282,5.781,2288,5.477,2315,2.928,2319,2.512,2321,2.512,2930,7.521,2931,3.289,2932,4.978,2933,4.978,2934,6.698,2935,6.698,2936,3.289,2937,3.289,2938,3.289,2939,3.289,2940,3.289,2941,3.289,2942,3.289,2943,3.289,2944,3.289,2945,3.289,2946,3.289,2947,3.289,2948,3.289]],["title/components/TreeListComponent.html",[209,0.819,348,1.553]],["body/components/TreeListComponent.html",[0,0.154,2,0.035,3,0.035,4,0.035,6,0.121,7,0.45,8,1.3,13,0.46,15,0.496,17,0.469,18,0.007,19,0.353,20,0.337,21,0.366,22,1.535,27,0.03,37,0.003,38,0.003,46,0.791,47,0.762,54,0.353,55,0.443,58,0.721,69,1.204,92,1.73,101,1.7,161,1.204,171,1.289,195,2.433,203,1.386,205,1.172,209,1.267,210,1.127,211,1.196,212,2.064,215,2.781,216,1.105,220,3.26,221,1.805,224,1.934,227,3.264,231,3.929,234,2.226,245,1.196,248,2.433,274,0.952,275,1.805,276,1.805,277,1.605,278,2.074,279,1.196,280,1.196,281,1.127,282,2.908,283,1.196,284,1.196,285,1.127,286,1.172,287,1.044,288,1.196,289,1.127,290,1.196,291,1.127,292,1.701,293,1.805,294,1.127,295,1.583,296,1.196,297,1.105,298,1.196,299,1.127,300,1.805,301,1.127,302,1.805,303,1.064,304,1.127,305,0.935,306,1.196,307,1.127,308,1.196,309,1.127,310,1.149,311,1.196,312,1.105,313,1.196,314,1.127,315,0.952,316,1.196,317,1.127,318,1.064,319,1.805,320,1.105,321,1.196,322,1.196,323,1.127,324,1.196,325,1.105,326,1.196,327,1.105,328,1.196,329,1.105,330,1.196,331,1.105,332,1.196,333,1.127,334,1.196,335,1.196,336,1.127,337,1.127,338,1.172,339,1.127,340,1.006,341,1.196,342,1.127,343,1.196,344,1.127,345,1.196,346,1.105,347,1.196,348,2.238,349,1.897,350,1.105,351,1.196,352,1.105,353,1.149,354,1.149,355,1.196,387,2.733,555,2.5,595,1.39,806,4.701,817,4.9,819,3.793,820,3.648,821,3.793,822,3.793,823,3.149,824,2.087,825,4.767,827,2.921,831,2.087,833,2.087,845,1.921,1288,4.9,1313,4.951,1353,2.309,1354,2.309,1358,5.47,1374,4.729,1375,2.176,1376,2.176,1379,2.176,1380,2.176,1381,2.176,1384,1.53,1385,2.398,1386,2.176,1387,2.176,1431,6.645,1515,2.398,2319,2.542,2321,2.542,2324,2.962,2325,4.47,2326,4.47,2331,4.47,2332,2.962,2335,2.962,2338,2.962,2339,2.962,2676,4.47,2930,7.232,2949,5.022,2950,5.022,2951,6.737,2952,6.737,2953,6.737,2954,5.022,2955,5.022,2956,3.328,2957,5.022,2958,5.022,2959,3.328,2960,3.328,2961,3.328,2962,3.328,2963,5.022,2964,8.911,2965,3.328,2966,3.328,2967,3.328,2968,3.328,2969,3.328,2970,3.328,2971,3.328,2972,3.328,2973,3.328,2974,3.328,2975,3.328,2976,3.328,2977,3.328,2978,3.328]],["title/classes/TreeNavModel.html",[0,0.216,1382,3.369]],["body/classes/TreeNavModel.html",[0,0.385,2,0.064,3,0.064,4,0.064,6,0.222,7,0.747,10,3.851,13,0.559,15,0.513,17,0.472,18,0.007,19,0.283,20,0.358,21,0.369,22,2.056,24,5.087,27,0.069,37,0.005,38,0.005,58,1.097,75,1.741,194,5.648,278,1.876,976,2.605,1340,3.912,1348,3.121,1349,3.121,1350,3.121,1382,5.504,1860,7.517,1861,8.182,1862,5.424,1863,8.019,1864,8.019,2979,7.638,2980,6.093,2981,6.093,2982,6.093]],["title/classes/UpdateAction.html",[0,0.216,108,2.628]],["body/classes/UpdateAction.html",[0,0.424,1,2.301,2,0.043,3,0.043,4,0.043,6,0.149,7,0.524,8,1.017,10,1.75,13,0.375,15,0.388,17,0.317,18,0.007,19,0.19,20,0.377,21,0.248,27,0.084,28,1.592,37,0.004,38,0.004,46,0.921,47,0.888,51,2.091,54,0.366,56,3.287,57,2.381,58,1.318,59,2.128,60,2.595,64,2.469,65,4.29,66,2.469,67,2.469,68,0.884,69,2.065,70,1.171,71,1.09,72,0.566,73,1.171,74,2.342,75,0.854,76,5.61,77,1.71,78,2.091,79,1.36,80,2.091,81,3.422,82,2.469,83,1.386,84,3.527,85,2.469,86,2.469,87,3.366,88,2.469,89,2.469,90,2.469,91,2.469,92,1.171,93,2.56,94,2.469,95,2.469,96,2.336,97,1.71,98,2.485,99,2.336,100,1.71,101,1.15,102,1.869,103,1.36,104,3.287,105,2.469,106,3.287,107,2.469,108,3.834,109,3.527,110,3.527,111,3.287,112,2.469,113,3.287,114,2.469,115,3.287,116,2.469,117,3.287,118,2.469,119,3.287,120,2.469,2983,5.848,2984,4.094]],["title/classes/UpdateFailAction.html",[0,0.216,113,2.628]],["body/classes/UpdateFailAction.html",[0,0.424,1,2.307,2,0.043,3,0.043,4,0.043,6,0.15,7,0.525,8,1.018,13,0.376,15,0.389,17,0.318,18,0.007,19,0.191,20,0.377,21,0.248,27,0.084,28,1.593,37,0.004,38,0.004,46,0.922,47,0.889,51,2.093,54,0.366,56,3.293,57,2.387,58,1.318,59,2.129,60,2.583,61,1.196,64,2.475,65,4.293,66,2.475,67,2.475,68,0.886,69,2.067,70,1.174,71,1.093,72,0.568,73,1.174,74,2.344,75,0.856,76,5.612,77,1.714,78,2.093,79,1.363,80,2.093,81,3.426,82,2.475,83,1.39,84,3.533,85,2.475,86,2.475,87,3.368,88,2.475,89,2.475,90,2.475,91,2.475,92,1.174,93,2.564,94,2.475,95,2.475,96,2.34,97,1.714,98,2.486,99,2.34,100,1.714,101,1.153,102,1.873,103,1.363,104,3.293,105,2.475,106,3.293,107,2.475,108,3.293,109,2.475,110,2.475,111,3.293,112,2.475,113,3.84,114,3.533,115,3.293,116,2.475,117,3.293,118,2.475,119,3.293,120,2.475,2985,5.859,2986,4.104]],["title/classes/UpdateSelectedAction.html",[0,0.216,1144,2.327]],["body/classes/UpdateSelectedAction.html",[0,0.428,2,0.044,3,0.044,4,0.044,6,0.152,7,0.53,8,0.882,13,0.382,15,0.392,17,0.323,18,0.007,19,0.193,20,0.379,21,0.252,22,1.257,27,0.085,28,1.537,37,0.004,38,0.004,46,0.656,47,0.632,54,0.275,58,1.331,59,2.132,60,2.601,61,1.213,68,0.899,71,1.109,72,0.576,73,1.191,74,1.191,75,1.235,78,1.17,79,1.383,80,1.17,87,1.663,98,2.539,102,1.892,103,1.383,162,3.032,201,3.429,202,2.722,203,1.634,204,4.18,255,1.438,262,2.476,305,1.17,379,1.357,445,1.528,921,1.965,1103,3.123,1104,2.266,1107,2.341,1108,2.341,1109,3.327,1110,2.341,1111,2.341,1112,2.341,1113,2.341,1114,2.341,1115,2.341,1116,2.341,1117,2.341,1118,2.341,1119,2.341,1120,2.341,1121,2.341,1122,2.341,1123,2.341,1124,2.341,1125,2.341,1126,1.74,1127,1.74,1128,2.341,1129,3.871,1130,2.341,1131,2.341,1132,3.123,1133,2.341,1134,3.123,1135,2.341,1136,3.123,1137,2.341,1138,3.123,1139,2.341,1140,3.123,1141,2.341,1142,3.123,1143,2.341,1144,3.429,1145,3.327,1146,2.264,1147,1.74,1148,3.327,1149,3.327,1150,3.123,1151,2.341,1152,3.123,2987,5.919,2988,4.164]],["title/classes/UpdateSuccessAction.html",[0,0.216,111,2.628]],["body/classes/UpdateSuccessAction.html",[0,0.424,1,2.307,2,0.043,3,0.043,4,0.043,6,0.15,7,0.525,8,1.018,13,0.376,15,0.389,17,0.318,18,0.007,19,0.191,20,0.377,21,0.248,27,0.084,28,1.593,37,0.004,38,0.004,46,0.922,47,0.889,51,2.093,54,0.366,56,3.293,57,2.387,58,1.318,59,2.129,60,2.583,61,1.196,64,2.475,65,4.293,66,2.475,67,2.475,68,0.886,69,2.067,70,1.174,71,1.093,72,0.568,73,1.174,74,2.344,75,0.856,76,5.612,77,1.714,78,2.093,79,1.363,80,2.093,81,3.426,82,2.475,83,1.39,84,3.533,85,2.475,86,2.475,87,3.368,88,2.475,89,2.475,90,2.475,91,2.475,92,1.174,93,2.564,94,2.475,95,2.475,96,2.34,97,1.714,98,2.486,99,2.34,100,1.714,101,1.153,102,1.873,103,1.363,104,3.293,105,2.475,106,3.293,107,2.475,108,3.293,109,2.475,110,2.475,111,3.84,112,3.533,113,3.293,114,2.475,115,3.293,116,2.475,117,3.293,118,2.475,119,3.293,120,2.475,2989,5.859,2990,4.104]],["title/classes/User.html",[0,0.216,83,1.583]],["body/classes/User.html",[0,0.323,2,0.056,3,0.056,4,0.056,6,0.194,7,0.626,8,1.45,13,0.487,15,0.514,17,0.411,18,0.007,19,0.247,20,0.343,21,0.561,22,1.881,27,0.048,28,1.508,37,0.005,38,0.005,45,3.265,48,2.719,83,3.196,143,5.009,161,1.675,171,1.337,234,2.557,252,5.985,253,6.344,271,2.888,597,1.988,699,7.394,779,4.725,789,7.394,790,4.725,976,2.269,2606,7.498,2991,5.308,2992,8.306,2993,8.306,2994,6.99,2995,6.99,2996,5.308,2997,5.308,2998,5.308,2999,5.308,3000,5.308,3001,7.815,3002,5.308,3003,5.308,3004,5.308,3005,5.308,3006,5.308,3007,6.99,3008,5.308,3009,6.99]],["title/injectables/UtilService.html",[158,0.942,744,3.201]],["body/injectables/UtilService.html",[0,0.212,2,0.076,3,0.048,4,0.048,6,0.168,8,1.342,13,0.581,15,0.445,17,0.606,18,0.007,19,0.394,20,0.358,21,0.474,22,1.997,27,0.042,28,0.833,37,0.004,38,0.004,46,0.998,47,0.697,54,0.381,55,0.612,72,0.635,75,1.322,78,1.29,101,2.308,158,1.463,161,1.519,171,1.625,172,1.757,224,2.321,234,1.414,282,1.44,318,2.321,375,5.25,387,4.736,428,3.144,444,2.423,445,3.116,446,5.815,448,6.402,449,3.309,457,4.088,461,6.487,576,3.755,597,2.932,708,2.498,744,4.34,750,3.144,897,4.568,921,2.166,971,5.979,976,1.963,1023,3.507,1024,5.232,1026,5.979,1735,5.643,1751,4.088,2082,5.643,2492,7.312,2494,5.643,3010,4.592,3011,6.339,3012,6.339,3013,6.339,3014,4.592,3015,7.26,3016,4.592,3017,6.339,3018,4.592,3019,6.339,3020,4.592,3021,6.339,3022,4.592,3023,8.214,3024,6.339,3025,4.592,3026,4.592,3027,4.592,3028,4.592,3029,4.592,3030,4.592,3031,4.592,3032,4.592,3033,4.592,3034,4.592,3035,4.592,3036,6.339,3037,4.592,3038,4.592,3039,4.592]],["title/modules/UtilityModule.html",[356,1.337,369,3.369]],["body/modules/UtilityModule.html",[0,0.324,2,0.074,3,0.074,4,0.074,18,0.007,27,0.064,37,0.006,38,0.006,54,0.412,55,0.933,171,1.34,218,3.489,356,2.005,369,6.393,394,4.079,578,4.394,738,6.353,744,5.695,1820,7.404,1822,6.238,3040,7.007,3041,7.007,3042,7.007]],["title/injectables/ValidationService.html",[158,0.942,738,3.571]],["body/injectables/ValidationService.html",[0,0.233,2,0.053,3,0.053,4,0.053,6,0.184,8,1.368,9,6.008,15,0.433,17,0.59,18,0.007,19,0.354,20,0.347,21,0.461,22,2,27,0.046,28,1.225,37,0.005,38,0.006,47,1.235,48,3.899,54,0.313,55,0.671,158,1.534,161,1.618,171,1.706,397,3.157,597,3.046,738,5.155,750,3.448,806,3.56,921,3.591,1085,6.008,1427,7.65,1846,6.226,2083,8.171,2091,6.008,3043,5.035,3044,6.749,3045,7.613,3046,7.613,3047,6.749,3048,8.133,3049,5.035,3050,6.749,3051,6.749,3052,5.035,3053,6.749,3054,6.749,3055,5.035,3056,6.008,3057,5.035,3058,5.035,3059,7.613,3060,5.035,3061,6.749,3062,5.035,3063,5.035,3064,5.035,3065,5.035,3066,6.749,3067,5.035,3068,5.035,3069,5.035,3070,5.035]],["title/dependencies.html",[358,2.885,2788,3.459]],["body/dependencies.html",[18,0.007,37,0.005,38,0.005,55,0.789,68,1.62,75,1.235,202,2.722,245,2.128,247,4.842,254,4.522,287,1.857,318,1.893,353,2.045,358,3.033,383,3.443,384,4.842,388,4.905,389,4.362,393,2.868,397,3.712,402,3.712,438,3.712,440,5.27,444,3.957,445,2.172,449,4.267,545,4.842,604,3.443,640,4.267,918,5.933,1227,5.27,2770,5.27,2772,5.27,3071,9.466,3072,5.921,3073,5.921,3074,5.921,3075,5.921,3076,5.921,3077,7.501,3078,5.921,3079,5.921,3080,5.921,3081,5.921,3082,5.921,3083,5.921,3084,5.921,3085,5.921,3086,5.921,3087,5.921,3088,5.921,3089,5.921,3090,5.921,3091,5.921,3092,5.921,3093,5.921,3094,5.921,3095,5.921,3096,5.921,3097,5.921,3098,5.921,3099,5.921,3100,5.921,3101,5.921,3102,5.921,3103,5.921,3104,5.921,3105,5.921,3106,5.921,3107,5.921,3108,5.921,3109,5.921,3110,5.921,3111,5.921,3112,5.921,3113,5.921,3114,5.921,3115,5.921]],["title/miscellaneous/enumerations.html",[3116,2.968,3117,5.014]],["body/miscellaneous/enumerations.html",[6,0.255,18,0.006,20,0.278,37,0.006,38,0.006,47,1.392,51,1.964,65,3.481,287,2.78,451,5.34,806,3.689,918,5.038,927,5.038,928,5.34,929,7.395,960,7.395,1173,4.384,1253,6.224,1260,7.395,1286,6.224,1763,4.787,1770,6.224,1801,6.224,1802,6.224,1803,7.395,1804,6.224,2282,5.34,3116,5.34,3117,6.224,3118,6.992,3119,8.307,3120,6.992,3121,6.992,3122,6.992,3123,6.992,3124,5.718,3125,6.992]],["title/index.html",[6,0.142,507,3.178,3126,3.886]],["body/index.html",[10,2.125,18,0.006,19,0.231,21,0.301,37,0.005,38,0.005,51,2.373,59,1.691,65,3.331,69,2.085,74,1.422,83,3.133,92,1.914,93,2.176,134,2.229,202,3.478,209,1.325,225,4.036,255,3.004,282,2.373,287,1.559,354,2.794,356,1.422,384,4.065,389,2.891,424,4.425,427,5.956,460,3.797,481,7.517,496,4.065,507,4.065,602,3.797,604,3.892,622,4.425,652,4.425,707,2.998,749,4.582,794,3.696,897,6.268,901,4.425,918,3.582,921,3.157,1024,3.582,1088,5.956,1763,6.513,1787,4.425,2016,5.956,2089,4.425,2111,4.425,2282,3.797,2340,6.617,2373,4.065,2606,6.617,2825,4.425,3056,5.956,3124,6.617,3127,4.971,3128,4.971,3129,4.971,3130,4.971,3131,6.691,3132,4.971,3133,4.971,3134,4.971,3135,4.971,3136,4.971,3137,4.971,3138,9.155,3139,4.971,3140,4.971,3141,4.971,3142,4.971,3143,4.971,3144,4.971,3145,6.691,3146,4.971,3147,6.691,3148,4.971,3149,6.691,3150,9.403,3151,8.091,3152,4.971,3153,6.691,3154,4.971,3155,4.971,3156,4.971,3157,4.971,3158,4.971,3159,4.971,3160,4.971,3161,4.971,3162,4.971,3163,4.971,3164,4.971,3165,8.444,3166,6.691,3167,6.691,3168,4.971,3169,4.971,3170,4.971,3171,4.971,3172,6.691,3173,4.971,3174,4.971,3175,4.971,3176,4.971,3177,4.971,3178,4.971,3179,4.971,3180,4.971]],["title/modules.html",[356,1.836]],["body/modules.html",[18,0.005,37,0.005,38,0.005,356,1.836,357,4.902,367,4.625,368,4.625,369,4.625,389,5.646,451,7.414,720,4.902,725,4.625,730,4.024,882,4.625,1093,4.625,1195,4.625,1243,4.625,1418,4.902,1423,4.625,1424,4.395,1555,4.902,1559,4.625,2435,4.902,2440,4.625,3181,9.707,3182,9.905,3183,9.431,3184,9.431]],["title/overview.html",[3185,5.713]],["body/overview.html",[0,0.143,18,0.007,27,0.028,37,0.003,38,0.003,158,0.624,159,4.171,190,4.171,209,0.543,210,2.759,218,1.542,219,3.963,260,1.5,274,0.886,277,0.99,281,2.607,285,2.607,289,2.607,291,2.607,294,2.607,297,1.922,299,2.607,301,2.607,304,2.607,307,2.607,309,2.607,312,1.922,314,1.96,317,2.607,320,1.922,323,2.607,325,1.922,327,1.922,329,1.922,331,1.922,333,2.607,336,2.607,337,2.607,339,2.607,342,2.607,344,2.607,346,1.922,348,1.922,350,2.557,352,2.557,356,1.36,357,7.274,358,1.586,359,1.634,360,1.685,361,2.757,362,2.757,363,2.757,364,2.757,365,2.757,366,2.757,367,4.171,368,4.171,369,4.171,370,4.446,371,3.963,372,3.916,373,4.171,374,3.785,375,3.491,376,4.246,377,4.246,378,2.587,379,1.009,380,1.586,720,6.352,721,2.757,722,2.757,723,2.757,725,4.171,730,5.305,850,1.07,876,2.757,877,2.757,878,2.757,882,5.048,883,2.232,1093,5.328,1094,2.757,1095,2.757,1096,2.757,1191,3.963,1195,5.725,1196,2.757,1197,2.757,1198,2.757,1199,2.757,1243,6.097,1244,2.757,1245,2.757,1246,2.757,1247,2.757,1248,4.421,1293,4.171,1358,3.629,1418,7.008,1419,2.757,1420,2.757,1421,2.757,1422,2.757,1423,4.171,1424,6.665,1555,6.068,1556,2.757,1557,2.757,1558,2.757,1559,4.171,1763,2.121,1907,4.171,1936,2.757,1937,2.757,1938,2.757,1939,2.757,2262,3.491,2369,4.171,2435,7.179,2436,2.757,2437,2.757,2438,2.757,2439,2.757,2440,4.171,2441,4.171,2545,2.757,2546,2.757,2547,2.757,2548,5.88,3124,2.533,3185,2.757,3186,4.755,3187,3.097,3188,3.097,3189,3.097,3190,3.097]],["title/interfaces/role.html",[44,2.931,850,1.615]],["body/interfaces/role.html",[2,0.07,3,0.07,4,0.07,6,0.242,7,0.72,18,0.007,20,0.367,21,0.587,22,1.991,27,0.06,37,0.006,38,0.006,44,5.041,45,4.03,850,2.777,860,8.016,861,8.016,862,8.016,863,8.016,3191,6.622,3192,9.005]],["title/routes.html",[260,3.109]],["body/routes.html",[18,0.006,37,0.006,38,0.006,260,3.747]],["title/miscellaneous/typealiases.html",[3116,2.968,3193,5.633]],["body/miscellaneous/typealiases.html",[6,0.204,18,0.007,20,0.222,37,0.005,38,0.005,56,3.138,57,3.247,59,2.2,96,3.503,99,3.503,102,2.872,104,3.138,106,3.138,108,3.138,111,3.138,113,3.138,115,3.138,117,3.138,119,3.138,125,3.247,126,3.367,144,3.247,146,3.247,148,3.247,150,3.247,152,3.247,154,3.247,156,3.247,162,2.859,450,3.367,1103,2.945,1104,3.038,1132,2.945,1134,2.945,1136,2.945,1138,2.945,1140,2.945,1142,2.945,1144,2.779,1146,3.064,1150,2.945,1152,2.945,1567,2.945,1568,3.038,1596,4.358,1597,3.038,1598,3.038,1599,3.038,1600,3.038,1601,3.038,1602,3.038,2642,4.264,2643,4.566,2650,4.264,3116,4.264,3194,5.583,3195,5.583,3196,7.224,3197,5.583,3198,5.583,3199,7.224,3200,5.583,3201,5.583,3202,7.224,3203,5.583,3204,8.009,3205,5.583,3206,5.583,3207,5.583,3208,5.583]]],"invertedIndex":[["",{"_index":18,"title":{},"body":{"classes/Account.html":{},"classes/ActionHandler.html":{},"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"classes/AddUserAction.html":{},"injectables/AppApiClient.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppSandbox.html":{},"injectables/AppService.html":{},"injectables/AuthApiClient.html":{},"injectables/AuthEffects.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthSandbox.html":{},"directives/AuthorizeDirective.html":{},"injectables/AuthorizeGuard.html":{},"classes/BaseComponent.html":{},"components/BreadCrumbComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"classes/ClassRightModel.html":{},"modules/ComponentsModule.html":{},"injectables/ConfigService.html":{},"components/ControlWebDavComponent.html":{},"modules/ControlWebDavModule.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteItemSelectedAction.html":{},"classes/DeleteSuccessAction.html":{},"classes/DoLoginAction.html":{},"classes/DoLoginFailAction.html":{},"classes/DoLoginSuccessAction.html":{},"classes/DoLogoutAction.html":{},"classes/DoLogoutFailAction.html":{},"classes/DoLogoutSuccessAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"components/DocumentGenerationComponent.html":{},"modules/DocumentGenerationModule.html":{},"components/DocumentReportViewerComponent.html":{},"modules/DocumentReportViewerModule.html":{},"injectables/DocumentsHelper.html":{},"injectables/DossierApiClient.html":{},"components/DossierDetailsComponent.html":{},"injectables/DossierEffects.html":{},"classes/DossierFilterModel.html":{},"components/DossierNavigatorComponent.html":{},"modules/DossierNavigatorModule.html":{},"classes/DossierNavigatorTreeModel.html":{},"modules/DossierRoutingModule.html":{},"injectables/DossierSandbox.html":{},"injectables/DossierService.html":{},"directives/DynamicTabsDirective.html":{},"modules/ExceptionsModule.html":{},"modules/ExceptionsRoutingModule.html":{},"classes/GetTreeDetailAction.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"classes/HttpAdapter.html":{},"injectables/HttpResponseHandler.html":{},"injectables/HttpService.html":{},"modules/HttpServiceModule.html":{},"interfaces/IDossierFilterModel.html":{},"interfaces/IDossierNavigatorTreeModel.html":{},"interfaces/IMenuModel.html":{},"interfaces/IPerson.html":{},"interfaces/ISearchBoxModel.html":{},"interfaces/ISidebarMenuModel.html":{},"interfaces/ITemplateModel.html":{},"classes/ITreeNavModel.html":{},"interfaces/LanguageModel.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"modules/LayoutContainersModule.html":{},"injectables/LayoutSandbox.html":{},"components/LeftSidebarComponent.html":{},"classes/LoadAction.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"components/LoginComponent.html":{},"classes/LoginForm.html":{},"classes/MenuModel.html":{},"injectables/MenusEffects.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Person.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"injectables/PersonsApiClient.html":{},"components/PersonsComponent.html":{},"injectables/PersonsEffects.html":{},"modules/PersonsModule.html":{},"injectables/PersonsResolver.html":{},"modules/PersonsRoutingModule.html":{},"injectables/PersonsSandbox.html":{},"injectables/PersonsService.html":{},"modules/PipesModule.html":{},"components/ProfileBarComponent.html":{},"classes/RemoveUserAction.html":{},"injectables/ReportService.html":{},"components/ReportViewerComponent.html":{},"classes/ResetState.html":{},"classes/Sandbox.html":{},"pipes/SanitizeHtmlPipe.html":{},"components/SearchBoxComponent.html":{},"injectables/SearchBoxDatasEffects.html":{},"classes/SearchBoxModel.html":{},"classes/SelectAction.html":{},"components/SelectedActionsComponent.html":{},"classes/SelectedActionsModel.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetAvaiableMenu.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetClosedAction.html":{},"classes/SetCultureAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{},"classes/SetLanguageAction.html":{},"injectables/SettingsEffects.html":{},"classes/SidebarMenuModel.html":{},"components/SpinnerComponent.html":{},"interfaces/State.html":{},"classes/TemplateModel.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{},"classes/TreeNavModel.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSelectedAction.html":{},"classes/UpdateSuccessAction.html":{},"classes/User.html":{},"injectables/UtilService.html":{},"modules/UtilityModule.html":{},"injectables/ValidationService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"interfaces/role.html":{},"routes.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":806,"title":{},"body":{"directives/AuthorizeDirective.html":{},"injectables/AuthorizeGuard.html":{},"components/ControlWebDavComponent.html":{},"injectables/DossierApiClient.html":{},"injectables/DossierSandbox.html":{},"injectables/DossierService.html":{},"injectables/HttpResponseHandler.html":{},"components/PersonFormComponent.html":{},"injectables/PersonsSandbox.html":{},"components/SelectedActionsComponent.html":{},"components/TreeListComponent.html":{},"injectables/ValidationService.html":{},"miscellaneous/enumerations.html":{}}}],["0.0.13",{"_index":3107,"title":{},"body":{"dependencies.html":{}}}],["0.12.1",{"_index":3102,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":3081,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":3110,"title":{},"body":{"dependencies.html":{}}}],["0.4.53",{"_index":3089,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":3091,"title":{},"body":{"dependencies.html":{}}}],["0.5.4",{"_index":3088,"title":{},"body":{"dependencies.html":{}}}],["0.8.4",{"_index":3115,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":1763,"title":{},"body":{"injectables/HttpResponseHandler.html":{},"components/PersonFormComponent.html":{},"components/TreeDetailComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"overview.html":{}}}],["1.1.2",{"_index":3113,"title":{},"body":{"dependencies.html":{}}}],["1.2",{"_index":3152,"title":{},"body":{"index.html":{}}}],["1.2.0",{"_index":3074,"title":{},"body":{"dependencies.html":{}}}],["1.3.0",{"_index":3101,"title":{},"body":{"dependencies.html":{}}}],["18",{"_index":3186,"title":{},"body":{"overview.html":{}}}],["2",{"_index":3124,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{},"overview.html":{}}}],["2.0.3",{"_index":3075,"title":{},"body":{"dependencies.html":{}}}],["2.2",{"_index":3154,"title":{},"body":{"index.html":{}}}],["2.2.1",{"_index":3084,"title":{},"body":{"dependencies.html":{}}}],["2.2.2",{"_index":3078,"title":{},"body":{"dependencies.html":{}}}],["2.4.1",{"_index":3095,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":3111,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":1666,"title":{},"body":{"classes/HttpAdapter.html":{}}}],["2018",{"_index":2129,"title":{},"body":{"components/LoginComponent.html":{}}}],["24",{"_index":3190,"title":{},"body":{"overview.html":{}}}],["29",{"_index":3187,"title":{},"body":{"overview.html":{}}}],["3",{"_index":2282,"title":{},"body":{"components/PersonFormComponent.html":{},"components/TreeDetailComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["3.2",{"_index":3155,"title":{},"body":{"index.html":{}}}],["3.2.4",{"_index":3079,"title":{},"body":{"dependencies.html":{}}}],["3.4.2",{"_index":3105,"title":{},"body":{"dependencies.html":{}}}],["3.4.54",{"_index":3086,"title":{},"body":{"dependencies.html":{}}}],["32.0.1",{"_index":3093,"title":{},"body":{"dependencies.html":{}}}],["33",{"_index":3188,"title":{},"body":{"overview.html":{}}}],["4",{"_index":3156,"title":{},"body":{"index.html":{}}}],["4.0.2",{"_index":3071,"title":{},"body":{"dependencies.html":{}}}],["4.1.0",{"_index":3097,"title":{},"body":{"dependencies.html":{}}}],["4.7.0",{"_index":3100,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":1719,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["401",{"_index":1697,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["403",{"_index":1703,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["404",{"_index":1565,"title":{},"body":{"modules/ExceptionsRoutingModule.html":{},"injectables/HttpResponseHandler.html":{}}}],["41",{"_index":2133,"title":{},"body":{"components/LoginComponent.html":{}}}],["44",{"_index":2687,"title":{},"body":{"components/SelectedActionsComponent.html":{}}}],["5",{"_index":652,"title":{},"body":{"injectables/AuthEffects.html":{},"index.html":{}}}],["5.0.0",{"_index":3108,"title":{},"body":{"dependencies.html":{}}}],["5.2.0",{"_index":3077,"title":{},"body":{"dependencies.html":{}}}],["500",{"_index":1708,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["502",{"_index":1564,"title":{},"body":{"modules/ExceptionsRoutingModule.html":{},"injectables/HttpResponseHandler.html":{}}}],["504",{"_index":1725,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["5600",{"_index":2134,"title":{},"body":{"components/LoginComponent.html":{}}}],["6",{"_index":3158,"title":{},"body":{"index.html":{}}}],["7",{"_index":3160,"title":{},"body":{"index.html":{}}}],["74",{"_index":3189,"title":{},"body":{"overview.html":{}}}],["8",{"_index":622,"title":{},"body":{"injectables/AuthApiClient.html":{},"index.html":{}}}],["8.2.0",{"_index":3104,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":3163,"title":{},"body":{"index.html":{}}}],["9]+\\.)+[a",{"_index":3063,"title":{},"body":{"injectables/ValidationService.html":{}}}],["9]{1,3}\\.[0",{"_index":3059,"title":{},"body":{"injectables/ValidationService.html":{}}}],["9]{1,3}])|(([a",{"_index":3060,"title":{},"body":{"injectables/ValidationService.html":{}}}],["_blank",{"_index":1857,"title":{},"body":{"interfaces/ITemplateModel.html":{},"classes/TemplateModel.html":{}}}],["_build",{"_index":3171,"title":{},"body":{"index.html":{}}}],["_clone",{"_index":3128,"title":{},"body":{"index.html":{}}}],["_document",{"_index":2302,"title":{},"body":{"components/PersonFormComponent.html":{}}}],["_featur",{"_index":3137,"title":{},"body":{"index.html":{}}}],["_gener",{"_index":3178,"title":{},"body":{"index.html":{}}}],["_get",{"_index":3127,"title":{},"body":{"index.html":{}}}],["_url",{"_index":2563,"title":{},"body":{"injectables/ReportService.html":{}}}],["_user",{"_index":3144,"title":{},"body":{"index.html":{}}}],["_viewermodel",{"_index":1213,"title":{},"body":{"components/DocumentReportViewerComponent.html":{}}}],["_wrappercontain",{"_index":2028,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["a.click",{"_index":1276,"title":{},"body":{"injectables/DocumentsHelper.html":{}}}],["a.download",{"_index":1273,"title":{},"body":{"injectables/DocumentsHelper.html":{}}}],["a.href",{"_index":1272,"title":{},"body":{"injectables/DocumentsHelper.html":{}}}],["absolut",{"_index":1688,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["abstract",{"_index":836,"title":{},"body":{"classes/BaseComponent.html":{},"classes/Sandbox.html":{}}}],["abstractcontrol",{"_index":2093,"title":{},"body":{"components/LoginComponent.html":{}}}],["accept",{"_index":192,"title":{},"body":{"injectables/AppApiClient.html":{},"modules/AppModule.html":{},"injectables/AuthApiClient.html":{},"injectables/ConfigService.html":{},"injectables/DossierApiClient.html":{},"injectables/PersonsApiClient.html":{}}}],["access_token",{"_index":789,"title":{},"body":{"injectables/AuthSandbox.html":{},"classes/User.html":{}}}],["accessor",{"_index":801,"title":{},"body":{"directives/AuthorizeDirective.html":{},"components/DocumentReportViewerComponent.html":{},"components/LeftSidebarComponent.html":{}}}],["account",{"_index":1,"title":{"classes/Account.html":{}},"body":{"classes/Account.html":{},"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteSuccessAction.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSuccessAction.html":{}}}],["account.email",{"_index":32,"title":{},"body":{"classes/Account.html":{}}}],["account.id",{"_index":30,"title":{},"body":{"classes/Account.html":{}}}],["account.password",{"_index":36,"title":{},"body":{"classes/Account.html":{}}}],["account.usernam",{"_index":34,"title":{},"body":{"classes/Account.html":{}}}],["action",{"_index":59,"title":{},"body":{"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"classes/AddUserAction.html":{},"injectables/AuthEffects.html":{},"injectables/AuthSandbox.html":{},"components/ControlWebDavComponent.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteItemSelectedAction.html":{},"classes/DeleteSuccessAction.html":{},"classes/DoLoginAction.html":{},"classes/DoLoginFailAction.html":{},"classes/DoLoginSuccessAction.html":{},"classes/DoLogoutAction.html":{},"classes/DoLogoutFailAction.html":{},"classes/DoLogoutSuccessAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"injectables/DossierEffects.html":{},"injectables/DossierSandbox.html":{},"classes/GetTreeDetailAction.html":{},"classes/LoadAction.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"injectables/MenusEffects.html":{},"injectables/PersonsEffects.html":{},"injectables/PersonsSandbox.html":{},"classes/RemoveUserAction.html":{},"classes/ResetState.html":{},"injectables/SearchBoxDatasEffects.html":{},"classes/SelectAction.html":{},"components/SelectedActionsComponent.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetAvaiableMenu.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetClosedAction.html":{},"classes/SetCultureAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{},"classes/SetLanguageAction.html":{},"injectables/SettingsEffects.html":{},"interfaces/State.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSelectedAction.html":{},"classes/UpdateSuccessAction.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["action.payload",{"_index":662,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/DossierEffects.html":{},"injectables/MenusEffects.html":{},"injectables/PersonsEffects.html":{},"injectables/SearchBoxDatasEffects.html":{},"injectables/SettingsEffects.html":{}}}],["actioncancel",{"_index":2256,"title":{},"body":{"components/PersonFormComponent.html":{},"components/ToolbarsComponent.html":{}}}],["actiondelet",{"_index":2257,"title":{},"body":{"components/PersonFormComponent.html":{},"components/ToolbarsComponent.html":{}}}],["actionhandl",{"_index":39,"title":{"classes/ActionHandler.html":{}},"body":{"classes/ActionHandler.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/ToolbarsComponent.html":{}}}],["actionnew",{"_index":2327,"title":{},"body":{"components/PersonListComponent.html":{},"components/ToolbarsComponent.html":{}}}],["actionreduc",{"_index":2776,"title":{},"body":{"interfaces/State.html":{}}}],["actions'},{'nam",{"_index":341,"title":{},"body":{"components/AppComponent.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{}}}],["actions.compon",{"_index":1956,"title":{},"body":{"modules/LayoutContainersModule.html":{}}}],["actions.component.html",{"_index":2654,"title":{},"body":{"components/SelectedActionsComponent.html":{}}}],["actions.component.scss",{"_index":2653,"title":{},"body":{"components/SelectedActionsComponent.html":{}}}],["actions.component.t",{"_index":2652,"title":{},"body":{"components/SelectedActionsComponent.html":{}}}],["actions.component.ts:12",{"_index":2672,"title":{},"body":{"components/SelectedActionsComponent.html":{}}}],["actions.component.ts:13",{"_index":2673,"title":{},"body":{"components/SelectedActionsComponent.html":{}}}],["actions.component.ts:14",{"_index":2679,"title":{},"body":{"components/SelectedActionsComponent.html":{}}}],["actions.component.ts:15",{"_index":2675,"title":{},"body":{"components/SelectedActionsComponent.html":{}}}],["actions.component.ts:16",{"_index":2677,"title":{},"body":{"components/SelectedActionsComponent.html":{}}}],["actions.component.ts:18",{"_index":2665,"title":{},"body":{"components/SelectedActionsComponent.html":{}}}],["actions.component.ts:19",{"_index":2666,"title":{},"body":{"components/SelectedActionsComponent.html":{}}}],["actions.component.ts:20",{"_index":2664,"title":{},"body":{"components/SelectedActionsComponent.html":{}}}],["actions.component.ts:25",{"_index":2667,"title":{},"body":{"components/SelectedActionsComponent.html":{}}}],["actions.component.ts:29",{"_index":2669,"title":{},"body":{"components/SelectedActionsComponent.html":{}}}],["actions.component.ts:34",{"_index":2671,"title":{},"body":{"components/SelectedActionsComponent.html":{}}}],["actions.data",{"_index":1524,"title":{},"body":{"injectables/DossierSandbox.html":{},"injectables/PersonsSandbox.html":{}}}],["actions.dologinact",{"_index":661,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["actions.dologinfailact",{"_index":682,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["actions.dologinsuccessaction(new",{"_index":679,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["actions.dologoutact",{"_index":685,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["actions.dologoutfailaction(error",{"_index":690,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["actions.dologoutsuccessact",{"_index":688,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["actions.id",{"_index":1520,"title":{},"body":{"injectables/DossierSandbox.html":{},"injectables/PersonsSandbox.html":{}}}],["actions.nam",{"_index":1522,"title":{},"body":{"injectables/DossierSandbox.html":{},"injectables/PersonsSandbox.html":{}}}],["actions.url",{"_index":1525,"title":{},"body":{"injectables/DossierSandbox.html":{},"injectables/PersonsSandbox.html":{}}}],["actions/auth.act",{"_index":696,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["actions/dossier.act",{"_index":1329,"title":{},"body":{"injectables/DossierEffects.html":{}}}],["actions/menus.act",{"_index":2179,"title":{},"body":{"injectables/MenusEffects.html":{}}}],["actions/person",{"_index":2426,"title":{},"body":{"injectables/PersonsEffects.html":{}}}],["actions/persons.act",{"_index":2424,"title":{},"body":{"injectables/PersonsEffects.html":{}}}],["actions/search",{"_index":2635,"title":{},"body":{"injectables/SearchBoxDatasEffects.html":{}}}],["actions/select",{"_index":1955,"title":{},"body":{"modules/LayoutContainersModule.html":{},"components/SelectedActionsComponent.html":{}}}],["actions/settings.act",{"_index":2734,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["actionsav",{"_index":2258,"title":{},"body":{"components/PersonFormComponent.html":{},"components/ToolbarsComponent.html":{}}}],["actiontyp",{"_index":73,"title":{},"body":{"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"classes/AddUserAction.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteItemSelectedAction.html":{},"classes/DeleteSuccessAction.html":{},"classes/DoLoginAction.html":{},"classes/DoLoginFailAction.html":{},"classes/DoLoginSuccessAction.html":{},"classes/DoLogoutAction.html":{},"classes/DoLogoutFailAction.html":{},"classes/DoLogoutSuccessAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"classes/GetTreeDetailAction.html":{},"classes/LoadAction.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"classes/RemoveUserAction.html":{},"classes/ResetState.html":{},"classes/SelectAction.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetAvaiableMenu.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetClosedAction.html":{},"classes/SetCultureAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{},"classes/SetLanguageAction.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSelectedAction.html":{},"classes/UpdateSuccessAction.html":{}}}],["actiontypes.add_fail",{"_index":64,"title":{},"body":{"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteSuccessAction.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSuccessAction.html":{}}}],["actiontypes.add_new",{"_index":105,"title":{},"body":{"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteSuccessAction.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSuccessAction.html":{}}}],["actiontypes.add_success",{"_index":107,"title":{},"body":{"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteSuccessAction.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSuccessAction.html":{}}}],["actiontypes.add_us",{"_index":130,"title":{},"body":{"classes/AddUserAction.html":{},"classes/DoLoginAction.html":{},"classes/DoLoginFailAction.html":{},"classes/DoLoginSuccessAction.html":{},"classes/DoLogoutAction.html":{},"classes/DoLogoutFailAction.html":{},"classes/DoLogoutSuccessAction.html":{},"classes/RemoveUserAction.html":{}}}],["actiontypes.avaiable_menu",{"_index":2651,"title":{},"body":{"classes/SelectAction.html":{},"classes/SetAvaiableMenu.html":{}}}],["actiontypes.delet",{"_index":116,"title":{},"body":{"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteSuccessAction.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSuccessAction.html":{}}}],["actiontypes.delete_fail",{"_index":120,"title":{},"body":{"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteSuccessAction.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSuccessAction.html":{}}}],["actiontypes.delete_item_select_act",{"_index":1107,"title":{},"body":{"classes/DeleteItemSelectedAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetCultureAction.html":{},"classes/SetLanguageAction.html":{},"classes/UpdateSelectedAction.html":{}}}],["actiontypes.delete_success",{"_index":118,"title":{},"body":{"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteSuccessAction.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSuccessAction.html":{}}}],["actiontypes.do_login",{"_index":145,"title":{},"body":{"classes/AddUserAction.html":{},"classes/DoLoginAction.html":{},"classes/DoLoginFailAction.html":{},"classes/DoLoginSuccessAction.html":{},"classes/DoLogoutAction.html":{},"classes/DoLogoutFailAction.html":{},"classes/DoLogoutSuccessAction.html":{},"classes/RemoveUserAction.html":{}}}],["actiontypes.do_login_fail",{"_index":149,"title":{},"body":{"classes/AddUserAction.html":{},"classes/DoLoginAction.html":{},"classes/DoLoginFailAction.html":{},"classes/DoLoginSuccessAction.html":{},"classes/DoLogoutAction.html":{},"classes/DoLogoutFailAction.html":{},"classes/DoLogoutSuccessAction.html":{},"classes/RemoveUserAction.html":{}}}],["actiontypes.do_login_success",{"_index":147,"title":{},"body":{"classes/AddUserAction.html":{},"classes/DoLoginAction.html":{},"classes/DoLoginFailAction.html":{},"classes/DoLoginSuccessAction.html":{},"classes/DoLogoutAction.html":{},"classes/DoLogoutFailAction.html":{},"classes/DoLogoutSuccessAction.html":{},"classes/RemoveUserAction.html":{}}}],["actiontypes.do_logout",{"_index":151,"title":{},"body":{"classes/AddUserAction.html":{},"classes/DoLoginAction.html":{},"classes/DoLoginFailAction.html":{},"classes/DoLoginSuccessAction.html":{},"classes/DoLogoutAction.html":{},"classes/DoLogoutFailAction.html":{},"classes/DoLogoutSuccessAction.html":{},"classes/RemoveUserAction.html":{}}}],["actiontypes.do_logout_fail",{"_index":155,"title":{},"body":{"classes/AddUserAction.html":{},"classes/DoLoginAction.html":{},"classes/DoLoginFailAction.html":{},"classes/DoLoginSuccessAction.html":{},"classes/DoLogoutAction.html":{},"classes/DoLogoutFailAction.html":{},"classes/DoLogoutSuccessAction.html":{},"classes/RemoveUserAction.html":{}}}],["actiontypes.do_logout_success",{"_index":153,"title":{},"body":{"classes/AddUserAction.html":{},"classes/DoLoginAction.html":{},"classes/DoLoginFailAction.html":{},"classes/DoLoginSuccessAction.html":{},"classes/DoLogoutAction.html":{},"classes/DoLogoutFailAction.html":{},"classes/DoLogoutSuccessAction.html":{},"classes/RemoveUserAction.html":{}}}],["actiontypes.document_cr",{"_index":1149,"title":{},"body":{"classes/DeleteItemSelectedAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetCultureAction.html":{},"classes/SetLanguageAction.html":{},"classes/UpdateSelectedAction.html":{}}}],["actiontypes.document_create_success",{"_index":1151,"title":{},"body":{"classes/DeleteItemSelectedAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetCultureAction.html":{},"classes/SetLanguageAction.html":{},"classes/UpdateSelectedAction.html":{}}}],["actiontypes.get_tree_detail",{"_index":1571,"title":{},"body":{"classes/GetTreeDetailAction.html":{},"classes/LoadAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"classes/ResetState.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetClosedAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{}}}],["actiontypes.load",{"_index":97,"title":{},"body":{"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteSuccessAction.html":{},"classes/GetTreeDetailAction.html":{},"classes/LoadAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"classes/ResetState.html":{},"classes/SelectAction.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetAvaiableMenu.html":{},"classes/SetClosedAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSuccessAction.html":{}}}],["actiontypes.load_api_languag",{"_index":1141,"title":{},"body":{"classes/DeleteItemSelectedAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetCultureAction.html":{},"classes/SetLanguageAction.html":{},"classes/UpdateSelectedAction.html":{}}}],["actiontypes.load_api_rol",{"_index":1137,"title":{},"body":{"classes/DeleteItemSelectedAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetCultureAction.html":{},"classes/SetLanguageAction.html":{},"classes/UpdateSelectedAction.html":{}}}],["actiontypes.load_fail",{"_index":103,"title":{},"body":{"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteItemSelectedAction.html":{},"classes/DeleteSuccessAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"classes/GetTreeDetailAction.html":{},"classes/LoadAction.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"classes/ResetState.html":{},"classes/SelectAction.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetAvaiableMenu.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetClosedAction.html":{},"classes/SetCultureAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{},"classes/SetLanguageAction.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSelectedAction.html":{},"classes/UpdateSuccessAction.html":{}}}],["actiontypes.load_success",{"_index":100,"title":{},"body":{"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteSuccessAction.html":{},"classes/GetTreeDetailAction.html":{},"classes/LoadAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"classes/ResetState.html":{},"classes/SelectAction.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetAvaiableMenu.html":{},"classes/SetClosedAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSuccessAction.html":{}}}],["actiontypes.remove_us",{"_index":157,"title":{},"body":{"classes/AddUserAction.html":{},"classes/DoLoginAction.html":{},"classes/DoLoginFailAction.html":{},"classes/DoLoginSuccessAction.html":{},"classes/DoLogoutAction.html":{},"classes/DoLogoutFailAction.html":{},"classes/DoLogoutSuccessAction.html":{},"classes/RemoveUserAction.html":{}}}],["actiontypes.reset_st",{"_index":1147,"title":{},"body":{"classes/DeleteItemSelectedAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"classes/GetTreeDetailAction.html":{},"classes/LoadAction.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"classes/ResetState.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetClosedAction.html":{},"classes/SetCultureAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{},"classes/SetLanguageAction.html":{},"classes/UpdateSelectedAction.html":{}}}],["actiontypes.select",{"_index":2646,"title":{},"body":{"classes/SelectAction.html":{},"classes/SetAvaiableMenu.html":{}}}],["actiontypes.set_avaible_languag",{"_index":1143,"title":{},"body":{"classes/DeleteItemSelectedAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetCultureAction.html":{},"classes/SetLanguageAction.html":{},"classes/UpdateSelectedAction.html":{}}}],["actiontypes.set_avaible_rol",{"_index":1139,"title":{},"body":{"classes/DeleteItemSelectedAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetCultureAction.html":{},"classes/SetLanguageAction.html":{},"classes/UpdateSelectedAction.html":{}}}],["actiontypes.set_cultur",{"_index":1135,"title":{},"body":{"classes/DeleteItemSelectedAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetCultureAction.html":{},"classes/SetLanguageAction.html":{},"classes/UpdateSelectedAction.html":{}}}],["actiontypes.set_languag",{"_index":1133,"title":{},"body":{"classes/DeleteItemSelectedAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetCultureAction.html":{},"classes/SetLanguageAction.html":{},"classes/UpdateSelectedAction.html":{}}}],["actiontypes.upd",{"_index":109,"title":{},"body":{"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteSuccessAction.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSuccessAction.html":{}}}],["actiontypes.update_fail",{"_index":114,"title":{},"body":{"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteSuccessAction.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSuccessAction.html":{}}}],["actiontypes.update_select_act",{"_index":1145,"title":{},"body":{"classes/DeleteItemSelectedAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetCultureAction.html":{},"classes/SetLanguageAction.html":{},"classes/UpdateSelectedAction.html":{}}}],["actiontypes.update_success",{"_index":112,"title":{},"body":{"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteSuccessAction.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSuccessAction.html":{}}}],["activ",{"_index":1333,"title":{},"body":{"classes/DossierFilterModel.html":{},"classes/GetTreeDetailAction.html":{},"interfaces/IDossierFilterModel.html":{},"classes/LoadAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"classes/ResetState.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetClosedAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{}}}],["activatedrout",{"_index":743,"title":{},"body":{"injectables/AuthSandbox.html":{},"components/DossierNavigatorComponent.html":{},"components/PageBadGatewayComponent.html":{}}}],["activatedroutesnapshot",{"_index":702,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthorizeGuard.html":{},"injectables/PersonsResolver.html":{}}}],["actual_compon",{"_index":355,"title":{},"body":{"components/AppComponent.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{}}}],["ad",{"_index":84,"title":{},"body":{"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteSuccessAction.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSuccessAction.html":{}}}],["adapt",{"_index":180,"title":{},"body":{"injectables/AppApiClient.html":{},"injectables/AuthApiClient.html":{},"injectables/DossierApiClient.html":{},"injectables/PersonsApiClient.html":{}}}],["adapter(appservice.getdocumentcr",{"_index":207,"title":{},"body":{"injectables/AppApiClient.html":{}}}],["adapter(appservice.getlangsadapt",{"_index":200,"title":{},"body":{"injectables/AppApiClient.html":{}}}],["adapter(appservice.getrolesadapt",{"_index":197,"title":{},"body":{"injectables/AppApiClient.html":{}}}],["adapter(authsandbox.authadapt",{"_index":624,"title":{},"body":{"injectables/AuthApiClient.html":{}}}],["adapter(authsandbox.logoutadapt",{"_index":627,"title":{},"body":{"injectables/AuthApiClient.html":{}}}],["adapter(dossierservice.gridadapt",{"_index":1299,"title":{},"body":{"injectables/DossierApiClient.html":{}}}],["adapter(personsservice.deletepersonadapt",{"_index":2385,"title":{},"body":{"injectables/PersonsApiClient.html":{}}}],["adapter(personsservice.gridadapt",{"_index":2372,"title":{},"body":{"injectables/PersonsApiClient.html":{}}}],["adapter(personsservice.insertpersonadapt",{"_index":2382,"title":{},"body":{"injectables/PersonsApiClient.html":{}}}],["adapter(personsservice.persondetailsadapt",{"_index":2376,"title":{},"body":{"injectables/PersonsApiClient.html":{}}}],["adapter(personsservice.updatepersonadapt",{"_index":2379,"title":{},"body":{"injectables/PersonsApiClient.html":{}}}],["adapterfn",{"_index":1662,"title":{},"body":{"classes/HttpAdapter.html":{},"injectables/HttpService.html":{}}}],["adapterfn.call(undefin",{"_index":1669,"title":{},"body":{"classes/HttpAdapter.html":{}}}],["add",{"_index":81,"title":{},"body":{"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"classes/AddUserAction.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteSuccessAction.html":{},"classes/DoLoginAction.html":{},"classes/DoLoginFailAction.html":{},"classes/DoLoginSuccessAction.html":{},"classes/DoLogoutAction.html":{},"classes/DoLogoutFailAction.html":{},"classes/DoLogoutSuccessAction.html":{},"injectables/PersonsSandbox.html":{},"classes/RemoveUserAction.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSuccessAction.html":{}}}],["add_fail",{"_index":86,"title":{},"body":{"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteSuccessAction.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSuccessAction.html":{}}}],["add_new",{"_index":82,"title":{},"body":{"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteSuccessAction.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSuccessAction.html":{}}}],["add_success",{"_index":85,"title":{},"body":{"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteSuccessAction.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSuccessAction.html":{}}}],["add_us",{"_index":141,"title":{},"body":{"classes/AddUserAction.html":{},"classes/DoLoginAction.html":{},"classes/DoLoginFailAction.html":{},"classes/DoLoginSuccessAction.html":{},"classes/DoLogoutAction.html":{},"classes/DoLogoutFailAction.html":{},"classes/DoLogoutSuccessAction.html":{},"classes/RemoveUserAction.html":{}}}],["addfailact",{"_index":56,"title":{"classes/AddFailAction.html":{}},"body":{"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteSuccessAction.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSuccessAction.html":{},"miscellaneous/typealiases.html":{}}}],["addit",{"_index":2784,"title":{},"body":{"interfaces/State.html":{}}}],["addnew",{"_index":2428,"title":{},"body":{"injectables/PersonsEffects.html":{}}}],["addnewact",{"_index":104,"title":{"classes/AddNewAction.html":{}},"body":{"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteSuccessAction.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSuccessAction.html":{},"miscellaneous/typealiases.html":{}}}],["addnewperson",{"_index":2402,"title":{},"body":{"injectables/PersonsEffects.html":{}}}],["address",{"_index":3056,"title":{},"body":{"injectables/ValidationService.html":{},"index.html":{}}}],["addsuccessact",{"_index":106,"title":{"classes/AddSuccessAction.html":{}},"body":{"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteSuccessAction.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSuccessAction.html":{},"miscellaneous/typealiases.html":{}}}],["adduseract",{"_index":125,"title":{"classes/AddUserAction.html":{}},"body":{"classes/AddUserAction.html":{},"classes/DoLoginAction.html":{},"classes/DoLoginFailAction.html":{},"classes/DoLoginSuccessAction.html":{},"classes/DoLogoutAction.html":{},"classes/DoLogoutFailAction.html":{},"classes/DoLogoutSuccessAction.html":{},"classes/RemoveUserAction.html":{},"miscellaneous/typealiases.html":{}}}],["adequ",{"_index":2778,"title":{},"body":{"interfaces/State.html":{}}}],["adjust",{"_index":3034,"title":{},"body":{"injectables/UtilService.html":{}}}],["afterviewinit",{"_index":930,"title":{},"body":{"components/ControlWebDavComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/LeftSidebarComponent.html":{}}}],["ag",{"_index":2131,"title":{},"body":{"components/LoginComponent.html":{}}}],["aitem",{"_index":1076,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["aitems.map(item",{"_index":1079,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["aktiv",{"_index":1577,"title":{},"body":{"classes/GetTreeDetailAction.html":{},"classes/LoadAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"classes/ResetState.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetClosedAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{}}}],["alert",{"_index":3028,"title":{},"body":{"injectables/UtilService.html":{}}}],["alias",{"_index":3194,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":805,"title":{},"body":{"directives/AuthorizeDirective.html":{},"injectables/AuthorizeGuard.html":{}}}],["allowdelet",{"_index":2655,"title":{},"body":{"components/SelectedActionsComponent.html":{}}}],["allowedit",{"_index":2390,"title":{},"body":{"components/PersonsComponent.html":{}}}],["allthi",{"_index":3132,"title":{},"body":{"index.html":{}}}],["angular",{"_index":383,"title":{},"body":{"modules/AppModule.html":{},"modules/ComponentsModule.html":{},"modules/DossierNavigatorModule.html":{},"modules/LayoutContainersModule.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"modules/PersonsModule.html":{},"components/SelectedActionsComponent.html":{},"components/TreeDetailComponent.html":{},"dependencies.html":{}}}],["angular/anim",{"_index":2770,"title":{},"body":{"interfaces/State.html":{},"dependencies.html":{}}}],["angular/common",{"_index":393,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ComponentsModule.html":{},"modules/ControlWebDavModule.html":{},"modules/DocumentGenerationModule.html":{},"modules/DocumentReportViewerModule.html":{},"modules/DossierNavigatorModule.html":{},"modules/ExceptionsModule.html":{},"modules/HttpServiceModule.html":{},"modules/LayoutContainersModule.html":{},"components/PageBadGatewayComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"modules/PersonsModule.html":{},"components/TreeDetailComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":189,"title":{},"body":{"injectables/AppApiClient.html":{},"modules/AppModule.html":{},"injectables/AuthApiClient.html":{},"modules/AuthModule.html":{},"injectables/DossierApiClient.html":{},"modules/DossierNavigatorModule.html":{},"injectables/HttpService.html":{},"injectables/PersonsApiClient.html":{},"injectables/ReportService.html":{}}}],["angular/compil",{"_index":3072,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":55,"title":{},"body":{"classes/ActionHandler.html":{},"injectables/AppApiClient.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppSandbox.html":{},"injectables/AppService.html":{},"injectables/AuthApiClient.html":{},"injectables/AuthEffects.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthSandbox.html":{},"directives/AuthorizeDirective.html":{},"injectables/AuthorizeGuard.html":{},"classes/BaseComponent.html":{},"components/BreadCrumbComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"modules/ComponentsModule.html":{},"injectables/ConfigService.html":{},"components/ControlWebDavComponent.html":{},"modules/ControlWebDavModule.html":{},"components/DocumentGenerationComponent.html":{},"modules/DocumentGenerationModule.html":{},"components/DocumentReportViewerComponent.html":{},"modules/DocumentReportViewerModule.html":{},"injectables/DocumentsHelper.html":{},"injectables/DossierApiClient.html":{},"components/DossierDetailsComponent.html":{},"injectables/DossierEffects.html":{},"components/DossierNavigatorComponent.html":{},"modules/DossierNavigatorModule.html":{},"modules/DossierRoutingModule.html":{},"injectables/DossierSandbox.html":{},"injectables/DossierService.html":{},"directives/DynamicTabsDirective.html":{},"modules/ExceptionsModule.html":{},"modules/ExceptionsRoutingModule.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"injectables/HttpResponseHandler.html":{},"injectables/HttpService.html":{},"modules/HttpServiceModule.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"modules/LayoutContainersModule.html":{},"injectables/LayoutSandbox.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"injectables/MenusEffects.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"injectables/PersonsApiClient.html":{},"components/PersonsComponent.html":{},"injectables/PersonsEffects.html":{},"modules/PersonsModule.html":{},"injectables/PersonsResolver.html":{},"modules/PersonsRoutingModule.html":{},"injectables/PersonsSandbox.html":{},"injectables/PersonsService.html":{},"modules/PipesModule.html":{},"components/ProfileBarComponent.html":{},"injectables/ReportService.html":{},"components/ReportViewerComponent.html":{},"classes/Sandbox.html":{},"pipes/SanitizeHtmlPipe.html":{},"components/SearchBoxComponent.html":{},"injectables/SearchBoxDatasEffects.html":{},"components/SelectedActionsComponent.html":{},"injectables/SettingsEffects.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{},"injectables/UtilService.html":{},"modules/UtilityModule.html":{},"injectables/ValidationService.html":{},"dependencies.html":{}}}],["angular/form",{"_index":397,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ComponentsModule.html":{},"modules/DossierNavigatorModule.html":{},"components/LoginComponent.html":{},"modules/PersonsModule.html":{},"injectables/ValidationService.html":{},"dependencies.html":{}}}],["angular/http",{"_index":402,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthApiClient.html":{},"injectables/ConfigService.html":{},"classes/HttpAdapter.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"injectables/PersonsEffects.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":388,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/BaseComponent.html":{},"modules/DossierNavigatorModule.html":{},"modules/PersonsModule.html":{},"pipes/SanitizeHtmlPipe.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":245,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthSandbox.html":{},"injectables/AuthorizeGuard.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"modules/ComponentsModule.html":{},"components/DossierNavigatorComponent.html":{},"modules/DossierNavigatorModule.html":{},"modules/DossierRoutingModule.html":{},"injectables/DossierSandbox.html":{},"modules/ExceptionsRoutingModule.html":{},"injectables/HttpResponseHandler.html":{},"modules/LayoutContainersModule.html":{},"injectables/LayoutSandbox.html":{},"components/PageBadGatewayComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"modules/PersonsModule.html":{},"injectables/PersonsResolver.html":{},"modules/PersonsRoutingModule.html":{},"injectables/PersonsSandbox.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{},"dependencies.html":{}}}],["angular2",{"_index":449,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/HttpResponseHandler.html":{},"injectables/UtilService.html":{},"dependencies.html":{}}}],["aot",{"_index":453,"title":{},"body":{"modules/AppModule.html":{}}}],["api",{"_index":202,"title":{},"body":{"injectables/AppApiClient.html":{},"injectables/AppService.html":{},"injectables/AuthApiClient.html":{},"classes/DeleteItemSelectedAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"injectables/DossierService.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"injectables/PersonsService.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetCultureAction.html":{},"classes/SetLanguageAction.html":{},"classes/UpdateSelectedAction.html":{},"dependencies.html":{},"index.html":{}}}],["api/transl",{"_index":590,"title":{},"body":{"injectables/AppService.html":{}}}],["app",{"_index":282,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppSandbox.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"modules/DocumentGenerationModule.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"injectables/HttpResponseHandler.html":{},"injectables/HttpService.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{},"injectables/UtilService.html":{},"index.html":{}}}],["app.compon",{"_index":404,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":222,"title":{},"body":{"components/AppComponent.html":{}}}],["app.module.t",{"_index":3180,"title":{},"body":{"index.html":{}}}],["app.sandbox",{"_index":246,"title":{},"body":{"components/AppComponent.html":{},"components/PersonFormComponent.html":{}}}],["app.servic",{"_index":191,"title":{},"body":{"injectables/AppApiClient.html":{},"modules/AppModule.html":{}}}],["app_initi",{"_index":395,"title":{},"body":{"modules/AppModule.html":{}}}],["appapicli",{"_index":159,"title":{"injectables/AppApiClient.html":{}},"body":{"injectables/AppApiClient.html":{},"modules/AppModule.html":{},"injectables/SettingsEffects.html":{},"overview.html":{}}}],["appapiclient.servic",{"_index":430,"title":{},"body":{"modules/AppModule.html":{},"injectables/SettingsEffects.html":{}}}],["appauthor",{"_index":793,"title":{},"body":{"directives/AuthorizeDirective.html":{}}}],["appauthorize(rol",{"_index":803,"title":{},"body":{"directives/AuthorizeDirective.html":{}}}],["appauthorize]'},{'nam",{"_index":351,"title":{},"body":{"components/AppComponent.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{}}}],["appcompon",{"_index":210,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{},"overview.html":{}}}],["appli",{"_index":2814,"title":{},"body":{"interfaces/State.html":{}}}],["applic",{"_index":240,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppSandbox.html":{},"injectables/AuthEffects.html":{},"injectables/PersonsResolver.html":{}}}],["application/json",{"_index":193,"title":{},"body":{"injectables/AppApiClient.html":{},"injectables/AuthApiClient.html":{},"injectables/ConfigService.html":{},"components/ControlWebDavComponent.html":{},"injectables/DossierApiClient.html":{},"injectables/PersonsApiClient.html":{}}}],["application/pdf",{"_index":1287,"title":{},"body":{"injectables/DocumentsHelper.html":{}}}],["application/vnd.openxmlformat",{"_index":1280,"title":{},"body":{"injectables/DocumentsHelper.html":{}}}],["application/x",{"_index":618,"title":{},"body":{"injectables/AuthApiClient.html":{}}}],["applicatit",{"_index":3134,"title":{},"body":{"index.html":{}}}],["appmodul",{"_index":357,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appropri",{"_index":903,"title":{},"body":{"injectables/ConfigService.html":{}}}],["approut",{"_index":522,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["approutingmodul",{"_index":367,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["appsandbox",{"_index":219,"title":{"injectables/AppSandbox.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppSandbox.html":{},"components/PersonFormComponent.html":{},"overview.html":{}}}],["appservic",{"_index":190,"title":{"injectables/AppService.html":{}},"body":{"injectables/AppApiClient.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"overview.html":{}}}],["appstat",{"_index":543,"title":{},"body":{"injectables/AppSandbox.html":{},"injectables/AuthEffects.html":{},"injectables/AuthSandbox.html":{},"injectables/DossierEffects.html":{},"injectables/DossierSandbox.html":{},"injectables/LayoutSandbox.html":{},"injectables/MenusEffects.html":{},"injectables/PersonsEffects.html":{},"injectables/PersonsSandbox.html":{},"classes/Sandbox.html":{},"injectables/SearchBoxDatasEffects.html":{},"injectables/SettingsEffects.html":{}}}],["archiv",{"_index":1334,"title":{},"body":{"classes/DossierFilterModel.html":{},"classes/GetTreeDetailAction.html":{},"interfaces/IDossierFilterModel.html":{},"classes/LoadAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"classes/ResetState.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetClosedAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{}}}],["around",{"_index":455,"title":{},"body":{"modules/AppModule.html":{}}}],["array",{"_index":101,"title":{},"body":{"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"components/AppComponent.html":{},"injectables/AppSandbox.html":{},"injectables/AppService.html":{},"injectables/AuthSandbox.html":{},"injectables/AuthorizeGuard.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteSuccessAction.html":{},"components/DossierNavigatorComponent.html":{},"injectables/DossierSandbox.html":{},"injectables/DossierService.html":{},"classes/GetTreeDetailAction.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"injectables/HttpResponseHandler.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"injectables/LayoutSandbox.html":{},"classes/LoadAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"injectables/PersonsSandbox.html":{},"injectables/PersonsService.html":{},"classes/ResetState.html":{},"components/SearchBoxComponent.html":{},"classes/SelectAction.html":{},"components/SelectedActionsComponent.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetAvaiableMenu.html":{},"classes/SetClosedAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{},"components/TreeListComponent.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSuccessAction.html":{},"injectables/UtilService.html":{}}}],["array.isarray(response[key",{"_index":1758,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["assets/data/test_report.json",{"_index":2571,"title":{},"body":{"injectables/ReportService.html":{}}}],["assets/icon",{"_index":2676,"title":{},"body":{"components/SelectedActionsComponent.html":{},"components/TreeListComponent.html":{}}}],["assets/icon/charact",{"_index":2957,"title":{},"body":{"components/TreeListComponent.html":{}}}],["assets/webdav/plugin",{"_index":1004,"title":{},"body":{"components/ControlWebDavComponent.html":{},"components/PersonFormComponent.html":{}}}],["assetsfold",{"_index":1906,"title":{},"body":{"components/LayoutContainer.html":{}}}],["asyncservices/http/http.decor",{"_index":66,"title":{},"body":{"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteSuccessAction.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSuccessAction.html":{}}}],["auth",{"_index":728,"title":{},"body":{"modules/AuthModule.html":{},"interfaces/State.html":{}}}],["auth.login.submit",{"_index":2127,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.password",{"_index":2125,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.passwordrequirederror",{"_index":2126,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.sandbox",{"_index":610,"title":{},"body":{"injectables/AuthApiClient.html":{},"modules/AuthModule.html":{},"components/LoginComponent.html":{}}}],["auth.usernam",{"_index":2123,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.usernamerequirederror",{"_index":2124,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth/auth.module#authmodul",{"_index":527,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth/auth.sandbox",{"_index":382,"title":{},"body":{"modules/AppModule.html":{},"directives/AuthorizeDirective.html":{},"injectables/AuthorizeGuard.html":{}}}],["auth/authapiclient.servic",{"_index":429,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthEffects.html":{}}}],["authact",{"_index":762,"title":{},"body":{"injectables/AuthSandbox.html":{},"injectables/LayoutSandbox.html":{},"classes/Sandbox.html":{}}}],["authactions.adduseraction(new",{"_index":2609,"title":{},"body":{"classes/Sandbox.html":{}}}],["authactions.dologinaction(new",{"_index":768,"title":{},"body":{"injectables/AuthSandbox.html":{}}}],["authactions.dologoutact",{"_index":2011,"title":{},"body":{"injectables/LayoutSandbox.html":{}}}],["authadapt",{"_index":739,"title":{},"body":{"injectables/AuthSandbox.html":{}}}],["authadapter(us",{"_index":746,"title":{},"body":{"injectables/AuthSandbox.html":{}}}],["authapicli",{"_index":370,"title":{"injectables/AuthApiClient.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthApiClient.html":{},"injectables/AuthEffects.html":{},"modules/AuthModule.html":{},"overview.html":{}}}],["authapiclient.servic",{"_index":732,"title":{},"body":{"modules/AuthModule.html":{}}}],["autheffect",{"_index":415,"title":{"injectables/AuthEffects.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthEffects.html":{}}}],["authen",{"_index":3139,"title":{},"body":{"index.html":{}}}],["authent",{"_index":710,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["authguard",{"_index":371,"title":{"injectables/AuthGuard.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"modules/DossierRoutingModule.html":{},"modules/PersonsRoutingModule.html":{},"overview.html":{}}}],["authmodul",{"_index":720,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authorize/authorize.direct",{"_index":885,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["authorizedirect",{"_index":350,"title":{"directives/AuthorizeDirective.html":{}},"body":{"components/AppComponent.html":{},"directives/AuthorizeDirective.html":{},"components/BreadCrumbComponent.html":{},"modules/ComponentsModule.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{},"overview.html":{}}}],["authorizeguard",{"_index":373,"title":{"injectables/AuthorizeGuard.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthorizeGuard.html":{},"modules/PersonsRoutingModule.html":{},"overview.html":{}}}],["authrout",{"_index":734,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["authroutingmodul",{"_index":725,"title":{"modules/AuthRoutingModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["authsandbox",{"_index":372,"title":{"injectables/AuthSandbox.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthApiClient.html":{},"modules/AuthModule.html":{},"injectables/AuthSandbox.html":{},"directives/AuthorizeDirective.html":{},"injectables/AuthorizeGuard.html":{},"components/LoginComponent.html":{},"overview.html":{}}}],["auto",{"_index":2674,"title":{},"body":{"components/SelectedActionsComponent.html":{}}}],["avaiable_menu",{"_index":2648,"title":{},"body":{"classes/SelectAction.html":{},"classes/SetAvaiableMenu.html":{}}}],["avail",{"_index":3184,"title":{},"body":{"modules.html":{}}}],["availablelanguag",{"_index":1610,"title":{},"body":{"components/HeaderComponent.html":{},"components/LanguageSelectorComponent.html":{},"injectables/LayoutSandbox.html":{}}}],["availablemenu",{"_index":1966,"title":{},"body":{"injectables/LayoutSandbox.html":{}}}],["availablerol",{"_index":2587,"title":{},"body":{"classes/Sandbox.html":{}}}],["aventi",{"_index":1646,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["awesom",{"_index":3099,"title":{},"body":{"dependencies.html":{}}}],["b",{"_index":1440,"title":{},"body":{"classes/DossierNavigatorTreeModel.html":{},"interfaces/IDossierNavigatorTreeModel.html":{}}}],["backend",{"_index":3143,"title":{},"body":{"index.html":{}}}],["bahnhofstrass",{"_index":2132,"title":{},"body":{"components/LoginComponent.html":{}}}],["bapersonid",{"_index":1441,"title":{},"body":{"classes/DossierNavigatorTreeModel.html":{},"interfaces/IDossierNavigatorTreeModel.html":{}}}],["bar",{"_index":2553,"title":{},"body":{"components/ProfileBarComponent.html":{}}}],["bar'},{'nam",{"_index":335,"title":{},"body":{"components/AppComponent.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{}}}],["bar.compon",{"_index":1950,"title":{},"body":{"modules/LayoutContainersModule.html":{}}}],["bar.component.html",{"_index":2555,"title":{},"body":{"components/ProfileBarComponent.html":{}}}],["bar.component.scss",{"_index":2554,"title":{},"body":{"components/ProfileBarComponent.html":{}}}],["bar.component.t",{"_index":2552,"title":{},"body":{"components/ProfileBarComponent.html":{}}}],["bar.component.ts:11",{"_index":2558,"title":{},"body":{"components/ProfileBarComponent.html":{}}}],["bar.component.ts:12",{"_index":2557,"title":{},"body":{"components/ProfileBarComponent.html":{}}}],["bar.component.ts:13",{"_index":2556,"title":{},"body":{"components/ProfileBarComponent.html":{}}}],["bar/profil",{"_index":1949,"title":{},"body":{"modules/LayoutContainersModule.html":{},"components/ProfileBarComponent.html":{}}}],["base",{"_index":483,"title":{},"body":{"modules/AppModule.html":{},"injectables/ConfigService.html":{},"classes/Sandbox.html":{}}}],["baseadapt",{"_index":1660,"title":{},"body":{"classes/HttpAdapter.html":{}}}],["baseadapter(r",{"_index":1661,"title":{},"body":{"classes/HttpAdapter.html":{}}}],["basecompon",{"_index":817,"title":{"classes/BaseComponent.html":{}},"body":{"classes/BaseComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/LoginComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{}}}],["basecomponent:10",{"_index":1379,"title":{},"body":{"components/DossierNavigatorComponent.html":{},"components/LoginComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{}}}],["basecomponent:12",{"_index":1381,"title":{},"body":{"components/DossierNavigatorComponent.html":{},"components/LoginComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{}}}],["basecomponent:18",{"_index":1376,"title":{},"body":{"components/DossierNavigatorComponent.html":{},"components/LoginComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{}}}],["basecomponent:22",{"_index":1375,"title":{},"body":{"components/DossierNavigatorComponent.html":{},"components/LoginComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{}}}],["basecomponent:9",{"_index":1380,"title":{},"body":{"components/DossierNavigatorComponent.html":{},"components/LoginComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{}}}],["be",{"_index":644,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["bearer",{"_index":1812,"title":{},"body":{"injectables/HttpService.html":{}}}],["below",{"_index":648,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["bffnummer",{"_index":1831,"title":{},"body":{"interfaces/IPerson.html":{},"classes/Person.html":{}}}],["bind",{"_index":3168,"title":{},"body":{"index.html":{}}}],["blob",{"_index":1267,"title":{},"body":{"injectables/DocumentsHelper.html":{}}}],["blob([data",{"_index":1268,"title":{},"body":{"injectables/DocumentsHelper.html":{}}}],["bodi",{"_index":184,"title":{},"body":{"injectables/AppApiClient.html":{},"components/AppComponent.html":{},"injectables/AuthApiClient.html":{},"injectables/DossierApiClient.html":{},"injectables/PersonsApiClient.html":{}}}],["body'},{'nam",{"_index":280,"title":{},"body":{"components/AppComponent.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{}}}],["bodypars",{"_index":1729,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["boolean",{"_index":45,"title":{},"body":{"classes/ActionHandler.html":{},"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ControlWebDavComponent.html":{},"classes/DossierFilterModel.html":{},"components/HeaderComponent.html":{},"interfaces/IDossierFilterModel.html":{},"interfaces/IMenuModel.html":{},"interfaces/ISidebarMenuModel.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"classes/MenuModel.html":{},"components/SelectedActionsComponent.html":{},"classes/SidebarMenuModel.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"classes/User.html":{},"interfaces/role.html":{}}}],["bootstrap",{"_index":360,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ComponentsModule.html":{},"modules/ControlWebDavModule.html":{},"modules/DocumentGenerationModule.html":{},"modules/DocumentReportViewerModule.html":{},"modules/DossierNavigatorModule.html":{},"modules/ExceptionsModule.html":{},"modules/LayoutContainersModule.html":{},"modules/PersonsModule.html":{},"modules/PipesModule.html":{},"overview.html":{}}}],["box",{"_index":1638,"title":{},"body":{"components/HeaderComponent.html":{},"components/NotificationBoxComponent.html":{},"components/SearchBoxComponent.html":{},"interfaces/State.html":{}}}],["box'},{'nam",{"_index":319,"title":{},"body":{"components/AppComponent.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{}}}],["box.act",{"_index":2007,"title":{},"body":{"injectables/LayoutSandbox.html":{},"injectables/SearchBoxDatasEffects.html":{}}}],["box.action.t",{"_index":3202,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["box.compon",{"_index":1947,"title":{},"body":{"modules/LayoutContainersModule.html":{}}}],["box.component.html",{"_index":2213,"title":{},"body":{"components/NotificationBoxComponent.html":{},"components/SearchBoxComponent.html":{}}}],["box.component.scss",{"_index":2212,"title":{},"body":{"components/NotificationBoxComponent.html":{},"components/SearchBoxComponent.html":{}}}],["box.component.t",{"_index":2211,"title":{},"body":{"components/NotificationBoxComponent.html":{},"components/SearchBoxComponent.html":{}}}],["box.component.ts:12",{"_index":2215,"title":{},"body":{"components/NotificationBoxComponent.html":{}}}],["box.component.ts:16",{"_index":2622,"title":{},"body":{"components/SearchBoxComponent.html":{}}}],["box.component.ts:8",{"_index":2214,"title":{},"body":{"components/NotificationBoxComponent.html":{}}}],["box.effect",{"_index":421,"title":{},"body":{"modules/AppModule.html":{}}}],["box.effect.t",{"_index":2624,"title":{},"body":{"injectables/SearchBoxDatasEffects.html":{}}}],["box.effect.ts:18",{"_index":2626,"title":{},"body":{"injectables/SearchBoxDatasEffects.html":{}}}],["box.effect.ts:28",{"_index":2633,"title":{},"body":{"injectables/SearchBoxDatasEffects.html":{}}}],["box.model.t",{"_index":1836,"title":{},"body":{"interfaces/ISearchBoxModel.html":{},"classes/SearchBoxModel.html":{}}}],["box.model.ts:2",{"_index":2640,"title":{},"body":{"classes/SearchBoxModel.html":{}}}],["box.model.ts:3",{"_index":2641,"title":{},"body":{"classes/SearchBoxModel.html":{}}}],["box.model.ts:4",{"_index":2638,"title":{},"body":{"classes/SearchBoxModel.html":{}}}],["box.model.ts:5",{"_index":2639,"title":{},"body":{"classes/SearchBoxModel.html":{}}}],["box.model.ts:6",{"_index":2637,"title":{},"body":{"classes/SearchBoxModel.html":{}}}],["box.reduc",{"_index":2802,"title":{},"body":{"interfaces/State.html":{}}}],["box/notif",{"_index":1953,"title":{},"body":{"modules/LayoutContainersModule.html":{},"components/NotificationBoxComponent.html":{}}}],["box/search",{"_index":1946,"title":{},"body":{"modules/LayoutContainersModule.html":{},"components/SearchBoxComponent.html":{}}}],["bread",{"_index":283,"title":{},"body":{"components/AppComponent.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{}}}],["breadcrumbcompon",{"_index":281,"title":{"components/BreadCrumbComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"modules/LayoutContainersModule.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{},"overview.html":{}}}],["break",{"_index":1026,"title":{},"body":{"components/ControlWebDavComponent.html":{},"injectables/DocumentsHelper.html":{},"injectables/HttpResponseHandler.html":{},"injectables/UtilService.html":{}}}],["brows",{"_index":3182,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":389,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppSandbox.html":{},"modules/AuthModule.html":{},"classes/BaseComponent.html":{},"modules/DossierNavigatorModule.html":{},"modules/PersonsModule.html":{},"pipes/SanitizeHtmlPipe.html":{},"dependencies.html":{},"index.html":{},"modules.html":{}}}],["browser/anim",{"_index":391,"title":{},"body":{"modules/AppModule.html":{},"modules/DossierNavigatorModule.html":{},"modules/PersonsModule.html":{}}}],["browseranimationsmodul",{"_index":390,"title":{},"body":{"modules/AppModule.html":{},"modules/DossierNavigatorModule.html":{},"modules/PersonsModule.html":{}}}],["browserfunct",{"_index":1637,"title":{},"body":{"components/HeaderComponent.html":{}}}],["browserfunction.gettoggleselector(ev",{"_index":1642,"title":{},"body":{"components/HeaderComponent.html":{}}}],["browserlang",{"_index":560,"title":{},"body":{"injectables/AppSandbox.html":{}}}],["browserlang.match(/en|de|fr|it",{"_index":565,"title":{},"body":{"injectables/AppSandbox.html":{}}}],["browsermodul",{"_index":386,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DossierNavigatorModule.html":{},"modules/PersonsModule.html":{}}}],["btn",{"_index":1184,"title":{},"body":{"components/DocumentGenerationComponent.html":{},"components/ReportViewerComponent.html":{}}}],["btntoogl",{"_index":942,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["build",{"_index":2081,"title":{},"body":{"components/LoginComponent.html":{}}}],["button",{"_index":3145,"title":{},"body":{"index.html":{}}}],["call",{"_index":201,"title":{},"body":{"injectables/AppApiClient.html":{},"modules/AppModule.html":{},"injectables/AuthApiClient.html":{},"classes/DeleteItemSelectedAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"components/LoginComponent.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetCultureAction.html":{},"classes/SetLanguageAction.html":{},"classes/UpdateSelectedAction.html":{}}}],["canactiv",{"_index":698,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthorizeGuard.html":{},"modules/DossierRoutingModule.html":{},"modules/PersonsRoutingModule.html":{}}}],["canactivate(rout",{"_index":701,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthorizeGuard.html":{}}}],["cancomponentdeactiv",{"_index":851,"title":{"interfaces/CanComponentDeactivate.html":{}},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{}}}],["candeactiv",{"_index":853,"title":{},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{}}}],["candeactivate(compon",{"_index":855,"title":{},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{}}}],["candeactivateguard",{"_index":374,"title":{"injectables/CanDeactivateGuard.html":{}},"body":{"modules/AppModule.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"modules/DossierRoutingModule.html":{},"modules/PersonsRoutingModule.html":{},"overview.html":{}}}],["case",{"_index":1024,"title":{},"body":{"components/ControlWebDavComponent.html":{},"injectables/DocumentsHelper.html":{},"injectables/HttpResponseHandler.html":{},"injectables/UtilService.html":{},"index.html":{}}}],["catch",{"_index":1670,"title":{},"body":{"classes/HttpAdapter.html":{},"injectables/HttpResponseHandler.html":{}}}],["catch((err",{"_index":1817,"title":{},"body":{"injectables/HttpService.html":{}}}],["catch((error",{"_index":919,"title":{},"body":{"injectables/ConfigService.html":{}}}],["catch(error",{"_index":681,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/DossierEffects.html":{},"injectables/MenusEffects.html":{},"injectables/PersonsEffects.html":{},"injectables/SearchBoxDatasEffects.html":{},"injectables/SettingsEffects.html":{}}}],["catch(this.errorhandl",{"_index":2573,"title":{},"body":{"injectables/ReportService.html":{}}}],["ch",{"_index":1810,"title":{},"body":{"injectables/HttpService.html":{}}}],["chain",{"_index":2807,"title":{},"body":{"interfaces/State.html":{}}}],["chang",{"_index":261,"title":{},"body":{"components/AppComponent.html":{},"components/LayoutContainer.html":{},"components/LeftSidebarComponent.html":{}}}],["changedetect",{"_index":1353,"title":{},"body":{"components/DossierNavigatorComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeListComponent.html":{}}}],["changedetectionstrategi",{"_index":1384,"title":{},"body":{"components/DossierNavigatorComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeListComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":1354,"title":{},"body":{"components/DossierNavigatorComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeListComponent.html":{}}}],["changedetector",{"_index":2035,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["changedetectorref",{"_index":2033,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["charset=utf",{"_index":621,"title":{},"body":{"injectables/AuthApiClient.html":{}}}],["check",{"_index":647,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/AuthGuard.html":{}}}],["checkauthor",{"_index":810,"title":{},"body":{"injectables/AuthorizeGuard.html":{}}}],["checkauthorize(rol",{"_index":813,"title":{},"body":{"injectables/AuthorizeGuard.html":{}}}],["child",{"_index":2825,"title":{},"body":{"interfaces/State.html":{},"index.html":{}}}],["children",{"_index":1469,"title":{},"body":{"modules/DossierRoutingModule.html":{},"modules/PersonsRoutingModule.html":{}}}],["chorm",{"_index":2053,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["chrome",{"_index":498,"title":{},"body":{"modules/AppModule.html":{}}}],["circular",{"_index":3090,"title":{},"body":{"dependencies.html":{}}}],["ckbactiv",{"_index":2197,"title":{},"body":{"components/NavFiltersComponent.html":{}}}],["ckbarchiv",{"_index":2201,"title":{},"body":{"components/NavFiltersComponent.html":{}}}],["ckbclose",{"_index":2199,"title":{},"body":{"components/NavFiltersComponent.html":{}}}],["ckbincludegroup",{"_index":2203,"title":{},"body":{"components/NavFiltersComponent.html":{}}}],["ckbincludeguest",{"_index":2205,"title":{},"body":{"components/NavFiltersComponent.html":{}}}],["ckbincludetask",{"_index":2207,"title":{},"body":{"components/NavFiltersComponent.html":{}}}],["class",{"_index":0,"title":{"classes/Account.html":{},"classes/ActionHandler.html":{},"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"classes/AddUserAction.html":{},"classes/BaseComponent.html":{},"classes/ClassRightModel.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteItemSelectedAction.html":{},"classes/DeleteSuccessAction.html":{},"classes/DoLoginAction.html":{},"classes/DoLoginFailAction.html":{},"classes/DoLoginSuccessAction.html":{},"classes/DoLogoutAction.html":{},"classes/DoLogoutFailAction.html":{},"classes/DoLogoutSuccessAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"classes/DossierFilterModel.html":{},"classes/DossierNavigatorTreeModel.html":{},"classes/GetTreeDetailAction.html":{},"classes/HttpAdapter.html":{},"classes/ITreeNavModel.html":{},"classes/LoadAction.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"classes/LoginForm.html":{},"classes/MenuModel.html":{},"classes/Person.html":{},"classes/RemoveUserAction.html":{},"classes/ResetState.html":{},"classes/Sandbox.html":{},"classes/SearchBoxModel.html":{},"classes/SelectAction.html":{},"classes/SelectedActionsModel.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetAvaiableMenu.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetClosedAction.html":{},"classes/SetCultureAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{},"classes/SetLanguageAction.html":{},"classes/SidebarMenuModel.html":{},"classes/TemplateModel.html":{},"classes/TreeNavModel.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSelectedAction.html":{},"classes/UpdateSuccessAction.html":{},"classes/User.html":{}},"body":{"classes/Account.html":{},"classes/ActionHandler.html":{},"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"classes/AddUserAction.html":{},"injectables/AppApiClient.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppSandbox.html":{},"injectables/AppService.html":{},"injectables/AuthApiClient.html":{},"injectables/AuthEffects.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthSandbox.html":{},"directives/AuthorizeDirective.html":{},"injectables/AuthorizeGuard.html":{},"classes/BaseComponent.html":{},"components/BreadCrumbComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"classes/ClassRightModel.html":{},"modules/ComponentsModule.html":{},"injectables/ConfigService.html":{},"components/ControlWebDavComponent.html":{},"modules/ControlWebDavModule.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteItemSelectedAction.html":{},"classes/DeleteSuccessAction.html":{},"classes/DoLoginAction.html":{},"classes/DoLoginFailAction.html":{},"classes/DoLoginSuccessAction.html":{},"classes/DoLogoutAction.html":{},"classes/DoLogoutFailAction.html":{},"classes/DoLogoutSuccessAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"components/DocumentGenerationComponent.html":{},"modules/DocumentGenerationModule.html":{},"components/DocumentReportViewerComponent.html":{},"modules/DocumentReportViewerModule.html":{},"injectables/DocumentsHelper.html":{},"injectables/DossierApiClient.html":{},"components/DossierDetailsComponent.html":{},"injectables/DossierEffects.html":{},"classes/DossierFilterModel.html":{},"components/DossierNavigatorComponent.html":{},"modules/DossierNavigatorModule.html":{},"classes/DossierNavigatorTreeModel.html":{},"modules/DossierRoutingModule.html":{},"injectables/DossierSandbox.html":{},"injectables/DossierService.html":{},"directives/DynamicTabsDirective.html":{},"modules/ExceptionsModule.html":{},"modules/ExceptionsRoutingModule.html":{},"classes/GetTreeDetailAction.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"classes/HttpAdapter.html":{},"injectables/HttpResponseHandler.html":{},"injectables/HttpService.html":{},"modules/HttpServiceModule.html":{},"interfaces/IDossierFilterModel.html":{},"interfaces/IDossierNavigatorTreeModel.html":{},"interfaces/IMenuModel.html":{},"interfaces/IPerson.html":{},"interfaces/ISearchBoxModel.html":{},"interfaces/ISidebarMenuModel.html":{},"interfaces/ITemplateModel.html":{},"classes/ITreeNavModel.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"modules/LayoutContainersModule.html":{},"injectables/LayoutSandbox.html":{},"components/LeftSidebarComponent.html":{},"classes/LoadAction.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"components/LoginComponent.html":{},"classes/LoginForm.html":{},"classes/MenuModel.html":{},"injectables/MenusEffects.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Person.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"injectables/PersonsApiClient.html":{},"components/PersonsComponent.html":{},"injectables/PersonsEffects.html":{},"modules/PersonsModule.html":{},"injectables/PersonsResolver.html":{},"modules/PersonsRoutingModule.html":{},"injectables/PersonsSandbox.html":{},"injectables/PersonsService.html":{},"modules/PipesModule.html":{},"components/ProfileBarComponent.html":{},"classes/RemoveUserAction.html":{},"injectables/ReportService.html":{},"components/ReportViewerComponent.html":{},"classes/ResetState.html":{},"classes/Sandbox.html":{},"pipes/SanitizeHtmlPipe.html":{},"components/SearchBoxComponent.html":{},"injectables/SearchBoxDatasEffects.html":{},"classes/SearchBoxModel.html":{},"classes/SelectAction.html":{},"components/SelectedActionsComponent.html":{},"classes/SelectedActionsModel.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetAvaiableMenu.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetClosedAction.html":{},"classes/SetCultureAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{},"classes/SetLanguageAction.html":{},"injectables/SettingsEffects.html":{},"classes/SidebarMenuModel.html":{},"components/SpinnerComponent.html":{},"classes/TemplateModel.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{},"classes/TreeNavModel.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSelectedAction.html":{},"classes/UpdateSuccessAction.html":{},"classes/User.html":{},"injectables/UtilService.html":{},"modules/UtilityModule.html":{},"injectables/ValidationService.html":{},"overview.html":{}}}],["class.bodi",{"_index":249,"title":{},"body":{"components/AppComponent.html":{}}}],["classnam",{"_index":860,"title":{},"body":{"classes/ClassRightModel.html":{},"interfaces/role.html":{}}}],["classname}.maydelet",{"_index":875,"title":{},"body":{"classes/ClassRightModel.html":{}}}],["classname}.mayinsert",{"_index":871,"title":{},"body":{"classes/ClassRightModel.html":{}}}],["classname}.mayupd",{"_index":873,"title":{},"body":{"classes/ClassRightModel.html":{}}}],["classrightmodel",{"_index":827,"title":{"classes/ClassRightModel.html":{}},"body":{"classes/BaseComponent.html":{},"classes/ClassRightModel.html":{},"components/DossierNavigatorComponent.html":{},"components/LoginComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{}}}],["cldr",{"_index":3092,"title":{},"body":{"dependencies.html":{}}}],["clear",{"_index":784,"title":{},"body":{"injectables/AuthSandbox.html":{}}}],["clearcach",{"_index":2097,"title":{},"body":{"components/LoginComponent.html":{}}}],["click",{"_index":2016,"title":{},"body":{"injectables/LayoutSandbox.html":{},"index.html":{}}}],["clickitemsidebar",{"_index":1968,"title":{},"body":{"injectables/LayoutSandbox.html":{}}}],["clickitemsidebar(",{"_index":1974,"title":{},"body":{"injectables/LayoutSandbox.html":{}}}],["clicktogglenav",{"_index":1616,"title":{},"body":{"components/HeaderComponent.html":{}}}],["client_id",{"_index":2138,"title":{},"body":{"classes/LoginForm.html":{}}}],["client_secret",{"_index":2139,"title":{},"body":{"classes/LoginForm.html":{}}}],["close",{"_index":1335,"title":{},"body":{"classes/DossierFilterModel.html":{},"classes/GetTreeDetailAction.html":{},"interfaces/IDossierFilterModel.html":{},"classes/LoadAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"classes/ResetState.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetClosedAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{}}}],["cluster_appmodul",{"_index":361,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_appcomponent_provid",{"_index":363,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":365,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":362,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":364,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":366,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodul",{"_index":721,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_declar",{"_index":722,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_import",{"_index":723,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_provid",{"_index":724,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_componentsmodul",{"_index":876,"title":{},"body":{"modules/ComponentsModule.html":{},"overview.html":{}}}],["cluster_componentsmodule_declar",{"_index":877,"title":{},"body":{"modules/ComponentsModule.html":{},"overview.html":{}}}],["cluster_componentsmodule_export",{"_index":878,"title":{},"body":{"modules/ComponentsModule.html":{},"overview.html":{}}}],["cluster_controlwebdavmodul",{"_index":1094,"title":{},"body":{"modules/ControlWebDavModule.html":{},"overview.html":{}}}],["cluster_controlwebdavmodule_declar",{"_index":1095,"title":{},"body":{"modules/ControlWebDavModule.html":{},"overview.html":{}}}],["cluster_controlwebdavmodule_export",{"_index":1096,"title":{},"body":{"modules/ControlWebDavModule.html":{},"overview.html":{}}}],["cluster_documentgenerationmodul",{"_index":1196,"title":{},"body":{"modules/DocumentGenerationModule.html":{},"overview.html":{}}}],["cluster_documentgenerationmodule_declar",{"_index":1197,"title":{},"body":{"modules/DocumentGenerationModule.html":{},"overview.html":{}}}],["cluster_documentgenerationmodule_export",{"_index":1198,"title":{},"body":{"modules/DocumentGenerationModule.html":{},"overview.html":{}}}],["cluster_documentgenerationmodule_provid",{"_index":1199,"title":{},"body":{"modules/DocumentGenerationModule.html":{},"overview.html":{}}}],["cluster_documentreportviewermodul",{"_index":1244,"title":{},"body":{"modules/DocumentReportViewerModule.html":{},"overview.html":{}}}],["cluster_documentreportviewermodule_declar",{"_index":1245,"title":{},"body":{"modules/DocumentReportViewerModule.html":{},"overview.html":{}}}],["cluster_documentreportviewermodule_export",{"_index":1246,"title":{},"body":{"modules/DocumentReportViewerModule.html":{},"overview.html":{}}}],["cluster_documentreportviewermodule_provid",{"_index":1247,"title":{},"body":{"modules/DocumentReportViewerModule.html":{},"overview.html":{}}}],["cluster_dossiernavigatormodul",{"_index":1419,"title":{},"body":{"modules/DossierNavigatorModule.html":{},"overview.html":{}}}],["cluster_dossiernavigatormodule_declar",{"_index":1420,"title":{},"body":{"modules/DossierNavigatorModule.html":{},"overview.html":{}}}],["cluster_dossiernavigatormodule_import",{"_index":1421,"title":{},"body":{"modules/DossierNavigatorModule.html":{},"overview.html":{}}}],["cluster_dossiernavigatormodule_provid",{"_index":1422,"title":{},"body":{"modules/DossierNavigatorModule.html":{},"overview.html":{}}}],["cluster_exceptionsmodul",{"_index":1556,"title":{},"body":{"modules/ExceptionsModule.html":{},"overview.html":{}}}],["cluster_exceptionsmodule_declar",{"_index":1557,"title":{},"body":{"modules/ExceptionsModule.html":{},"overview.html":{}}}],["cluster_exceptionsmodule_import",{"_index":1558,"title":{},"body":{"modules/ExceptionsModule.html":{},"overview.html":{}}}],["cluster_layoutcontainersmodul",{"_index":1936,"title":{},"body":{"modules/LayoutContainersModule.html":{},"overview.html":{}}}],["cluster_layoutcontainersmodule_declar",{"_index":1937,"title":{},"body":{"modules/LayoutContainersModule.html":{},"overview.html":{}}}],["cluster_layoutcontainersmodule_export",{"_index":1938,"title":{},"body":{"modules/LayoutContainersModule.html":{},"overview.html":{}}}],["cluster_layoutcontainersmodule_provid",{"_index":1939,"title":{},"body":{"modules/LayoutContainersModule.html":{},"overview.html":{}}}],["cluster_personsmodul",{"_index":2436,"title":{},"body":{"modules/PersonsModule.html":{},"overview.html":{}}}],["cluster_personsmodule_declar",{"_index":2437,"title":{},"body":{"modules/PersonsModule.html":{},"overview.html":{}}}],["cluster_personsmodule_import",{"_index":2438,"title":{},"body":{"modules/PersonsModule.html":{},"overview.html":{}}}],["cluster_personsmodule_provid",{"_index":2439,"title":{},"body":{"modules/PersonsModule.html":{},"overview.html":{}}}],["cluster_pipesmodul",{"_index":2545,"title":{},"body":{"modules/PipesModule.html":{},"overview.html":{}}}],["cluster_pipesmodule_declar",{"_index":2546,"title":{},"body":{"modules/PipesModule.html":{},"overview.html":{}}}],["cluster_pipesmodule_export",{"_index":2547,"title":{},"body":{"modules/PipesModule.html":{},"overview.html":{}}}],["code",{"_index":461,"title":{},"body":{"modules/AppModule.html":{},"interfaces/LanguageModel.html":{},"components/LanguageSelectorComponent.html":{},"injectables/UtilService.html":{}}}],["colcountbyscreen",{"_index":2259,"title":{},"body":{"components/PersonFormComponent.html":{},"components/TreeDetailComponent.html":{}}}],["combinereduc",{"_index":480,"title":{},"body":{"modules/AppModule.html":{},"interfaces/State.html":{}}}],["commonmodul",{"_index":392,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ComponentsModule.html":{},"modules/ControlWebDavModule.html":{},"modules/DocumentGenerationModule.html":{},"modules/DocumentReportViewerModule.html":{},"modules/DossierNavigatorModule.html":{},"modules/ExceptionsModule.html":{},"modules/HttpServiceModule.html":{},"modules/LayoutContainersModule.html":{},"modules/PersonsModule.html":{}}}],["compil",{"_index":459,"title":{},"body":{"modules/AppModule.html":{}}}],["complet",{"_index":1054,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["compon",{"_index":209,"title":{"components/AppComponent.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AuthRoutingModule.html":{},"classes/BaseComponent.html":{},"components/BreadCrumbComponent.html":{},"injectables/CanDeactivateGuard.html":{},"modules/ComponentsModule.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"modules/DossierNavigatorModule.html":{},"modules/DossierRoutingModule.html":{},"modules/ExceptionsRoutingModule.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"modules/LayoutContainersModule.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"modules/PersonsRoutingModule.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{},"index.html":{},"overview.html":{}}}],["component.candeactiv",{"_index":856,"title":{},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{}}}],["component_templ",{"_index":279,"title":{},"body":{"components/AppComponent.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{}}}],["componentsmodul",{"_index":730,"title":{"modules/ComponentsModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/ComponentsModule.html":{},"modules/DossierNavigatorModule.html":{},"modules/LayoutContainersModule.html":{},"modules/PersonsModule.html":{},"modules.html":{},"overview.html":{}}}],["componn",{"_index":3173,"title":{},"body":{"index.html":{}}}],["compos",{"_index":2780,"title":{},"body":{"interfaces/State.html":{}}}],["compose(combinereducers)(reduc",{"_index":2824,"title":{},"body":{"interfaces/State.html":{}}}],["config",{"_index":889,"title":{},"body":{"injectables/ConfigService.html":{},"components/ControlWebDavComponent.html":{}}}],["config.load",{"_index":467,"title":{},"body":{"modules/AppModule.html":{}}}],["config.servic",{"_index":428,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppSandbox.html":{},"injectables/HttpResponseHandler.html":{},"injectables/HttpService.html":{},"components/LayoutContainer.html":{},"injectables/UtilService.html":{}}}],["config.service.t",{"_index":888,"title":{},"body":{"injectables/ConfigService.html":{}}}],["config.service.ts:15",{"_index":906,"title":{},"body":{"injectables/ConfigService.html":{}}}],["config.service.ts:16",{"_index":893,"title":{},"body":{"injectables/ConfigService.html":{}}}],["config.service.ts:24",{"_index":900,"title":{},"body":{"injectables/ConfigService.html":{}}}],["config.service.ts:52",{"_index":899,"title":{},"body":{"injectables/ConfigService.html":{}}}],["config.service.ts:61",{"_index":895,"title":{},"body":{"injectables/ConfigService.html":{}}}],["config_folder_webdav",{"_index":2284,"title":{},"body":{"components/PersonFormComponent.html":{}}}],["configfold",{"_index":953,"title":{},"body":{"components/ControlWebDavComponent.html":{},"components/PersonFormComponent.html":{}}}],["configservic",{"_index":375,"title":{"injectables/ConfigService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AppSandbox.html":{},"injectables/ConfigService.html":{},"injectables/HttpResponseHandler.html":{},"injectables/HttpService.html":{},"components/LayoutContainer.html":{},"injectables/UtilService.html":{},"overview.html":{}}}],["configservicefactori",{"_index":516,"title":{},"body":{"modules/AppModule.html":{}}}],["configservicefactory(config",{"_index":466,"title":{},"body":{"modules/AppModule.html":{}}}],["configur",{"_index":896,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/HttpResponseHandler.html":{}}}],["confirm('thi",{"_index":1084,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["console.log(",{"_index":2682,"title":{},"body":{"components/SelectedActionsComponent.html":{}}}],["console.log('copi",{"_index":1052,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["console.log('docu",{"_index":1193,"title":{},"body":{"components/DocumentGenerationComponent.html":{},"components/ReportViewerComponent.html":{}}}],["console.log('fcallback",{"_index":1037,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["console.log('th",{"_index":1058,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["console.log(docu",{"_index":2322,"title":{},"body":{"components/PersonFormComponent.html":{}}}],["console.log(person",{"_index":2542,"title":{},"body":{"injectables/PersonsService.html":{}}}],["console.log(this.messag",{"_index":2228,"title":{},"body":{"components/PageBadGatewayComponent.html":{}}}],["console.log(this.selectedact",{"_index":2681,"title":{},"body":{"components/SelectedActionsComponent.html":{}}}],["const",{"_index":72,"title":{},"body":{"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"classes/AddUserAction.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppSandbox.html":{},"injectables/AuthApiClient.html":{},"injectables/AuthEffects.html":{},"injectables/AuthGuard.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthSandbox.html":{},"directives/AuthorizeDirective.html":{},"injectables/AuthorizeGuard.html":{},"modules/ComponentsModule.html":{},"injectables/ConfigService.html":{},"components/ControlWebDavComponent.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteItemSelectedAction.html":{},"classes/DeleteSuccessAction.html":{},"classes/DoLoginAction.html":{},"classes/DoLoginFailAction.html":{},"classes/DoLoginSuccessAction.html":{},"classes/DoLogoutAction.html":{},"classes/DoLogoutFailAction.html":{},"classes/DoLogoutSuccessAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"components/DocumentReportViewerComponent.html":{},"injectables/DocumentsHelper.html":{},"injectables/DossierEffects.html":{},"classes/DossierFilterModel.html":{},"components/DossierNavigatorComponent.html":{},"classes/DossierNavigatorTreeModel.html":{},"modules/DossierRoutingModule.html":{},"injectables/DossierSandbox.html":{},"modules/ExceptionsRoutingModule.html":{},"classes/GetTreeDetailAction.html":{},"components/HeaderComponent.html":{},"classes/HttpAdapter.html":{},"injectables/HttpResponseHandler.html":{},"interfaces/IDossierFilterModel.html":{},"interfaces/IDossierNavigatorTreeModel.html":{},"interfaces/IPerson.html":{},"components/LanguageSelectorComponent.html":{},"modules/LayoutContainersModule.html":{},"injectables/LayoutSandbox.html":{},"components/LeftSidebarComponent.html":{},"classes/LoadAction.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"components/LoginComponent.html":{},"classes/Person.html":{},"components/PersonFormComponent.html":{},"modules/PersonsRoutingModule.html":{},"injectables/PersonsSandbox.html":{},"modules/PipesModule.html":{},"classes/RemoveUserAction.html":{},"classes/ResetState.html":{},"classes/Sandbox.html":{},"classes/SelectAction.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetAvaiableMenu.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetClosedAction.html":{},"classes/SetCultureAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{},"classes/SetLanguageAction.html":{},"interfaces/State.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSelectedAction.html":{},"classes/UpdateSuccessAction.html":{},"injectables/UtilService.html":{}}}],["constructor",{"_index":13,"title":{},"body":{"classes/Account.html":{},"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"classes/AddUserAction.html":{},"components/AppComponent.html":{},"injectables/AppSandbox.html":{},"injectables/AuthEffects.html":{},"injectables/AuthGuard.html":{},"injectables/AuthSandbox.html":{},"directives/AuthorizeDirective.html":{},"injectables/AuthorizeGuard.html":{},"classes/BaseComponent.html":{},"components/BreadCrumbComponent.html":{},"classes/ClassRightModel.html":{},"injectables/ConfigService.html":{},"components/ControlWebDavComponent.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteItemSelectedAction.html":{},"classes/DeleteSuccessAction.html":{},"classes/DoLoginAction.html":{},"classes/DoLoginFailAction.html":{},"classes/DoLoginSuccessAction.html":{},"classes/DoLogoutAction.html":{},"classes/DoLogoutFailAction.html":{},"classes/DoLogoutSuccessAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"injectables/DossierEffects.html":{},"classes/DossierFilterModel.html":{},"components/DossierNavigatorComponent.html":{},"classes/DossierNavigatorTreeModel.html":{},"injectables/DossierSandbox.html":{},"directives/DynamicTabsDirective.html":{},"classes/GetTreeDetailAction.html":{},"components/HeaderComponent.html":{},"injectables/HttpResponseHandler.html":{},"injectables/HttpService.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"injectables/LayoutSandbox.html":{},"components/LeftSidebarComponent.html":{},"classes/LoadAction.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"components/LoginComponent.html":{},"classes/LoginForm.html":{},"classes/MenuModel.html":{},"injectables/MenusEffects.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Person.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"injectables/PersonsEffects.html":{},"injectables/PersonsResolver.html":{},"injectables/PersonsSandbox.html":{},"components/ProfileBarComponent.html":{},"classes/RemoveUserAction.html":{},"injectables/ReportService.html":{},"components/ReportViewerComponent.html":{},"classes/ResetState.html":{},"classes/Sandbox.html":{},"injectables/SearchBoxDatasEffects.html":{},"classes/SearchBoxModel.html":{},"classes/SelectAction.html":{},"components/SelectedActionsComponent.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetAvaiableMenu.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetClosedAction.html":{},"classes/SetCultureAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{},"classes/SetLanguageAction.html":{},"injectables/SettingsEffects.html":{},"classes/SidebarMenuModel.html":{},"classes/TemplateModel.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{},"classes/TreeNavModel.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSelectedAction.html":{},"classes/UpdateSuccessAction.html":{},"classes/User.html":{},"injectables/UtilService.html":{}}}],["constructor(account",{"_index":14,"title":{},"body":{"classes/Account.html":{}}}],["constructor(act",{"_index":656,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/DossierEffects.html":{},"injectables/MenusEffects.html":{},"injectables/PersonsEffects.html":{},"injectables/SearchBoxDatasEffects.html":{},"injectables/SettingsEffects.html":{}}}],["constructor(appst",{"_index":541,"title":{},"body":{"injectables/AppSandbox.html":{},"injectables/LayoutSandbox.html":{},"injectables/PersonsSandbox.html":{},"classes/Sandbox.html":{}}}],["constructor(changedetector",{"_index":2032,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["constructor(classnam",{"_index":864,"title":{},"body":{"classes/ClassRightModel.html":{}}}],["constructor(configservic",{"_index":1910,"title":{},"body":{"components/LayoutContainer.html":{}}}],["constructor(data",{"_index":1340,"title":{},"body":{"classes/DossierFilterModel.html":{},"classes/DossierNavigatorTreeModel.html":{},"interfaces/IDossierFilterModel.html":{},"interfaces/IDossierNavigatorTreeModel.html":{},"interfaces/IMenuModel.html":{},"interfaces/IPerson.html":{},"interfaces/ISearchBoxModel.html":{},"interfaces/ISidebarMenuModel.html":{},"classes/ITreeNavModel.html":{},"classes/MenuModel.html":{},"classes/Person.html":{},"classes/SearchBoxModel.html":{},"classes/SidebarMenuModel.html":{},"classes/TreeNavModel.html":{}}}],["constructor(elementref",{"_index":1878,"title":{},"body":{"components/LanguageSelectorComponent.html":{}}}],["constructor(http",{"_index":892,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/HttpService.html":{},"injectables/ReportService.html":{}}}],["constructor(id",{"_index":110,"title":{},"body":{"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteSuccessAction.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSuccessAction.html":{}}}],["constructor(injector",{"_index":824,"title":{},"body":{"classes/BaseComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/LoginComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{}}}],["constructor(loc",{"_index":2220,"title":{},"body":{"components/PageBadGatewayComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["constructor(loginform",{"_index":2142,"title":{},"body":{"classes/LoginForm.html":{}}}],["constructor(model",{"_index":1852,"title":{},"body":{"interfaces/ITemplateModel.html":{},"classes/TemplateModel.html":{}}}],["constructor(payload",{"_index":61,"title":{},"body":{"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"classes/AddUserAction.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteItemSelectedAction.html":{},"classes/DeleteSuccessAction.html":{},"classes/DoLoginAction.html":{},"classes/DoLoginFailAction.html":{},"classes/DoLoginSuccessAction.html":{},"classes/DoLogoutAction.html":{},"classes/DoLogoutFailAction.html":{},"classes/DoLogoutSuccessAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"classes/GetTreeDetailAction.html":{},"classes/LoadAction.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"classes/RemoveUserAction.html":{},"classes/ResetState.html":{},"classes/SelectAction.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetAvaiableMenu.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetClosedAction.html":{},"classes/SetCultureAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{},"classes/SetLanguageAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSelectedAction.html":{},"classes/UpdateSuccessAction.html":{}}}],["constructor(personssandbox",{"_index":2455,"title":{},"body":{"injectables/PersonsResolver.html":{}}}],["constructor(priv",{"_index":709,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthorizeGuard.html":{},"injectables/ConfigService.html":{},"components/DocumentReportViewerComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/ReportService.html":{},"pipes/SanitizeHtmlPipe.html":{}}}],["constructor(protect",{"_index":2608,"title":{},"body":{"classes/Sandbox.html":{}}}],["constructor(publ",{"_index":98,"title":{},"body":{"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"classes/AddUserAction.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteItemSelectedAction.html":{},"classes/DeleteSuccessAction.html":{},"classes/DoLoginAction.html":{},"classes/DoLoginFailAction.html":{},"classes/DoLoginSuccessAction.html":{},"classes/DoLogoutAction.html":{},"classes/DoLogoutFailAction.html":{},"classes/DoLogoutSuccessAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"directives/DynamicTabsDirective.html":{},"classes/GetTreeDetailAction.html":{},"classes/LoadAction.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"injectables/PersonsResolver.html":{},"classes/RemoveUserAction.html":{},"classes/ResetState.html":{},"classes/SelectAction.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetAvaiableMenu.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetClosedAction.html":{},"classes/SetCultureAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{},"classes/SetLanguageAction.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSelectedAction.html":{},"classes/UpdateSuccessAction.html":{}}}],["constructor(render",{"_index":1216,"title":{},"body":{"components/DocumentReportViewerComponent.html":{},"components/HeaderComponent.html":{}}}],["constructor(rout",{"_index":230,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthSandbox.html":{},"injectables/AuthorizeGuard.html":{},"injectables/DossierSandbox.html":{},"injectables/HttpResponseHandler.html":{}}}],["constructor(templateref",{"_index":795,"title":{},"body":{"directives/AuthorizeDirective.html":{}}}],["constructor(translateservic",{"_index":3014,"title":{},"body":{"injectables/UtilService.html":{}}}],["constructor(us",{"_index":2994,"title":{},"body":{"classes/User.html":{}}}],["constructor(viewcontain",{"_index":1552,"title":{},"body":{"directives/DynamicTabsDirective.html":{}}}],["contain",{"_index":1232,"title":{},"body":{"components/DocumentReportViewerComponent.html":{},"modules/LayoutContainersModule.html":{}}}],["container.innerhtml",{"_index":1234,"title":{},"body":{"components/DocumentReportViewerComponent.html":{}}}],["content",{"_index":194,"title":{},"body":{"injectables/AppApiClient.html":{},"injectables/AuthApiClient.html":{},"injectables/ConfigService.html":{},"injectables/DossierApiClient.html":{},"classes/ITreeNavModel.html":{},"components/PageContentComponent.html":{},"injectables/PersonsApiClient.html":{},"classes/TreeNavModel.html":{}}}],["content'},{'nam",{"_index":324,"title":{},"body":{"components/AppComponent.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{}}}],["content/page.content.compon",{"_index":1963,"title":{},"body":{"modules/LayoutContainersModule.html":{}}}],["content/page.content.component.t",{"_index":2234,"title":{},"body":{"components/PageContentComponent.html":{}}}],["content/page.content.component.ts:12",{"_index":2236,"title":{},"body":{"components/PageContentComponent.html":{}}}],["contents/bread",{"_index":1957,"title":{},"body":{"modules/LayoutContainersModule.html":{}}}],["contents/pag",{"_index":1962,"title":{},"body":{"modules/LayoutContainersModule.html":{}}}],["contents/toolbars/toolbars.compon",{"_index":1964,"title":{},"body":{"modules/LayoutContainersModule.html":{}}}],["contextvalu",{"_index":166,"title":{},"body":{"injectables/AppApiClient.html":{},"components/DocumentGenerationComponent.html":{},"components/ReportViewerComponent.html":{}}}],["control",{"_index":286,"title":{},"body":{"components/AppComponent.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"modules/ControlWebDavModule.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{}}}],["controlkey",{"_index":3050,"title":{},"body":{"injectables/ValidationService.html":{}}}],["controlwebdavcompon",{"_index":285,"title":{"components/ControlWebDavComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"modules/ControlWebDavModule.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{},"overview.html":{}}}],["controlwebdavmodul",{"_index":1093,"title":{"modules/ControlWebDavModule.html":{}},"body":{"modules/ControlWebDavModule.html":{},"modules/PersonsModule.html":{},"modules.html":{},"overview.html":{}}}],["copi",{"_index":1068,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["copyrightnam",{"_index":2074,"title":{},"body":{"components/LoginComponent.html":{}}}],["core",{"_index":384,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["correct",{"_index":265,"title":{},"body":{"components/AppComponent.html":{}}}],["correspond",{"_index":2082,"title":{},"body":{"components/LoginComponent.html":{},"injectables/UtilService.html":{}}}],["creat",{"_index":204,"title":{},"body":{"injectables/AppApiClient.html":{},"modules/AppModule.html":{},"classes/DeleteItemSelectedAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetCultureAction.html":{},"classes/SetLanguageAction.html":{},"classes/UpdateSelectedAction.html":{}}}],["createperson",{"_index":2478,"title":{},"body":{"injectables/PersonsSandbox.html":{}}}],["createperson(person",{"_index":2484,"title":{},"body":{"injectables/PersonsSandbox.html":{}}}],["createselector",{"_index":2771,"title":{},"body":{"interfaces/State.html":{}}}],["createselector(getauthst",{"_index":2849,"title":{},"body":{"interfaces/State.html":{}}}],["createselector(getdossiertreedatast",{"_index":2901,"title":{},"body":{"interfaces/State.html":{}}}],["createselector(getmenusst",{"_index":2880,"title":{},"body":{"interfaces/State.html":{}}}],["createselector(getpersondetailsst",{"_index":2871,"title":{},"body":{"interfaces/State.html":{}}}],["createselector(getpersonsst",{"_index":2858,"title":{},"body":{"interfaces/State.html":{}}}],["createselector(getsearchboxdatasst",{"_index":2892,"title":{},"body":{"interfaces/State.html":{}}}],["createselector(getsettingsst",{"_index":2832,"title":{},"body":{"interfaces/State.html":{}}}],["crumb",{"_index":844,"title":{},"body":{"components/BreadCrumbComponent.html":{}}}],["crumb'},{'nam",{"_index":284,"title":{},"body":{"components/AppComponent.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{}}}],["crumb.compon",{"_index":1958,"title":{},"body":{"modules/LayoutContainersModule.html":{}}}],["crumb.component.html",{"_index":847,"title":{},"body":{"components/BreadCrumbComponent.html":{}}}],["crumb.component.scss",{"_index":846,"title":{},"body":{"components/BreadCrumbComponent.html":{}}}],["crumb.component.t",{"_index":843,"title":{},"body":{"components/BreadCrumbComponent.html":{}}}],["crumb.component.ts:12",{"_index":849,"title":{},"body":{"components/BreadCrumbComponent.html":{}}}],["crumb.component.ts:8",{"_index":848,"title":{},"body":{"components/BreadCrumbComponent.html":{}}}],["crumb/bread",{"_index":842,"title":{},"body":{"components/BreadCrumbComponent.html":{},"modules/LayoutContainersModule.html":{}}}],["css",{"_index":266,"title":{},"body":{"components/AppComponent.html":{}}}],["ctlperson.maydelet",{"_index":2469,"title":{},"body":{"modules/PersonsRoutingModule.html":{}}}],["ctlperson.mayinsert",{"_index":2467,"title":{},"body":{"modules/PersonsRoutingModule.html":{}}}],["ctlperson.mayupd",{"_index":2468,"title":{},"body":{"modules/PersonsRoutingModule.html":{}}}],["cultur",{"_index":1539,"title":{},"body":{"injectables/DossierSandbox.html":{},"interfaces/LanguageModel.html":{},"components/LanguageSelectorComponent.html":{},"injectables/PersonsSandbox.html":{},"classes/Sandbox.html":{}}}],["current",{"_index":608,"title":{},"body":{"injectables/AuthApiClient.html":{},"injectables/AuthEffects.html":{}}}],["currentlang",{"_index":1892,"title":{},"body":{"components/LanguageSelectorComponent.html":{}}}],["currentlang.flag",{"_index":1896,"title":{},"body":{"components/LanguageSelectorComponent.html":{}}}],["currentus",{"_index":712,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["custom",{"_index":470,"title":{},"body":{"modules/AppModule.html":{}}}],["data",{"_index":75,"title":{},"body":{"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"injectables/AppService.html":{},"injectables/AuthSandbox.html":{},"injectables/ConfigService.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteItemSelectedAction.html":{},"classes/DeleteSuccessAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"injectables/DocumentsHelper.html":{},"classes/DossierFilterModel.html":{},"classes/DossierNavigatorTreeModel.html":{},"injectables/DossierService.html":{},"classes/GetTreeDetailAction.html":{},"interfaces/IDossierFilterModel.html":{},"interfaces/IDossierNavigatorTreeModel.html":{},"interfaces/IMenuModel.html":{},"interfaces/IPerson.html":{},"interfaces/ISearchBoxModel.html":{},"interfaces/ISidebarMenuModel.html":{},"classes/ITreeNavModel.html":{},"classes/LoadAction.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"classes/MenuModel.html":{},"classes/Person.html":{},"components/PersonListComponent.html":{},"injectables/PersonsApiClient.html":{},"injectables/PersonsResolver.html":{},"modules/PersonsRoutingModule.html":{},"injectables/PersonsService.html":{},"classes/ResetState.html":{},"classes/SearchBoxModel.html":{},"classes/SelectedActionsModel.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetClosedAction.html":{},"classes/SetCultureAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{},"classes/SetLanguageAction.html":{},"classes/SidebarMenuModel.html":{},"interfaces/State.html":{},"classes/TreeNavModel.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSelectedAction.html":{},"classes/UpdateSuccessAction.html":{},"injectables/UtilService.html":{},"dependencies.html":{}}}],["data)[properti",{"_index":1350,"title":{},"body":{"classes/DossierFilterModel.html":{},"classes/DossierNavigatorTreeModel.html":{},"interfaces/IDossierFilterModel.html":{},"interfaces/IDossierNavigatorTreeModel.html":{},"interfaces/IMenuModel.html":{},"interfaces/IPerson.html":{},"interfaces/ISearchBoxModel.html":{},"interfaces/ISidebarMenuModel.html":{},"classes/ITreeNavModel.html":{},"classes/MenuModel.html":{},"classes/Person.html":{},"classes/SearchBoxModel.html":{},"classes/SidebarMenuModel.html":{},"classes/TreeNavModel.html":{}}}],["data.hasownproperty(properti",{"_index":1348,"title":{},"body":{"classes/DossierFilterModel.html":{},"classes/DossierNavigatorTreeModel.html":{},"interfaces/IDossierFilterModel.html":{},"interfaces/IDossierNavigatorTreeModel.html":{},"interfaces/IMenuModel.html":{},"interfaces/IPerson.html":{},"interfaces/ISearchBoxModel.html":{},"interfaces/ISidebarMenuModel.html":{},"classes/ITreeNavModel.html":{},"classes/MenuModel.html":{},"classes/Person.html":{},"classes/SearchBoxModel.html":{},"classes/SidebarMenuModel.html":{},"classes/TreeNavModel.html":{}}}],["data.map(lookup",{"_index":3035,"title":{},"body":{"injectables/UtilService.html":{}}}],["data.nam",{"_index":2685,"title":{},"body":{"components/SelectedActionsComponent.html":{}}}],["databas",{"_index":2758,"title":{},"body":{"interfaces/State.html":{}}}],["datatyp",{"_index":909,"title":{},"body":{"injectables/ConfigService.html":{}}}],["date",{"_index":2603,"title":{},"body":{"classes/Sandbox.html":{}}}],["date().getfullyear",{"_index":2102,"title":{},"body":{"components/LoginComponent.html":{}}}],["date().gettime()}.docx",{"_index":1032,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["dav",{"_index":931,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["dav'},{'nam",{"_index":288,"title":{},"body":{"components/AppComponent.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{}}}],["dav.compon",{"_index":1098,"title":{},"body":{"modules/ControlWebDavModule.html":{}}}],["dav.component.css",{"_index":932,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["dav.component.html",{"_index":933,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["dav.component.t",{"_index":929,"title":{},"body":{"components/ControlWebDavComponent.html":{},"miscellaneous/enumerations.html":{}}}],["dav.component.ts:140",{"_index":974,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["dav.component.ts:147",{"_index":979,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["dav.component.ts:193",{"_index":981,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["dav.component.ts:203",{"_index":977,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["dav.component.ts:243",{"_index":978,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["dav.component.ts:263",{"_index":970,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["dav.component.ts:34",{"_index":992,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["dav.component.ts:35",{"_index":991,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["dav.component.ts:36",{"_index":989,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["dav.component.ts:37",{"_index":990,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["dav.component.ts:38",{"_index":993,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["dav.component.ts:40",{"_index":956,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["dav.component.ts:41",{"_index":957,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["dav.component.ts:43",{"_index":985,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["dav.component.ts:44",{"_index":986,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["dav.component.ts:45",{"_index":983,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["dav.component.ts:47",{"_index":988,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["dav.component.ts:48",{"_index":994,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["dav.component.ts:50",{"_index":987,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["dav.component.ts:51",{"_index":984,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["dav.component.ts:52",{"_index":955,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["dav.component.ts:57",{"_index":967,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["dav.component.ts:69",{"_index":966,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["dav.component.ts:73",{"_index":958,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["dav.component.ts:77",{"_index":968,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["dav.component.ts:81",{"_index":961,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["dav.component.ts:94",{"_index":964,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["dav.modul",{"_index":2444,"title":{},"body":{"modules/PersonsModule.html":{}}}],["dav.module.t",{"_index":1097,"title":{},"body":{"modules/ControlWebDavModule.html":{}}}],["dav/control",{"_index":928,"title":{},"body":{"components/ControlWebDavComponent.html":{},"modules/ControlWebDavModule.html":{},"modules/PersonsModule.html":{},"miscellaneous/enumerations.html":{}}}],["dav/template.model.t",{"_index":1849,"title":{},"body":{"interfaces/ITemplateModel.html":{},"classes/TemplateModel.html":{}}}],["dav/template.model.ts:2",{"_index":2913,"title":{},"body":{"classes/TemplateModel.html":{}}}],["dav/template.model.ts:3",{"_index":2912,"title":{},"body":{"classes/TemplateModel.html":{}}}],["dav/template.model.ts:4",{"_index":2911,"title":{},"body":{"classes/TemplateModel.html":{}}}],["de",{"_index":1809,"title":{},"body":{"injectables/HttpService.html":{}}}],["debug",{"_index":494,"title":{},"body":{"modules/AppModule.html":{}}}],["debugg",{"_index":495,"title":{},"body":{"modules/AppModule.html":{}}}],["declar",{"_index":359,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ComponentsModule.html":{},"components/ControlWebDavComponent.html":{},"modules/ControlWebDavModule.html":{},"modules/DocumentGenerationModule.html":{},"modules/DocumentReportViewerModule.html":{},"modules/DossierNavigatorModule.html":{},"modules/ExceptionsModule.html":{},"modules/LayoutContainersModule.html":{},"modules/PersonsModule.html":{},"modules/PipesModule.html":{},"overview.html":{}}}],["decod",{"_index":3083,"title":{},"body":{"dependencies.html":{}}}],["decor",{"_index":167,"title":{},"body":{"injectables/AppApiClient.html":{},"injectables/AuthApiClient.html":{},"injectables/AuthEffects.html":{},"components/DocumentReportViewerComponent.html":{},"injectables/DossierApiClient.html":{},"injectables/DossierEffects.html":{},"components/LayoutContainer.html":{},"injectables/MenusEffects.html":{},"components/PersonFormComponent.html":{},"injectables/PersonsApiClient.html":{},"injectables/PersonsEffects.html":{},"injectables/SearchBoxDatasEffects.html":{},"injectables/SettingsEffects.html":{},"components/TreeDetailComponent.html":{}}}],["default",{"_index":46,"title":{},"body":{"classes/ActionHandler.html":{},"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"classes/AddUserAction.html":{},"components/AppComponent.html":{},"injectables/AppSandbox.html":{},"injectables/AuthEffects.html":{},"injectables/AuthSandbox.html":{},"components/ControlWebDavComponent.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteItemSelectedAction.html":{},"classes/DeleteSuccessAction.html":{},"classes/DoLoginAction.html":{},"classes/DoLoginFailAction.html":{},"classes/DoLoginSuccessAction.html":{},"classes/DoLogoutAction.html":{},"classes/DoLogoutFailAction.html":{},"classes/DoLogoutSuccessAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"components/DocumentGenerationComponent.html":{},"injectables/DocumentsHelper.html":{},"injectables/DossierEffects.html":{},"components/DossierNavigatorComponent.html":{},"injectables/DossierSandbox.html":{},"classes/GetTreeDetailAction.html":{},"components/HeaderComponent.html":{},"injectables/HttpResponseHandler.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"injectables/LayoutSandbox.html":{},"classes/LoadAction.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"components/LoginComponent.html":{},"injectables/MenusEffects.html":{},"components/NavFiltersComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonsComponent.html":{},"injectables/PersonsEffects.html":{},"injectables/PersonsSandbox.html":{},"classes/RemoveUserAction.html":{},"injectables/ReportService.html":{},"components/ReportViewerComponent.html":{},"classes/ResetState.html":{},"classes/Sandbox.html":{},"injectables/SearchBoxDatasEffects.html":{},"classes/SelectAction.html":{},"components/SelectedActionsComponent.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetAvaiableMenu.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetClosedAction.html":{},"classes/SetCultureAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{},"classes/SetLanguageAction.html":{},"injectables/SettingsEffects.html":{},"interfaces/State.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSelectedAction.html":{},"classes/UpdateSuccessAction.html":{},"injectables/UtilService.html":{}}}],["defaulthead",{"_index":181,"title":{},"body":{"injectables/AppApiClient.html":{},"injectables/AuthApiClient.html":{},"injectables/DossierApiClient.html":{},"injectables/PersonsApiClient.html":{}}}],["defin",{"_index":15,"title":{},"body":{"classes/Account.html":{},"classes/ActionHandler.html":{},"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"classes/AddUserAction.html":{},"injectables/AppApiClient.html":{},"components/AppComponent.html":{},"injectables/AppSandbox.html":{},"injectables/AppService.html":{},"injectables/AuthApiClient.html":{},"injectables/AuthEffects.html":{},"injectables/AuthGuard.html":{},"injectables/AuthSandbox.html":{},"directives/AuthorizeDirective.html":{},"injectables/AuthorizeGuard.html":{},"classes/BaseComponent.html":{},"components/BreadCrumbComponent.html":{},"injectables/CanDeactivateGuard.html":{},"classes/ClassRightModel.html":{},"injectables/ConfigService.html":{},"components/ControlWebDavComponent.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteItemSelectedAction.html":{},"classes/DeleteSuccessAction.html":{},"classes/DoLoginAction.html":{},"classes/DoLoginFailAction.html":{},"classes/DoLoginSuccessAction.html":{},"classes/DoLogoutAction.html":{},"classes/DoLogoutFailAction.html":{},"classes/DoLogoutSuccessAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"injectables/DocumentsHelper.html":{},"injectables/DossierApiClient.html":{},"components/DossierDetailsComponent.html":{},"injectables/DossierEffects.html":{},"classes/DossierFilterModel.html":{},"components/DossierNavigatorComponent.html":{},"classes/DossierNavigatorTreeModel.html":{},"injectables/DossierSandbox.html":{},"injectables/DossierService.html":{},"directives/DynamicTabsDirective.html":{},"classes/GetTreeDetailAction.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"classes/HttpAdapter.html":{},"injectables/HttpResponseHandler.html":{},"injectables/HttpService.html":{},"classes/ITreeNavModel.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"injectables/LayoutSandbox.html":{},"components/LeftSidebarComponent.html":{},"classes/LoadAction.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"components/LoginComponent.html":{},"classes/LoginForm.html":{},"classes/MenuModel.html":{},"injectables/MenusEffects.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Person.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"injectables/PersonsApiClient.html":{},"components/PersonsComponent.html":{},"injectables/PersonsEffects.html":{},"injectables/PersonsResolver.html":{},"injectables/PersonsSandbox.html":{},"injectables/PersonsService.html":{},"components/ProfileBarComponent.html":{},"classes/RemoveUserAction.html":{},"injectables/ReportService.html":{},"components/ReportViewerComponent.html":{},"classes/ResetState.html":{},"classes/Sandbox.html":{},"pipes/SanitizeHtmlPipe.html":{},"components/SearchBoxComponent.html":{},"injectables/SearchBoxDatasEffects.html":{},"classes/SearchBoxModel.html":{},"classes/SelectAction.html":{},"components/SelectedActionsComponent.html":{},"classes/SelectedActionsModel.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetAvaiableMenu.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetClosedAction.html":{},"classes/SetCultureAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{},"classes/SetLanguageAction.html":{},"injectables/SettingsEffects.html":{},"classes/SidebarMenuModel.html":{},"components/SpinnerComponent.html":{},"classes/TemplateModel.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{},"classes/TreeNavModel.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSelectedAction.html":{},"classes/UpdateSuccessAction.html":{},"classes/User.html":{},"injectables/UtilService.html":{},"injectables/ValidationService.html":{}}}],["delet",{"_index":65,"title":{},"body":{"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"components/ControlWebDavComponent.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteSuccessAction.html":{},"injectables/PersonsApiClient.html":{},"injectables/PersonsEffects.html":{},"injectables/PersonsService.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSuccessAction.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["delete('api/personen/{id",{"_index":2384,"title":{},"body":{"injectables/PersonsApiClient.html":{}}}],["delete_fail",{"_index":91,"title":{},"body":{"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteSuccessAction.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSuccessAction.html":{}}}],["delete_item_select_act",{"_index":1124,"title":{},"body":{"classes/DeleteItemSelectedAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetCultureAction.html":{},"classes/SetLanguageAction.html":{},"classes/UpdateSelectedAction.html":{}}}],["delete_success",{"_index":90,"title":{},"body":{"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteSuccessAction.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSuccessAction.html":{}}}],["deleteact",{"_index":115,"title":{"classes/DeleteAction.html":{}},"body":{"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteSuccessAction.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSuccessAction.html":{},"miscellaneous/typealiases.html":{}}}],["deleteadapt",{"_index":2357,"title":{},"body":{"injectables/PersonsApiClient.html":{}}}],["deletedossieritem",{"_index":1477,"title":{},"body":{"injectables/DossierSandbox.html":{}}}],["deletedossieritem(treemodel",{"_index":1481,"title":{},"body":{"injectables/DossierSandbox.html":{}}}],["deletefailact",{"_index":119,"title":{"classes/DeleteFailAction.html":{}},"body":{"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteSuccessAction.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSuccessAction.html":{},"miscellaneous/typealiases.html":{}}}],["deleteitemselectedact",{"_index":1103,"title":{"classes/DeleteItemSelectedAction.html":{}},"body":{"classes/DeleteItemSelectedAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetCultureAction.html":{},"classes/SetLanguageAction.html":{},"classes/UpdateSelectedAction.html":{},"miscellaneous/typealiases.html":{}}}],["deleteitemsidebar",{"_index":1969,"title":{},"body":{"injectables/LayoutSandbox.html":{}}}],["deleteitemsidebar(",{"_index":1976,"title":{},"body":{"injectables/LayoutSandbox.html":{}}}],["deleteperson",{"_index":2351,"title":{},"body":{"injectables/PersonsApiClient.html":{}}}],["deleteperson(@path('id",{"_index":2386,"title":{},"body":{"injectables/PersonsApiClient.html":{}}}],["deleteperson(id",{"_index":2356,"title":{},"body":{"injectables/PersonsApiClient.html":{}}}],["deletepersonadapt",{"_index":2527,"title":{},"body":{"injectables/PersonsService.html":{}}}],["deletepersonadapter(id",{"_index":2531,"title":{},"body":{"injectables/PersonsService.html":{}}}],["deletepersonitem",{"_index":2479,"title":{},"body":{"injectables/PersonsSandbox.html":{}}}],["deletepersonitem(person",{"_index":2486,"title":{},"body":{"injectables/PersonsSandbox.html":{}}}],["deletesuccessact",{"_index":117,"title":{"classes/DeleteSuccessAction.html":{}},"body":{"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteSuccessAction.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSuccessAction.html":{},"miscellaneous/typealiases.html":{}}}],["deletetyp",{"_index":2656,"title":{},"body":{"components/SelectedActionsComponent.html":{}}}],["dep",{"_index":517,"title":{},"body":{"modules/AppModule.html":{}}}],["depend",{"_index":358,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ComponentsModule.html":{},"modules/ControlWebDavModule.html":{},"modules/DocumentGenerationModule.html":{},"modules/DocumentReportViewerModule.html":{},"modules/DossierNavigatorModule.html":{},"modules/ExceptionsModule.html":{},"modules/LayoutContainersModule.html":{},"modules/PersonsModule.html":{},"modules/PipesModule.html":{},"dependencies.html":{},"overview.html":{}}}],["describ",{"_index":2785,"title":{},"body":{"interfaces/State.html":{}}}],["descript",{"_index":127,"title":{},"body":{"classes/AddUserAction.html":{},"injectables/AuthEffects.html":{},"classes/DoLoginAction.html":{},"classes/DoLogoutAction.html":{},"injectables/HttpService.html":{},"classes/LoadAction.html":{},"injectables/PersonsService.html":{},"classes/SelectAction.html":{},"classes/SetLanguageAction.html":{},"interfaces/State.html":{}}}],["detach",{"_index":2047,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["detail",{"_index":93,"title":{},"body":{"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteSuccessAction.html":{},"components/DossierDetailsComponent.html":{},"components/PersonFormComponent.html":{},"injectables/PersonsApiClient.html":{},"injectables/PersonsEffects.html":{},"injectables/PersonsResolver.html":{},"modules/PersonsRoutingModule.html":{},"injectables/PersonsSandbox.html":{},"injectables/PersonsService.html":{},"interfaces/State.html":{},"components/TreeDetailComponent.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSuccessAction.html":{},"index.html":{}}}],["detail'},{'nam",{"_index":347,"title":{},"body":{"components/AppComponent.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{}}}],["detail.compon",{"_index":1437,"title":{},"body":{"modules/DossierNavigatorModule.html":{},"modules/DossierRoutingModule.html":{}}}],["detail.component.html",{"_index":2933,"title":{},"body":{"components/TreeDetailComponent.html":{}}}],["detail.component.scss",{"_index":2932,"title":{},"body":{"components/TreeDetailComponent.html":{}}}],["detail.component.t",{"_index":2931,"title":{},"body":{"components/TreeDetailComponent.html":{}}}],["detail.component.ts:19",{"_index":2943,"title":{},"body":{"components/TreeDetailComponent.html":{}}}],["detail.component.ts:21",{"_index":2944,"title":{},"body":{"components/TreeDetailComponent.html":{}}}],["detail.component.ts:23",{"_index":2941,"title":{},"body":{"components/TreeDetailComponent.html":{}}}],["detail.component.ts:28",{"_index":2936,"title":{},"body":{"components/TreeDetailComponent.html":{}}}],["detail.component.ts:32",{"_index":2942,"title":{},"body":{"components/TreeDetailComponent.html":{}}}],["detail.component.ts:38",{"_index":2940,"title":{},"body":{"components/TreeDetailComponent.html":{}}}],["detail.component.ts:42",{"_index":2939,"title":{},"body":{"components/TreeDetailComponent.html":{}}}],["detail.component.ts:52",{"_index":2937,"title":{},"body":{"components/TreeDetailComponent.html":{}}}],["detail.component.ts:59",{"_index":2938,"title":{},"body":{"components/TreeDetailComponent.html":{}}}],["detail/:id",{"_index":2470,"title":{},"body":{"modules/PersonsRoutingModule.html":{}}}],["detail/:id/:faleistungid",{"_index":1470,"title":{},"body":{"modules/DossierRoutingModule.html":{}}}],["detail/tre",{"_index":1436,"title":{},"body":{"modules/DossierNavigatorModule.html":{},"modules/DossierRoutingModule.html":{},"components/TreeDetailComponent.html":{}}}],["details'},{'nam",{"_index":296,"title":{},"body":{"components/AppComponent.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{}}}],["details.act",{"_index":2427,"title":{},"body":{"injectables/PersonsEffects.html":{},"injectables/PersonsSandbox.html":{}}}],["details.action.t",{"_index":3199,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["details.compon",{"_index":1961,"title":{},"body":{"modules/LayoutContainersModule.html":{}}}],["details.component.html",{"_index":1310,"title":{},"body":{"components/DossierDetailsComponent.html":{}}}],["details.component.scss",{"_index":1309,"title":{},"body":{"components/DossierDetailsComponent.html":{}}}],["details.component.t",{"_index":1308,"title":{},"body":{"components/DossierDetailsComponent.html":{}}}],["details.component.ts:11",{"_index":1312,"title":{},"body":{"components/DossierDetailsComponent.html":{}}}],["details.reduc",{"_index":2797,"title":{},"body":{"interfaces/State.html":{}}}],["details/dossi",{"_index":1307,"title":{},"body":{"components/DossierDetailsComponent.html":{},"modules/LayoutContainersModule.html":{}}}],["detector",{"_index":2048,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["develop",{"_index":904,"title":{},"body":{"injectables/ConfigService.html":{}}}],["devexpress",{"_index":1228,"title":{},"body":{"components/DocumentReportViewerComponent.html":{}}}],["devextrem",{"_index":881,"title":{},"body":{"modules/ComponentsModule.html":{},"modules/DossierNavigatorModule.html":{},"modules/LayoutContainersModule.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"modules/PersonsModule.html":{},"components/SelectedActionsComponent.html":{},"components/TreeDetailComponent.html":{}}}],["devextrememodul",{"_index":880,"title":{},"body":{"modules/ComponentsModule.html":{},"modules/DossierNavigatorModule.html":{},"modules/LayoutContainersModule.html":{},"modules/PersonsModule.html":{}}}],["devtool",{"_index":440,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["diag_admin",{"_index":2292,"title":{},"body":{"components/PersonFormComponent.html":{}}}],["dialog",{"_index":2397,"title":{},"body":{"components/PersonsComponent.html":{}}}],["diarti",{"_index":2130,"title":{},"body":{"components/LoginComponent.html":{}}}],["direct",{"_index":277,"title":{"directives/AuthorizeDirective.html":{},"directives/DynamicTabsDirective.html":{}},"body":{"components/AppComponent.html":{},"directives/AuthorizeDirective.html":{},"components/BreadCrumbComponent.html":{},"modules/ComponentsModule.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"directives/DynamicTabsDirective.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{},"overview.html":{}}}],["directives/dynam",{"_index":886,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["disabl",{"_index":1825,"title":{},"body":{"interfaces/IMenuModel.html":{},"interfaces/ISidebarMenuModel.html":{},"classes/MenuModel.html":{},"classes/SidebarMenuModel.html":{}}}],["dispatch",{"_index":638,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/AuthSandbox.html":{},"injectables/PersonsSandbox.html":{}}}],["display",{"_index":1735,"title":{},"body":{"injectables/HttpResponseHandler.html":{},"injectables/UtilService.html":{}}}],["displaynam",{"_index":1850,"title":{},"body":{"interfaces/ITemplateModel.html":{},"classes/TemplateModel.html":{}}}],["displaynotif",{"_index":3011,"title":{},"body":{"injectables/UtilService.html":{}}}],["displaynotification(messagetranslationcod",{"_index":3017,"title":{},"body":{"injectables/UtilService.html":{}}}],["displaystyl",{"_index":1179,"title":{},"body":{"components/DocumentGenerationComponent.html":{},"components/ReportViewerComponent.html":{}}}],["displaytext",{"_index":973,"title":{},"body":{"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/ReportViewerComponent.html":{}}}],["do_login",{"_index":132,"title":{},"body":{"classes/AddUserAction.html":{},"classes/DoLoginAction.html":{},"classes/DoLoginFailAction.html":{},"classes/DoLoginSuccessAction.html":{},"classes/DoLogoutAction.html":{},"classes/DoLogoutFailAction.html":{},"classes/DoLogoutSuccessAction.html":{},"classes/RemoveUserAction.html":{}}}],["do_login_fail",{"_index":136,"title":{},"body":{"classes/AddUserAction.html":{},"classes/DoLoginAction.html":{},"classes/DoLoginFailAction.html":{},"classes/DoLoginSuccessAction.html":{},"classes/DoLogoutAction.html":{},"classes/DoLogoutFailAction.html":{},"classes/DoLogoutSuccessAction.html":{},"classes/RemoveUserAction.html":{}}}],["do_login_success",{"_index":135,"title":{},"body":{"classes/AddUserAction.html":{},"classes/DoLoginAction.html":{},"classes/DoLoginFailAction.html":{},"classes/DoLoginSuccessAction.html":{},"classes/DoLogoutAction.html":{},"classes/DoLogoutFailAction.html":{},"classes/DoLogoutSuccessAction.html":{},"classes/RemoveUserAction.html":{}}}],["do_logout",{"_index":137,"title":{},"body":{"classes/AddUserAction.html":{},"classes/DoLoginAction.html":{},"classes/DoLoginFailAction.html":{},"classes/DoLoginSuccessAction.html":{},"classes/DoLogoutAction.html":{},"classes/DoLogoutFailAction.html":{},"classes/DoLogoutSuccessAction.html":{},"classes/RemoveUserAction.html":{}}}],["do_logout_fail",{"_index":140,"title":{},"body":{"classes/AddUserAction.html":{},"classes/DoLoginAction.html":{},"classes/DoLoginFailAction.html":{},"classes/DoLoginSuccessAction.html":{},"classes/DoLogoutAction.html":{},"classes/DoLogoutFailAction.html":{},"classes/DoLogoutSuccessAction.html":{},"classes/RemoveUserAction.html":{}}}],["do_logout_success",{"_index":139,"title":{},"body":{"classes/AddUserAction.html":{},"classes/DoLoginAction.html":{},"classes/DoLoginFailAction.html":{},"classes/DoLoginSuccessAction.html":{},"classes/DoLogoutAction.html":{},"classes/DoLogoutFailAction.html":{},"classes/DoLogoutSuccessAction.html":{},"classes/RemoveUserAction.html":{}}}],["doc",{"_index":650,"title":{},"body":{"injectables/AuthEffects.html":{},"components/DocumentGenerationComponent.html":{},"modules/DocumentGenerationModule.html":{},"injectables/DocumentsHelper.html":{}}}],["docformat",{"_index":1260,"title":{},"body":{"injectables/DocumentsHelper.html":{},"miscellaneous/enumerations.html":{}}}],["docformat.excel",{"_index":1282,"title":{},"body":{"injectables/DocumentsHelper.html":{}}}],["docformat.pdf",{"_index":1285,"title":{},"body":{"injectables/DocumentsHelper.html":{}}}],["docformat.word",{"_index":1279,"title":{},"body":{"injectables/DocumentsHelper.html":{}}}],["document",{"_index":203,"title":{},"body":{"injectables/AppApiClient.html":{},"components/AppComponent.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"classes/DeleteItemSelectedAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"components/DocumentGenerationComponent.html":{},"modules/DocumentGenerationModule.html":{},"components/DocumentReportViewerComponent.html":{},"modules/DocumentReportViewerModule.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"components/LeftSidebarComponent.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetCultureAction.html":{},"classes/SetLanguageAction.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{},"classes/UpdateSelectedAction.html":{}}}],["document.body.appendchild(a",{"_index":1264,"title":{},"body":{"injectables/DocumentsHelper.html":{}}}],["document.createelement('a",{"_index":1263,"title":{},"body":{"injectables/DocumentsHelper.html":{}}}],["document.docformatcod",{"_index":1205,"title":{},"body":{"modules/DocumentGenerationModule.html":{},"components/PersonFormComponent.html":{}}}],["document.doctemplatenam",{"_index":1206,"title":{},"body":{"modules/DocumentGenerationModule.html":{},"components/PersonFormComponent.html":{}}}],["document:click",{"_index":1890,"title":{},"body":{"components/LanguageSelectorComponent.html":{}}}],["document_cr",{"_index":1128,"title":{},"body":{"classes/DeleteItemSelectedAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetCultureAction.html":{},"classes/SetLanguageAction.html":{},"classes/UpdateSelectedAction.html":{}}}],["document_create_error",{"_index":1131,"title":{},"body":{"classes/DeleteItemSelectedAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetCultureAction.html":{},"classes/SetLanguageAction.html":{},"classes/UpdateSelectedAction.html":{}}}],["document_create_success",{"_index":1130,"title":{},"body":{"classes/DeleteItemSelectedAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetCultureAction.html":{},"classes/SetLanguageAction.html":{},"classes/UpdateSelectedAction.html":{}}}],["documentcr",{"_index":162,"title":{"classes/DocumentCreate.html":{}},"body":{"injectables/AppApiClient.html":{},"classes/DeleteItemSelectedAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetCultureAction.html":{},"classes/SetLanguageAction.html":{},"classes/UpdateSelectedAction.html":{},"miscellaneous/typealiases.html":{}}}],["documentcreate(@path('templateid",{"_index":208,"title":{},"body":{"injectables/AppApiClient.html":{}}}],["documentcreate(templateid",{"_index":165,"title":{},"body":{"injectables/AppApiClient.html":{}}}],["documentcreateerror",{"_index":1152,"title":{"classes/DocumentCreateError.html":{}},"body":{"classes/DeleteItemSelectedAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetCultureAction.html":{},"classes/SetLanguageAction.html":{},"classes/UpdateSelectedAction.html":{},"miscellaneous/typealiases.html":{}}}],["documentcreatesuccess",{"_index":1150,"title":{"classes/DocumentCreateSuccess.html":{}},"body":{"classes/DeleteItemSelectedAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetCultureAction.html":{},"classes/SetLanguageAction.html":{},"classes/UpdateSelectedAction.html":{},"miscellaneous/typealiases.html":{}}}],["documentgenerationcompon",{"_index":289,"title":{"components/DocumentGenerationComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"modules/DocumentGenerationModule.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{},"overview.html":{}}}],["documentgenerationmodul",{"_index":1195,"title":{"modules/DocumentGenerationModule.html":{}},"body":{"modules/DocumentGenerationModule.html":{},"modules/PersonsModule.html":{},"modules.html":{},"overview.html":{}}}],["documentreportviewercompon",{"_index":291,"title":{"components/DocumentReportViewerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"modules/DocumentReportViewerModule.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{},"overview.html":{}}}],["documentreportviewermodul",{"_index":1243,"title":{"modules/DocumentReportViewerModule.html":{}},"body":{"modules/DocumentReportViewerModule.html":{},"modules/PersonsModule.html":{},"modules.html":{},"overview.html":{}}}],["documentshelp",{"_index":1191,"title":{"injectables/DocumentsHelper.html":{}},"body":{"components/DocumentGenerationComponent.html":{},"modules/DocumentGenerationModule.html":{},"injectables/DocumentsHelper.html":{},"components/PersonFormComponent.html":{},"overview.html":{}}}],["dologin",{"_index":654,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["dologinact",{"_index":144,"title":{"classes/DoLoginAction.html":{}},"body":{"classes/AddUserAction.html":{},"classes/DoLoginAction.html":{},"classes/DoLoginFailAction.html":{},"classes/DoLoginSuccessAction.html":{},"classes/DoLogoutAction.html":{},"classes/DoLogoutFailAction.html":{},"classes/DoLogoutSuccessAction.html":{},"classes/RemoveUserAction.html":{},"miscellaneous/typealiases.html":{}}}],["dologinfailact",{"_index":148,"title":{"classes/DoLoginFailAction.html":{}},"body":{"classes/AddUserAction.html":{},"classes/DoLoginAction.html":{},"classes/DoLoginFailAction.html":{},"classes/DoLoginSuccessAction.html":{},"classes/DoLogoutAction.html":{},"classes/DoLogoutFailAction.html":{},"classes/DoLogoutSuccessAction.html":{},"classes/RemoveUserAction.html":{},"miscellaneous/typealiases.html":{}}}],["dologinsuccessact",{"_index":146,"title":{"classes/DoLoginSuccessAction.html":{}},"body":{"classes/AddUserAction.html":{},"classes/DoLoginAction.html":{},"classes/DoLoginFailAction.html":{},"classes/DoLoginSuccessAction.html":{},"classes/DoLogoutAction.html":{},"classes/DoLogoutFailAction.html":{},"classes/DoLogoutSuccessAction.html":{},"classes/RemoveUserAction.html":{},"miscellaneous/typealiases.html":{}}}],["dologout",{"_index":655,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["dologoutact",{"_index":150,"title":{"classes/DoLogoutAction.html":{}},"body":{"classes/AddUserAction.html":{},"classes/DoLoginAction.html":{},"classes/DoLoginFailAction.html":{},"classes/DoLoginSuccessAction.html":{},"classes/DoLogoutAction.html":{},"classes/DoLogoutFailAction.html":{},"classes/DoLogoutSuccessAction.html":{},"classes/RemoveUserAction.html":{},"miscellaneous/typealiases.html":{}}}],["dologoutfailact",{"_index":154,"title":{"classes/DoLogoutFailAction.html":{}},"body":{"classes/AddUserAction.html":{},"classes/DoLoginAction.html":{},"classes/DoLoginFailAction.html":{},"classes/DoLoginSuccessAction.html":{},"classes/DoLogoutAction.html":{},"classes/DoLogoutFailAction.html":{},"classes/DoLogoutSuccessAction.html":{},"classes/RemoveUserAction.html":{},"miscellaneous/typealiases.html":{}}}],["dologoutsuccessact",{"_index":152,"title":{"classes/DoLogoutSuccessAction.html":{}},"body":{"classes/AddUserAction.html":{},"classes/DoLoginAction.html":{},"classes/DoLoginFailAction.html":{},"classes/DoLoginSuccessAction.html":{},"classes/DoLogoutAction.html":{},"classes/DoLogoutFailAction.html":{},"classes/DoLogoutSuccessAction.html":{},"classes/RemoveUserAction.html":{},"miscellaneous/typealiases.html":{}}}],["dom",{"_index":211,"title":{},"body":{"components/AppComponent.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{}}}],["domsanit",{"_index":2618,"title":{},"body":{"pipes/SanitizeHtmlPipe.html":{}}}],["dossier",{"_index":295,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"injectables/DossierEffects.html":{},"components/DossierNavigatorComponent.html":{},"modules/DossierNavigatorModule.html":{},"injectables/DossierSandbox.html":{},"classes/GetTreeDetailAction.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"components/LeftSidebarComponent.html":{},"classes/LoadAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"classes/ResetState.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetClosedAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{},"components/SpinnerComponent.html":{},"interfaces/State.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{}}}],["dossier.nam",{"_index":2948,"title":{},"body":{"components/TreeDetailComponent.html":{}}}],["dossier.sandbox",{"_index":1385,"title":{},"body":{"components/DossierNavigatorComponent.html":{},"modules/DossierNavigatorModule.html":{},"injectables/DossierService.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{}}}],["dossier.servic",{"_index":1294,"title":{},"body":{"injectables/DossierApiClient.html":{},"modules/DossierNavigatorModule.html":{}}}],["dossier/detail/${treemodel.id}/${treemodel.faleistungid",{"_index":1526,"title":{},"body":{"injectables/DossierSandbox.html":{}}}],["dossieract",{"_index":1328,"title":{},"body":{"injectables/DossierEffects.html":{},"injectables/DossierSandbox.html":{}}}],["dossieraction.loadact",{"_index":1321,"title":{},"body":{"injectables/DossierEffects.html":{}}}],["dossieraction.loadfailact",{"_index":1326,"title":{},"body":{"injectables/DossierEffects.html":{}}}],["dossieraction.loadsuccessaction(tre",{"_index":1325,"title":{},"body":{"injectables/DossierEffects.html":{}}}],["dossieractions.gettreedetailaction(treemodel",{"_index":1517,"title":{},"body":{"injectables/DossierSandbox.html":{}}}],["dossieractions.loadaction(filt",{"_index":1504,"title":{},"body":{"injectables/DossierSandbox.html":{}}}],["dossieractions.resetst",{"_index":1538,"title":{},"body":{"injectables/DossierSandbox.html":{}}}],["dossieractions.setvisibilityfilteraction.setactiveaction(filt",{"_index":1503,"title":{},"body":{"injectables/DossierSandbox.html":{}}}],["dossieractions.setvisibilityfilteraction.setclosedaction(filt",{"_index":1506,"title":{},"body":{"injectables/DossierSandbox.html":{}}}],["dossieractions.setvisibilityfilteraction.setincludegroupaction(filt",{"_index":1509,"title":{},"body":{"injectables/DossierSandbox.html":{}}}],["dossieractions.setvisibilityfilteraction.setincludeguestaction(filt",{"_index":1511,"title":{},"body":{"injectables/DossierSandbox.html":{}}}],["dossierapicli",{"_index":376,"title":{"injectables/DossierApiClient.html":{}},"body":{"modules/AppModule.html":{},"injectables/DossierApiClient.html":{},"injectables/DossierEffects.html":{},"modules/DossierNavigatorModule.html":{},"injectables/DossierSandbox.html":{},"overview.html":{}}}],["dossierapiclient.servic",{"_index":1428,"title":{},"body":{"modules/DossierNavigatorModule.html":{},"injectables/DossierSandbox.html":{}}}],["dossierdata",{"_index":1473,"title":{},"body":{"injectables/DossierSandbox.html":{},"interfaces/State.html":{}}}],["dossierdetail",{"_index":1357,"title":{},"body":{"components/DossierNavigatorComponent.html":{},"injectables/DossierSandbox.html":{}}}],["dossierdetailscompon",{"_index":294,"title":{"components/DossierDetailsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"modules/LayoutContainersModule.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{},"overview.html":{}}}],["dossiereffect",{"_index":422,"title":{"injectables/DossierEffects.html":{}},"body":{"modules/AppModule.html":{},"injectables/DossierEffects.html":{}}}],["dossierfiltermodel",{"_index":1295,"title":{"classes/DossierFilterModel.html":{}},"body":{"injectables/DossierApiClient.html":{},"injectables/DossierEffects.html":{},"classes/DossierFilterModel.html":{},"components/DossierNavigatorComponent.html":{},"injectables/DossierSandbox.html":{},"classes/GetTreeDetailAction.html":{},"interfaces/IDossierFilterModel.html":{},"classes/LoadAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"components/NavFiltersComponent.html":{},"classes/ResetState.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetClosedAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{}}}],["dossierload",{"_index":1474,"title":{},"body":{"injectables/DossierSandbox.html":{}}}],["dossiernavig",{"_index":2960,"title":{},"body":{"components/TreeListComponent.html":{}}}],["dossiernavigatorcompon",{"_index":297,"title":{"components/DossierNavigatorComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"modules/DossierNavigatorModule.html":{},"modules/DossierRoutingModule.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{},"overview.html":{}}}],["dossiernavigatormodul",{"_index":1418,"title":{"modules/DossierNavigatorModule.html":{}},"body":{"modules/DossierNavigatorModule.html":{},"modules.html":{},"overview.html":{}}}],["dossiernavigatortreemodel",{"_index":595,"title":{"classes/DossierNavigatorTreeModel.html":{}},"body":{"injectables/AppService.html":{},"components/DossierDetailsComponent.html":{},"injectables/DossierEffects.html":{},"components/DossierNavigatorComponent.html":{},"classes/DossierNavigatorTreeModel.html":{},"injectables/DossierSandbox.html":{},"injectables/DossierService.html":{},"classes/GetTreeDetailAction.html":{},"interfaces/IDossierNavigatorTreeModel.html":{},"classes/LoadAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"classes/ResetState.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetClosedAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{}}}],["dossiernavrout",{"_index":1468,"title":{},"body":{"modules/DossierRoutingModule.html":{}}}],["dossierroutingmodul",{"_index":1423,"title":{"modules/DossierRoutingModule.html":{}},"body":{"modules/DossierNavigatorModule.html":{},"modules/DossierRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["dossiers.length",{"_index":1534,"title":{},"body":{"injectables/DossierSandbox.html":{},"injectables/PersonsSandbox.html":{}}}],["dossiers/dossi",{"_index":1429,"title":{},"body":{"modules/DossierNavigatorModule.html":{},"modules/DossierRoutingModule.html":{}}}],["dossiersandbox",{"_index":1358,"title":{"injectables/DossierSandbox.html":{}},"body":{"components/DossierNavigatorComponent.html":{},"modules/DossierNavigatorModule.html":{},"injectables/DossierSandbox.html":{},"injectables/DossierService.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{},"overview.html":{}}}],["dossierservic",{"_index":1293,"title":{"injectables/DossierService.html":{}},"body":{"injectables/DossierApiClient.html":{},"modules/DossierNavigatorModule.html":{},"injectables/DossierService.html":{},"overview.html":{}}}],["dossierssubscript",{"_index":1543,"title":{},"body":{"injectables/DossierService.html":{}}}],["download",{"_index":1088,"title":{},"body":{"components/ControlWebDavComponent.html":{},"index.html":{}}}],["download.doc",{"_index":1275,"title":{},"body":{"injectables/DocumentsHelper.html":{}}}],["downloadfil",{"_index":1255,"title":{},"body":{"injectables/DocumentsHelper.html":{}}}],["downloadfile(data",{"_index":1257,"title":{},"body":{"injectables/DocumentsHelper.html":{}}}],["dropdown",{"_index":1091,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["dxformcompon",{"_index":2288,"title":{},"body":{"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/TreeDetailComponent.html":{}}}],["dxtreeviewcompon",{"_index":2680,"title":{},"body":{"components/SelectedActionsComponent.html":{}}}],["dynam",{"_index":353,"title":{},"body":{"components/AppComponent.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"directives/DynamicTabsDirective.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{},"dependencies.html":{}}}],["dynamictabsdirect",{"_index":352,"title":{"directives/DynamicTabsDirective.html":{}},"body":{"components/AppComponent.html":{},"components/BreadCrumbComponent.html":{},"modules/ComponentsModule.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"directives/DynamicTabsDirective.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{},"overview.html":{}}}],["e",{"_index":1036,"title":{},"body":{"components/ControlWebDavComponent.html":{},"injectables/DossierSandbox.html":{},"components/HorizontalNavigationComponent.html":{},"classes/HttpAdapter.html":{},"injectables/LayoutSandbox.html":{},"components/NavFiltersComponent.html":{},"components/SelectedActionsComponent.html":{},"components/ToolbarsComponent.html":{}}}],["e.itemdata",{"_index":2019,"title":{},"body":{"injectables/LayoutSandbox.html":{}}}],["e.valu",{"_index":1502,"title":{},"body":{"injectables/DossierSandbox.html":{}}}],["each",{"_index":2756,"title":{},"body":{"interfaces/State.html":{}}}],["easili",{"_index":632,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["edit",{"_index":3138,"title":{},"body":{"index.html":{}}}],["effect",{"_index":410,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthEffects.html":{},"injectables/DossierEffects.html":{},"injectables/MenusEffects.html":{},"injectables/PersonsEffects.html":{},"injectables/SearchBoxDatasEffects.html":{},"injectables/SettingsEffects.html":{}}}],["effectsmodul",{"_index":437,"title":{},"body":{"modules/AppModule.html":{}}}],["effectsmodule.run",{"_index":503,"title":{},"body":{"modules/AppModule.html":{}}}],["effectsmodule.run(autheffect",{"_index":509,"title":{},"body":{"modules/AppModule.html":{}}}],["effectsmodule.run(dossiereffect",{"_index":513,"title":{},"body":{"modules/AppModule.html":{}}}],["effectsmodule.run(menuseffect",{"_index":511,"title":{},"body":{"modules/AppModule.html":{}}}],["effectsmodule.run(personseffect",{"_index":514,"title":{},"body":{"modules/AppModule.html":{}}}],["effectsmodule.run(searchboxdataseffect",{"_index":512,"title":{},"body":{"modules/AppModule.html":{}}}],["effectsmodule.run(settingseffect",{"_index":510,"title":{},"body":{"modules/AppModule.html":{}}}],["el",{"_index":1632,"title":{},"body":{"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{}}}],["el.path",{"_index":2051,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["element",{"_index":276,"title":{},"body":{"components/AppComponent.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{}}}],["elementref",{"_index":997,"title":{},"body":{"components/ControlWebDavComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"components/LeftSidebarComponent.html":{}}}],["elwrapp",{"_index":2052,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["email",{"_index":9,"title":{},"body":{"classes/Account.html":{},"injectables/ValidationService.html":{}}}],["email_regexp",{"_index":3057,"title":{},"body":{"injectables/ValidationService.html":{}}}],["email_regexp.test(formcontrol.valu",{"_index":3065,"title":{},"body":{"injectables/ValidationService.html":{}}}],["enabl",{"_index":490,"title":{},"body":{"modules/AppModule.html":{}}}],["encapsul",{"_index":2949,"title":{},"body":{"components/TreeListComponent.html":{}}}],["endpoint",{"_index":1740,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["enum",{"_index":1000,"title":{},"body":{"components/ControlWebDavComponent.html":{},"injectables/HttpService.html":{}}}],["enumer",{"_index":3117,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":890,"title":{},"body":{"injectables/ConfigService.html":{}}}],["env_data",{"_index":915,"title":{},"body":{"injectables/ConfigService.html":{}}}],["env_data.env",{"_index":917,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environ",{"_index":765,"title":{},"body":{"injectables/AuthSandbox.html":{},"injectables/ConfigService.html":{},"components/HeaderComponent.html":{}}}],["environment.page.dossi",{"_index":1640,"title":{},"body":{"components/HeaderComponent.html":{}}}],["environment.page.login",{"_index":782,"title":{},"body":{"injectables/AuthSandbox.html":{}}}],["environments/environ",{"_index":766,"title":{},"body":{"injectables/AuthSandbox.html":{}}}],["environments/environment.prod",{"_index":1636,"title":{},"body":{"components/HeaderComponent.html":{}}}],["error",{"_index":921,"title":{},"body":{"injectables/ConfigService.html":{},"classes/DeleteItemSelectedAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"injectables/HttpResponseHandler.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"injectables/ReportService.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetCultureAction.html":{},"classes/SetLanguageAction.html":{},"classes/UpdateSelectedAction.html":{},"injectables/UtilService.html":{},"injectables/ValidationService.html":{},"index.html":{}}}],["errorhandl",{"_index":2564,"title":{},"body":{"injectables/ReportService.html":{}}}],["errorhandler(error",{"_index":2567,"title":{},"body":{"injectables/ReportService.html":{}}}],["errorobserv",{"_index":1717,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["event",{"_index":238,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthSandbox.html":{},"components/DocumentGenerationComponent.html":{},"components/DossierNavigatorComponent.html":{},"injectables/DossierSandbox.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"injectables/LayoutSandbox.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"injectables/PersonsSandbox.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SelectedActionsComponent.html":{},"components/ToolbarsComponent.html":{}}}],["event.stoppropag",{"_index":2109,"title":{},"body":{"components/LoginComponent.html":{}}}],["eventemitt",{"_index":50,"title":{},"body":{"classes/ActionHandler.html":{},"components/DocumentGenerationComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NavFiltersComponent.html":{},"components/PersonFormComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/ToolbarsComponent.html":{}}}],["exampl",{"_index":645,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["excel",{"_index":3123,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["except",{"_index":531,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ExceptionsModule.html":{}}}],["exception/404",{"_index":533,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["exceptions/exceptions.module#exceptionsmodul",{"_index":532,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["exceptionsmodul",{"_index":1555,"title":{"modules/ExceptionsModule.html":{}},"body":{"modules/ExceptionsModule.html":{},"modules.html":{},"overview.html":{}}}],["exceptionsroutingmodul",{"_index":1559,"title":{"modules/ExceptionsRoutingModule.html":{}},"body":{"modules/ExceptionsModule.html":{},"modules/ExceptionsRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["exist",{"_index":1060,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["expand",{"_index":1843,"title":{},"body":{"interfaces/ISidebarMenuModel.html":{},"classes/SidebarMenuModel.html":{}}}],["expires_in",{"_index":2992,"title":{},"body":{"classes/User.html":{}}}],["export",{"_index":27,"title":{},"body":{"classes/Account.html":{},"classes/ActionHandler.html":{},"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"classes/AddUserAction.html":{},"injectables/AppApiClient.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppSandbox.html":{},"injectables/AppService.html":{},"injectables/AuthApiClient.html":{},"injectables/AuthEffects.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthSandbox.html":{},"directives/AuthorizeDirective.html":{},"injectables/AuthorizeGuard.html":{},"classes/BaseComponent.html":{},"components/BreadCrumbComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"classes/ClassRightModel.html":{},"modules/ComponentsModule.html":{},"injectables/ConfigService.html":{},"components/ControlWebDavComponent.html":{},"modules/ControlWebDavModule.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteItemSelectedAction.html":{},"classes/DeleteSuccessAction.html":{},"classes/DoLoginAction.html":{},"classes/DoLoginFailAction.html":{},"classes/DoLoginSuccessAction.html":{},"classes/DoLogoutAction.html":{},"classes/DoLogoutFailAction.html":{},"classes/DoLogoutSuccessAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"components/DocumentGenerationComponent.html":{},"modules/DocumentGenerationModule.html":{},"components/DocumentReportViewerComponent.html":{},"modules/DocumentReportViewerModule.html":{},"injectables/DocumentsHelper.html":{},"injectables/DossierApiClient.html":{},"components/DossierDetailsComponent.html":{},"injectables/DossierEffects.html":{},"classes/DossierFilterModel.html":{},"components/DossierNavigatorComponent.html":{},"modules/DossierNavigatorModule.html":{},"classes/DossierNavigatorTreeModel.html":{},"modules/DossierRoutingModule.html":{},"injectables/DossierSandbox.html":{},"injectables/DossierService.html":{},"directives/DynamicTabsDirective.html":{},"modules/ExceptionsModule.html":{},"modules/ExceptionsRoutingModule.html":{},"classes/GetTreeDetailAction.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"classes/HttpAdapter.html":{},"injectables/HttpResponseHandler.html":{},"injectables/HttpService.html":{},"modules/HttpServiceModule.html":{},"interfaces/IDossierFilterModel.html":{},"interfaces/IDossierNavigatorTreeModel.html":{},"interfaces/IMenuModel.html":{},"interfaces/IPerson.html":{},"interfaces/ISearchBoxModel.html":{},"interfaces/ISidebarMenuModel.html":{},"interfaces/ITemplateModel.html":{},"classes/ITreeNavModel.html":{},"interfaces/LanguageModel.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"modules/LayoutContainersModule.html":{},"injectables/LayoutSandbox.html":{},"components/LeftSidebarComponent.html":{},"classes/LoadAction.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"components/LoginComponent.html":{},"classes/LoginForm.html":{},"classes/MenuModel.html":{},"injectables/MenusEffects.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Person.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"injectables/PersonsApiClient.html":{},"components/PersonsComponent.html":{},"injectables/PersonsEffects.html":{},"modules/PersonsModule.html":{},"injectables/PersonsResolver.html":{},"modules/PersonsRoutingModule.html":{},"injectables/PersonsSandbox.html":{},"injectables/PersonsService.html":{},"modules/PipesModule.html":{},"components/ProfileBarComponent.html":{},"classes/RemoveUserAction.html":{},"injectables/ReportService.html":{},"components/ReportViewerComponent.html":{},"classes/ResetState.html":{},"classes/Sandbox.html":{},"pipes/SanitizeHtmlPipe.html":{},"components/SearchBoxComponent.html":{},"injectables/SearchBoxDatasEffects.html":{},"classes/SearchBoxModel.html":{},"classes/SelectAction.html":{},"components/SelectedActionsComponent.html":{},"classes/SelectedActionsModel.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetAvaiableMenu.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetClosedAction.html":{},"classes/SetCultureAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{},"classes/SetLanguageAction.html":{},"injectables/SettingsEffects.html":{},"classes/SidebarMenuModel.html":{},"components/SpinnerComponent.html":{},"interfaces/State.html":{},"classes/TemplateModel.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{},"classes/TreeNavModel.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSelectedAction.html":{},"classes/UpdateSuccessAction.html":{},"classes/User.html":{},"injectables/UtilService.html":{},"modules/UtilityModule.html":{},"injectables/ValidationService.html":{},"overview.html":{},"interfaces/role.html":{}}}],["ext",{"_index":1278,"title":{},"body":{"injectables/DocumentsHelper.html":{}}}],["extend",{"_index":195,"title":{},"body":{"injectables/AppApiClient.html":{},"injectables/AppSandbox.html":{},"injectables/AuthApiClient.html":{},"injectables/AuthSandbox.html":{},"injectables/DossierApiClient.html":{},"components/DossierNavigatorComponent.html":{},"injectables/DossierSandbox.html":{},"injectables/LayoutSandbox.html":{},"components/LoginComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"injectables/PersonsApiClient.html":{},"components/PersonsComponent.html":{},"injectables/PersonsSandbox.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{}}}],["extens",{"_index":497,"title":{},"body":{"modules/AppModule.html":{}}}],["extra",{"_index":718,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["extract",{"_index":1691,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["f",{"_index":1442,"title":{},"body":{"classes/DossierNavigatorTreeModel.html":{},"interfaces/IDossierNavigatorTreeModel.html":{}}}],["factori",{"_index":462,"title":{},"body":{"modules/AppModule.html":{}}}],["fail",{"_index":80,"title":{},"body":{"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"classes/AddUserAction.html":{},"components/ControlWebDavComponent.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteItemSelectedAction.html":{},"classes/DeleteSuccessAction.html":{},"classes/DoLoginAction.html":{},"classes/DoLoginFailAction.html":{},"classes/DoLoginSuccessAction.html":{},"classes/DoLogoutAction.html":{},"classes/DoLogoutFailAction.html":{},"classes/DoLogoutSuccessAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"classes/GetTreeDetailAction.html":{},"classes/LoadAction.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"classes/RemoveUserAction.html":{},"classes/ResetState.html":{},"classes/SelectAction.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetAvaiableMenu.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetClosedAction.html":{},"classes/SetCultureAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{},"classes/SetLanguageAction.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSelectedAction.html":{},"classes/UpdateSuccessAction.html":{}}}],["faker",{"_index":3096,"title":{},"body":{"dependencies.html":{}}}],["faleistungid",{"_index":1443,"title":{},"body":{"classes/DossierNavigatorTreeModel.html":{},"interfaces/IDossierNavigatorTreeModel.html":{}}}],["fals",{"_index":48,"title":{},"body":{"classes/ActionHandler.html":{},"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"directives/AuthorizeDirective.html":{},"injectables/AuthorizeGuard.html":{},"components/ControlWebDavComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/HeaderComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LoginComponent.html":{},"components/PersonFormComponent.html":{},"components/ToolbarsComponent.html":{},"classes/User.html":{},"injectables/ValidationService.html":{}}}],["fb",{"_index":2077,"title":{},"body":{"components/LoginComponent.html":{}}}],["fcallback",{"_index":1035,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["fcallback(listfil",{"_index":1081,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["featur",{"_index":1148,"title":{},"body":{"classes/DeleteItemSelectedAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetCultureAction.html":{},"classes/SetLanguageAction.html":{},"classes/UpdateSelectedAction.html":{}}}],["file",{"_index":4,"title":{},"body":{"classes/Account.html":{},"classes/ActionHandler.html":{},"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"classes/AddUserAction.html":{},"injectables/AppApiClient.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppSandbox.html":{},"injectables/AppService.html":{},"injectables/AuthApiClient.html":{},"injectables/AuthEffects.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthSandbox.html":{},"directives/AuthorizeDirective.html":{},"injectables/AuthorizeGuard.html":{},"classes/BaseComponent.html":{},"components/BreadCrumbComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"classes/ClassRightModel.html":{},"modules/ComponentsModule.html":{},"injectables/ConfigService.html":{},"components/ControlWebDavComponent.html":{},"modules/ControlWebDavModule.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteItemSelectedAction.html":{},"classes/DeleteSuccessAction.html":{},"classes/DoLoginAction.html":{},"classes/DoLoginFailAction.html":{},"classes/DoLoginSuccessAction.html":{},"classes/DoLogoutAction.html":{},"classes/DoLogoutFailAction.html":{},"classes/DoLogoutSuccessAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"components/DocumentGenerationComponent.html":{},"modules/DocumentGenerationModule.html":{},"components/DocumentReportViewerComponent.html":{},"modules/DocumentReportViewerModule.html":{},"injectables/DocumentsHelper.html":{},"injectables/DossierApiClient.html":{},"components/DossierDetailsComponent.html":{},"injectables/DossierEffects.html":{},"classes/DossierFilterModel.html":{},"components/DossierNavigatorComponent.html":{},"modules/DossierNavigatorModule.html":{},"classes/DossierNavigatorTreeModel.html":{},"modules/DossierRoutingModule.html":{},"injectables/DossierSandbox.html":{},"injectables/DossierService.html":{},"directives/DynamicTabsDirective.html":{},"modules/ExceptionsModule.html":{},"modules/ExceptionsRoutingModule.html":{},"classes/GetTreeDetailAction.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"classes/HttpAdapter.html":{},"injectables/HttpResponseHandler.html":{},"injectables/HttpService.html":{},"modules/HttpServiceModule.html":{},"interfaces/IDossierFilterModel.html":{},"interfaces/IDossierNavigatorTreeModel.html":{},"interfaces/IMenuModel.html":{},"interfaces/IPerson.html":{},"interfaces/ISearchBoxModel.html":{},"interfaces/ISidebarMenuModel.html":{},"interfaces/ITemplateModel.html":{},"classes/ITreeNavModel.html":{},"interfaces/LanguageModel.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"modules/LayoutContainersModule.html":{},"injectables/LayoutSandbox.html":{},"components/LeftSidebarComponent.html":{},"classes/LoadAction.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"components/LoginComponent.html":{},"classes/LoginForm.html":{},"classes/MenuModel.html":{},"injectables/MenusEffects.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Person.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"injectables/PersonsApiClient.html":{},"components/PersonsComponent.html":{},"injectables/PersonsEffects.html":{},"modules/PersonsModule.html":{},"injectables/PersonsResolver.html":{},"modules/PersonsRoutingModule.html":{},"injectables/PersonsSandbox.html":{},"injectables/PersonsService.html":{},"modules/PipesModule.html":{},"components/ProfileBarComponent.html":{},"classes/RemoveUserAction.html":{},"injectables/ReportService.html":{},"components/ReportViewerComponent.html":{},"classes/ResetState.html":{},"classes/Sandbox.html":{},"pipes/SanitizeHtmlPipe.html":{},"components/SearchBoxComponent.html":{},"injectables/SearchBoxDatasEffects.html":{},"classes/SearchBoxModel.html":{},"classes/SelectAction.html":{},"components/SelectedActionsComponent.html":{},"classes/SelectedActionsModel.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetAvaiableMenu.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetClosedAction.html":{},"classes/SetCultureAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{},"classes/SetLanguageAction.html":{},"injectables/SettingsEffects.html":{},"classes/SidebarMenuModel.html":{},"components/SpinnerComponent.html":{},"interfaces/State.html":{},"classes/TemplateModel.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{},"classes/TreeNavModel.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSelectedAction.html":{},"classes/UpdateSuccessAction.html":{},"classes/User.html":{},"injectables/UtilService.html":{},"modules/UtilityModule.html":{},"injectables/ValidationService.html":{},"interfaces/role.html":{}}}],["filenam",{"_index":934,"title":{},"body":{"components/ControlWebDavComponent.html":{},"injectables/DocumentsHelper.html":{},"interfaces/ITemplateModel.html":{},"classes/TemplateModel.html":{}}}],["filename}.${typefile.ext",{"_index":1274,"title":{},"body":{"injectables/DocumentsHelper.html":{}}}],["filter",{"_index":1365,"title":{},"body":{"components/DossierNavigatorComponent.html":{},"injectables/DossierSandbox.html":{},"classes/GetTreeDetailAction.html":{},"classes/LoadAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"components/NavFiltersComponent.html":{},"classes/ResetState.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetClosedAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{}}}],["filterdossi",{"_index":1475,"title":{},"body":{"injectables/DossierSandbox.html":{}}}],["filters'},{'nam",{"_index":316,"title":{},"body":{"components/AppComponent.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{}}}],["filters.act",{"_index":1394,"title":{},"body":{"components/DossierNavigatorComponent.html":{},"injectables/DossierSandbox.html":{}}}],["filters.archiv",{"_index":1400,"title":{},"body":{"components/DossierNavigatorComponent.html":{},"injectables/DossierSandbox.html":{}}}],["filters.clos",{"_index":1397,"title":{},"body":{"components/DossierNavigatorComponent.html":{},"injectables/DossierSandbox.html":{}}}],["filters.compon",{"_index":1434,"title":{},"body":{"modules/DossierNavigatorModule.html":{}}}],["filters.component.html",{"_index":2183,"title":{},"body":{"components/NavFiltersComponent.html":{}}}],["filters.component.scss",{"_index":2182,"title":{},"body":{"components/NavFiltersComponent.html":{}}}],["filters.component.t",{"_index":2181,"title":{},"body":{"components/NavFiltersComponent.html":{}}}],["filters.component.ts:19",{"_index":2191,"title":{},"body":{"components/NavFiltersComponent.html":{}}}],["filters.component.ts:21",{"_index":2192,"title":{},"body":{"components/NavFiltersComponent.html":{}}}],["filters.component.ts:22",{"_index":2194,"title":{},"body":{"components/NavFiltersComponent.html":{}}}],["filters.component.ts:23",{"_index":2193,"title":{},"body":{"components/NavFiltersComponent.html":{}}}],["filters.component.ts:24",{"_index":2195,"title":{},"body":{"components/NavFiltersComponent.html":{}}}],["filters.component.ts:25",{"_index":2196,"title":{},"body":{"components/NavFiltersComponent.html":{}}}],["filters.component.ts:26",{"_index":2190,"title":{},"body":{"components/NavFiltersComponent.html":{}}}],["filters.component.ts:30",{"_index":2209,"title":{},"body":{"components/NavFiltersComponent.html":{}}}],["filters.includegroup",{"_index":1403,"title":{},"body":{"components/DossierNavigatorComponent.html":{},"injectables/DossierSandbox.html":{}}}],["filters.includeguest",{"_index":1406,"title":{},"body":{"components/DossierNavigatorComponent.html":{},"injectables/DossierSandbox.html":{}}}],["filters.includetask",{"_index":1409,"title":{},"body":{"components/DossierNavigatorComponent.html":{},"injectables/DossierSandbox.html":{}}}],["filters.model.t",{"_index":1331,"title":{},"body":{"classes/DossierFilterModel.html":{},"interfaces/IDossierFilterModel.html":{}}}],["filters.model.ts:2",{"_index":1347,"title":{},"body":{"classes/DossierFilterModel.html":{}}}],["filters.model.ts:3",{"_index":1342,"title":{},"body":{"classes/DossierFilterModel.html":{}}}],["filters.model.ts:4",{"_index":1344,"title":{},"body":{"classes/DossierFilterModel.html":{}}}],["filters.model.ts:5",{"_index":1343,"title":{},"body":{"classes/DossierFilterModel.html":{}}}],["filters.model.ts:6",{"_index":1345,"title":{},"body":{"classes/DossierFilterModel.html":{}}}],["filters.model.ts:7",{"_index":1346,"title":{},"body":{"classes/DossierFilterModel.html":{}}}],["filters.model.ts:8",{"_index":1341,"title":{},"body":{"classes/DossierFilterModel.html":{}}}],["filters.userid",{"_index":1391,"title":{},"body":{"components/DossierNavigatorComponent.html":{}}}],["filters/nav",{"_index":1433,"title":{},"body":{"modules/DossierNavigatorModule.html":{},"components/NavFiltersComponent.html":{}}}],["filtersact",{"_index":1596,"title":{},"body":{"classes/GetTreeDetailAction.html":{},"classes/LoadAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"classes/ResetState.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetClosedAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{},"miscellaneous/typealiases.html":{}}}],["find",{"_index":1067,"title":{},"body":{"components/ControlWebDavComponent.html":{},"injectables/PersonsResolver.html":{}}}],["finish",{"_index":3164,"title":{},"body":{"index.html":{}}}],["firefox",{"_index":499,"title":{},"body":{"modules/AppModule.html":{},"components/LeftSidebarComponent.html":{}}}],["first",{"_index":901,"title":{},"body":{"injectables/ConfigService.html":{},"index.html":{}}}],["firstnam",{"_index":3151,"title":{},"body":{"index.html":{}}}],["fix",{"_index":2057,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["flag",{"_index":1871,"title":{},"body":{"interfaces/LanguageModel.html":{}}}],["fname",{"_index":975,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["folder_doc",{"_index":1001,"title":{},"body":{"components/ControlWebDavComponent.html":{},"components/PersonFormComponent.html":{}}}],["folder_plugin",{"_index":1003,"title":{},"body":{"components/ControlWebDavComponent.html":{},"components/PersonFormComponent.html":{}}}],["folder_temp",{"_index":1002,"title":{},"body":{"components/ControlWebDavComponent.html":{},"components/PersonFormComponent.html":{}}}],["font",{"_index":3098,"title":{},"body":{"dependencies.html":{}}}],["forgot",{"_index":2128,"title":{},"body":{"components/LoginComponent.html":{}}}],["form",{"_index":603,"title":{},"body":{"injectables/AuthApiClient.html":{},"injectables/AuthSandbox.html":{},"components/LoginComponent.html":{},"components/PersonFormComponent.html":{},"injectables/PersonsApiClient.html":{}}}],["form'},{'nam",{"_index":328,"title":{},"body":{"components/AppComponent.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{}}}],["form.client_id",{"_index":2113,"title":{},"body":{"components/LoginComponent.html":{}}}],["form.client_secret",{"_index":2115,"title":{},"body":{"components/LoginComponent.html":{}}}],["form.compon",{"_index":2450,"title":{},"body":{"modules/PersonsModule.html":{},"modules/PersonsRoutingModule.html":{}}}],["form.component.html",{"_index":2255,"title":{},"body":{"components/PersonFormComponent.html":{}}}],["form.component.scss",{"_index":2254,"title":{},"body":{"components/PersonFormComponent.html":{}}}],["form.component.t",{"_index":2253,"title":{},"body":{"components/PersonFormComponent.html":{}}}],["form.component.ts:101",{"_index":2269,"title":{},"body":{"components/PersonFormComponent.html":{}}}],["form.component.ts:108",{"_index":2275,"title":{},"body":{"components/PersonFormComponent.html":{}}}],["form.component.ts:39",{"_index":2287,"title":{},"body":{"components/PersonFormComponent.html":{}}}],["form.component.ts:40",{"_index":2279,"title":{},"body":{"components/PersonFormComponent.html":{}}}],["form.component.ts:41",{"_index":2281,"title":{},"body":{"components/PersonFormComponent.html":{}}}],["form.component.ts:42",{"_index":2280,"title":{},"body":{"components/PersonFormComponent.html":{}}}],["form.component.ts:43",{"_index":2291,"title":{},"body":{"components/PersonFormComponent.html":{}}}],["form.component.ts:46",{"_index":2285,"title":{},"body":{"components/PersonFormComponent.html":{}}}],["form.component.ts:47",{"_index":2293,"title":{},"body":{"components/PersonFormComponent.html":{}}}],["form.component.ts:50",{"_index":2289,"title":{},"body":{"components/PersonFormComponent.html":{}}}],["form.component.ts:52",{"_index":2283,"title":{},"body":{"components/PersonFormComponent.html":{}}}],["form.component.ts:57",{"_index":2267,"title":{},"body":{"components/PersonFormComponent.html":{}}}],["form.component.ts:62",{"_index":2290,"title":{},"body":{"components/PersonFormComponent.html":{}}}],["form.component.ts:70",{"_index":2277,"title":{},"body":{"components/PersonFormComponent.html":{}}}],["form.component.ts:75",{"_index":2278,"title":{},"body":{"components/PersonFormComponent.html":{}}}],["form.component.ts:92",{"_index":2276,"title":{},"body":{"components/PersonFormComponent.html":{}}}],["form.grant_typ",{"_index":2117,"title":{},"body":{"components/LoginComponent.html":{}}}],["form.scop",{"_index":2119,"title":{},"body":{"components/LoginComponent.html":{}}}],["form/person",{"_index":2252,"title":{},"body":{"components/PersonFormComponent.html":{},"modules/PersonsModule.html":{},"modules/PersonsRoutingModule.html":{}}}],["form_data",{"_index":1804,"title":{},"body":{"injectables/HttpService.html":{},"miscellaneous/enumerations.html":{}}}],["format",{"_index":2602,"title":{},"body":{"classes/Sandbox.html":{}}}],["format.enum",{"_index":1262,"title":{},"body":{"injectables/DocumentsHelper.html":{}}}],["format.enum.t",{"_index":3119,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["formatd",{"_index":2589,"title":{},"body":{"classes/Sandbox.html":{}}}],["formatdate(valu",{"_index":2600,"title":{},"body":{"classes/Sandbox.html":{}}}],["formbuild",{"_index":2078,"title":{},"body":{"components/LoginComponent.html":{}}}],["formcontrol",{"_index":1427,"title":{},"body":{"modules/DossierNavigatorModule.html":{},"modules/PersonsModule.html":{},"injectables/ValidationService.html":{}}}],["formcontrol.valu",{"_index":3066,"title":{},"body":{"injectables/ValidationService.html":{}}}],["formdata",{"_index":2260,"title":{},"body":{"components/PersonFormComponent.html":{},"components/TreeDetailComponent.html":{}}}],["formgroup",{"_index":2091,"title":{},"body":{"components/LoginComponent.html":{},"injectables/ValidationService.html":{}}}],["formsmodul",{"_index":396,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ComponentsModule.html":{}}}],["forroot",{"_index":1822,"title":{},"body":{"modules/HttpServiceModule.html":{},"modules/UtilityModule.html":{}}}],["forwardref",{"_index":596,"title":{},"body":{"injectables/AppService.html":{},"injectables/DossierService.html":{},"injectables/PersonsService.html":{}}}],["found",{"_index":2238,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found'},{'nam",{"_index":326,"title":{},"body":{"components/AppComponent.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{}}}],["fromauth",{"_index":2791,"title":{},"body":{"interfaces/State.html":{}}}],["fromauth.getfail",{"_index":2852,"title":{},"body":{"interfaces/State.html":{}}}],["fromauth.getload",{"_index":2850,"title":{},"body":{"interfaces/State.html":{}}}],["fromauth.getloggedus",{"_index":2854,"title":{},"body":{"interfaces/State.html":{}}}],["fromauth.reduc",{"_index":2817,"title":{},"body":{"interfaces/State.html":{}}}],["fromauth.st",{"_index":2764,"title":{},"body":{"interfaces/State.html":{}}}],["fromdossiersdata",{"_index":2803,"title":{},"body":{"interfaces/State.html":{}}}],["fromdossiersdata.getfail",{"_index":2904,"title":{},"body":{"interfaces/State.html":{}}}],["fromdossiersdata.getfilt",{"_index":2908,"title":{},"body":{"interfaces/State.html":{}}}],["fromdossiersdata.getload",{"_index":2902,"title":{},"body":{"interfaces/State.html":{}}}],["fromdossiersdata.gettre",{"_index":2906,"title":{},"body":{"interfaces/State.html":{}}}],["fromdossiersdata.gettreedetail",{"_index":2910,"title":{},"body":{"interfaces/State.html":{}}}],["fromdossiersdata.reduc",{"_index":2822,"title":{},"body":{"interfaces/State.html":{}}}],["fromdossiersdata.st",{"_index":2763,"title":{},"body":{"interfaces/State.html":{}}}],["frommenu",{"_index":2798,"title":{},"body":{"interfaces/State.html":{}}}],["frommenus.getavaiablemenu",{"_index":2888,"title":{},"body":{"interfaces/State.html":{}}}],["frommenus.getdata",{"_index":2884,"title":{},"body":{"interfaces/State.html":{}}}],["frommenus.getfail",{"_index":2883,"title":{},"body":{"interfaces/State.html":{}}}],["frommenus.getload",{"_index":2881,"title":{},"body":{"interfaces/State.html":{}}}],["frommenus.getselectitem",{"_index":2886,"title":{},"body":{"interfaces/State.html":{}}}],["frommenus.reduc",{"_index":2820,"title":{},"body":{"interfaces/State.html":{}}}],["frommenus.st",{"_index":2765,"title":{},"body":{"interfaces/State.html":{}}}],["fromperson",{"_index":2793,"title":{},"body":{"interfaces/State.html":{}}}],["frompersondetail",{"_index":2795,"title":{},"body":{"interfaces/State.html":{}}}],["frompersondetails.getdata",{"_index":2876,"title":{},"body":{"interfaces/State.html":{}}}],["frompersondetails.getfail",{"_index":2874,"title":{},"body":{"interfaces/State.html":{}}}],["frompersondetails.getload",{"_index":2872,"title":{},"body":{"interfaces/State.html":{}}}],["frompersondetails.reduc",{"_index":2819,"title":{},"body":{"interfaces/State.html":{}}}],["frompersondetails.st",{"_index":2766,"title":{},"body":{"interfaces/State.html":{}}}],["frompersons.getad",{"_index":2867,"title":{},"body":{"interfaces/State.html":{}}}],["frompersons.getdata",{"_index":2863,"title":{},"body":{"interfaces/State.html":{}}}],["frompersons.getfail",{"_index":2861,"title":{},"body":{"interfaces/State.html":{}}}],["frompersons.getload",{"_index":2859,"title":{},"body":{"interfaces/State.html":{}}}],["frompersons.getperson",{"_index":2865,"title":{},"body":{"interfaces/State.html":{}}}],["frompersons.reduc",{"_index":2818,"title":{},"body":{"interfaces/State.html":{}}}],["frompersons.st",{"_index":2767,"title":{},"body":{"interfaces/State.html":{}}}],["fromsearchboxdata",{"_index":2800,"title":{},"body":{"interfaces/State.html":{}}}],["fromsearchboxdata.getdata",{"_index":2897,"title":{},"body":{"interfaces/State.html":{}}}],["fromsearchboxdata.getfail",{"_index":2895,"title":{},"body":{"interfaces/State.html":{}}}],["fromsearchboxdata.getload",{"_index":2893,"title":{},"body":{"interfaces/State.html":{}}}],["fromsearchboxdata.reduc",{"_index":2821,"title":{},"body":{"interfaces/State.html":{}}}],["fromsearchboxdata.st",{"_index":2768,"title":{},"body":{"interfaces/State.html":{}}}],["fromset",{"_index":2789,"title":{},"body":{"interfaces/State.html":{}}}],["fromsettings.getavailablelanguag",{"_index":2837,"title":{},"body":{"interfaces/State.html":{}}}],["fromsettings.getavailablerol",{"_index":2839,"title":{},"body":{"interfaces/State.html":{}}}],["fromsettings.getdocumentcreateobject",{"_index":2845,"title":{},"body":{"interfaces/State.html":{}}}],["fromsettings.getselectedact",{"_index":2841,"title":{},"body":{"interfaces/State.html":{}}}],["fromsettings.getselectedcultur",{"_index":2835,"title":{},"body":{"interfaces/State.html":{}}}],["fromsettings.getselectedlanguag",{"_index":2833,"title":{},"body":{"interfaces/State.html":{}}}],["fromsettings.getxdocumentcr",{"_index":2843,"title":{},"body":{"interfaces/State.html":{}}}],["fromsettings.reduc",{"_index":2816,"title":{},"body":{"interfaces/State.html":{}}}],["fromsettings.st",{"_index":2769,"title":{},"body":{"interfaces/State.html":{}}}],["full",{"_index":525,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["function",{"_index":450,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthEffects.html":{},"interfaces/CanComponentDeactivate.html":{},"components/ControlWebDavComponent.html":{},"classes/HttpAdapter.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"interfaces/State.html":{},"miscellaneous/typealiases.html":{}}}],["gate",{"_index":321,"title":{},"body":{"components/AppComponent.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{}}}],["gener",{"_index":460,"title":{},"body":{"modules/AppModule.html":{},"components/DocumentGenerationComponent.html":{},"modules/DocumentGenerationModule.html":{},"index.html":{}}}],["generation'},{'nam",{"_index":290,"title":{},"body":{"components/AppComponent.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{}}}],["generation.compon",{"_index":1207,"title":{},"body":{"modules/DocumentGenerationModule.html":{}}}],["generation.component.css",{"_index":1176,"title":{},"body":{"components/DocumentGenerationComponent.html":{}}}],["generation.component.html",{"_index":1177,"title":{},"body":{"components/DocumentGenerationComponent.html":{}}}],["generation.component.t",{"_index":1175,"title":{},"body":{"components/DocumentGenerationComponent.html":{}}}],["generation.component.ts:11",{"_index":1183,"title":{},"body":{"components/DocumentGenerationComponent.html":{}}}],["generation.component.ts:12",{"_index":1186,"title":{},"body":{"components/DocumentGenerationComponent.html":{}}}],["generation.component.ts:13",{"_index":1185,"title":{},"body":{"components/DocumentGenerationComponent.html":{}}}],["generation.component.ts:14",{"_index":1187,"title":{},"body":{"components/DocumentGenerationComponent.html":{}}}],["generation.component.ts:15",{"_index":1182,"title":{},"body":{"components/DocumentGenerationComponent.html":{}}}],["generation.component.ts:19",{"_index":1188,"title":{},"body":{"components/DocumentGenerationComponent.html":{}}}],["generation.component.ts:22",{"_index":1190,"title":{},"body":{"components/DocumentGenerationComponent.html":{}}}],["generation.modul",{"_index":2447,"title":{},"body":{"modules/PersonsModule.html":{}}}],["generation.module.t",{"_index":1200,"title":{},"body":{"modules/DocumentGenerationModule.html":{}}}],["generation/doc",{"_index":1253,"title":{},"body":{"injectables/DocumentsHelper.html":{},"miscellaneous/enumerations.html":{}}}],["generation/docu",{"_index":1174,"title":{},"body":{"components/DocumentGenerationComponent.html":{},"modules/DocumentGenerationModule.html":{},"modules/PersonsModule.html":{}}}],["get",{"_index":3126,"title":{"index.html":{}},"body":{}}],["get('api/fal",{"_index":1297,"title":{},"body":{"injectables/DossierApiClient.html":{}}}],["get('api/me/right",{"_index":196,"title":{},"body":{"injectables/AppApiClient.html":{}}}],["get('api/personen",{"_index":2371,"title":{},"body":{"injectables/PersonsApiClient.html":{}}}],["get('api/personen/{id",{"_index":2375,"title":{},"body":{"injectables/PersonsApiClient.html":{}}}],["get('api/transl",{"_index":199,"title":{},"body":{"injectables/AppApiClient.html":{}}}],["get(key",{"_index":894,"title":{},"body":{"injectables/ConfigService.html":{}}}],["get_tree_detail",{"_index":1573,"title":{},"body":{"classes/GetTreeDetailAction.html":{},"classes/LoadAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"classes/ResetState.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetClosedAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{}}}],["getadapt",{"_index":173,"title":{},"body":{"injectables/AppApiClient.html":{},"injectables/DossierApiClient.html":{},"injectables/PersonsApiClient.html":{}}}],["getauthfail",{"_index":2851,"title":{},"body":{"interfaces/State.html":{}}}],["getauthload",{"_index":2848,"title":{},"body":{"interfaces/State.html":{}}}],["getauthst",{"_index":2846,"title":{},"body":{"interfaces/State.html":{}}}],["getavaiablemenu",{"_index":2887,"title":{},"body":{"interfaces/State.html":{}}}],["getavailablelanguag",{"_index":2836,"title":{},"body":{"interfaces/State.html":{}}}],["getavailablerol",{"_index":2838,"title":{},"body":{"interfaces/State.html":{}}}],["getbaseurl",{"_index":1771,"title":{},"body":{"injectables/HttpService.html":{}}}],["getconfig",{"_index":3012,"title":{},"body":{"injectables/UtilService.html":{}}}],["getconfig(key",{"_index":3019,"title":{},"body":{"injectables/UtilService.html":{}}}],["getconfigsapi",{"_index":1772,"title":{},"body":{"injectables/HttpService.html":{}}}],["getconfigstoken",{"_index":740,"title":{},"body":{"injectables/AuthSandbox.html":{}}}],["getdefaulthead",{"_index":1773,"title":{},"body":{"injectables/HttpService.html":{}}}],["getdocu",{"_index":2716,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["getdocumentcr",{"_index":579,"title":{},"body":{"injectables/AppService.html":{}}}],["getdocumentcreate(xdocu",{"_index":582,"title":{},"body":{"injectables/AppService.html":{}}}],["getdocumentcreateobject",{"_index":2844,"title":{},"body":{"interfaces/State.html":{}}}],["getdossiertreedatast",{"_index":2898,"title":{},"body":{"interfaces/State.html":{}}}],["getdossiertreesdata",{"_index":2905,"title":{},"body":{"interfaces/State.html":{}}}],["getdossiertreesfail",{"_index":2903,"title":{},"body":{"interfaces/State.html":{}}}],["getdossiertreesload",{"_index":2900,"title":{},"body":{"interfaces/State.html":{}}}],["getenv",{"_index":891,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getenv(key",{"_index":898,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getfiltersdossi",{"_index":2907,"title":{},"body":{"interfaces/State.html":{}}}],["getlangcultur",{"_index":1774,"title":{},"body":{"injectables/HttpService.html":{}}}],["getlangsadapt",{"_index":580,"title":{},"body":{"injectables/AppService.html":{}}}],["getlangsadapter(lang",{"_index":584,"title":{},"body":{"injectables/AppService.html":{}}}],["getlanguag",{"_index":163,"title":{},"body":{"injectables/AppApiClient.html":{}}}],["getloggedus",{"_index":2853,"title":{},"body":{"interfaces/State.html":{}}}],["getmenu",{"_index":2168,"title":{},"body":{"injectables/MenusEffects.html":{}}}],["getmenusdata",{"_index":2178,"title":{},"body":{"injectables/MenusEffects.html":{},"injectables/SearchBoxDatasEffects.html":{},"interfaces/State.html":{}}}],["getmenusfail",{"_index":2882,"title":{},"body":{"interfaces/State.html":{}}}],["getmenusload",{"_index":2879,"title":{},"body":{"interfaces/State.html":{}}}],["getmenusst",{"_index":2877,"title":{},"body":{"interfaces/State.html":{}}}],["getnotificationopt",{"_index":537,"title":{},"body":{"injectables/AppSandbox.html":{}}}],["getperson",{"_index":2353,"title":{},"body":{"injectables/PersonsApiClient.html":{},"injectables/PersonsEffects.html":{}}}],["getpersonaddnew",{"_index":2864,"title":{},"body":{"interfaces/State.html":{}}}],["getpersondetail",{"_index":2352,"title":{},"body":{"injectables/PersonsApiClient.html":{},"injectables/PersonsEffects.html":{}}}],["getpersondetails(@path('id",{"_index":2377,"title":{},"body":{"injectables/PersonsApiClient.html":{}}}],["getpersondetails(id",{"_index":2359,"title":{},"body":{"injectables/PersonsApiClient.html":{}}}],["getpersondetailsdata",{"_index":2875,"title":{},"body":{"interfaces/State.html":{}}}],["getpersondetailsfail",{"_index":2873,"title":{},"body":{"interfaces/State.html":{}}}],["getpersondetailsload",{"_index":2870,"title":{},"body":{"interfaces/State.html":{}}}],["getpersondetailsst",{"_index":2868,"title":{},"body":{"interfaces/State.html":{}}}],["getpersonsdata",{"_index":2862,"title":{},"body":{"interfaces/State.html":{}}}],["getpersonsfail",{"_index":2860,"title":{},"body":{"interfaces/State.html":{}}}],["getpersonsload",{"_index":2857,"title":{},"body":{"interfaces/State.html":{}}}],["getpersonsst",{"_index":2855,"title":{},"body":{"interfaces/State.html":{}}}],["getrelativeurl",{"_index":1673,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["getrelativeurl(url",{"_index":1685,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["getreportview",{"_index":2565,"title":{},"body":{"injectables/ReportService.html":{}}}],["getrol",{"_index":164,"title":{},"body":{"injectables/AppApiClient.html":{},"injectables/SettingsEffects.html":{}}}],["getrolesadapt",{"_index":581,"title":{},"body":{"injectables/AppService.html":{}}}],["getrolesadapter(rol",{"_index":593,"title":{},"body":{"injectables/AppService.html":{}}}],["getsearchboxdata",{"_index":2625,"title":{},"body":{"injectables/SearchBoxDatasEffects.html":{}}}],["getsearchboxdatasdata",{"_index":2896,"title":{},"body":{"interfaces/State.html":{}}}],["getsearchboxdatasfail",{"_index":2894,"title":{},"body":{"interfaces/State.html":{}}}],["getsearchboxdatasload",{"_index":2891,"title":{},"body":{"interfaces/State.html":{}}}],["getsearchboxdatasst",{"_index":2889,"title":{},"body":{"interfaces/State.html":{}}}],["getselectedact",{"_index":2840,"title":{},"body":{"interfaces/State.html":{}}}],["getselectedcultur",{"_index":2834,"title":{},"body":{"interfaces/State.html":{}}}],["getselectedlanguag",{"_index":2831,"title":{},"body":{"interfaces/State.html":{}}}],["getselectmenu",{"_index":2885,"title":{},"body":{"interfaces/State.html":{}}}],["getsettingsst",{"_index":2829,"title":{},"body":{"interfaces/State.html":{}}}],["getsizescreen",{"_index":2264,"title":{},"body":{"components/PersonFormComponent.html":{},"components/TreeDetailComponent.html":{}}}],["getsizescreen(width",{"_index":2268,"title":{},"body":{"components/PersonFormComponent.html":{},"components/TreeDetailComponent.html":{}}}],["getstatusad",{"_index":2866,"title":{},"body":{"interfaces/State.html":{}}}],["gettitl",{"_index":822,"title":{},"body":{"classes/BaseComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/LoginComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{}}}],["gettoken",{"_index":1775,"title":{},"body":{"injectables/HttpService.html":{}}}],["gettranslatedvalu",{"_index":1674,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["gettranslatedvalue(valu",{"_index":1689,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["gettre",{"_index":1290,"title":{},"body":{"injectables/DossierApiClient.html":{},"injectables/DossierEffects.html":{}}}],["gettreedetail",{"_index":2909,"title":{},"body":{"interfaces/State.html":{}}}],["gettreedetailact",{"_index":1567,"title":{"classes/GetTreeDetailAction.html":{}},"body":{"classes/GetTreeDetailAction.html":{},"classes/LoadAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"classes/ResetState.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetClosedAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{},"miscellaneous/typealiases.html":{}}}],["gettrees(@path('queri",{"_index":1300,"title":{},"body":{"injectables/DossierApiClient.html":{}}}],["gettrees(queri",{"_index":1291,"title":{},"body":{"injectables/DossierApiClient.html":{}}}],["gettyp",{"_index":1256,"title":{},"body":{"injectables/DocumentsHelper.html":{}}}],["gettype(typ",{"_index":1259,"title":{},"body":{"injectables/DocumentsHelper.html":{}}}],["getviewermodel",{"_index":1223,"title":{},"body":{"components/DocumentReportViewerComponent.html":{}}}],["getxdocumentcr",{"_index":2842,"title":{},"body":{"interfaces/State.html":{}}}],["given",{"_index":897,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/HttpResponseHandler.html":{},"injectables/PersonsApiClient.html":{},"injectables/UtilService.html":{},"index.html":{}}}],["global",{"_index":545,"title":{},"body":{"injectables/AppSandbox.html":{},"injectables/HttpResponseHandler.html":{},"dependencies.html":{}}}],["goback",{"_index":2219,"title":{},"body":{"components/PageBadGatewayComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{}}}],["goback(",{"_index":2927,"title":{},"body":{"components/ToolbarsComponent.html":{}}}],["grant_typ",{"_index":2140,"title":{},"body":{"classes/LoginForm.html":{}}}],["graph",{"_index":3183,"title":{},"body":{"modules.html":{}}}],["grid",{"_index":587,"title":{},"body":{"injectables/AppService.html":{},"injectables/DossierService.html":{},"injectables/PersonsService.html":{}}}],["gridadapt",{"_index":1544,"title":{},"body":{"injectables/DossierService.html":{},"injectables/PersonsService.html":{}}}],["gridadapter(person",{"_index":2533,"title":{},"body":{"injectables/PersonsService.html":{}}}],["gridadapter(tre",{"_index":1545,"title":{},"body":{"injectables/DossierService.html":{}}}],["group",{"_index":3067,"title":{},"body":{"injectables/ValidationService.html":{}}}],["group.controls[controlkey].valu",{"_index":3068,"title":{},"body":{"injectables/ValidationService.html":{}}}],["group.controls[matchingcontrolkey].valu",{"_index":3069,"title":{},"body":{"injectables/ValidationService.html":{}}}],["groupnam",{"_index":1837,"title":{},"body":{"interfaces/ISearchBoxModel.html":{},"classes/SearchBoxModel.html":{}}}],["guard",{"_index":424,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["guide/content/ch5.html",{"_index":2779,"title":{},"body":{"interfaces/State.html":{}}}],["handl",{"_index":2089,"title":{},"body":{"components/LoginComponent.html":{},"index.html":{}}}],["handlebadgatewayerror",{"_index":1675,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["handlebadrequest",{"_index":1676,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["handlebadrequest(responsebodi",{"_index":1695,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["handleerrormessag",{"_index":1677,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["handleerrormessages(respons",{"_index":1699,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["handleforbidden",{"_index":1678,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["handlenotfound",{"_index":1679,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["handlenotfound(responsebodi",{"_index":1704,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["handler",{"_index":1714,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["handler.model.t",{"_index":41,"title":{},"body":{"classes/ActionHandler.html":{}}}],["handler.model.ts:4",{"_index":49,"title":{},"body":{"classes/ActionHandler.html":{}}}],["handler.model.ts:5",{"_index":53,"title":{},"body":{"classes/ActionHandler.html":{}}}],["handler.model.ts:6",{"_index":52,"title":{},"body":{"classes/ActionHandler.html":{}}}],["handlerbutton",{"_index":943,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["handlerbutton(act",{"_index":959,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["handlertext",{"_index":935,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["handlertogglenav",{"_index":1608,"title":{},"body":{"components/HeaderComponent.html":{}}}],["handlertogglenav(el",{"_index":1630,"title":{},"body":{"components/HeaderComponent.html":{}}}],["handleservererror",{"_index":1680,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["handleservererror(responsebodi",{"_index":1706,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["handleunauthor",{"_index":1681,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["handleunauthorized(responsebodi",{"_index":1709,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["header",{"_index":617,"title":{},"body":{"injectables/AuthApiClient.html":{},"injectables/ConfigService.html":{},"components/ControlWebDavComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"injectables/LayoutSandbox.html":{}}}],["header'},{'nam",{"_index":300,"title":{},"body":{"components/AppComponent.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{}}}],["header.component.html",{"_index":1605,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":1604,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercompon",{"_index":299,"title":{"components/HeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"modules/LayoutContainersModule.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{},"overview.html":{}}}],["headers/header.compon",{"_index":1942,"title":{},"body":{"modules/LayoutContainersModule.html":{}}}],["headers/horizont",{"_index":1943,"title":{},"body":{"modules/LayoutContainersModule.html":{}}}],["headers/languages/languageselector.compon",{"_index":1951,"title":{},"body":{"modules/LayoutContainersModule.html":{}}}],["headers/notif",{"_index":1952,"title":{},"body":{"modules/LayoutContainersModule.html":{}}}],["headers/profil",{"_index":1948,"title":{},"body":{"modules/LayoutContainersModule.html":{}}}],["headers/search",{"_index":1945,"title":{},"body":{"modules/LayoutContainersModule.html":{}}}],["height",{"_index":2657,"title":{},"body":{"components/SelectedActionsComponent.html":{}}}],["helper",{"_index":640,"title":{},"body":{"injectables/AuthEffects.html":{},"components/DocumentGenerationComponent.html":{},"modules/DocumentGenerationModule.html":{},"interfaces/State.html":{},"dependencies.html":{}}}],["helper.t",{"_index":1254,"title":{},"body":{"injectables/DocumentsHelper.html":{}}}],["helper.ts:12",{"_index":1258,"title":{},"body":{"injectables/DocumentsHelper.html":{}}}],["helper.ts:24",{"_index":1261,"title":{},"body":{"injectables/DocumentsHelper.html":{}}}],["here",{"_index":2809,"title":{},"body":{"interfaces/State.html":{}}}],["hit",{"_index":2460,"title":{},"body":{"injectables/PersonsResolver.html":{}}}],["homepag",{"_index":1606,"title":{},"body":{"components/HeaderComponent.html":{}}}],["horizont",{"_index":1650,"title":{},"body":{"components/HorizontalNavigationComponent.html":{}}}],["horizontalnavigationcompon",{"_index":301,"title":{"components/HorizontalNavigationComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"modules/LayoutContainersModule.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{},"overview.html":{}}}],["host",{"_index":217,"title":{},"body":{"components/AppComponent.html":{},"components/ControlWebDavComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/PersonFormComponent.html":{}}}],["href",{"_index":1851,"title":{},"body":{"interfaces/ITemplateModel.html":{},"classes/TemplateModel.html":{}}}],["html",{"_index":275,"title":{},"body":{"components/AppComponent.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{}}}],["http",{"_index":401,"title":{},"body":{"modules/AppModule.html":{},"injectables/ConfigService.html":{},"injectables/HttpResponseHandler.html":{},"injectables/HttpService.html":{},"injectables/ReportService.html":{}}}],["http.adapt",{"_index":1798,"title":{},"body":{"injectables/HttpService.html":{}}}],["http.servic",{"_index":1821,"title":{},"body":{"modules/HttpServiceModule.html":{}}}],["http://localhost:3000",{"_index":3136,"title":{},"body":{"index.html":{}}}],["http://localhost:4100",{"_index":3135,"title":{},"body":{"index.html":{}}}],["http://localhost:8001",{"_index":2298,"title":{},"body":{"components/PersonFormComponent.html":{}}}],["http://reactivex.io/rxjs/manual/overview.html#categori",{"_index":651,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["httpadapt",{"_index":1658,"title":{"classes/HttpAdapter.html":{}},"body":{"classes/HttpAdapter.html":{},"injectables/HttpService.html":{}}}],["httpadapter.baseadapter(r",{"_index":1816,"title":{},"body":{"injectables/HttpService.html":{}}}],["httpclient",{"_index":1778,"title":{},"body":{"injectables/HttpService.html":{},"injectables/ReportService.html":{}}}],["httpclientmodul",{"_index":385,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DossierNavigatorModule.html":{}}}],["httperrorrespons",{"_index":2568,"title":{},"body":{"injectables/ReportService.html":{}}}],["httpheader",{"_index":187,"title":{},"body":{"injectables/AppApiClient.html":{},"injectables/AuthApiClient.html":{},"injectables/DossierApiClient.html":{},"injectables/PersonsApiClient.html":{}}}],["httpmodul",{"_index":398,"title":{},"body":{"modules/AppModule.html":{}}}],["httpparam",{"_index":188,"title":{},"body":{"injectables/AppApiClient.html":{},"injectables/DossierApiClient.html":{}}}],["httpresponsehandl",{"_index":1671,"title":{"injectables/HttpResponseHandler.html":{}},"body":{"injectables/HttpResponseHandler.html":{},"injectables/HttpService.html":{},"modules/HttpServiceModule.html":{}}}],["httpresponsehandler.servic",{"_index":1797,"title":{},"body":{"injectables/HttpService.html":{},"modules/HttpServiceModule.html":{}}}],["https://angular.io/guide/compon",{"_index":3177,"title":{},"body":{"index.html":{}}}],["https://drboolean.gitbooks.io/mostli",{"_index":2777,"title":{},"body":{"interfaces/State.html":{}}}],["https://egghead.io/lessons/javascript",{"_index":2774,"title":{},"body":{"interfaces/State.html":{}}}],["https://gist.github.com/btroncone/d6cf141d6f2c00dc6b35",{"_index":653,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["https://github.com/ngrx/effects/blob/master/docs/api.md#run",{"_index":508,"title":{},"body":{"modules/AppModule.html":{}}}],["https://github.com/zalmoxisus/redux",{"_index":501,"title":{},"body":{"modules/AppModule.html":{}}}],["httpservic",{"_index":179,"title":{"injectables/HttpService.html":{}},"body":{"injectables/AppApiClient.html":{},"injectables/AuthApiClient.html":{},"injectables/DossierApiClient.html":{},"injectables/HttpService.html":{},"modules/HttpServiceModule.html":{},"injectables/PersonsApiClient.html":{}}}],["httpservicemodul",{"_index":368,"title":{"modules/HttpServiceModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HttpServiceModule.html":{},"modules.html":{},"overview.html":{}}}],["httpservicemodule.forroot",{"_index":471,"title":{},"body":{"modules/AppModule.html":{}}}],["icon",{"_index":1863,"title":{},"body":{"classes/ITreeNavModel.html":{},"classes/TreeNavModel.html":{}}}],["icon_characters_url",{"_index":2951,"title":{},"body":{"components/TreeListComponent.html":{}}}],["icon_name_url",{"_index":2952,"title":{},"body":{"components/TreeListComponent.html":{}}}],["iconfa",{"_index":1844,"title":{},"body":{"interfaces/ISidebarMenuModel.html":{},"classes/SidebarMenuModel.html":{}}}],["iconid",{"_index":1444,"title":{},"body":{"classes/DossierNavigatorTreeModel.html":{},"interfaces/IDossierNavigatorTreeModel.html":{}}}],["iconnamedx",{"_index":1838,"title":{},"body":{"interfaces/ISearchBoxModel.html":{},"classes/SearchBoxModel.html":{}}}],["iconsrc",{"_index":1826,"title":{},"body":{"interfaces/IMenuModel.html":{},"interfaces/ISearchBoxModel.html":{},"interfaces/ISidebarMenuModel.html":{},"classes/MenuModel.html":{},"classes/SearchBoxModel.html":{},"classes/SidebarMenuModel.html":{}}}],["iconurl",{"_index":2658,"title":{},"body":{"components/SelectedActionsComponent.html":{}}}],["id",{"_index":10,"title":{},"body":{"classes/Account.html":{},"classes/DossierNavigatorTreeModel.html":{},"interfaces/IDossierNavigatorTreeModel.html":{},"interfaces/IMenuModel.html":{},"interfaces/IPerson.html":{},"interfaces/ISearchBoxModel.html":{},"interfaces/ISidebarMenuModel.html":{},"classes/ITreeNavModel.html":{},"classes/MenuModel.html":{},"classes/Person.html":{},"injectables/PersonsApiClient.html":{},"injectables/PersonsEffects.html":{},"injectables/PersonsResolver.html":{},"injectables/PersonsSandbox.html":{},"injectables/PersonsService.html":{},"classes/SearchBoxModel.html":{},"classes/SelectedActionsModel.html":{},"classes/SidebarMenuModel.html":{},"classes/TreeNavModel.html":{},"classes/UpdateAction.html":{},"index.html":{}}}],["idossierfiltermodel",{"_index":1332,"title":{"interfaces/IDossierFilterModel.html":{}},"body":{"classes/DossierFilterModel.html":{},"interfaces/IDossierFilterModel.html":{}}}],["idossiernavigatortreemodel",{"_index":1439,"title":{"interfaces/IDossierNavigatorTreeModel.html":{}},"body":{"classes/DossierNavigatorTreeModel.html":{},"interfaces/IDossierNavigatorTreeModel.html":{}}}],["if(tre",{"_index":1302,"title":{},"body":{"injectables/DossierApiClient.html":{}}}],["image=\"url('{{icon_characters_url}}{{options.data.a}}.svg",{"_index":2970,"title":{},"body":{"components/TreeListComponent.html":{}}}],["image=\"url('{{icon_characters_url}}{{options.data.b}}.svg",{"_index":2965,"title":{},"body":{"components/TreeListComponent.html":{}}}],["image=\"url('{{icon_characters_url}}{{options.data.f}}.svg",{"_index":2966,"title":{},"body":{"components/TreeListComponent.html":{}}}],["image=\"url('{{icon_characters_url}}{{options.data.i}}.svg",{"_index":2968,"title":{},"body":{"components/TreeListComponent.html":{}}}],["image=\"url('{{icon_characters_url}}{{options.data.k}}.svg",{"_index":2971,"title":{},"body":{"components/TreeListComponent.html":{}}}],["image=\"url('{{icon_characters_url}}{{options.data.m}}.svg",{"_index":2969,"title":{},"body":{"components/TreeListComponent.html":{}}}],["image=\"url('{{icon_characters_url}}{{options.data.s}}.svg",{"_index":2967,"title":{},"body":{"components/TreeListComponent.html":{}}}],["image=\"url(\\'{{icon_characters_url}}{{options.data.a}}.svg",{"_index":2977,"title":{},"body":{"components/TreeListComponent.html":{}}}],["image=\"url(\\'{{icon_characters_url}}{{options.data.b}}.svg",{"_index":2972,"title":{},"body":{"components/TreeListComponent.html":{}}}],["image=\"url(\\'{{icon_characters_url}}{{options.data.f}}.svg",{"_index":2973,"title":{},"body":{"components/TreeListComponent.html":{}}}],["image=\"url(\\'{{icon_characters_url}}{{options.data.i}}.svg",{"_index":2975,"title":{},"body":{"components/TreeListComponent.html":{}}}],["image=\"url(\\'{{icon_characters_url}}{{options.data.k}}.svg",{"_index":2978,"title":{},"body":{"components/TreeListComponent.html":{}}}],["image=\"url(\\'{{icon_characters_url}}{{options.data.m}}.svg",{"_index":2976,"title":{},"body":{"components/TreeListComponent.html":{}}}],["image=\"url(\\'{{icon_characters_url}}{{options.data.s}}.svg",{"_index":2974,"title":{},"body":{"components/TreeListComponent.html":{}}}],["imenumodel",{"_index":1823,"title":{"interfaces/IMenuModel.html":{}},"body":{"interfaces/IMenuModel.html":{},"classes/MenuModel.html":{}}}],["immedi",{"_index":506,"title":{},"body":{"modules/AppModule.html":{}}}],["implement",{"_index":58,"title":{},"body":{"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"classes/AddUserAction.html":{},"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthorizeGuard.html":{},"components/BreadCrumbComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ControlWebDavComponent.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteItemSelectedAction.html":{},"classes/DeleteSuccessAction.html":{},"classes/DoLoginAction.html":{},"classes/DoLoginFailAction.html":{},"classes/DoLoginSuccessAction.html":{},"classes/DoLogoutAction.html":{},"classes/DoLogoutFailAction.html":{},"classes/DoLogoutSuccessAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"classes/DossierFilterModel.html":{},"components/DossierNavigatorComponent.html":{},"classes/DossierNavigatorTreeModel.html":{},"classes/GetTreeDetailAction.html":{},"interfaces/IDossierFilterModel.html":{},"interfaces/IDossierNavigatorTreeModel.html":{},"interfaces/IMenuModel.html":{},"interfaces/ISearchBoxModel.html":{},"interfaces/ISidebarMenuModel.html":{},"interfaces/ITemplateModel.html":{},"classes/ITreeNavModel.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"components/LeftSidebarComponent.html":{},"classes/LoadAction.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"components/LoginComponent.html":{},"classes/MenuModel.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"injectables/PersonsResolver.html":{},"classes/RemoveUserAction.html":{},"classes/ResetState.html":{},"pipes/SanitizeHtmlPipe.html":{},"classes/SearchBoxModel.html":{},"classes/SelectAction.html":{},"components/SelectedActionsComponent.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetAvaiableMenu.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetClosedAction.html":{},"classes/SetCultureAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{},"classes/SetLanguageAction.html":{},"classes/SidebarMenuModel.html":{},"interfaces/State.html":{},"classes/TemplateModel.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{},"classes/TreeNavModel.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSelectedAction.html":{},"classes/UpdateSuccessAction.html":{}}}],["import",{"_index":54,"title":{},"body":{"classes/ActionHandler.html":{},"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"classes/AddUserAction.html":{},"injectables/AppApiClient.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppSandbox.html":{},"injectables/AppService.html":{},"injectables/AuthApiClient.html":{},"injectables/AuthEffects.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthSandbox.html":{},"directives/AuthorizeDirective.html":{},"injectables/AuthorizeGuard.html":{},"classes/BaseComponent.html":{},"components/BreadCrumbComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"modules/ComponentsModule.html":{},"injectables/ConfigService.html":{},"components/ControlWebDavComponent.html":{},"modules/ControlWebDavModule.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteItemSelectedAction.html":{},"classes/DeleteSuccessAction.html":{},"classes/DoLoginAction.html":{},"classes/DoLoginFailAction.html":{},"classes/DoLoginSuccessAction.html":{},"classes/DoLogoutAction.html":{},"classes/DoLogoutFailAction.html":{},"classes/DoLogoutSuccessAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"components/DocumentGenerationComponent.html":{},"modules/DocumentGenerationModule.html":{},"components/DocumentReportViewerComponent.html":{},"modules/DocumentReportViewerModule.html":{},"injectables/DocumentsHelper.html":{},"injectables/DossierApiClient.html":{},"components/DossierDetailsComponent.html":{},"injectables/DossierEffects.html":{},"components/DossierNavigatorComponent.html":{},"modules/DossierNavigatorModule.html":{},"modules/DossierRoutingModule.html":{},"injectables/DossierSandbox.html":{},"injectables/DossierService.html":{},"directives/DynamicTabsDirective.html":{},"modules/ExceptionsModule.html":{},"modules/ExceptionsRoutingModule.html":{},"classes/GetTreeDetailAction.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"classes/HttpAdapter.html":{},"injectables/HttpResponseHandler.html":{},"injectables/HttpService.html":{},"modules/HttpServiceModule.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"modules/LayoutContainersModule.html":{},"injectables/LayoutSandbox.html":{},"components/LeftSidebarComponent.html":{},"classes/LoadAction.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"components/LoginComponent.html":{},"injectables/MenusEffects.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"injectables/PersonsApiClient.html":{},"components/PersonsComponent.html":{},"injectables/PersonsEffects.html":{},"modules/PersonsModule.html":{},"injectables/PersonsResolver.html":{},"modules/PersonsRoutingModule.html":{},"injectables/PersonsSandbox.html":{},"injectables/PersonsService.html":{},"modules/PipesModule.html":{},"components/ProfileBarComponent.html":{},"classes/RemoveUserAction.html":{},"injectables/ReportService.html":{},"components/ReportViewerComponent.html":{},"classes/ResetState.html":{},"classes/Sandbox.html":{},"pipes/SanitizeHtmlPipe.html":{},"components/SearchBoxComponent.html":{},"injectables/SearchBoxDatasEffects.html":{},"classes/SelectAction.html":{},"components/SelectedActionsComponent.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetAvaiableMenu.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetClosedAction.html":{},"classes/SetCultureAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{},"classes/SetLanguageAction.html":{},"injectables/SettingsEffects.html":{},"components/SpinnerComponent.html":{},"interfaces/State.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSelectedAction.html":{},"classes/UpdateSuccessAction.html":{},"injectables/UtilService.html":{},"modules/UtilityModule.html":{},"injectables/ValidationService.html":{}}}],["include_group",{"_index":1578,"title":{},"body":{"classes/GetTreeDetailAction.html":{},"classes/LoadAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"classes/ResetState.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetClosedAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{}}}],["include_guest",{"_index":1579,"title":{},"body":{"classes/GetTreeDetailAction.html":{},"classes/LoadAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"classes/ResetState.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetClosedAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{}}}],["include_task",{"_index":1580,"title":{},"body":{"classes/GetTreeDetailAction.html":{},"classes/LoadAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"classes/ResetState.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetClosedAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{}}}],["includegroup",{"_index":1336,"title":{},"body":{"classes/DossierFilterModel.html":{},"classes/GetTreeDetailAction.html":{},"interfaces/IDossierFilterModel.html":{},"classes/LoadAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"classes/ResetState.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetClosedAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{}}}],["includeguest",{"_index":1337,"title":{},"body":{"classes/DossierFilterModel.html":{},"classes/GetTreeDetailAction.html":{},"interfaces/IDossierFilterModel.html":{},"classes/LoadAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"classes/ResetState.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetClosedAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{}}}],["includetask",{"_index":1338,"title":{},"body":{"classes/DossierFilterModel.html":{},"classes/GetTreeDetailAction.html":{},"interfaces/IDossierFilterModel.html":{},"classes/LoadAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"classes/ResetState.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetClosedAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{}}}],["index",{"_index":6,"title":{"index.html":{}},"body":{"classes/Account.html":{},"classes/ActionHandler.html":{},"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"classes/AddUserAction.html":{},"injectables/AppApiClient.html":{},"components/AppComponent.html":{},"injectables/AppSandbox.html":{},"injectables/AppService.html":{},"injectables/AuthApiClient.html":{},"injectables/AuthEffects.html":{},"injectables/AuthGuard.html":{},"injectables/AuthSandbox.html":{},"directives/AuthorizeDirective.html":{},"injectables/AuthorizeGuard.html":{},"classes/BaseComponent.html":{},"components/BreadCrumbComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"classes/ClassRightModel.html":{},"injectables/ConfigService.html":{},"components/ControlWebDavComponent.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteItemSelectedAction.html":{},"classes/DeleteSuccessAction.html":{},"classes/DoLoginAction.html":{},"classes/DoLoginFailAction.html":{},"classes/DoLoginSuccessAction.html":{},"classes/DoLogoutAction.html":{},"classes/DoLogoutFailAction.html":{},"classes/DoLogoutSuccessAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"injectables/DocumentsHelper.html":{},"injectables/DossierApiClient.html":{},"components/DossierDetailsComponent.html":{},"injectables/DossierEffects.html":{},"classes/DossierFilterModel.html":{},"components/DossierNavigatorComponent.html":{},"classes/DossierNavigatorTreeModel.html":{},"injectables/DossierSandbox.html":{},"injectables/DossierService.html":{},"directives/DynamicTabsDirective.html":{},"classes/GetTreeDetailAction.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"classes/HttpAdapter.html":{},"injectables/HttpResponseHandler.html":{},"injectables/HttpService.html":{},"interfaces/IDossierFilterModel.html":{},"interfaces/IDossierNavigatorTreeModel.html":{},"interfaces/IMenuModel.html":{},"interfaces/IPerson.html":{},"interfaces/ISearchBoxModel.html":{},"interfaces/ISidebarMenuModel.html":{},"interfaces/ITemplateModel.html":{},"classes/ITreeNavModel.html":{},"interfaces/LanguageModel.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"injectables/LayoutSandbox.html":{},"components/LeftSidebarComponent.html":{},"classes/LoadAction.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"components/LoginComponent.html":{},"classes/LoginForm.html":{},"classes/MenuModel.html":{},"injectables/MenusEffects.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Person.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"injectables/PersonsApiClient.html":{},"components/PersonsComponent.html":{},"injectables/PersonsEffects.html":{},"injectables/PersonsResolver.html":{},"injectables/PersonsSandbox.html":{},"injectables/PersonsService.html":{},"components/ProfileBarComponent.html":{},"classes/RemoveUserAction.html":{},"injectables/ReportService.html":{},"components/ReportViewerComponent.html":{},"classes/ResetState.html":{},"classes/Sandbox.html":{},"components/SearchBoxComponent.html":{},"injectables/SearchBoxDatasEffects.html":{},"classes/SearchBoxModel.html":{},"classes/SelectAction.html":{},"components/SelectedActionsComponent.html":{},"classes/SelectedActionsModel.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetAvaiableMenu.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetClosedAction.html":{},"classes/SetCultureAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{},"classes/SetLanguageAction.html":{},"injectables/SettingsEffects.html":{},"classes/SidebarMenuModel.html":{},"components/SpinnerComponent.html":{},"interfaces/State.html":{},"classes/TemplateModel.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{},"classes/TreeNavModel.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSelectedAction.html":{},"classes/UpdateSuccessAction.html":{},"classes/User.html":{},"injectables/UtilService.html":{},"injectables/ValidationService.html":{},"miscellaneous/enumerations.html":{},"interfaces/role.html":{},"miscellaneous/typealiases.html":{}}}],["info",{"_index":2,"title":{},"body":{"classes/Account.html":{},"classes/ActionHandler.html":{},"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"classes/AddUserAction.html":{},"injectables/AppApiClient.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppSandbox.html":{},"injectables/AppService.html":{},"injectables/AuthApiClient.html":{},"injectables/AuthEffects.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthSandbox.html":{},"directives/AuthorizeDirective.html":{},"injectables/AuthorizeGuard.html":{},"classes/BaseComponent.html":{},"components/BreadCrumbComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"classes/ClassRightModel.html":{},"modules/ComponentsModule.html":{},"injectables/ConfigService.html":{},"components/ControlWebDavComponent.html":{},"modules/ControlWebDavModule.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteItemSelectedAction.html":{},"classes/DeleteSuccessAction.html":{},"classes/DoLoginAction.html":{},"classes/DoLoginFailAction.html":{},"classes/DoLoginSuccessAction.html":{},"classes/DoLogoutAction.html":{},"classes/DoLogoutFailAction.html":{},"classes/DoLogoutSuccessAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"components/DocumentGenerationComponent.html":{},"modules/DocumentGenerationModule.html":{},"components/DocumentReportViewerComponent.html":{},"modules/DocumentReportViewerModule.html":{},"injectables/DocumentsHelper.html":{},"injectables/DossierApiClient.html":{},"components/DossierDetailsComponent.html":{},"injectables/DossierEffects.html":{},"classes/DossierFilterModel.html":{},"components/DossierNavigatorComponent.html":{},"modules/DossierNavigatorModule.html":{},"classes/DossierNavigatorTreeModel.html":{},"modules/DossierRoutingModule.html":{},"injectables/DossierSandbox.html":{},"injectables/DossierService.html":{},"directives/DynamicTabsDirective.html":{},"modules/ExceptionsModule.html":{},"modules/ExceptionsRoutingModule.html":{},"classes/GetTreeDetailAction.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"classes/HttpAdapter.html":{},"injectables/HttpResponseHandler.html":{},"injectables/HttpService.html":{},"modules/HttpServiceModule.html":{},"interfaces/IDossierFilterModel.html":{},"interfaces/IDossierNavigatorTreeModel.html":{},"interfaces/IMenuModel.html":{},"interfaces/IPerson.html":{},"interfaces/ISearchBoxModel.html":{},"interfaces/ISidebarMenuModel.html":{},"interfaces/ITemplateModel.html":{},"classes/ITreeNavModel.html":{},"interfaces/LanguageModel.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"modules/LayoutContainersModule.html":{},"injectables/LayoutSandbox.html":{},"components/LeftSidebarComponent.html":{},"classes/LoadAction.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"components/LoginComponent.html":{},"classes/LoginForm.html":{},"classes/MenuModel.html":{},"injectables/MenusEffects.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Person.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"injectables/PersonsApiClient.html":{},"components/PersonsComponent.html":{},"injectables/PersonsEffects.html":{},"modules/PersonsModule.html":{},"injectables/PersonsResolver.html":{},"modules/PersonsRoutingModule.html":{},"injectables/PersonsSandbox.html":{},"injectables/PersonsService.html":{},"modules/PipesModule.html":{},"components/ProfileBarComponent.html":{},"classes/RemoveUserAction.html":{},"injectables/ReportService.html":{},"components/ReportViewerComponent.html":{},"classes/ResetState.html":{},"classes/Sandbox.html":{},"pipes/SanitizeHtmlPipe.html":{},"components/SearchBoxComponent.html":{},"injectables/SearchBoxDatasEffects.html":{},"classes/SearchBoxModel.html":{},"classes/SelectAction.html":{},"components/SelectedActionsComponent.html":{},"classes/SelectedActionsModel.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetAvaiableMenu.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetClosedAction.html":{},"classes/SetCultureAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{},"classes/SetLanguageAction.html":{},"injectables/SettingsEffects.html":{},"classes/SidebarMenuModel.html":{},"components/SpinnerComponent.html":{},"interfaces/State.html":{},"classes/TemplateModel.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{},"classes/TreeNavModel.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSelectedAction.html":{},"classes/UpdateSuccessAction.html":{},"classes/User.html":{},"injectables/UtilService.html":{},"modules/UtilityModule.html":{},"injectables/ValidationService.html":{},"interfaces/role.html":{}}}],["inherit",{"_index":1374,"title":{},"body":{"components/DossierNavigatorComponent.html":{},"components/LoginComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{}}}],["initactionnew",{"_index":2329,"title":{},"body":{"components/PersonListComponent.html":{}}}],["initi",{"_index":505,"title":{},"body":{"modules/AppModule.html":{}}}],["initloginform",{"_index":2075,"title":{},"body":{"components/LoginComponent.html":{}}}],["inject",{"_index":158,"title":{"injectables/AppApiClient.html":{},"injectables/AppSandbox.html":{},"injectables/AppService.html":{},"injectables/AuthApiClient.html":{},"injectables/AuthEffects.html":{},"injectables/AuthGuard.html":{},"injectables/AuthSandbox.html":{},"injectables/AuthorizeGuard.html":{},"injectables/CanDeactivateGuard.html":{},"injectables/ConfigService.html":{},"injectables/DocumentsHelper.html":{},"injectables/DossierApiClient.html":{},"injectables/DossierEffects.html":{},"injectables/DossierSandbox.html":{},"injectables/DossierService.html":{},"injectables/HttpResponseHandler.html":{},"injectables/HttpService.html":{},"injectables/LayoutSandbox.html":{},"injectables/MenusEffects.html":{},"injectables/PersonsApiClient.html":{},"injectables/PersonsEffects.html":{},"injectables/PersonsResolver.html":{},"injectables/PersonsSandbox.html":{},"injectables/PersonsService.html":{},"injectables/ReportService.html":{},"injectables/SearchBoxDatasEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/UtilService.html":{},"injectables/ValidationService.html":{}},"body":{"injectables/AppApiClient.html":{},"injectables/AppSandbox.html":{},"injectables/AppService.html":{},"injectables/AuthApiClient.html":{},"injectables/AuthEffects.html":{},"injectables/AuthGuard.html":{},"injectables/AuthSandbox.html":{},"injectables/AuthorizeGuard.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"injectables/ConfigService.html":{},"injectables/DocumentsHelper.html":{},"injectables/DossierApiClient.html":{},"injectables/DossierEffects.html":{},"injectables/DossierSandbox.html":{},"injectables/DossierService.html":{},"injectables/HttpResponseHandler.html":{},"injectables/HttpService.html":{},"injectables/LayoutSandbox.html":{},"injectables/MenusEffects.html":{},"injectables/PersonsApiClient.html":{},"injectables/PersonsEffects.html":{},"injectables/PersonsResolver.html":{},"injectables/PersonsSandbox.html":{},"injectables/PersonsService.html":{},"injectables/ReportService.html":{},"classes/Sandbox.html":{},"injectables/SearchBoxDatasEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/UtilService.html":{},"injectables/ValidationService.html":{},"overview.html":{}}}],["injector",{"_index":825,"title":{},"body":{"classes/BaseComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/LoginComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{}}}],["injector.get(titl",{"_index":838,"title":{},"body":{"classes/BaseComponent.html":{}}}],["inner",{"_index":2762,"title":{},"body":{"interfaces/State.html":{}}}],["input",{"_index":794,"title":{},"body":{"directives/AuthorizeDirective.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"components/LeftSidebarComponent.html":{},"components/NavFiltersComponent.html":{},"components/PersonFormComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"index.html":{}}}],["insert",{"_index":3149,"title":{},"body":{"index.html":{}}}],["insertperson",{"_index":2354,"title":{},"body":{"injectables/PersonsApiClient.html":{}}}],["insertperson(@bodi",{"_index":2383,"title":{},"body":{"injectables/PersonsApiClient.html":{}}}],["insertperson(person",{"_index":2362,"title":{},"body":{"injectables/PersonsApiClient.html":{}}}],["insertpersonadapt",{"_index":2528,"title":{},"body":{"injectables/PersonsService.html":{}}}],["insertpersonadapter(person",{"_index":2535,"title":{},"body":{"injectables/PersonsService.html":{}}}],["instal",{"_index":496,"title":{},"body":{"modules/AppModule.html":{},"components/ControlWebDavComponent.html":{},"index.html":{}}}],["installerfilepath",{"_index":1082,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["instanc",{"_index":592,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthEffects.html":{},"injectables/DossierService.html":{},"components/LoginComponent.html":{},"injectables/PersonsService.html":{}}}],["instanceof",{"_index":1056,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["instrument",{"_index":485,"title":{},"body":{"modules/AppModule.html":{}}}],["interact",{"_index":3172,"title":{},"body":{"index.html":{}}}],["interceptor",{"_index":1789,"title":{},"body":{"injectables/HttpService.html":{}}}],["interfac",{"_index":850,"title":{"interfaces/CanComponentDeactivate.html":{},"interfaces/IDossierFilterModel.html":{},"interfaces/IDossierNavigatorTreeModel.html":{},"interfaces/IMenuModel.html":{},"interfaces/IPerson.html":{},"interfaces/ISearchBoxModel.html":{},"interfaces/ISidebarMenuModel.html":{},"interfaces/ITemplateModel.html":{},"interfaces/LanguageModel.html":{},"interfaces/State.html":{},"interfaces/role.html":{}},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"classes/DossierFilterModel.html":{},"classes/DossierNavigatorTreeModel.html":{},"interfaces/IDossierFilterModel.html":{},"interfaces/IDossierNavigatorTreeModel.html":{},"interfaces/IMenuModel.html":{},"interfaces/IPerson.html":{},"interfaces/ISearchBoxModel.html":{},"interfaces/ISidebarMenuModel.html":{},"interfaces/ITemplateModel.html":{},"interfaces/LanguageModel.html":{},"classes/MenuModel.html":{},"classes/Person.html":{},"classes/SearchBoxModel.html":{},"classes/SidebarMenuModel.html":{},"interfaces/State.html":{},"classes/TemplateModel.html":{},"overview.html":{},"interfaces/role.html":{}}}],["introduc",{"_index":456,"title":{},"body":{"modules/AppModule.html":{}}}],["iperson",{"_index":1829,"title":{"interfaces/IPerson.html":{}},"body":{"interfaces/IPerson.html":{},"classes/Person.html":{}}}],["isback",{"_index":2918,"title":{},"body":{"components/ToolbarsComponent.html":{}}}],["isearchboxmodel",{"_index":1834,"title":{"interfaces/ISearchBoxModel.html":{}},"body":{"interfaces/ISearchBoxModel.html":{},"classes/SearchBoxModel.html":{}}}],["isidebarmenumodel",{"_index":1840,"title":{"interfaces/ISidebarMenuModel.html":{}},"body":{"interfaces/ISidebarMenuModel.html":{},"classes/SidebarMenuModel.html":{}}}],["isloggedin",{"_index":699,"title":{},"body":{"injectables/AuthGuard.html":{},"classes/User.html":{}}}],["isloggedin(url",{"_index":705,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["isloginpag",{"_index":223,"title":{},"body":{"components/AppComponent.html":{}}}],["isnavbar",{"_index":1909,"title":{},"body":{"components/LayoutContainer.html":{},"components/LeftSidebarComponent.html":{}}}],["isol",{"_index":631,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["isrun",{"_index":2750,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["issmal",{"_index":2751,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["istoggl",{"_index":936,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["istogglenav",{"_index":1607,"title":{},"body":{"components/HeaderComponent.html":{}}}],["isvis",{"_index":42,"title":{},"body":{"classes/ActionHandler.html":{}}}],["item",{"_index":965,"title":{},"body":{"components/ControlWebDavComponent.html":{},"interfaces/IMenuModel.html":{},"injectables/LayoutSandbox.html":{},"classes/MenuModel.html":{}}}],["item.classlist.contains('wrapp",{"_index":2055,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["item.displaynam",{"_index":1092,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["item.displayname}_${new",{"_index":1031,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["itemdata",{"_index":1311,"title":{},"body":{"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/PersonsComponent.html":{}}}],["itemdata.b",{"_index":1315,"title":{},"body":{"components/DossierDetailsComponent.html":{}}}],["itemdata.k",{"_index":1316,"title":{},"body":{"components/DossierDetailsComponent.html":{}}}],["itemdata.nam",{"_index":1314,"title":{},"body":{"components/DossierDetailsComponent.html":{}}}],["itemdata.userid",{"_index":1317,"title":{},"body":{"components/DossierDetailsComponent.html":{}}}],["itemmenu",{"_index":1611,"title":{},"body":{"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"injectables/LayoutSandbox.html":{}}}],["itemplatemodel",{"_index":1848,"title":{"interfaces/ITemplateModel.html":{}},"body":{"interfaces/ITemplateModel.html":{},"classes/TemplateModel.html":{}}}],["ithit",{"_index":999,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["ithit.webdav.client.docmanager.getinstallfilenam",{"_index":1083,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["ithit.webdav.client.exceptions.preconditionfailedexcept",{"_index":1057,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["ithit.webdav.client.exceptions.webdavhttpexcept",{"_index":1062,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["ithit.webdav.client.fil",{"_index":1041,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["ithit.webdav.client.fold",{"_index":1046,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["ithit.webdav.client.hierarchyitem",{"_index":1075,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["ithit.webdav.client.webdavsess",{"_index":1030,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["itreenavmodel",{"_index":1860,"title":{"classes/ITreeNavModel.html":{}},"body":{"classes/ITreeNavModel.html":{},"classes/TreeNavModel.html":{}}}],["itself",{"_index":2783,"title":{},"body":{"interfaces/State.html":{}}}],["js",{"_index":3094,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":918,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/HttpService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["json.parse(localstorage.getitem('currentus",{"_index":713,"title":{},"body":{"injectables/AuthGuard.html":{},"classes/Sandbox.html":{}}}],["json.stringify(person",{"_index":2519,"title":{},"body":{"injectables/PersonsSandbox.html":{}}}],["json.stringify(thi",{"_index":3008,"title":{},"body":{"classes/User.html":{}}}],["json.stringify(treemodel",{"_index":1519,"title":{},"body":{"injectables/DossierSandbox.html":{}}}],["jsonr",{"_index":1668,"title":{},"body":{"classes/HttpAdapter.html":{}}}],["jsonwebtoken",{"_index":3103,"title":{},"body":{"dependencies.html":{}}}],["k",{"_index":1445,"title":{},"body":{"classes/DossierNavigatorTreeModel.html":{},"interfaces/IDossierNavigatorTreeModel.html":{}}}],["key",{"_index":750,"title":{},"body":{"injectables/AuthSandbox.html":{},"injectables/ConfigService.html":{},"injectables/HttpResponseHandler.html":{},"interfaces/State.html":{},"injectables/UtilService.html":{},"injectables/ValidationService.html":{}}}],["kiss",{"_index":302,"title":{},"body":{"components/AppComponent.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{}}}],["knockout",{"_index":1227,"title":{},"body":{"components/DocumentReportViewerComponent.html":{},"dependencies.html":{}}}],["knowledg",{"_index":2826,"title":{},"body":{"interfaces/State.html":{}}}],["ko",{"_index":1226,"title":{},"body":{"components/DocumentReportViewerComponent.html":{}}}],["ko.applybind",{"_index":1240,"title":{},"body":{"components/DocumentReportViewerComponent.html":{}}}],["ko.observable(json.stringify(this._viewermodel",{"_index":1238,"title":{},"body":{"components/DocumentReportViewerComponent.html":{}}}],["ko.observable(nul",{"_index":1239,"title":{},"body":{"components/DocumentReportViewerComponent.html":{}}}],["l",{"_index":1069,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["lagnuag",{"_index":591,"title":{},"body":{"injectables/AppService.html":{}}}],["lambda",{"_index":464,"title":{},"body":{"modules/AppModule.html":{}}}],["lang",{"_index":588,"title":{},"body":{"injectables/AppService.html":{},"components/LanguageSelectorComponent.html":{},"injectables/LayoutSandbox.html":{}}}],["lang.cod",{"_index":559,"title":{},"body":{"injectables/AppSandbox.html":{},"components/LanguageSelectorComponent.html":{}}}],["lang.cultur",{"_index":1901,"title":{},"body":{"components/LanguageSelectorComponent.html":{}}}],["lang.flag",{"_index":1899,"title":{},"body":{"components/LanguageSelectorComponent.html":{}}}],["lang.nam",{"_index":1902,"title":{},"body":{"components/LanguageSelectorComponent.html":{}}}],["langs.map(lang",{"_index":598,"title":{},"body":{"injectables/AppService.html":{}}}],["languag",{"_index":305,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppSandbox.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"classes/DeleteItemSelectedAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"injectables/HttpService.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"components/LeftSidebarComponent.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetCultureAction.html":{},"classes/SetLanguageAction.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{},"classes/UpdateSelectedAction.html":{}}}],["languagemodel",{"_index":1869,"title":{"interfaces/LanguageModel.html":{}},"body":{"interfaces/LanguageModel.html":{}}}],["languageselector.component.html",{"_index":1874,"title":{},"body":{"components/LanguageSelectorComponent.html":{}}}],["languageselector.component.scss",{"_index":1873,"title":{},"body":{"components/LanguageSelectorComponent.html":{}}}],["languageselectorcompon",{"_index":304,"title":{"components/LanguageSelectorComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"modules/LayoutContainersModule.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{},"overview.html":{}}}],["lastnam",{"_index":3153,"title":{},"body":{"index.html":{}}}],["latest",{"_index":637,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["launch",{"_index":3133,"title":{},"body":{"index.html":{}}}],["layout",{"_index":1904,"title":{},"body":{"components/LayoutContainer.html":{}}}],["layout'},{'nam",{"_index":308,"title":{},"body":{"components/AppComponent.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{}}}],["layout.contain",{"_index":1941,"title":{},"body":{"modules/LayoutContainersModule.html":{}}}],["layout.container.html",{"_index":1905,"title":{},"body":{"components/LayoutContainer.html":{}}}],["layout.sandbox",{"_index":1924,"title":{},"body":{"components/LayoutContainer.html":{},"modules/LayoutContainersModule.html":{}}}],["layoutcontain",{"_index":307,"title":{"components/LayoutContainer.html":{}},"body":{"components/AppComponent.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"modules/LayoutContainersModule.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{},"overview.html":{}}}],["layoutcontainersmodul",{"_index":1424,"title":{"modules/LayoutContainersModule.html":{}},"body":{"modules/DossierNavigatorModule.html":{},"modules/LayoutContainersModule.html":{},"modules/PersonsModule.html":{},"modules.html":{},"overview.html":{}}}],["layoutsandbox",{"_index":1907,"title":{"injectables/LayoutSandbox.html":{}},"body":{"components/LayoutContainer.html":{},"modules/LayoutContainersModule.html":{},"injectables/LayoutSandbox.html":{},"overview.html":{}}}],["left",{"_index":310,"title":{},"body":{"components/AppComponent.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"modules/LayoutContainersModule.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"interfaces/State.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{}}}],["leftsidebarcompon",{"_index":309,"title":{"components/LeftSidebarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"modules/LayoutContainersModule.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{},"overview.html":{}}}],["legend",{"_index":274,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"components/BreadCrumbComponent.html":{},"modules/ComponentsModule.html":{},"components/ControlWebDavComponent.html":{},"modules/ControlWebDavModule.html":{},"components/DocumentGenerationComponent.html":{},"modules/DocumentGenerationModule.html":{},"components/DocumentReportViewerComponent.html":{},"modules/DocumentReportViewerModule.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"modules/DossierNavigatorModule.html":{},"modules/ExceptionsModule.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"modules/LayoutContainersModule.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"modules/PersonsModule.html":{},"modules/PipesModule.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{},"overview.html":{}}}],["length",{"_index":807,"title":{},"body":{"directives/AuthorizeDirective.html":{},"injectables/AuthorizeGuard.html":{}}}],["lenzburg",{"_index":2135,"title":{},"body":{"components/LoginComponent.html":{}}}],["level",{"_index":2761,"title":{},"body":{"interfaces/State.html":{}}}],["lg",{"_index":2274,"title":{},"body":{"components/PersonFormComponent.html":{},"components/TreeDetailComponent.html":{}}}],["librari",{"_index":435,"title":{},"body":{"modules/AppModule.html":{}}}],["limit",{"_index":458,"title":{},"body":{"modules/AppModule.html":{}}}],["line",{"_index":1734,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["line:compon",{"_index":1925,"title":{},"body":{"components/LayoutContainer.html":{}}}],["line:curli",{"_index":716,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/HttpResponseHandler.html":{},"components/LayoutContainer.html":{},"injectables/LayoutSandbox.html":{},"components/LoginComponent.html":{},"injectables/PersonsSandbox.html":{}}}],["line:import",{"_index":1794,"title":{},"body":{"injectables/HttpService.html":{},"components/LayoutContainer.html":{},"interfaces/State.html":{}}}],["line:memb",{"_index":787,"title":{},"body":{"injectables/AuthSandbox.html":{},"injectables/DossierSandbox.html":{}}}],["line:on",{"_index":1733,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["list",{"_index":349,"title":{},"body":{"components/AppComponent.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"injectables/DossierEffects.html":{},"components/DossierNavigatorComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"injectables/MenusEffects.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"injectables/PersonsEffects.html":{},"injectables/PersonsResolver.html":{},"modules/PersonsRoutingModule.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"injectables/SearchBoxDatasEffects.html":{},"components/SelectedActionsComponent.html":{},"injectables/SettingsEffects.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{}}}],["list'},{'nam",{"_index":330,"title":{},"body":{"components/AppComponent.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{}}}],["list.compon",{"_index":1432,"title":{},"body":{"modules/DossierNavigatorModule.html":{},"modules/DossierRoutingModule.html":{},"modules/PersonsModule.html":{},"modules/PersonsRoutingModule.html":{}}}],["list.component.html",{"_index":2326,"title":{},"body":{"components/PersonListComponent.html":{},"components/TreeListComponent.html":{}}}],["list.component.scss",{"_index":2325,"title":{},"body":{"components/PersonListComponent.html":{},"components/TreeListComponent.html":{}}}],["list.component.t",{"_index":2324,"title":{},"body":{"components/PersonListComponent.html":{},"components/TreeListComponent.html":{}}}],["list.component.ts:25",{"_index":2338,"title":{},"body":{"components/PersonListComponent.html":{},"components/TreeListComponent.html":{}}}],["list.component.ts:26",{"_index":2332,"title":{},"body":{"components/PersonListComponent.html":{},"components/TreeListComponent.html":{}}}],["list.component.ts:27",{"_index":2954,"title":{},"body":{"components/TreeListComponent.html":{}}}],["list.component.ts:31",{"_index":2339,"title":{},"body":{"components/PersonListComponent.html":{},"components/TreeListComponent.html":{}}}],["list.component.ts:36",{"_index":2335,"title":{},"body":{"components/PersonListComponent.html":{},"components/TreeListComponent.html":{}}}],["list.component.ts:41",{"_index":2956,"title":{},"body":{"components/TreeListComponent.html":{}}}],["list.component.ts:43",{"_index":2333,"title":{},"body":{"components/PersonListComponent.html":{}}}],["list.component.ts:49",{"_index":2334,"title":{},"body":{"components/PersonListComponent.html":{}}}],["list.component.ts:55",{"_index":2337,"title":{},"body":{"components/PersonListComponent.html":{}}}],["list/person",{"_index":2323,"title":{},"body":{"components/PersonListComponent.html":{},"modules/PersonsModule.html":{},"modules/PersonsRoutingModule.html":{}}}],["list/tre",{"_index":1431,"title":{},"body":{"modules/DossierNavigatorModule.html":{},"modules/DossierRoutingModule.html":{},"components/TreeListComponent.html":{}}}],["listfil",{"_index":1078,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["liter",{"_index":1846,"title":{},"body":{"interfaces/ISidebarMenuModel.html":{},"classes/SidebarMenuModel.html":{},"injectables/ValidationService.html":{}}}],["load",{"_index":74,"title":{},"body":{"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"components/AppComponent.html":{},"injectables/ConfigService.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteItemSelectedAction.html":{},"classes/DeleteSuccessAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"injectables/DossierSandbox.html":{},"classes/GetTreeDetailAction.html":{},"components/HeaderComponent.html":{},"injectables/LayoutSandbox.html":{},"classes/LoadAction.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"injectables/PersonsSandbox.html":{},"classes/ResetState.html":{},"classes/SelectAction.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetAvaiableMenu.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetClosedAction.html":{},"classes/SetCultureAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{},"classes/SetLanguageAction.html":{},"components/SpinnerComponent.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSelectedAction.html":{},"classes/UpdateSuccessAction.html":{},"index.html":{}}}],["load_api_languag",{"_index":1118,"title":{},"body":{"classes/DeleteItemSelectedAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetCultureAction.html":{},"classes/SetLanguageAction.html":{},"classes/UpdateSelectedAction.html":{}}}],["load_api_rol",{"_index":1113,"title":{},"body":{"classes/DeleteItemSelectedAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetCultureAction.html":{},"classes/SetLanguageAction.html":{},"classes/UpdateSelectedAction.html":{}}}],["load_detail",{"_index":94,"title":{},"body":{"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteSuccessAction.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSuccessAction.html":{}}}],["load_fail",{"_index":79,"title":{},"body":{"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteItemSelectedAction.html":{},"classes/DeleteSuccessAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"classes/GetTreeDetailAction.html":{},"classes/LoadAction.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"classes/ResetState.html":{},"classes/SelectAction.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetAvaiableMenu.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetClosedAction.html":{},"classes/SetCultureAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{},"classes/SetLanguageAction.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSelectedAction.html":{},"classes/UpdateSuccessAction.html":{}}}],["load_success",{"_index":77,"title":{},"body":{"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteSuccessAction.html":{},"classes/GetTreeDetailAction.html":{},"classes/LoadAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"classes/ResetState.html":{},"classes/SelectAction.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetAvaiableMenu.html":{},"classes/SetClosedAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSuccessAction.html":{}}}],["loadact",{"_index":96,"title":{"classes/LoadAction.html":{}},"body":{"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteSuccessAction.html":{},"classes/GetTreeDetailAction.html":{},"classes/LoadAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"classes/ResetState.html":{},"classes/SelectAction.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetAvaiableMenu.html":{},"classes/SetClosedAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSuccessAction.html":{},"miscellaneous/typealiases.html":{}}}],["loadapilangsact",{"_index":1140,"title":{"classes/LoadApiLangsAction.html":{}},"body":{"classes/DeleteItemSelectedAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetCultureAction.html":{},"classes/SetLanguageAction.html":{},"classes/UpdateSelectedAction.html":{},"miscellaneous/typealiases.html":{}}}],["loadapirolesact",{"_index":1136,"title":{"classes/LoadApiRolesAction.html":{}},"body":{"classes/DeleteItemSelectedAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetCultureAction.html":{},"classes/SetLanguageAction.html":{},"classes/UpdateSelectedAction.html":{},"miscellaneous/typealiases.html":{}}}],["loadchildren",{"_index":526,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loaddetail",{"_index":2935,"title":{},"body":{"components/TreeDetailComponent.html":{}}}],["loaddossiertre",{"_index":1478,"title":{},"body":{"injectables/DossierSandbox.html":{}}}],["loaddossiertrees(filt",{"_index":1483,"title":{},"body":{"injectables/DossierSandbox.html":{}}}],["loadfailact",{"_index":102,"title":{"classes/LoadFailAction.html":{}},"body":{"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteItemSelectedAction.html":{},"classes/DeleteSuccessAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"classes/GetTreeDetailAction.html":{},"classes/LoadAction.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"classes/ResetState.html":{},"classes/SelectAction.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetAvaiableMenu.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetClosedAction.html":{},"classes/SetCultureAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{},"classes/SetLanguageAction.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSelectedAction.html":{},"classes/UpdateSuccessAction.html":{},"miscellaneous/typealiases.html":{}}}],["loadmenu",{"_index":1970,"title":{},"body":{"injectables/LayoutSandbox.html":{}}}],["loadperson",{"_index":2480,"title":{},"body":{"injectables/PersonsSandbox.html":{}}}],["loadpersondata",{"_index":2330,"title":{},"body":{"components/PersonListComponent.html":{}}}],["loadpersondetail",{"_index":2265,"title":{},"body":{"components/PersonFormComponent.html":{},"injectables/PersonsSandbox.html":{}}}],["loadpersondetails(id",{"_index":2488,"title":{},"body":{"injectables/PersonsSandbox.html":{}}}],["loadsearchboxdata",{"_index":1971,"title":{},"body":{"injectables/LayoutSandbox.html":{}}}],["loadsuccessact",{"_index":99,"title":{"classes/LoadSuccessAction.html":{}},"body":{"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteSuccessAction.html":{},"classes/GetTreeDetailAction.html":{},"classes/LoadAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"classes/ResetState.html":{},"classes/SelectAction.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetAvaiableMenu.html":{},"classes/SetClosedAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSuccessAction.html":{},"miscellaneous/typealiases.html":{}}}],["loadtre",{"_index":1359,"title":{},"body":{"components/DossierNavigatorComponent.html":{}}}],["loadtrees(filt",{"_index":1363,"title":{},"body":{"components/DossierNavigatorComponent.html":{}}}],["loadus",{"_index":2590,"title":{},"body":{"classes/Sandbox.html":{}}}],["local",{"_index":252,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppSandbox.html":{},"injectables/AuthSandbox.html":{},"classes/Sandbox.html":{},"classes/User.html":{}}}],["localedatestr",{"_index":2607,"title":{},"body":{"classes/Sandbox.html":{}}}],["localedatestring(valu",{"_index":2610,"title":{},"body":{"classes/Sandbox.html":{}}}],["localization.defaultlanguag",{"_index":566,"title":{},"body":{"injectables/AppSandbox.html":{}}}],["localization.languages.filter(lang",{"_index":568,"title":{},"body":{"injectables/AppSandbox.html":{}}}],["localization.languages.map(lang",{"_index":558,"title":{},"body":{"injectables/AppSandbox.html":{}}}],["localstorag",{"_index":3109,"title":{},"body":{"dependencies.html":{}}}],["localstorage.getitem('currentlang.cultur",{"_index":1808,"title":{},"body":{"injectables/HttpService.html":{}}}],["localstorage.getitem('token",{"_index":1807,"title":{},"body":{"injectables/HttpService.html":{}}}],["localstorage.getitem('us",{"_index":774,"title":{},"body":{"injectables/AuthSandbox.html":{},"components/LayoutContainer.html":{}}}],["localstorage.getitem('user.userid",{"_index":1393,"title":{},"body":{"components/DossierNavigatorComponent.html":{}}}],["localstorage.setitem('currentus",{"_index":3007,"title":{},"body":{"classes/User.html":{}}}],["localstorage.setitem('select:dossi",{"_index":1518,"title":{},"body":{"injectables/DossierSandbox.html":{},"injectables/PersonsSandbox.html":{}}}],["localstorage.setitem('select:person",{"_index":1535,"title":{},"body":{"injectables/DossierSandbox.html":{},"injectables/PersonsSandbox.html":{}}}],["localstorage.setitem('token",{"_index":3009,"title":{},"body":{"classes/User.html":{}}}],["localstorage.setitem('us",{"_index":779,"title":{},"body":{"injectables/AuthSandbox.html":{},"classes/User.html":{}}}],["localstorage.setitem('user.userid",{"_index":777,"title":{},"body":{"injectables/AuthSandbox.html":{}}}],["locat",{"_index":2221,"title":{},"body":{"components/PageBadGatewayComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/TreeDetailComponent.html":{}}}],["log",{"_index":607,"title":{},"body":{"injectables/AuthApiClient.html":{},"injectables/AuthSandbox.html":{},"components/DocumentGenerationComponent.html":{},"components/ReportViewerComponent.html":{}}}],["loggedus",{"_index":2588,"title":{},"body":{"classes/Sandbox.html":{}}}],["login",{"_index":134,"title":{},"body":{"classes/AddUserAction.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthApiClient.html":{},"injectables/AuthEffects.html":{},"injectables/AuthGuard.html":{},"injectables/AuthSandbox.html":{},"classes/DoLoginAction.html":{},"classes/DoLoginFailAction.html":{},"classes/DoLoginSuccessAction.html":{},"classes/DoLogoutAction.html":{},"classes/DoLogoutFailAction.html":{},"classes/DoLogoutSuccessAction.html":{},"injectables/HttpResponseHandler.html":{},"components/LoginComponent.html":{},"injectables/PersonsApiClient.html":{},"classes/RemoveUserAction.html":{},"interfaces/State.html":{},"index.html":{}}}],["login'},{'nam",{"_index":313,"title":{},"body":{"components/AppComponent.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{}}}],["login(form",{"_index":752,"title":{},"body":{"injectables/AuthSandbox.html":{}}}],["login(searchparam",{"_index":600,"title":{},"body":{"injectables/AuthApiClient.html":{}}}],["login.component.html",{"_index":2073,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":2072,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.compon",{"_index":729,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["logincompon",{"_index":312,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{},"overview.html":{}}}],["loginform",{"_index":131,"title":{"classes/LoginForm.html":{}},"body":{"classes/AddUserAction.html":{},"injectables/AuthApiClient.html":{},"injectables/AuthEffects.html":{},"injectables/AuthSandbox.html":{},"classes/DoLoginAction.html":{},"classes/DoLoginFailAction.html":{},"classes/DoLoginSuccessAction.html":{},"classes/DoLogoutAction.html":{},"classes/DoLogoutFailAction.html":{},"classes/DoLogoutSuccessAction.html":{},"components/LoginComponent.html":{},"classes/LoginForm.html":{},"classes/RemoveUserAction.html":{}}}],["loginform(form",{"_index":769,"title":{},"body":{"injectables/AuthSandbox.html":{}}}],["loginform.client_id",{"_index":2150,"title":{},"body":{"classes/LoginForm.html":{}}}],["loginform.client_secret",{"_index":2152,"title":{},"body":{"classes/LoginForm.html":{}}}],["loginform.grant_typ",{"_index":2154,"title":{},"body":{"classes/LoginForm.html":{}}}],["loginform.password",{"_index":2158,"title":{},"body":{"classes/LoginForm.html":{}}}],["loginform.scop",{"_index":2156,"title":{},"body":{"classes/LoginForm.html":{}}}],["loginform.usernam",{"_index":2157,"title":{},"body":{"classes/LoginForm.html":{}}}],["loginload",{"_index":737,"title":{},"body":{"injectables/AuthSandbox.html":{},"injectables/LayoutSandbox.html":{}}}],["loginpag",{"_index":250,"title":{},"body":{"components/AppComponent.html":{}}}],["logout",{"_index":138,"title":{},"body":{"classes/AddUserAction.html":{},"injectables/AuthApiClient.html":{},"injectables/AuthEffects.html":{},"classes/DoLoginAction.html":{},"classes/DoLoginFailAction.html":{},"classes/DoLoginSuccessAction.html":{},"classes/DoLogoutAction.html":{},"classes/DoLogoutFailAction.html":{},"classes/DoLogoutSuccessAction.html":{},"components/HeaderComponent.html":{},"injectables/LayoutSandbox.html":{},"components/ProfileBarComponent.html":{},"classes/RemoveUserAction.html":{}}}],["logoutadapt",{"_index":741,"title":{},"body":{"injectables/AuthSandbox.html":{}}}],["logoutadapter(us",{"_index":754,"title":{},"body":{"injectables/AuthSandbox.html":{}}}],["look",{"_index":3024,"title":{},"body":{"injectables/UtilService.html":{}}}],["lookup",{"_index":3023,"title":{},"body":{"injectables/UtilService.html":{}}}],["lookup.cod",{"_index":3037,"title":{},"body":{"injectables/UtilService.html":{}}}],["lookup.nam",{"_index":3036,"title":{},"body":{"injectables/UtilService.html":{}}}],["lắng",{"_index":1529,"title":{},"body":{"injectables/DossierSandbox.html":{}}}],["m",{"_index":1446,"title":{},"body":{"classes/DossierNavigatorTreeModel.html":{},"interfaces/IDossierNavigatorTreeModel.html":{}}}],["main",{"_index":2056,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["mainwrappercontain",{"_index":1908,"title":{},"body":{"components/LayoutContainer.html":{}}}],["make",{"_index":2810,"title":{},"body":{"interfaces/State.html":{}}}],["manag",{"_index":2340,"title":{},"body":{"components/PersonListComponent.html":{},"modules/PersonsRoutingModule.html":{},"index.html":{}}}],["map",{"_index":478,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthEffects.html":{},"interfaces/State.html":{}}}],["map((act",{"_index":660,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/DossierEffects.html":{},"injectables/MenusEffects.html":{},"injectables/PersonsEffects.html":{},"injectables/SearchBoxDatasEffects.html":{},"injectables/SettingsEffects.html":{}}}],["map(data",{"_index":2630,"title":{},"body":{"injectables/SearchBoxDatasEffects.html":{}}}],["map(docu",{"_index":2722,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["map(menu",{"_index":2172,"title":{},"body":{"injectables/MenusEffects.html":{}}}],["map(person",{"_index":2407,"title":{},"body":{"injectables/PersonsEffects.html":{}}}],["map(r",{"_index":911,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/HttpService.html":{}}}],["map(rol",{"_index":2730,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["map(tre",{"_index":1324,"title":{},"body":{"injectables/DossierEffects.html":{}}}],["map(us",{"_index":678,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["match",{"_index":38,"title":{},"body":{"classes/Account.html":{},"classes/ActionHandler.html":{},"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"classes/AddUserAction.html":{},"injectables/AppApiClient.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppSandbox.html":{},"injectables/AppService.html":{},"injectables/AuthApiClient.html":{},"injectables/AuthEffects.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthSandbox.html":{},"directives/AuthorizeDirective.html":{},"injectables/AuthorizeGuard.html":{},"classes/BaseComponent.html":{},"components/BreadCrumbComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"classes/ClassRightModel.html":{},"modules/ComponentsModule.html":{},"injectables/ConfigService.html":{},"components/ControlWebDavComponent.html":{},"modules/ControlWebDavModule.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteItemSelectedAction.html":{},"classes/DeleteSuccessAction.html":{},"classes/DoLoginAction.html":{},"classes/DoLoginFailAction.html":{},"classes/DoLoginSuccessAction.html":{},"classes/DoLogoutAction.html":{},"classes/DoLogoutFailAction.html":{},"classes/DoLogoutSuccessAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"components/DocumentGenerationComponent.html":{},"modules/DocumentGenerationModule.html":{},"components/DocumentReportViewerComponent.html":{},"modules/DocumentReportViewerModule.html":{},"injectables/DocumentsHelper.html":{},"injectables/DossierApiClient.html":{},"components/DossierDetailsComponent.html":{},"injectables/DossierEffects.html":{},"classes/DossierFilterModel.html":{},"components/DossierNavigatorComponent.html":{},"modules/DossierNavigatorModule.html":{},"classes/DossierNavigatorTreeModel.html":{},"modules/DossierRoutingModule.html":{},"injectables/DossierSandbox.html":{},"injectables/DossierService.html":{},"directives/DynamicTabsDirective.html":{},"modules/ExceptionsModule.html":{},"modules/ExceptionsRoutingModule.html":{},"classes/GetTreeDetailAction.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"classes/HttpAdapter.html":{},"injectables/HttpResponseHandler.html":{},"injectables/HttpService.html":{},"modules/HttpServiceModule.html":{},"interfaces/IDossierFilterModel.html":{},"interfaces/IDossierNavigatorTreeModel.html":{},"interfaces/IMenuModel.html":{},"interfaces/IPerson.html":{},"interfaces/ISearchBoxModel.html":{},"interfaces/ISidebarMenuModel.html":{},"interfaces/ITemplateModel.html":{},"classes/ITreeNavModel.html":{},"interfaces/LanguageModel.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"modules/LayoutContainersModule.html":{},"injectables/LayoutSandbox.html":{},"components/LeftSidebarComponent.html":{},"classes/LoadAction.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"components/LoginComponent.html":{},"classes/LoginForm.html":{},"classes/MenuModel.html":{},"injectables/MenusEffects.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Person.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"injectables/PersonsApiClient.html":{},"components/PersonsComponent.html":{},"injectables/PersonsEffects.html":{},"modules/PersonsModule.html":{},"injectables/PersonsResolver.html":{},"modules/PersonsRoutingModule.html":{},"injectables/PersonsSandbox.html":{},"injectables/PersonsService.html":{},"modules/PipesModule.html":{},"components/ProfileBarComponent.html":{},"classes/RemoveUserAction.html":{},"injectables/ReportService.html":{},"components/ReportViewerComponent.html":{},"classes/ResetState.html":{},"classes/Sandbox.html":{},"pipes/SanitizeHtmlPipe.html":{},"components/SearchBoxComponent.html":{},"injectables/SearchBoxDatasEffects.html":{},"classes/SearchBoxModel.html":{},"classes/SelectAction.html":{},"components/SelectedActionsComponent.html":{},"classes/SelectedActionsModel.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetAvaiableMenu.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetClosedAction.html":{},"classes/SetCultureAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{},"classes/SetLanguageAction.html":{},"injectables/SettingsEffects.html":{},"classes/SidebarMenuModel.html":{},"components/SpinnerComponent.html":{},"interfaces/State.html":{},"classes/TemplateModel.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{},"classes/TreeNavModel.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSelectedAction.html":{},"classes/UpdateSuccessAction.html":{},"classes/User.html":{},"injectables/UtilService.html":{},"modules/UtilityModule.html":{},"injectables/ValidationService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"interfaces/role.html":{},"routes.html":{},"miscellaneous/typealiases.html":{}}}],["matchingcontrolkey",{"_index":3048,"title":{},"body":{"injectables/ValidationService.html":{}}}],["matchingpassword",{"_index":3044,"title":{},"body":{"injectables/ValidationService.html":{}}}],["matchingpasswords(controlkey",{"_index":3047,"title":{},"body":{"injectables/ValidationService.html":{}}}],["maydelet",{"_index":861,"title":{},"body":{"classes/ClassRightModel.html":{},"interfaces/role.html":{}}}],["mayinsert",{"_index":862,"title":{},"body":{"classes/ClassRightModel.html":{},"interfaces/role.html":{}}}],["mayupd",{"_index":863,"title":{},"body":{"classes/ClassRightModel.html":{},"interfaces/role.html":{}}}],["md",{"_index":2273,"title":{},"body":{"components/PersonFormComponent.html":{},"components/TreeDetailComponent.html":{}}}],["mean",{"_index":2759,"title":{},"body":{"interfaces/State.html":{}}}],["media",{"_index":1802,"title":{},"body":{"injectables/HttpService.html":{},"miscellaneous/enumerations.html":{}}}],["mediatyp",{"_index":1803,"title":{},"body":{"injectables/HttpService.html":{},"miscellaneous/enumerations.html":{}}}],["memori",{"_index":3087,"title":{},"body":{"dependencies.html":{}}}],["menu",{"_index":303,"title":{},"body":{"components/AppComponent.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"injectables/LayoutSandbox.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"injectables/MenusEffects.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"injectables/SearchBoxDatasEffects.html":{},"classes/SelectAction.html":{},"components/SelectedActionsComponent.html":{},"classes/SetAvaiableMenu.html":{},"components/SpinnerComponent.html":{},"interfaces/State.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{}}}],["menu.model.t",{"_index":1842,"title":{},"body":{"interfaces/ISidebarMenuModel.html":{},"classes/SidebarMenuModel.html":{}}}],["menu.model.ts:10",{"_index":2742,"title":{},"body":{"classes/SidebarMenuModel.html":{}}}],["menu.model.ts:11",{"_index":2745,"title":{},"body":{"classes/SidebarMenuModel.html":{}}}],["menu.model.ts:12",{"_index":2735,"title":{},"body":{"classes/SidebarMenuModel.html":{}}}],["menu.model.ts:2",{"_index":2740,"title":{},"body":{"classes/SidebarMenuModel.html":{}}}],["menu.model.ts:3",{"_index":2741,"title":{},"body":{"classes/SidebarMenuModel.html":{}}}],["menu.model.ts:4",{"_index":2738,"title":{},"body":{"classes/SidebarMenuModel.html":{}}}],["menu.model.ts:5",{"_index":2739,"title":{},"body":{"classes/SidebarMenuModel.html":{}}}],["menu.model.ts:6",{"_index":2744,"title":{},"body":{"classes/SidebarMenuModel.html":{}}}],["menu.model.ts:7",{"_index":2736,"title":{},"body":{"classes/SidebarMenuModel.html":{}}}],["menu.model.ts:8",{"_index":2743,"title":{},"body":{"classes/SidebarMenuModel.html":{}}}],["menu.model.ts:9",{"_index":2737,"title":{},"body":{"classes/SidebarMenuModel.html":{}}}],["menu.url",{"_index":1934,"title":{},"body":{"components/LayoutContainer.html":{},"injectables/LayoutSandbox.html":{}}}],["menumodel",{"_index":1828,"title":{"classes/MenuModel.html":{}},"body":{"interfaces/IMenuModel.html":{},"classes/MenuModel.html":{},"injectables/MenusEffects.html":{},"classes/SelectAction.html":{},"classes/SetAvaiableMenu.html":{}}}],["menusact",{"_index":2003,"title":{},"body":{"injectables/LayoutSandbox.html":{},"injectables/MenusEffects.html":{}}}],["menusactions.loadact",{"_index":2015,"title":{},"body":{"injectables/LayoutSandbox.html":{},"injectables/MenusEffects.html":{}}}],["menusactions.loadfailact",{"_index":2174,"title":{},"body":{"injectables/MenusEffects.html":{}}}],["menusactions.loadsuccessaction(menu",{"_index":2173,"title":{},"body":{"injectables/MenusEffects.html":{}}}],["menusactions.selectaction(menu",{"_index":2017,"title":{},"body":{"injectables/LayoutSandbox.html":{}}}],["menusactions.setavaiablemenu(menu",{"_index":2020,"title":{},"body":{"injectables/LayoutSandbox.html":{}}}],["menuseffect",{"_index":413,"title":{"injectables/MenusEffects.html":{}},"body":{"modules/AppModule.html":{},"injectables/MenusEffects.html":{}}}],["menusmock",{"_index":2176,"title":{},"body":{"injectables/MenusEffects.html":{}}}],["mergearrayobject",{"_index":1516,"title":{},"body":{"injectables/DossierSandbox.html":{},"injectables/LayoutSandbox.html":{}}}],["messag",{"_index":971,"title":{},"body":{"components/ControlWebDavComponent.html":{},"injectables/HttpResponseHandler.html":{},"components/PageBadGatewayComponent.html":{},"injectables/UtilService.html":{}}}],["messagetranslationcod",{"_index":2494,"title":{},"body":{"injectables/PersonsSandbox.html":{},"injectables/UtilService.html":{}}}],["meta",{"_index":482,"title":{},"body":{"modules/AppModule.html":{}}}],["metadata",{"_index":216,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"directives/AuthorizeDirective.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"directives/DynamicTabsDirective.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"pipes/SanitizeHtmlPipe.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{}}}],["metareduc",{"_index":2805,"title":{},"body":{"interfaces/State.html":{}}}],["method",{"_index":161,"title":{},"body":{"injectables/AppApiClient.html":{},"components/AppComponent.html":{},"injectables/AppSandbox.html":{},"injectables/AppService.html":{},"injectables/AuthApiClient.html":{},"injectables/AuthGuard.html":{},"injectables/AuthSandbox.html":{},"injectables/AuthorizeGuard.html":{},"classes/BaseComponent.html":{},"components/BreadCrumbComponent.html":{},"injectables/CanDeactivateGuard.html":{},"injectables/ConfigService.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"injectables/DocumentsHelper.html":{},"injectables/DossierApiClient.html":{},"components/DossierNavigatorComponent.html":{},"injectables/DossierSandbox.html":{},"injectables/DossierService.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"classes/HttpAdapter.html":{},"injectables/HttpResponseHandler.html":{},"injectables/HttpService.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"injectables/LayoutSandbox.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"injectables/PersonsApiClient.html":{},"components/PersonsComponent.html":{},"injectables/PersonsResolver.html":{},"injectables/PersonsSandbox.html":{},"injectables/PersonsService.html":{},"injectables/ReportService.html":{},"components/ReportViewerComponent.html":{},"classes/Sandbox.html":{},"pipes/SanitizeHtmlPipe.html":{},"components/SelectedActionsComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{},"classes/User.html":{},"injectables/UtilService.html":{},"injectables/ValidationService.html":{}}}],["methodbuild",{"_index":1799,"title":{},"body":{"injectables/HttpService.html":{}}}],["miscellan",{"_index":3116,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["mismatch",{"_index":3070,"title":{},"body":{"injectables/ValidationService.html":{}}}],["mock",{"_index":2373,"title":{},"body":{"injectables/PersonsApiClient.html":{},"injectables/SearchBoxDatasEffects.html":{},"index.html":{}}}],["mocks/menus.mock",{"_index":2177,"title":{},"body":{"injectables/MenusEffects.html":{}}}],["model",{"_index":70,"title":{},"body":{"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"classes/AddUserAction.html":{},"injectables/AuthEffects.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteSuccessAction.html":{},"classes/DoLoginAction.html":{},"classes/DoLoginFailAction.html":{},"classes/DoLoginSuccessAction.html":{},"classes/DoLogoutAction.html":{},"classes/DoLogoutFailAction.html":{},"classes/DoLogoutSuccessAction.html":{},"components/DossierDetailsComponent.html":{},"injectables/DossierEffects.html":{},"classes/GetTreeDetailAction.html":{},"interfaces/ITemplateModel.html":{},"classes/LoadAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"injectables/MenusEffects.html":{},"injectables/PersonsEffects.html":{},"classes/RemoveUserAction.html":{},"classes/ResetState.html":{},"classes/Sandbox.html":{},"injectables/SearchBoxDatasEffects.html":{},"classes/SelectAction.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetAvaiableMenu.html":{},"classes/SetClosedAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{},"injectables/SettingsEffects.html":{},"classes/TemplateModel.html":{},"components/ToolbarsComponent.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSuccessAction.html":{}}}],["model.displaynam",{"_index":1854,"title":{},"body":{"interfaces/ITemplateModel.html":{},"classes/TemplateModel.html":{}}}],["model.displayname.split('.')[0",{"_index":1856,"title":{},"body":{"interfaces/ITemplateModel.html":{},"classes/TemplateModel.html":{}}}],["model.href",{"_index":1859,"title":{},"body":{"interfaces/ITemplateModel.html":{},"classes/TemplateModel.html":{}}}],["modeljson",{"_index":1237,"title":{},"body":{"components/DocumentReportViewerComponent.html":{}}}],["models/account.model",{"_index":67,"title":{},"body":{"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteSuccessAction.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSuccessAction.html":{}}}],["models/auth/class",{"_index":834,"title":{},"body":{"classes/BaseComponent.html":{}}}],["models/auth/user.model",{"_index":1923,"title":{},"body":{"components/LayoutContainer.html":{}}}],["modul",{"_index":356,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/ComponentsModule.html":{},"modules/ControlWebDavModule.html":{},"modules/DocumentGenerationModule.html":{},"modules/DocumentReportViewerModule.html":{},"modules/DossierNavigatorModule.html":{},"modules/DossierRoutingModule.html":{},"modules/ExceptionsModule.html":{},"modules/ExceptionsRoutingModule.html":{},"modules/HttpServiceModule.html":{},"modules/LayoutContainersModule.html":{},"modules/PersonsModule.html":{},"modules/PersonsRoutingModule.html":{},"modules/PipesModule.html":{},"modules/UtilityModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/ComponentsModule.html":{},"modules/ControlWebDavModule.html":{},"modules/DocumentGenerationModule.html":{},"modules/DocumentReportViewerModule.html":{},"modules/DossierNavigatorModule.html":{},"modules/DossierRoutingModule.html":{},"modules/ExceptionsModule.html":{},"modules/ExceptionsRoutingModule.html":{},"modules/HttpServiceModule.html":{},"modules/LayoutContainersModule.html":{},"modules/PersonsModule.html":{},"modules/PersonsRoutingModule.html":{},"modules/PipesModule.html":{},"interfaces/State.html":{},"modules/UtilityModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["module'",{"_index":2782,"title":{},"body":{"interfaces/State.html":{}}}],["modulewithprovid",{"_index":1820,"title":{},"body":{"modules/HttpServiceModule.html":{},"modules/UtilityModule.html":{}}}],["more",{"_index":2773,"title":{},"body":{"interfaces/State.html":{}}}],["multi",{"_index":518,"title":{},"body":{"modules/AppModule.html":{}}}],["multil",{"_index":3169,"title":{},"body":{"index.html":{}}}],["n",{"_index":3170,"title":{},"body":{"index.html":{}}}],["nam",{"_index":3167,"title":{},"body":{"index.html":{}}}],["name",{"_index":19,"title":{},"body":{"classes/Account.html":{},"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"classes/AddUserAction.html":{},"injectables/AppApiClient.html":{},"components/AppComponent.html":{},"injectables/AppSandbox.html":{},"injectables/AppService.html":{},"injectables/AuthApiClient.html":{},"injectables/AuthEffects.html":{},"injectables/AuthGuard.html":{},"injectables/AuthSandbox.html":{},"directives/AuthorizeDirective.html":{},"injectables/AuthorizeGuard.html":{},"classes/BaseComponent.html":{},"components/BreadCrumbComponent.html":{},"injectables/CanDeactivateGuard.html":{},"classes/ClassRightModel.html":{},"injectables/ConfigService.html":{},"components/ControlWebDavComponent.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteItemSelectedAction.html":{},"classes/DeleteSuccessAction.html":{},"classes/DoLoginAction.html":{},"classes/DoLoginFailAction.html":{},"classes/DoLoginSuccessAction.html":{},"classes/DoLogoutAction.html":{},"classes/DoLogoutFailAction.html":{},"classes/DoLogoutSuccessAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"injectables/DocumentsHelper.html":{},"injectables/DossierApiClient.html":{},"components/DossierDetailsComponent.html":{},"injectables/DossierEffects.html":{},"classes/DossierFilterModel.html":{},"components/DossierNavigatorComponent.html":{},"classes/DossierNavigatorTreeModel.html":{},"injectables/DossierSandbox.html":{},"injectables/DossierService.html":{},"directives/DynamicTabsDirective.html":{},"classes/GetTreeDetailAction.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"classes/HttpAdapter.html":{},"injectables/HttpResponseHandler.html":{},"injectables/HttpService.html":{},"interfaces/IDossierNavigatorTreeModel.html":{},"interfaces/IMenuModel.html":{},"interfaces/IPerson.html":{},"interfaces/ISearchBoxModel.html":{},"interfaces/ISidebarMenuModel.html":{},"interfaces/LanguageModel.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"injectables/LayoutSandbox.html":{},"components/LeftSidebarComponent.html":{},"classes/LoadAction.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"components/LoginComponent.html":{},"classes/LoginForm.html":{},"classes/MenuModel.html":{},"injectables/MenusEffects.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Person.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"injectables/PersonsApiClient.html":{},"components/PersonsComponent.html":{},"injectables/PersonsEffects.html":{},"injectables/PersonsResolver.html":{},"modules/PersonsRoutingModule.html":{},"injectables/PersonsSandbox.html":{},"injectables/PersonsService.html":{},"components/ProfileBarComponent.html":{},"classes/RemoveUserAction.html":{},"injectables/ReportService.html":{},"components/ReportViewerComponent.html":{},"classes/ResetState.html":{},"classes/Sandbox.html":{},"pipes/SanitizeHtmlPipe.html":{},"components/SearchBoxComponent.html":{},"injectables/SearchBoxDatasEffects.html":{},"classes/SearchBoxModel.html":{},"classes/SelectAction.html":{},"components/SelectedActionsComponent.html":{},"classes/SelectedActionsModel.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetAvaiableMenu.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetClosedAction.html":{},"classes/SetCultureAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{},"classes/SetLanguageAction.html":{},"injectables/SettingsEffects.html":{},"classes/SidebarMenuModel.html":{},"components/SpinnerComponent.html":{},"classes/TemplateModel.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{},"classes/TreeNavModel.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSelectedAction.html":{},"classes/UpdateSuccessAction.html":{},"classes/User.html":{},"injectables/UtilService.html":{},"injectables/ValidationService.html":{},"index.html":{}}}],["namespac",{"_index":1582,"title":{},"body":{"classes/GetTreeDetailAction.html":{},"classes/LoadAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"classes/ResetState.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetClosedAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{}}}],["nav",{"_index":315,"title":{},"body":{"components/AppComponent.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"modules/DossierNavigatorModule.html":{},"classes/GetTreeDetailAction.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"components/LeftSidebarComponent.html":{},"classes/LoadAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"classes/ResetState.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetClosedAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{}}}],["nav.model.t",{"_index":1862,"title":{},"body":{"classes/ITreeNavModel.html":{},"classes/TreeNavModel.html":{}}}],["nav.model.ts:18",{"_index":1867,"title":{},"body":{"classes/ITreeNavModel.html":{}}}],["nav.model.ts:19",{"_index":1868,"title":{},"body":{"classes/ITreeNavModel.html":{}}}],["nav.model.ts:2",{"_index":2981,"title":{},"body":{"classes/TreeNavModel.html":{}}}],["nav.model.ts:20",{"_index":1866,"title":{},"body":{"classes/ITreeNavModel.html":{}}}],["nav.model.ts:21",{"_index":1865,"title":{},"body":{"classes/ITreeNavModel.html":{}}}],["nav.model.ts:3",{"_index":2982,"title":{},"body":{"classes/TreeNavModel.html":{}}}],["nav.model.ts:4",{"_index":2980,"title":{},"body":{"classes/TreeNavModel.html":{}}}],["nav.model.ts:5",{"_index":2979,"title":{},"body":{"classes/TreeNavModel.html":{}}}],["navbar",{"_index":3147,"title":{},"body":{"index.html":{}}}],["navfilterscompon",{"_index":314,"title":{"components/NavFiltersComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"modules/DossierNavigatorModule.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{},"overview.html":{}}}],["navig",{"_index":717,"title":{},"body":{"injectables/AuthGuard.html":{},"components/DossierNavigatorComponent.html":{},"interfaces/State.html":{}}}],["navigation.compon",{"_index":1944,"title":{},"body":{"modules/LayoutContainersModule.html":{}}}],["navigation.component.html",{"_index":1652,"title":{},"body":{"components/HorizontalNavigationComponent.html":{}}}],["navigation.component.scss",{"_index":1651,"title":{},"body":{"components/HorizontalNavigationComponent.html":{}}}],["navigation.component.t",{"_index":1649,"title":{},"body":{"components/HorizontalNavigationComponent.html":{}}}],["navigation.component.ts:16",{"_index":1653,"title":{},"body":{"components/HorizontalNavigationComponent.html":{}}}],["navigation.component.ts:17",{"_index":1654,"title":{},"body":{"components/HorizontalNavigationComponent.html":{}}}],["navigation.component.ts:19",{"_index":1656,"title":{},"body":{"components/HorizontalNavigationComponent.html":{}}}],["navigation/horizont",{"_index":1648,"title":{},"body":{"components/HorizontalNavigationComponent.html":{},"modules/LayoutContainersModule.html":{}}}],["navigator'},{'nam",{"_index":298,"title":{},"body":{"components/AppComponent.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{}}}],["navigator.compon",{"_index":1430,"title":{},"body":{"modules/DossierNavigatorModule.html":{},"modules/DossierRoutingModule.html":{}}}],["navigator.component.html",{"_index":1356,"title":{},"body":{"components/DossierNavigatorComponent.html":{}}}],["navigator.component.scss",{"_index":1355,"title":{},"body":{"components/DossierNavigatorComponent.html":{}}}],["navigator.component.t",{"_index":1352,"title":{},"body":{"components/DossierNavigatorComponent.html":{}}}],["navigator.component.ts:28",{"_index":1377,"title":{},"body":{"components/DossierNavigatorComponent.html":{}}}],["navigator.component.ts:29",{"_index":1362,"title":{},"body":{"components/DossierNavigatorComponent.html":{}}}],["navigator.component.ts:33",{"_index":1378,"title":{},"body":{"components/DossierNavigatorComponent.html":{}}}],["navigator.component.ts:40",{"_index":1367,"title":{},"body":{"components/DossierNavigatorComponent.html":{}}}],["navigator.component.ts:45",{"_index":1366,"title":{},"body":{"components/DossierNavigatorComponent.html":{}}}],["navigator.component.ts:52",{"_index":1373,"title":{},"body":{"components/DossierNavigatorComponent.html":{}}}],["navigator.component.ts:59",{"_index":1372,"title":{},"body":{"components/DossierNavigatorComponent.html":{}}}],["navigator.component.ts:75",{"_index":1364,"title":{},"body":{"components/DossierNavigatorComponent.html":{}}}],["navigator.component.ts:81",{"_index":1369,"title":{},"body":{"components/DossierNavigatorComponent.html":{}}}],["navigator.component.ts:86",{"_index":1371,"title":{},"body":{"components/DossierNavigatorComponent.html":{}}}],["navigator.module#dossiernavigatormodul",{"_index":529,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["navigator.module.t",{"_index":1425,"title":{},"body":{"modules/DossierNavigatorModule.html":{}}}],["navigator.titl",{"_index":2060,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["navigator/dossi",{"_index":528,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/DossierNavigatorModule.html":{},"modules/DossierRoutingModule.html":{}}}],["navigator/dossier.sandbox.t",{"_index":1472,"title":{},"body":{"injectables/DossierSandbox.html":{}}}],["navigator/dossier.sandbox.ts:122",{"_index":1486,"title":{},"body":{"injectables/DossierSandbox.html":{}}}],["navigator/dossier.sandbox.ts:129",{"_index":1489,"title":{},"body":{"injectables/DossierSandbox.html":{}}}],["navigator/dossier.sandbox.ts:136",{"_index":1485,"title":{},"body":{"injectables/DossierSandbox.html":{}}}],["navigator/dossier.sandbox.ts:22",{"_index":1493,"title":{},"body":{"injectables/DossierSandbox.html":{}}}],["navigator/dossier.sandbox.ts:23",{"_index":1499,"title":{},"body":{"injectables/DossierSandbox.html":{}}}],["navigator/dossier.sandbox.ts:24",{"_index":1497,"title":{},"body":{"injectables/DossierSandbox.html":{}}}],["navigator/dossier.sandbox.ts:25",{"_index":1495,"title":{},"body":{"injectables/DossierSandbox.html":{}}}],["navigator/dossier.sandbox.ts:26",{"_index":1480,"title":{},"body":{"injectables/DossierSandbox.html":{}}}],["navigator/dossier.sandbox.ts:41",{"_index":1484,"title":{},"body":{"injectables/DossierSandbox.html":{}}}],["navigator/dossier.sandbox.ts:45",{"_index":1488,"title":{},"body":{"injectables/DossierSandbox.html":{}}}],["navigator/dossier.sandbox.ts:58",{"_index":1482,"title":{},"body":{"injectables/DossierSandbox.html":{}}}],["navigator/dossier.sandbox.ts:70",{"_index":1491,"title":{},"body":{"injectables/DossierSandbox.html":{}}}],["navigator/dossier.sandbox.ts:76",{"_index":1513,"title":{},"body":{"injectables/DossierSandbox.html":{}}}],["navigator/dossier.service.t",{"_index":1542,"title":{},"body":{"injectables/DossierService.html":{}}}],["navigator/dossier.service.ts:15",{"_index":1547,"title":{},"body":{"injectables/DossierService.html":{}}}],["navigator/dossier.service.ts:22",{"_index":1546,"title":{},"body":{"injectables/DossierService.html":{}}}],["navigator/dossierapiclient.servic",{"_index":432,"title":{},"body":{"modules/AppModule.html":{},"injectables/DossierEffects.html":{}}}],["navigator/dossierapiclient.service.t",{"_index":1289,"title":{},"body":{"injectables/DossierApiClient.html":{}}}],["navigator/dossierapiclient.service.ts:33",{"_index":1292,"title":{},"body":{"injectables/DossierApiClient.html":{}}}],["navigator/dossiers/dossi",{"_index":1351,"title":{},"body":{"components/DossierNavigatorComponent.html":{}}}],["navigator/nav",{"_index":2180,"title":{},"body":{"components/NavFiltersComponent.html":{}}}],["navigator/tre",{"_index":2930,"title":{},"body":{"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{}}}],["navigator/trees{queri",{"_index":1298,"title":{},"body":{"injectables/DossierApiClient.html":{}}}],["nbsp",{"_index":2136,"title":{},"body":{"components/LoginComponent.html":{}}}],["necessari",{"_index":641,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["need",{"_index":239,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/HttpResponseHandler.html":{},"interfaces/State.html":{}}}],["new",{"_index":51,"title":{},"body":{"classes/ActionHandler.html":{},"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuthApiClient.html":{},"injectables/AuthEffects.html":{},"injectables/ConfigService.html":{},"components/ControlWebDavComponent.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteSuccessAction.html":{},"components/DocumentGenerationComponent.html":{},"injectables/DocumentsHelper.html":{},"injectables/DossierEffects.html":{},"components/DossierNavigatorComponent.html":{},"injectables/DossierSandbox.html":{},"injectables/DossierService.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LoginComponent.html":{},"injectables/MenusEffects.html":{},"components/NavFiltersComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"injectables/PersonsEffects.html":{},"injectables/PersonsSandbox.html":{},"injectables/PersonsService.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"injectables/SearchBoxDatasEffects.html":{},"components/SelectedActionsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/State.html":{},"components/ToolbarsComponent.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSuccessAction.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["newtempl",{"_index":944,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["newtemplate(item",{"_index":962,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["newtitl",{"_index":833,"title":{},"body":{"classes/BaseComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/LoginComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{}}}],["next",{"_index":715,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthSandbox.html":{},"injectables/DossierSandbox.html":{},"injectables/HttpResponseHandler.html":{},"injectables/HttpService.html":{},"components/LayoutContainer.html":{},"injectables/LayoutSandbox.html":{},"components/LoginComponent.html":{},"injectables/PersonsSandbox.html":{},"interfaces/State.html":{}}}],["ng",{"_index":3179,"title":{},"body":{"index.html":{}}}],["ng2",{"_index":444,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppSandbox.html":{},"modules/AuthModule.html":{},"modules/ComponentsModule.html":{},"modules/DossierNavigatorModule.html":{},"modules/ExceptionsModule.html":{},"injectables/HttpResponseHandler.html":{},"modules/LayoutContainersModule.html":{},"injectables/LayoutSandbox.html":{},"components/LeftSidebarComponent.html":{},"modules/PersonsModule.html":{},"injectables/UtilService.html":{},"dependencies.html":{}}}],["ng_valid",{"_index":1426,"title":{},"body":{"modules/DossierNavigatorModule.html":{},"modules/PersonsModule.html":{}}}],["ngafterviewinit",{"_index":945,"title":{},"body":{"components/ControlWebDavComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/LeftSidebarComponent.html":{}}}],["nghe",{"_index":1530,"title":{},"body":{"injectables/DossierSandbox.html":{}}}],["ngmodul",{"_index":394,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/ComponentsModule.html":{},"modules/ControlWebDavModule.html":{},"modules/DocumentGenerationModule.html":{},"modules/DocumentReportViewerModule.html":{},"modules/DossierNavigatorModule.html":{},"modules/DossierRoutingModule.html":{},"modules/ExceptionsModule.html":{},"modules/ExceptionsRoutingModule.html":{},"modules/HttpServiceModule.html":{},"modules/LayoutContainersModule.html":{},"modules/PersonsModule.html":{},"modules/PersonsRoutingModule.html":{},"modules/PipesModule.html":{},"modules/UtilityModule.html":{}}}],["ngondestroy",{"_index":226,"title":{},"body":{"components/AppComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/LayoutContainer.html":{},"components/LoginComponent.html":{}}}],["ngoninit",{"_index":227,"title":{},"body":{"components/AppComponent.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"components/LoginComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/SelectedActionsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{}}}],["ngrx/core",{"_index":3073,"title":{},"body":{"dependencies.html":{}}}],["ngrx/core/compos",{"_index":2781,"title":{},"body":{"interfaces/State.html":{}}}],["ngrx/effect",{"_index":438,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthEffects.html":{},"injectables/DossierEffects.html":{},"injectables/MenusEffects.html":{},"injectables/PersonsEffects.html":{},"injectables/SearchBoxDatasEffects.html":{},"injectables/SettingsEffects.html":{},"dependencies.html":{}}}],["ngrx/entiti",{"_index":3076,"title":{},"body":{"dependencies.html":{}}}],["ngrx/store",{"_index":68,"title":{},"body":{"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"classes/AddUserAction.html":{},"modules/AppModule.html":{},"injectables/AppSandbox.html":{},"injectables/AuthEffects.html":{},"injectables/AuthSandbox.html":{},"directives/AuthorizeDirective.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteItemSelectedAction.html":{},"classes/DeleteSuccessAction.html":{},"classes/DoLoginAction.html":{},"classes/DoLoginFailAction.html":{},"classes/DoLoginSuccessAction.html":{},"classes/DoLogoutAction.html":{},"classes/DoLogoutFailAction.html":{},"classes/DoLogoutSuccessAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"injectables/DossierEffects.html":{},"injectables/DossierSandbox.html":{},"classes/GetTreeDetailAction.html":{},"injectables/LayoutSandbox.html":{},"classes/LoadAction.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"injectables/MenusEffects.html":{},"injectables/PersonsEffects.html":{},"injectables/PersonsSandbox.html":{},"classes/RemoveUserAction.html":{},"classes/ResetState.html":{},"classes/Sandbox.html":{},"injectables/SearchBoxDatasEffects.html":{},"classes/SelectAction.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetAvaiableMenu.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetClosedAction.html":{},"classes/SetCultureAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{},"classes/SetLanguageAction.html":{},"injectables/SettingsEffects.html":{},"interfaces/State.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSelectedAction.html":{},"classes/UpdateSuccessAction.html":{},"dependencies.html":{}}}],["nguyen",{"_index":3166,"title":{},"body":{"index.html":{}}}],["nnummer",{"_index":1832,"title":{},"body":{"interfaces/IPerson.html":{},"classes/Person.html":{}}}],["notat",{"_index":2787,"title":{},"body":{"interfaces/State.html":{}}}],["notfoundendpoint",{"_index":1746,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["notfoundendpoints.filter(endpoint",{"_index":1748,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["notfoundendpoints.length",{"_index":1749,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["notif",{"_index":318,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppSandbox.html":{},"modules/AuthModule.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"injectables/HttpResponseHandler.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{},"injectables/UtilService.html":{},"dependencies.html":{}}}],["notifi",{"_index":3161,"title":{},"body":{"index.html":{}}}],["notificationboxcompon",{"_index":317,"title":{"components/NotificationBoxComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"modules/LayoutContainersModule.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{},"overview.html":{}}}],["notificationservic",{"_index":3015,"title":{},"body":{"injectables/UtilService.html":{}}}],["notificationsservic",{"_index":448,"title":{},"body":{"modules/AppModule.html":{},"injectables/HttpResponseHandler.html":{},"injectables/UtilService.html":{}}}],["notifymessag",{"_index":2481,"title":{},"body":{"injectables/PersonsSandbox.html":{}}}],["notifymessage(messagetranslationcod",{"_index":2491,"title":{},"body":{"injectables/PersonsSandbox.html":{}}}],["npm",{"_index":3131,"title":{},"body":{"index.html":{}}}],["null",{"_index":28,"title":{},"body":{"classes/Account.html":{},"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"classes/AddUserAction.html":{},"injectables/AppApiClient.html":{},"injectables/AuthEffects.html":{},"injectables/AuthSandbox.html":{},"components/ControlWebDavComponent.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteItemSelectedAction.html":{},"classes/DeleteSuccessAction.html":{},"classes/DoLoginAction.html":{},"classes/DoLoginFailAction.html":{},"classes/DoLoginSuccessAction.html":{},"classes/DoLogoutAction.html":{},"classes/DoLogoutFailAction.html":{},"classes/DoLogoutSuccessAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"injectables/DossierApiClient.html":{},"classes/DossierFilterModel.html":{},"classes/DossierNavigatorTreeModel.html":{},"injectables/DossierSandbox.html":{},"classes/GetTreeDetailAction.html":{},"injectables/HttpService.html":{},"interfaces/IDossierFilterModel.html":{},"interfaces/IDossierNavigatorTreeModel.html":{},"interfaces/IMenuModel.html":{},"interfaces/ISidebarMenuModel.html":{},"interfaces/ITemplateModel.html":{},"components/LanguageSelectorComponent.html":{},"classes/LoadAction.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"classes/LoginForm.html":{},"classes/MenuModel.html":{},"injectables/PersonsApiClient.html":{},"injectables/PersonsSandbox.html":{},"injectables/PersonsService.html":{},"classes/RemoveUserAction.html":{},"classes/ResetState.html":{},"classes/SelectAction.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetAvaiableMenu.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetClosedAction.html":{},"classes/SetCultureAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{},"classes/SetLanguageAction.html":{},"classes/SidebarMenuModel.html":{},"classes/TemplateModel.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSelectedAction.html":{},"classes/UpdateSuccessAction.html":{},"classes/User.html":{},"injectables/UtilService.html":{},"injectables/ValidationService.html":{}}}],["number",{"_index":24,"title":{},"body":{"classes/Account.html":{},"interfaces/IMenuModel.html":{},"interfaces/ISidebarMenuModel.html":{},"classes/ITreeNavModel.html":{},"components/LoginComponent.html":{},"classes/MenuModel.html":{},"injectables/PersonsApiClient.html":{},"injectables/PersonsService.html":{},"classes/SidebarMenuModel.html":{},"classes/TreeNavModel.html":{}}}],["numbers/svg",{"_index":2958,"title":{},"body":{"components/TreeListComponent.html":{}}}],["numer",{"_index":3053,"title":{},"body":{"injectables/ValidationService.html":{}}}],["numericrequir",{"_index":3045,"title":{},"body":{"injectables/ValidationService.html":{}}}],["numericrequired(formcontrol",{"_index":3051,"title":{},"body":{"injectables/ValidationService.html":{}}}],["oasyncresult",{"_index":1050,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["oasyncresult.error",{"_index":1055,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["oasyncresult.error.messag",{"_index":1064,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["oasyncresult.error.multistatus.responses.length",{"_index":1070,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["oasyncresult.error.status.cod",{"_index":1065,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["oasyncresult.error.status.descript",{"_index":1066,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["oasyncresult.issuccess",{"_index":1051,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["object",{"_index":477,"title":{},"body":{"modules/AppModule.html":{},"injectables/ConfigService.html":{},"injectables/DossierSandbox.html":{},"injectables/HttpService.html":{},"interfaces/ISidebarMenuModel.html":{},"components/NavFiltersComponent.html":{},"components/PersonFormComponent.html":{},"classes/SidebarMenuModel.html":{},"interfaces/State.html":{},"components/TreeDetailComponent.html":{}}}],["object.assign",{"_index":788,"title":{},"body":{"injectables/AuthSandbox.html":{}}}],["object.keys(respons",{"_index":1757,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["observ",{"_index":172,"title":{},"body":{"injectables/AppApiClient.html":{},"injectables/AppService.html":{},"injectables/AuthApiClient.html":{},"injectables/AuthEffects.html":{},"injectables/AuthGuard.html":{},"directives/AuthorizeDirective.html":{},"injectables/AuthorizeGuard.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"injectables/ConfigService.html":{},"components/DocumentReportViewerComponent.html":{},"injectables/DossierApiClient.html":{},"injectables/DossierEffects.html":{},"injectables/DossierService.html":{},"injectables/HttpResponseHandler.html":{},"injectables/HttpService.html":{},"components/LayoutContainer.html":{},"injectables/MenusEffects.html":{},"injectables/PersonsApiClient.html":{},"injectables/PersonsEffects.html":{},"injectables/PersonsService.html":{},"injectables/ReportService.html":{},"classes/Sandbox.html":{},"injectables/SearchBoxDatasEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/UtilService.html":{}}}],["observable.of(menusmock",{"_index":2171,"title":{},"body":{"injectables/MenusEffects.html":{}}}],["observable.of(new",{"_index":628,"title":{},"body":{"injectables/AuthApiClient.html":{},"injectables/AuthEffects.html":{},"injectables/DossierEffects.html":{},"injectables/MenusEffects.html":{},"injectables/PersonsEffects.html":{},"injectables/SearchBoxDatasEffects.html":{},"injectables/SettingsEffects.html":{}}}],["observable.of(personsmock",{"_index":2374,"title":{},"body":{"injectables/PersonsApiClient.html":{}}}],["observable.of(searchboxsmock",{"_index":2629,"title":{},"body":{"injectables/SearchBoxDatasEffects.html":{}}}],["observable.of(this.getconfigsapi()['right",{"_index":198,"title":{},"body":{"injectables/AppApiClient.html":{}}}],["observable.of(tre",{"_index":1304,"title":{},"body":{"injectables/DossierApiClient.html":{}}}],["observable.throw(error.json().error",{"_index":920,"title":{},"body":{"injectables/ConfigService.html":{}}}],["observable.throw(error.messag",{"_index":2574,"title":{},"body":{"injectables/ReportService.html":{}}}],["observable.throw(respons",{"_index":1727,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["observabler",{"_index":1793,"title":{},"body":{"injectables/HttpService.html":{}}}],["octet/stream",{"_index":1270,"title":{},"body":{"injectables/DocumentsHelper.html":{}}}],["of(new",{"_index":689,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["offer",{"_index":630,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["officedocument.spreadsheetml.sheet",{"_index":1284,"title":{},"body":{"injectables/DocumentsHelper.html":{}}}],["officedocument.wordprocessingml.docu",{"_index":1281,"title":{},"body":{"injectables/DocumentsHelper.html":{}}}],["offici",{"_index":649,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["ofil",{"_index":1042,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["ofile.copytoasync(ofold",{"_index":1049,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["ofileasyncresult",{"_index":1039,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["ofileasyncresult.result",{"_index":1043,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["ofold",{"_index":1047,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["ofolder.getchildrenasync(nul",{"_index":1073,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["ofolderasyncresult",{"_index":1045,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["ofolderasyncresult.result",{"_index":1048,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["oftype(actions.actiontypes.do_login",{"_index":659,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(actions.actiontypes.do_logout",{"_index":684,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(dossieraction.actiontypes.load",{"_index":1320,"title":{},"body":{"injectables/DossierEffects.html":{}}}],["oftype(menusactions.actiontypes.load",{"_index":2170,"title":{},"body":{"injectables/MenusEffects.html":{}}}],["oftype(persondetailsactions.actiontypes.load",{"_index":2411,"title":{},"body":{"injectables/PersonsEffects.html":{}}}],["oftype(personsactions.actiontypes.add_new",{"_index":2404,"title":{},"body":{"injectables/PersonsEffects.html":{}}}],["oftype(personsactions.actiontypes.load",{"_index":2417,"title":{},"body":{"injectables/PersonsEffects.html":{}}}],["oftype(personsactions.actiontypes.upd",{"_index":2429,"title":{},"body":{"injectables/PersonsEffects.html":{}}}],["oftype(searchboxactions.actiontypes.load",{"_index":2627,"title":{},"body":{"injectables/SearchBoxDatasEffects.html":{}}}],["oftype(settingsaction.actiontypes.document_cr",{"_index":2718,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["oftype(settingsaction.actiontypes.load_api_rol",{"_index":2726,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["oitemsasyncresult",{"_index":1074,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["oitemsasyncresult.result",{"_index":1077,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["ok",{"_index":1087,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["on",{"_index":2461,"title":{},"body":{"injectables/PersonsResolver.html":{}}}],["onc",{"_index":474,"title":{},"body":{"modules/AppModule.html":{}}}],["oncatch",{"_index":1682,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["oncatch(respons",{"_index":1712,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["onckbact",{"_index":1500,"title":{},"body":{"injectables/DossierSandbox.html":{}}}],["onckbarchiv",{"_index":1507,"title":{},"body":{"injectables/DossierSandbox.html":{}}}],["onckbclos",{"_index":1505,"title":{},"body":{"injectables/DossierSandbox.html":{}}}],["onckbincludegroup",{"_index":1508,"title":{},"body":{"injectables/DossierSandbox.html":{}}}],["onckbincludeguest",{"_index":1510,"title":{},"body":{"injectables/DossierSandbox.html":{}}}],["onckbincludetask",{"_index":1512,"title":{},"body":{"injectables/DossierSandbox.html":{}}}],["onclick",{"_index":43,"title":{},"body":{"classes/ActionHandler.html":{}}}],["onclickev",{"_index":1181,"title":{},"body":{"components/DocumentGenerationComponent.html":{},"components/ReportViewerComponent.html":{}}}],["onclickitem",{"_index":2660,"title":{},"body":{"components/SelectedActionsComponent.html":{}}}],["onclickitem(",{"_index":2668,"title":{},"body":{"components/SelectedActionsComponent.html":{}}}],["onclickselectact",{"_index":1360,"title":{},"body":{"components/DossierNavigatorComponent.html":{},"components/PersonsComponent.html":{}}}],["onclickselectaction(itemdata",{"_index":1368,"title":{},"body":{"components/DossierNavigatorComponent.html":{},"components/PersonsComponent.html":{}}}],["ondeleteclick",{"_index":2662,"title":{},"body":{"components/SelectedActionsComponent.html":{}}}],["ondeleteitem",{"_index":2661,"title":{},"body":{"components/SelectedActionsComponent.html":{}}}],["ondeleteitem(",{"_index":2670,"title":{},"body":{"components/SelectedActionsComponent.html":{}}}],["ondeleteselectact",{"_index":1361,"title":{},"body":{"components/DossierNavigatorComponent.html":{},"components/PersonsComponent.html":{}}}],["ondeleteselectaction(itemdata",{"_index":1370,"title":{},"body":{"components/DossierNavigatorComponent.html":{},"components/PersonsComponent.html":{}}}],["ondestroy",{"_index":214,"title":{},"body":{"components/AppComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/LayoutContainer.html":{},"components/LoginComponent.html":{}}}],["ondocclick",{"_index":1178,"title":{},"body":{"components/DocumentGenerationComponent.html":{},"components/ReportViewerComponent.html":{}}}],["ondocclick(docu",{"_index":1189,"title":{},"body":{"components/DocumentGenerationComponent.html":{}}}],["ondocclick(report",{"_index":2581,"title":{},"body":{"components/ReportViewerComponent.html":{}}}],["ondocumentclick",{"_index":1876,"title":{},"body":{"components/LanguageSelectorComponent.html":{}}}],["ondocumentclick($ev",{"_index":1891,"title":{},"body":{"components/LanguageSelectorComponent.html":{}}}],["ondocumentclick(ev",{"_index":1884,"title":{},"body":{"components/LanguageSelectorComponent.html":{}}}],["ondocumentcreate(",{"_index":1201,"title":{},"body":{"modules/DocumentGenerationModule.html":{}}}],["onfilterschang",{"_index":1476,"title":{},"body":{"injectables/DossierSandbox.html":{},"components/NavFiltersComponent.html":{}}}],["ongoback",{"_index":2919,"title":{},"body":{"components/ToolbarsComponent.html":{}}}],["oninit",{"_index":215,"title":{},"body":{"components/AppComponent.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"components/LoginComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ReportViewerComponent.html":{},"components/SelectedActionsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{}}}],["onitemclick",{"_index":2663,"title":{},"body":{"components/SelectedActionsComponent.html":{}}}],["onselect",{"_index":2331,"title":{},"body":{"components/PersonListComponent.html":{},"components/TreeListComponent.html":{}}}],["onselect(data",{"_index":2336,"title":{},"body":{"components/PersonListComponent.html":{}}}],["onselect(treemodel",{"_index":2955,"title":{},"body":{"components/TreeListComponent.html":{}}}],["onsubmit",{"_index":2076,"title":{},"body":{"components/LoginComponent.html":{}}}],["onsubmit(ev",{"_index":2087,"title":{},"body":{"components/LoginComponent.html":{}}}],["ontoggl",{"_index":1877,"title":{},"body":{"components/LanguageSelectorComponent.html":{}}}],["ontogglenav",{"_index":1609,"title":{},"body":{"components/HeaderComponent.html":{}}}],["ontogglenav(istogglenav",{"_index":1633,"title":{},"body":{"components/HeaderComponent.html":{}}}],["onvaluedact",{"_index":2184,"title":{},"body":{"components/NavFiltersComponent.html":{}}}],["onvaluedarchiv",{"_index":2185,"title":{},"body":{"components/NavFiltersComponent.html":{}}}],["onvaluedclos",{"_index":2186,"title":{},"body":{"components/NavFiltersComponent.html":{}}}],["onvaluedincludegroup",{"_index":2187,"title":{},"body":{"components/NavFiltersComponent.html":{}}}],["onvaluedincludeguest",{"_index":2188,"title":{},"body":{"components/NavFiltersComponent.html":{}}}],["onvaluedincludetask",{"_index":2189,"title":{},"body":{"components/NavFiltersComponent.html":{}}}],["openfil",{"_index":946,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["oper",{"_index":643,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["option",{"_index":21,"title":{},"body":{"classes/Account.html":{},"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"classes/AddUserAction.html":{},"injectables/AppApiClient.html":{},"components/AppComponent.html":{},"injectables/AppSandbox.html":{},"injectables/AppService.html":{},"injectables/AuthApiClient.html":{},"injectables/AuthEffects.html":{},"injectables/AuthGuard.html":{},"injectables/AuthSandbox.html":{},"directives/AuthorizeDirective.html":{},"injectables/AuthorizeGuard.html":{},"classes/BaseComponent.html":{},"injectables/CanDeactivateGuard.html":{},"classes/ClassRightModel.html":{},"injectables/ConfigService.html":{},"components/ControlWebDavComponent.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteItemSelectedAction.html":{},"classes/DeleteSuccessAction.html":{},"classes/DoLoginAction.html":{},"classes/DoLoginFailAction.html":{},"classes/DoLoginSuccessAction.html":{},"classes/DoLogoutAction.html":{},"classes/DoLogoutFailAction.html":{},"classes/DoLogoutSuccessAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"injectables/DocumentsHelper.html":{},"injectables/DossierApiClient.html":{},"injectables/DossierEffects.html":{},"classes/DossierFilterModel.html":{},"components/DossierNavigatorComponent.html":{},"classes/DossierNavigatorTreeModel.html":{},"injectables/DossierSandbox.html":{},"injectables/DossierService.html":{},"directives/DynamicTabsDirective.html":{},"classes/GetTreeDetailAction.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"classes/HttpAdapter.html":{},"injectables/HttpResponseHandler.html":{},"injectables/HttpService.html":{},"interfaces/IDossierFilterModel.html":{},"interfaces/IDossierNavigatorTreeModel.html":{},"interfaces/IMenuModel.html":{},"interfaces/IPerson.html":{},"interfaces/ISearchBoxModel.html":{},"interfaces/ISidebarMenuModel.html":{},"interfaces/LanguageModel.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"injectables/LayoutSandbox.html":{},"components/LeftSidebarComponent.html":{},"classes/LoadAction.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"components/LoginComponent.html":{},"classes/LoginForm.html":{},"classes/MenuModel.html":{},"injectables/MenusEffects.html":{},"components/PageBadGatewayComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Person.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"injectables/PersonsApiClient.html":{},"components/PersonsComponent.html":{},"injectables/PersonsEffects.html":{},"injectables/PersonsResolver.html":{},"injectables/PersonsSandbox.html":{},"injectables/PersonsService.html":{},"classes/RemoveUserAction.html":{},"injectables/ReportService.html":{},"components/ReportViewerComponent.html":{},"classes/ResetState.html":{},"classes/Sandbox.html":{},"pipes/SanitizeHtmlPipe.html":{},"injectables/SearchBoxDatasEffects.html":{},"classes/SearchBoxModel.html":{},"classes/SelectAction.html":{},"components/SelectedActionsComponent.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetAvaiableMenu.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetClosedAction.html":{},"classes/SetCultureAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{},"classes/SetLanguageAction.html":{},"injectables/SettingsEffects.html":{},"classes/SidebarMenuModel.html":{},"classes/TemplateModel.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{},"classes/TreeNavModel.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSelectedAction.html":{},"classes/UpdateSuccessAction.html":{},"classes/User.html":{},"injectables/UtilService.html":{},"injectables/ValidationService.html":{},"index.html":{},"interfaces/role.html":{}}}],["options.data.nam",{"_index":2963,"title":{},"body":{"components/TreeListComponent.html":{}}}],["order",{"_index":264,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthSandbox.html":{},"injectables/DossierSandbox.html":{},"injectables/HttpResponseHandler.html":{}}}],["orgunitid",{"_index":1447,"title":{},"body":{"classes/DossierNavigatorTreeModel.html":{},"interfaces/IDossierNavigatorTreeModel.html":{}}}],["out",{"_index":380,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthApiClient.html":{},"injectables/AuthEffects.html":{},"modules/AuthModule.html":{},"modules/ComponentsModule.html":{},"modules/ControlWebDavModule.html":{},"modules/DocumentGenerationModule.html":{},"modules/DocumentReportViewerModule.html":{},"modules/DossierNavigatorModule.html":{},"modules/ExceptionsModule.html":{},"modules/LayoutContainersModule.html":{},"modules/PersonsModule.html":{},"modules/PipesModule.html":{},"overview.html":{}}}],["output",{"_index":1180,"title":{},"body":{"components/DocumentGenerationComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LeftSidebarComponent.html":{},"components/NavFiltersComponent.html":{},"components/PersonFormComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/ToolbarsComponent.html":{}}}],["overal",{"_index":2827,"title":{},"body":{"interfaces/State.html":{}}}],["overview",{"_index":3185,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrit",{"_index":1061,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["packag",{"_index":2788,"title":{"dependencies.html":{}},"body":{"interfaces/State.html":{}}}],["page",{"_index":92,"title":{},"body":{"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteSuccessAction.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"injectables/HttpResponseHandler.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSuccessAction.html":{},"index.html":{}}}],["page.content.component.html",{"_index":2235,"title":{},"body":{"components/PageContentComponent.html":{}}}],["pagebadgateway.component.html",{"_index":2218,"title":{},"body":{"components/PageBadGatewayComponent.html":{}}}],["pagebadgateway.component.scss",{"_index":2217,"title":{},"body":{"components/PageBadGatewayComponent.html":{}}}],["pagebadgateway/pagebadgateway.compon",{"_index":1561,"title":{},"body":{"modules/ExceptionsModule.html":{},"modules/ExceptionsRoutingModule.html":{}}}],["pagebadgatewaycompon",{"_index":320,"title":{"components/PageBadGatewayComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"modules/ExceptionsModule.html":{},"modules/ExceptionsRoutingModule.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{},"overview.html":{}}}],["pagecontentcompon",{"_index":323,"title":{"components/PageContentComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"modules/LayoutContainersModule.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{},"overview.html":{}}}],["pagegateway.button",{"_index":2232,"title":{},"body":{"components/PageBadGatewayComponent.html":{}}}],["pagegateway.subtitl",{"_index":2231,"title":{},"body":{"components/PageBadGatewayComponent.html":{}}}],["pagegateway.titl",{"_index":2230,"title":{},"body":{"components/PageBadGatewayComponent.html":{}}}],["pagenotfound.button",{"_index":2245,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["pagenotfound.component.html",{"_index":2240,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["pagenotfound.component.scss",{"_index":2239,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["pagenotfound.subtitl",{"_index":2244,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["pagenotfound.titl",{"_index":2243,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["pagenotfound/pagenotfound.compon",{"_index":1562,"title":{},"body":{"modules/ExceptionsModule.html":{},"modules/ExceptionsRoutingModule.html":{}}}],["pagenotfoundcompon",{"_index":325,"title":{"components/PageNotFoundComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"modules/ExceptionsModule.html":{},"modules/ExceptionsRoutingModule.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{},"overview.html":{}}}],["param",{"_index":597,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthApiClient.html":{},"injectables/AuthSandbox.html":{},"injectables/ConfigService.html":{},"injectables/DossierService.html":{},"classes/GetTreeDetailAction.html":{},"injectables/HttpResponseHandler.html":{},"injectables/HttpService.html":{},"injectables/LayoutSandbox.html":{},"classes/LoadAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"components/LoginComponent.html":{},"injectables/PersonsApiClient.html":{},"injectables/PersonsResolver.html":{},"injectables/PersonsService.html":{},"classes/ResetState.html":{},"classes/Sandbox.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetClosedAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{},"classes/User.html":{},"injectables/UtilService.html":{},"injectables/ValidationService.html":{}}}],["parambuild",{"_index":614,"title":{},"body":{"injectables/AuthApiClient.html":{},"injectables/HttpService.html":{}}}],["paramet",{"_index":17,"title":{},"body":{"classes/Account.html":{},"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"classes/AddUserAction.html":{},"injectables/AppApiClient.html":{},"components/AppComponent.html":{},"injectables/AppSandbox.html":{},"injectables/AppService.html":{},"injectables/AuthApiClient.html":{},"injectables/AuthEffects.html":{},"injectables/AuthGuard.html":{},"injectables/AuthSandbox.html":{},"directives/AuthorizeDirective.html":{},"injectables/AuthorizeGuard.html":{},"classes/BaseComponent.html":{},"injectables/CanDeactivateGuard.html":{},"classes/ClassRightModel.html":{},"injectables/ConfigService.html":{},"components/ControlWebDavComponent.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteItemSelectedAction.html":{},"classes/DeleteSuccessAction.html":{},"classes/DoLoginAction.html":{},"classes/DoLoginFailAction.html":{},"classes/DoLoginSuccessAction.html":{},"classes/DoLogoutAction.html":{},"classes/DoLogoutFailAction.html":{},"classes/DoLogoutSuccessAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"injectables/DocumentsHelper.html":{},"injectables/DossierApiClient.html":{},"injectables/DossierEffects.html":{},"classes/DossierFilterModel.html":{},"components/DossierNavigatorComponent.html":{},"classes/DossierNavigatorTreeModel.html":{},"injectables/DossierSandbox.html":{},"injectables/DossierService.html":{},"directives/DynamicTabsDirective.html":{},"classes/GetTreeDetailAction.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"classes/HttpAdapter.html":{},"injectables/HttpResponseHandler.html":{},"injectables/HttpService.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"injectables/LayoutSandbox.html":{},"components/LeftSidebarComponent.html":{},"classes/LoadAction.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"components/LoginComponent.html":{},"classes/LoginForm.html":{},"classes/MenuModel.html":{},"injectables/MenusEffects.html":{},"components/PageBadGatewayComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Person.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"injectables/PersonsApiClient.html":{},"components/PersonsComponent.html":{},"injectables/PersonsEffects.html":{},"injectables/PersonsResolver.html":{},"injectables/PersonsSandbox.html":{},"injectables/PersonsService.html":{},"classes/RemoveUserAction.html":{},"injectables/ReportService.html":{},"components/ReportViewerComponent.html":{},"classes/ResetState.html":{},"classes/Sandbox.html":{},"pipes/SanitizeHtmlPipe.html":{},"injectables/SearchBoxDatasEffects.html":{},"classes/SearchBoxModel.html":{},"classes/SelectAction.html":{},"components/SelectedActionsComponent.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetAvaiableMenu.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetClosedAction.html":{},"classes/SetCultureAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{},"classes/SetLanguageAction.html":{},"injectables/SettingsEffects.html":{},"classes/SidebarMenuModel.html":{},"classes/TemplateModel.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{},"classes/TreeNavModel.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSelectedAction.html":{},"classes/UpdateSuccessAction.html":{},"classes/User.html":{},"injectables/UtilService.html":{},"injectables/ValidationService.html":{}}}],["parentid",{"_index":1448,"title":{},"body":{"classes/DossierNavigatorTreeModel.html":{},"interfaces/IDossierNavigatorTreeModel.html":{},"interfaces/ISidebarMenuModel.html":{},"classes/SidebarMenuModel.html":{}}}],["parram",{"_index":1389,"title":{},"body":{"components/DossierNavigatorComponent.html":{}}}],["parrams.hasownproperty('act",{"_index":1395,"title":{},"body":{"components/DossierNavigatorComponent.html":{}}}],["parrams.hasownproperty('archiv",{"_index":1401,"title":{},"body":{"components/DossierNavigatorComponent.html":{}}}],["parrams.hasownproperty('clos",{"_index":1398,"title":{},"body":{"components/DossierNavigatorComponent.html":{}}}],["parrams.hasownproperty('includegroup",{"_index":1404,"title":{},"body":{"components/DossierNavigatorComponent.html":{}}}],["parrams.hasownproperty('includeguest",{"_index":1407,"title":{},"body":{"components/DossierNavigatorComponent.html":{}}}],["parrams.hasownproperty('includetask",{"_index":1410,"title":{},"body":{"components/DossierNavigatorComponent.html":{}}}],["parrams['act",{"_index":1396,"title":{},"body":{"components/DossierNavigatorComponent.html":{}}}],["parrams['archiv",{"_index":1402,"title":{},"body":{"components/DossierNavigatorComponent.html":{}}}],["parrams['clos",{"_index":1399,"title":{},"body":{"components/DossierNavigatorComponent.html":{}}}],["parrams['includegroup",{"_index":1405,"title":{},"body":{"components/DossierNavigatorComponent.html":{}}}],["parrams['includeguest",{"_index":1408,"title":{},"body":{"components/DossierNavigatorComponent.html":{}}}],["parrams['includetask",{"_index":1411,"title":{},"body":{"components/DossierNavigatorComponent.html":{}}}],["parrams['userid",{"_index":1392,"title":{},"body":{"components/DossierNavigatorComponent.html":{}}}],["parrent",{"_index":3176,"title":{},"body":{"index.html":{}}}],["pars",{"_index":1701,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["parsehttprespons",{"_index":611,"title":{},"body":{"injectables/AuthApiClient.html":{}}}],["parti",{"_index":434,"title":{},"body":{"modules/AppModule.html":{}}}],["pass",{"_index":479,"title":{},"body":{"modules/AppModule.html":{}}}],["password",{"_index":11,"title":{},"body":{"classes/Account.html":{},"components/LoginComponent.html":{},"classes/LoginForm.html":{}}}],["past",{"_index":487,"title":{},"body":{"modules/AppModule.html":{}}}],["path",{"_index":183,"title":{},"body":{"injectables/AppApiClient.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthApiClient.html":{},"modules/AuthRoutingModule.html":{},"injectables/DossierApiClient.html":{},"modules/DossierRoutingModule.html":{},"modules/ExceptionsRoutingModule.html":{},"injectables/HttpResponseHandler.html":{},"components/LeftSidebarComponent.html":{},"injectables/PersonsApiClient.html":{},"modules/PersonsRoutingModule.html":{}}}],["path.find(item",{"_index":2054,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["pathdoc",{"_index":937,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["pathmatch",{"_index":524,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathplugin",{"_index":938,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["pathtemp",{"_index":939,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["pathus",{"_index":940,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["pattern",{"_index":3130,"title":{},"body":{"index.html":{}}}],["payload",{"_index":60,"title":{},"body":{"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"classes/AddUserAction.html":{},"injectables/AppSandbox.html":{},"injectables/AuthEffects.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteItemSelectedAction.html":{},"classes/DeleteSuccessAction.html":{},"classes/DoLoginAction.html":{},"classes/DoLoginFailAction.html":{},"classes/DoLoginSuccessAction.html":{},"classes/DoLogoutAction.html":{},"classes/DoLogoutFailAction.html":{},"classes/DoLogoutSuccessAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"classes/GetTreeDetailAction.html":{},"classes/LoadAction.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"classes/RemoveUserAction.html":{},"classes/ResetState.html":{},"classes/SelectAction.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetAvaiableMenu.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetClosedAction.html":{},"classes/SetCultureAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{},"classes/SetLanguageAction.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSelectedAction.html":{},"classes/UpdateSuccessAction.html":{}}}],["pdf",{"_index":1286,"title":{},"body":{"injectables/DocumentsHelper.html":{},"miscellaneous/enumerations.html":{}}}],["permiss",{"_index":819,"title":{},"body":{"classes/BaseComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/LoginComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{}}}],["person",{"_index":69,"title":{"classes/Person.html":{}},"body":{"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteSuccessAction.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"interfaces/IPerson.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Person.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"injectables/PersonsApiClient.html":{},"components/PersonsComponent.html":{},"injectables/PersonsEffects.html":{},"modules/PersonsModule.html":{},"injectables/PersonsResolver.html":{},"modules/PersonsRoutingModule.html":{},"injectables/PersonsSandbox.html":{},"injectables/PersonsService.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"interfaces/State.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSuccessAction.html":{},"index.html":{}}}],["person'},{'nam",{"_index":332,"title":{},"body":{"components/AppComponent.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{}}}],["person(person",{"_index":2518,"title":{},"body":{"injectables/PersonsSandbox.html":{},"injectables/PersonsService.html":{}}}],["person(person))[0",{"_index":2544,"title":{},"body":{"injectables/PersonsService.html":{}}}],["person.component.html",{"_index":2389,"title":{},"body":{"components/PersonsComponent.html":{}}}],["person.component.scss",{"_index":2388,"title":{},"body":{"components/PersonsComponent.html":{}}}],["person.id",{"_index":2520,"title":{},"body":{"injectables/PersonsSandbox.html":{}}}],["person.map(person",{"_index":2543,"title":{},"body":{"injectables/PersonsService.html":{}}}],["person.nam",{"_index":2320,"title":{},"body":{"components/PersonFormComponent.html":{},"injectables/PersonsSandbox.html":{}}}],["person/person.compon",{"_index":2451,"title":{},"body":{"modules/PersonsModule.html":{},"modules/PersonsRoutingModule.html":{}}}],["personad",{"_index":2473,"title":{},"body":{"injectables/PersonsSandbox.html":{}}}],["personcount",{"_index":1449,"title":{},"body":{"classes/DossierNavigatorTreeModel.html":{},"interfaces/IDossierNavigatorTreeModel.html":{}}}],["persondetail",{"_index":2474,"title":{},"body":{"injectables/PersonsSandbox.html":{},"interfaces/State.html":{}}}],["persondetailsact",{"_index":2425,"title":{},"body":{"injectables/PersonsEffects.html":{},"injectables/PersonsSandbox.html":{}}}],["persondetailsactions.loadact",{"_index":2412,"title":{},"body":{"injectables/PersonsEffects.html":{}}}],["persondetailsactions.loadaction(id",{"_index":2516,"title":{},"body":{"injectables/PersonsSandbox.html":{}}}],["persondetailsactions.loadfailact",{"_index":2415,"title":{},"body":{"injectables/PersonsEffects.html":{}}}],["persondetailsactions.loadsuccessaction(person",{"_index":2414,"title":{},"body":{"injectables/PersonsEffects.html":{},"injectables/PersonsSandbox.html":{}}}],["persondetailsactions.resetst",{"_index":2524,"title":{},"body":{"injectables/PersonsSandbox.html":{}}}],["persondetailsadapt",{"_index":2529,"title":{},"body":{"injectables/PersonsService.html":{}}}],["persondetailsadapter(person",{"_index":2537,"title":{},"body":{"injectables/PersonsService.html":{}}}],["persondetailsload",{"_index":2475,"title":{},"body":{"injectables/PersonsSandbox.html":{}}}],["personform",{"_index":2261,"title":{},"body":{"components/PersonFormComponent.html":{}}}],["personformcompon",{"_index":327,"title":{"components/PersonFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"modules/PersonsModule.html":{},"modules/PersonsRoutingModule.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{},"overview.html":{}}}],["personlistcompon",{"_index":329,"title":{"components/PersonListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"modules/PersonsModule.html":{},"modules/PersonsRoutingModule.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{},"overview.html":{}}}],["persons.resolv",{"_index":2449,"title":{},"body":{"modules/PersonsModule.html":{},"modules/PersonsRoutingModule.html":{}}}],["persons.sandbox",{"_index":2294,"title":{},"body":{"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"modules/PersonsModule.html":{},"injectables/PersonsResolver.html":{},"injectables/PersonsService.html":{}}}],["persons.servic",{"_index":2370,"title":{},"body":{"injectables/PersonsApiClient.html":{},"modules/PersonsModule.html":{}}}],["persons/detail/${person.id",{"_index":2521,"title":{},"body":{"injectables/PersonsSandbox.html":{}}}],["persons/persons.module#personsmodul",{"_index":530,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["persons/personsapiclient.servic",{"_index":431,"title":{},"body":{"modules/AppModule.html":{},"injectables/PersonsEffects.html":{}}}],["personsact",{"_index":2423,"title":{},"body":{"injectables/PersonsEffects.html":{},"injectables/PersonsSandbox.html":{}}}],["personsactions.actiontypes.upd",{"_index":2430,"title":{},"body":{"injectables/PersonsEffects.html":{}}}],["personsactions.addfailaction(error",{"_index":2409,"title":{},"body":{"injectables/PersonsEffects.html":{}}}],["personsactions.addnewact",{"_index":2405,"title":{},"body":{"injectables/PersonsEffects.html":{}}}],["personsactions.addnewaction(new",{"_index":2517,"title":{},"body":{"injectables/PersonsSandbox.html":{}}}],["personsactions.addsuccessaction(person",{"_index":2408,"title":{},"body":{"injectables/PersonsEffects.html":{}}}],["personsactions.loadact",{"_index":2418,"title":{},"body":{"injectables/PersonsEffects.html":{},"injectables/PersonsSandbox.html":{}}}],["personsactions.loadfailact",{"_index":2421,"title":{},"body":{"injectables/PersonsEffects.html":{}}}],["personsactions.loadsuccessaction(person",{"_index":2420,"title":{},"body":{"injectables/PersonsEffects.html":{}}}],["personsactions.updateact",{"_index":2431,"title":{},"body":{"injectables/PersonsEffects.html":{}}}],["personsactions.updatefailaction(error",{"_index":2434,"title":{},"body":{"injectables/PersonsEffects.html":{}}}],["personsactions.updatesuccessaction(person",{"_index":2433,"title":{},"body":{"injectables/PersonsEffects.html":{}}}],["personsapicli",{"_index":377,"title":{"injectables/PersonsApiClient.html":{}},"body":{"modules/AppModule.html":{},"injectables/PersonsApiClient.html":{},"injectables/PersonsEffects.html":{},"modules/PersonsModule.html":{},"injectables/PersonsSandbox.html":{},"overview.html":{}}}],["personsapiclient.servic",{"_index":2448,"title":{},"body":{"modules/PersonsModule.html":{},"injectables/PersonsSandbox.html":{}}}],["personscompon",{"_index":331,"title":{"components/PersonsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"modules/PersonsModule.html":{},"modules/PersonsRoutingModule.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{},"overview.html":{}}}],["personsdata",{"_index":2328,"title":{},"body":{"components/PersonListComponent.html":{}}}],["personseffect",{"_index":411,"title":{"injectables/PersonsEffects.html":{}},"body":{"modules/AppModule.html":{},"injectables/PersonsEffects.html":{}}}],["personsload",{"_index":2476,"title":{},"body":{"injectables/PersonsSandbox.html":{}}}],["personsmock",{"_index":2367,"title":{},"body":{"injectables/PersonsApiClient.html":{}}}],["personsmodul",{"_index":2435,"title":{"modules/PersonsModule.html":{}},"body":{"modules/PersonsModule.html":{},"modules.html":{},"overview.html":{}}}],["personsresolv",{"_index":2441,"title":{"injectables/PersonsResolver.html":{}},"body":{"modules/PersonsModule.html":{},"injectables/PersonsResolver.html":{},"modules/PersonsRoutingModule.html":{},"overview.html":{}}}],["personsrout",{"_index":2466,"title":{},"body":{"modules/PersonsRoutingModule.html":{}}}],["personsroutingmodul",{"_index":2440,"title":{"modules/PersonsRoutingModule.html":{}},"body":{"modules/PersonsModule.html":{},"modules/PersonsRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["personssandbox",{"_index":2262,"title":{"injectables/PersonsSandbox.html":{}},"body":{"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"modules/PersonsModule.html":{},"injectables/PersonsResolver.html":{},"injectables/PersonsSandbox.html":{},"injectables/PersonsService.html":{},"overview.html":{}}}],["personsservic",{"_index":2369,"title":{"injectables/PersonsService.html":{}},"body":{"injectables/PersonsApiClient.html":{},"modules/PersonsModule.html":{},"injectables/PersonsService.html":{},"overview.html":{}}}],["personssubscript",{"_index":2453,"title":{},"body":{"injectables/PersonsResolver.html":{},"injectables/PersonsService.html":{}}}],["pick",{"_index":2286,"title":{},"body":{"components/PersonFormComponent.html":{},"injectables/PersonsSandbox.html":{}}}],["pipe",{"_index":883,"title":{"pipes/SanitizeHtmlPipe.html":{}},"body":{"modules/ComponentsModule.html":{},"modules/PipesModule.html":{},"pipes/SanitizeHtmlPipe.html":{},"overview.html":{}}}],["pipesmodul",{"_index":882,"title":{"modules/PipesModule.html":{}},"body":{"modules/ComponentsModule.html":{},"modules/PipesModule.html":{},"modules.html":{},"overview.html":{}}}],["pipetransform",{"_index":2617,"title":{},"body":{"pipes/SanitizeHtmlPipe.html":{}}}],["pleas",{"_index":646,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["plu",{"_index":2786,"title":{},"body":{"interfaces/State.html":{}}}],["popov",{"_index":3106,"title":{},"body":{"dependencies.html":{}}}],["post",{"_index":182,"title":{},"body":{"injectables/AppApiClient.html":{},"injectables/AuthApiClient.html":{},"injectables/PersonsApiClient.html":{},"injectables/PersonsService.html":{}}}],["post(\"auth/logout",{"_index":626,"title":{},"body":{"injectables/AuthApiClient.html":{}}}],["post('api/documents/create?templateid={templateid",{"_index":206,"title":{},"body":{"injectables/AppApiClient.html":{}}}],["post('api/personen",{"_index":2381,"title":{},"body":{"injectables/PersonsApiClient.html":{}}}],["post('connect/token",{"_index":623,"title":{},"body":{"injectables/AuthApiClient.html":{}}}],["postadapt",{"_index":168,"title":{},"body":{"injectables/AppApiClient.html":{},"injectables/PersonsApiClient.html":{}}}],["postdocumentcr",{"_index":538,"title":{},"body":{"injectables/AppSandbox.html":{}}}],["postdocumentcreate(payload",{"_index":546,"title":{},"body":{"injectables/AppSandbox.html":{}}}],["power",{"_index":491,"title":{},"body":{"modules/AppModule.html":{}}}],["predic",{"_index":3204,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["privat",{"_index":224,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppSandbox.html":{},"injectables/AuthEffects.html":{},"injectables/AuthSandbox.html":{},"directives/AuthorizeDirective.html":{},"injectables/AuthorizeGuard.html":{},"classes/BaseComponent.html":{},"injectables/ConfigService.html":{},"components/ControlWebDavComponent.html":{},"injectables/DocumentsHelper.html":{},"injectables/DossierEffects.html":{},"components/DossierNavigatorComponent.html":{},"injectables/DossierSandbox.html":{},"injectables/DossierService.html":{},"components/HeaderComponent.html":{},"injectables/HttpResponseHandler.html":{},"components/LayoutContainer.html":{},"injectables/LayoutSandbox.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"injectables/MenusEffects.html":{},"components/PageBadGatewayComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"injectables/PersonsEffects.html":{},"injectables/PersonsResolver.html":{},"injectables/PersonsSandbox.html":{},"injectables/PersonsService.html":{},"injectables/ReportService.html":{},"injectables/SearchBoxDatasEffects.html":{},"injectables/SettingsEffects.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{},"injectables/UtilService.html":{}}}],["produc",{"_index":1801,"title":{},"body":{"injectables/HttpService.html":{},"miscellaneous/enumerations.html":{}}}],["product",{"_index":905,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/PersonsEffects.html":{},"injectables/PersonsService.html":{}}}],["profil",{"_index":334,"title":{},"body":{"components/AppComponent.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{}}}],["profileactionbar.logout",{"_index":2559,"title":{},"body":{"components/ProfileBarComponent.html":{}}}],["profilebarcompon",{"_index":333,"title":{"components/ProfileBarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"modules/LayoutContainersModule.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{},"overview.html":{}}}],["promis",{"_index":854,"title":{},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{}}}],["promise((resolv",{"_index":907,"title":{},"body":{"injectables/ConfigService.html":{}}}],["properti",{"_index":7,"title":{},"body":{"classes/Account.html":{},"classes/ActionHandler.html":{},"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"classes/AddUserAction.html":{},"components/AppComponent.html":{},"injectables/AppSandbox.html":{},"injectables/AuthEffects.html":{},"injectables/AuthSandbox.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"classes/ClassRightModel.html":{},"injectables/ConfigService.html":{},"components/ControlWebDavComponent.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteItemSelectedAction.html":{},"classes/DeleteSuccessAction.html":{},"classes/DoLoginAction.html":{},"classes/DoLoginFailAction.html":{},"classes/DoLoginSuccessAction.html":{},"classes/DoLogoutAction.html":{},"classes/DoLogoutFailAction.html":{},"classes/DoLogoutSuccessAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"components/DocumentReportViewerComponent.html":{},"injectables/DossierEffects.html":{},"classes/DossierFilterModel.html":{},"components/DossierNavigatorComponent.html":{},"classes/DossierNavigatorTreeModel.html":{},"injectables/DossierSandbox.html":{},"injectables/DossierService.html":{},"directives/DynamicTabsDirective.html":{},"classes/GetTreeDetailAction.html":{},"components/HeaderComponent.html":{},"interfaces/IDossierFilterModel.html":{},"interfaces/IDossierNavigatorTreeModel.html":{},"interfaces/IMenuModel.html":{},"interfaces/IPerson.html":{},"interfaces/ISearchBoxModel.html":{},"interfaces/ISidebarMenuModel.html":{},"interfaces/ITemplateModel.html":{},"classes/ITreeNavModel.html":{},"interfaces/LanguageModel.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"injectables/LayoutSandbox.html":{},"components/LeftSidebarComponent.html":{},"classes/LoadAction.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"components/LoginComponent.html":{},"classes/LoginForm.html":{},"classes/MenuModel.html":{},"injectables/MenusEffects.html":{},"components/NavFiltersComponent.html":{},"components/PageBadGatewayComponent.html":{},"classes/Person.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"injectables/PersonsEffects.html":{},"injectables/PersonsResolver.html":{},"injectables/PersonsSandbox.html":{},"injectables/PersonsService.html":{},"classes/RemoveUserAction.html":{},"injectables/ReportService.html":{},"classes/ResetState.html":{},"classes/Sandbox.html":{},"injectables/SearchBoxDatasEffects.html":{},"classes/SearchBoxModel.html":{},"classes/SelectAction.html":{},"components/SelectedActionsComponent.html":{},"classes/SelectedActionsModel.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetAvaiableMenu.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetClosedAction.html":{},"classes/SetCultureAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{},"classes/SetLanguageAction.html":{},"injectables/SettingsEffects.html":{},"classes/SidebarMenuModel.html":{},"interfaces/State.html":{},"classes/TemplateModel.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{},"classes/TreeNavModel.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSelectedAction.html":{},"classes/UpdateSuccessAction.html":{},"classes/User.html":{},"interfaces/role.html":{}}}],["protect",{"_index":555,"title":{},"body":{"injectables/AppSandbox.html":{},"injectables/AuthSandbox.html":{},"classes/BaseComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DossierNavigatorComponent.html":{},"injectables/DossierSandbox.html":{},"injectables/HttpService.html":{},"injectables/LayoutSandbox.html":{},"components/LoginComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"injectables/PersonsSandbox.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{}}}],["protocol",{"_index":1086,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["protocolinstallcallback",{"_index":947,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["protocolinstallcallback(messag",{"_index":969,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["provid",{"_index":218,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ComponentsModule.html":{},"modules/ControlWebDavModule.html":{},"modules/DocumentGenerationModule.html":{},"modules/DocumentReportViewerModule.html":{},"modules/DossierNavigatorModule.html":{},"modules/ExceptionsModule.html":{},"modules/HttpServiceModule.html":{},"modules/LayoutContainersModule.html":{},"modules/PersonsModule.html":{},"modules/PipesModule.html":{},"modules/UtilityModule.html":{},"overview.html":{}}}],["public",{"_index":8,"title":{},"body":{"classes/Account.html":{},"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"classes/AddUserAction.html":{},"injectables/AppApiClient.html":{},"components/AppComponent.html":{},"injectables/AppSandbox.html":{},"injectables/AuthApiClient.html":{},"injectables/AuthSandbox.html":{},"classes/BaseComponent.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteItemSelectedAction.html":{},"classes/DeleteSuccessAction.html":{},"classes/DoLoginAction.html":{},"classes/DoLoginFailAction.html":{},"classes/DoLoginSuccessAction.html":{},"classes/DoLogoutAction.html":{},"classes/DoLogoutFailAction.html":{},"classes/DoLogoutSuccessAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"injectables/DossierApiClient.html":{},"components/DossierNavigatorComponent.html":{},"injectables/DossierSandbox.html":{},"directives/DynamicTabsDirective.html":{},"classes/GetTreeDetailAction.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"injectables/HttpResponseHandler.html":{},"injectables/HttpService.html":{},"interfaces/IPerson.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"injectables/LayoutSandbox.html":{},"classes/LoadAction.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"components/LoginComponent.html":{},"classes/LoginForm.html":{},"components/PageBadGatewayComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Person.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"injectables/PersonsApiClient.html":{},"components/PersonsComponent.html":{},"injectables/PersonsResolver.html":{},"injectables/PersonsSandbox.html":{},"classes/RemoveUserAction.html":{},"classes/ResetState.html":{},"classes/Sandbox.html":{},"classes/SelectAction.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetAvaiableMenu.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetClosedAction.html":{},"classes/SetCultureAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{},"classes/SetLanguageAction.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSelectedAction.html":{},"classes/UpdateSuccessAction.html":{},"classes/User.html":{},"injectables/UtilService.html":{},"injectables/ValidationService.html":{}}}],["pull",{"_index":2605,"title":{},"body":{"classes/Sandbox.html":{}}}],["put",{"_index":2368,"title":{},"body":{"injectables/PersonsApiClient.html":{},"injectables/PersonsSandbox.html":{}}}],["put('api/personen/{id",{"_index":2378,"title":{},"body":{"injectables/PersonsApiClient.html":{}}}],["putadapt",{"_index":2365,"title":{},"body":{"injectables/PersonsApiClient.html":{}}}],["quantiti",{"_index":3032,"title":{},"body":{"injectables/UtilService.html":{}}}],["queri",{"_index":609,"title":{},"body":{"injectables/AuthApiClient.html":{},"injectables/DossierApiClient.html":{},"injectables/DossierEffects.html":{}}}],["querylist",{"_index":178,"title":{},"body":{"injectables/AppApiClient.html":{},"injectables/DossierApiClient.html":{}}}],["querynam",{"_index":2576,"title":{},"body":{"components/ReportViewerComponent.html":{}}}],["queryparam",{"_index":1845,"title":{},"body":{"interfaces/ISidebarMenuModel.html":{},"classes/SidebarMenuModel.html":{}}}],["re",{"_index":1664,"title":{},"body":{"classes/HttpAdapter.html":{},"injectables/HttpService.html":{}}}],["reactiveformsmodul",{"_index":727,"title":{},"body":{"modules/AuthModule.html":{},"modules/ComponentsModule.html":{},"modules/DossierNavigatorModule.html":{},"modules/PersonsModule.html":{}}}],["read",{"_index":902,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/HttpResponseHandler.html":{},"components/LayoutContainer.html":{}}}],["reason",{"_index":457,"title":{},"body":{"modules/AppModule.html":{},"injectables/UtilService.html":{}}}],["recalcul",{"_index":489,"title":{},"body":{"modules/AppModule.html":{}}}],["receiv",{"_index":3159,"title":{},"body":{"index.html":{}}}],["reciev",{"_index":589,"title":{},"body":{"injectables/AppService.html":{},"injectables/DossierService.html":{},"injectables/PersonsService.html":{}}}],["record",{"_index":3165,"title":{},"body":{"index.html":{}}}],["redirect",{"_index":1711,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["redirectto",{"_index":523,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reduc",{"_index":476,"title":{},"body":{"modules/AppModule.html":{},"interfaces/State.html":{}}}],["reducers/auth.reduc",{"_index":2792,"title":{},"body":{"interfaces/State.html":{}}}],["reducers/dossier.reduc",{"_index":2804,"title":{},"body":{"interfaces/State.html":{}}}],["reducers/menus.reduc",{"_index":2799,"title":{},"body":{"interfaces/State.html":{}}}],["reducers/person",{"_index":2796,"title":{},"body":{"interfaces/State.html":{}}}],["reducers/persons.reduc",{"_index":2794,"title":{},"body":{"interfaces/State.html":{}}}],["reducers/search",{"_index":2801,"title":{},"body":{"interfaces/State.html":{}}}],["reducers/settings.reduc",{"_index":2790,"title":{},"body":{"interfaces/State.html":{}}}],["redux",{"_index":254,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/State.html":{},"dependencies.html":{}}}],["refresh",{"_index":3146,"title":{},"body":{"index.html":{}}}],["regist",{"_index":237,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthSandbox.html":{},"components/DossierNavigatorComponent.html":{}}}],["registerauthev",{"_index":742,"title":{},"body":{"injectables/AuthSandbox.html":{}}}],["registerev",{"_index":228,"title":{},"body":{"components/AppComponent.html":{},"components/DossierNavigatorComponent.html":{},"injectables/DossierSandbox.html":{},"components/LayoutContainer.html":{},"injectables/LayoutSandbox.html":{},"injectables/PersonsSandbox.html":{}}}],["reject",{"_index":908,"title":{},"body":{"injectables/ConfigService.html":{}}}],["rel",{"_index":1687,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["rememb",{"_index":2813,"title":{},"body":{"interfaces/State.html":{}}}],["remov",{"_index":143,"title":{},"body":{"classes/AddUserAction.html":{},"classes/DoLoginAction.html":{},"classes/DoLoginFailAction.html":{},"classes/DoLoginSuccessAction.html":{},"classes/DoLogoutAction.html":{},"classes/DoLogoutFailAction.html":{},"classes/DoLogoutSuccessAction.html":{},"classes/RemoveUserAction.html":{},"classes/User.html":{}}}],["remove_us",{"_index":142,"title":{},"body":{"classes/AddUserAction.html":{},"classes/DoLoginAction.html":{},"classes/DoLoginFailAction.html":{},"classes/DoLoginSuccessAction.html":{},"classes/DoLogoutAction.html":{},"classes/DoLogoutFailAction.html":{},"classes/DoLogoutSuccessAction.html":{},"classes/RemoveUserAction.html":{}}}],["removeuseract",{"_index":156,"title":{"classes/RemoveUserAction.html":{}},"body":{"classes/AddUserAction.html":{},"classes/DoLoginAction.html":{},"classes/DoLoginFailAction.html":{},"classes/DoLoginSuccessAction.html":{},"classes/DoLogoutAction.html":{},"classes/DoLogoutFailAction.html":{},"classes/DoLogoutSuccessAction.html":{},"classes/RemoveUserAction.html":{},"miscellaneous/typealiases.html":{}}}],["render",{"_index":1218,"title":{},"body":{"components/DocumentReportViewerComponent.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{}}}],["renderer2",{"_index":995,"title":{},"body":{"components/ControlWebDavComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/HeaderComponent.html":{},"modules/LayoutContainersModule.html":{},"components/LeftSidebarComponent.html":{}}}],["repo",{"_index":3129,"title":{},"body":{"index.html":{}}}],["report",{"_index":292,"title":{},"body":{"components/AppComponent.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"modules/DocumentReportViewerModule.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"modules/PersonsModule.html":{},"components/ProfileBarComponent.html":{},"injectables/ReportService.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{}}}],["report.servic",{"_index":1250,"title":{},"body":{"modules/DocumentReportViewerModule.html":{}}}],["reporting/dx",{"_index":1229,"title":{},"body":{"components/DocumentReportViewerComponent.html":{}}}],["reportservic",{"_index":1248,"title":{"injectables/ReportService.html":{}},"body":{"modules/DocumentReportViewerModule.html":{},"injectables/ReportService.html":{},"overview.html":{}}}],["reportviewercompon",{"_index":336,"title":{"components/ReportViewerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"modules/DocumentReportViewerModule.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{},"overview.html":{}}}],["reportviewermodel",{"_index":2263,"title":{},"body":{"components/PersonFormComponent.html":{}}}],["req",{"_index":1790,"title":{},"body":{"injectables/HttpService.html":{}}}],["req.headers.append('accept",{"_index":1814,"title":{},"body":{"injectables/HttpService.html":{}}}],["req.headers.append('author",{"_index":1811,"title":{},"body":{"injectables/HttpService.html":{}}}],["request",{"_index":1787,"title":{},"body":{"injectables/HttpService.html":{},"index.html":{}}}],["requestinterceptor",{"_index":1776,"title":{},"body":{"injectables/HttpService.html":{}}}],["requestinterceptor(req",{"_index":1786,"title":{},"body":{"injectables/HttpService.html":{}}}],["requestmethod",{"_index":1796,"title":{},"body":{"injectables/HttpService.html":{},"injectables/PersonsEffects.html":{}}}],["requestopt",{"_index":399,"title":{},"body":{"modules/AppModule.html":{},"injectables/ConfigService.html":{},"components/LoginComponent.html":{}}}],["requestoptionsarg",{"_index":616,"title":{},"body":{"injectables/AuthApiClient.html":{}}}],["requir",{"_index":1085,"title":{},"body":{"components/ControlWebDavComponent.html":{},"injectables/ValidationService.html":{}}}],["res.json",{"_index":912,"title":{},"body":{"injectables/ConfigService.html":{},"classes/HttpAdapter.html":{}}}],["res.statu",{"_index":1665,"title":{},"body":{"classes/HttpAdapter.html":{}}}],["reselect",{"_index":2772,"title":{},"body":{"interfaces/State.html":{},"dependencies.html":{}}}],["reset",{"_index":379,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ComponentsModule.html":{},"modules/ControlWebDavModule.html":{},"classes/DeleteItemSelectedAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"modules/DocumentGenerationModule.html":{},"modules/DocumentReportViewerModule.html":{},"modules/DossierNavigatorModule.html":{},"modules/ExceptionsModule.html":{},"classes/GetTreeDetailAction.html":{},"modules/LayoutContainersModule.html":{},"classes/LoadAction.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"modules/PersonsModule.html":{},"modules/PipesModule.html":{},"classes/ResetState.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetClosedAction.html":{},"classes/SetCultureAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{},"classes/SetLanguageAction.html":{},"classes/UpdateSelectedAction.html":{},"overview.html":{}}}],["reset_st",{"_index":1126,"title":{},"body":{"classes/DeleteItemSelectedAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"classes/GetTreeDetailAction.html":{},"classes/LoadAction.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"classes/ResetState.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetClosedAction.html":{},"classes/SetCultureAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{},"classes/SetLanguageAction.html":{},"classes/UpdateSelectedAction.html":{}}}],["resetst",{"_index":1146,"title":{"classes/ResetState.html":{}},"body":{"classes/DeleteItemSelectedAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"injectables/DossierSandbox.html":{},"classes/GetTreeDetailAction.html":{},"classes/LoadAction.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"injectables/PersonsSandbox.html":{},"classes/ResetState.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetClosedAction.html":{},"classes/SetCultureAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{},"classes/SetLanguageAction.html":{},"classes/UpdateSelectedAction.html":{},"miscellaneous/typealiases.html":{}}}],["resolv",{"_index":2454,"title":{},"body":{"injectables/PersonsResolver.html":{},"modules/PersonsRoutingModule.html":{}}}],["resolve(rout",{"_index":2457,"title":{},"body":{"injectables/PersonsResolver.html":{}}}],["resolve(tru",{"_index":924,"title":{},"body":{"injectables/ConfigService.html":{}}}],["respons",{"_index":749,"title":{},"body":{"injectables/AuthSandbox.html":{},"injectables/DocumentsHelper.html":{},"classes/HttpAdapter.html":{},"injectables/HttpResponseHandler.html":{},"injectables/HttpService.html":{},"index.html":{}}}],["response.statu",{"_index":1718,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["response[key].foreach((valu",{"_index":1759,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["responsebodi",{"_index":1698,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["responsebody._bodi",{"_index":1728,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["responsebody.json",{"_index":1730,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["responsebody.statustext",{"_index":1754,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["responsehandl",{"_index":1779,"title":{},"body":{"injectables/HttpService.html":{}}}],["responseinterceptor",{"_index":1777,"title":{},"body":{"injectables/HttpService.html":{}}}],["responseinterceptor(observabler",{"_index":1791,"title":{},"body":{"injectables/HttpService.html":{}}}],["result",{"_index":37,"title":{},"body":{"classes/Account.html":{},"classes/ActionHandler.html":{},"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"classes/AddUserAction.html":{},"injectables/AppApiClient.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppSandbox.html":{},"injectables/AppService.html":{},"injectables/AuthApiClient.html":{},"injectables/AuthEffects.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthSandbox.html":{},"directives/AuthorizeDirective.html":{},"injectables/AuthorizeGuard.html":{},"classes/BaseComponent.html":{},"components/BreadCrumbComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"classes/ClassRightModel.html":{},"modules/ComponentsModule.html":{},"injectables/ConfigService.html":{},"components/ControlWebDavComponent.html":{},"modules/ControlWebDavModule.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteItemSelectedAction.html":{},"classes/DeleteSuccessAction.html":{},"classes/DoLoginAction.html":{},"classes/DoLoginFailAction.html":{},"classes/DoLoginSuccessAction.html":{},"classes/DoLogoutAction.html":{},"classes/DoLogoutFailAction.html":{},"classes/DoLogoutSuccessAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"components/DocumentGenerationComponent.html":{},"modules/DocumentGenerationModule.html":{},"components/DocumentReportViewerComponent.html":{},"modules/DocumentReportViewerModule.html":{},"injectables/DocumentsHelper.html":{},"injectables/DossierApiClient.html":{},"components/DossierDetailsComponent.html":{},"injectables/DossierEffects.html":{},"classes/DossierFilterModel.html":{},"components/DossierNavigatorComponent.html":{},"modules/DossierNavigatorModule.html":{},"classes/DossierNavigatorTreeModel.html":{},"modules/DossierRoutingModule.html":{},"injectables/DossierSandbox.html":{},"injectables/DossierService.html":{},"directives/DynamicTabsDirective.html":{},"modules/ExceptionsModule.html":{},"modules/ExceptionsRoutingModule.html":{},"classes/GetTreeDetailAction.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"classes/HttpAdapter.html":{},"injectables/HttpResponseHandler.html":{},"injectables/HttpService.html":{},"modules/HttpServiceModule.html":{},"interfaces/IDossierFilterModel.html":{},"interfaces/IDossierNavigatorTreeModel.html":{},"interfaces/IMenuModel.html":{},"interfaces/IPerson.html":{},"interfaces/ISearchBoxModel.html":{},"interfaces/ISidebarMenuModel.html":{},"interfaces/ITemplateModel.html":{},"classes/ITreeNavModel.html":{},"interfaces/LanguageModel.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"modules/LayoutContainersModule.html":{},"injectables/LayoutSandbox.html":{},"components/LeftSidebarComponent.html":{},"classes/LoadAction.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"components/LoginComponent.html":{},"classes/LoginForm.html":{},"classes/MenuModel.html":{},"injectables/MenusEffects.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Person.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"injectables/PersonsApiClient.html":{},"components/PersonsComponent.html":{},"injectables/PersonsEffects.html":{},"modules/PersonsModule.html":{},"injectables/PersonsResolver.html":{},"modules/PersonsRoutingModule.html":{},"injectables/PersonsSandbox.html":{},"injectables/PersonsService.html":{},"modules/PipesModule.html":{},"components/ProfileBarComponent.html":{},"classes/RemoveUserAction.html":{},"injectables/ReportService.html":{},"components/ReportViewerComponent.html":{},"classes/ResetState.html":{},"classes/Sandbox.html":{},"pipes/SanitizeHtmlPipe.html":{},"components/SearchBoxComponent.html":{},"injectables/SearchBoxDatasEffects.html":{},"classes/SearchBoxModel.html":{},"classes/SelectAction.html":{},"components/SelectedActionsComponent.html":{},"classes/SelectedActionsModel.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetAvaiableMenu.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetClosedAction.html":{},"classes/SetCultureAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{},"classes/SetLanguageAction.html":{},"injectables/SettingsEffects.html":{},"classes/SidebarMenuModel.html":{},"components/SpinnerComponent.html":{},"interfaces/State.html":{},"classes/TemplateModel.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{},"classes/TreeNavModel.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSelectedAction.html":{},"classes/UpdateSuccessAction.html":{},"classes/User.html":{},"injectables/UtilService.html":{},"modules/UtilityModule.html":{},"injectables/ValidationService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"interfaces/role.html":{},"routes.html":{},"miscellaneous/typealiases.html":{}}}],["retain",{"_index":486,"title":{},"body":{"modules/AppModule.html":{}}}],["retriev",{"_index":176,"title":{},"body":{"injectables/AppApiClient.html":{},"injectables/DossierApiClient.html":{},"injectables/PersonsApiClient.html":{}}}],["return",{"_index":171,"title":{},"body":{"injectables/AppApiClient.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppSandbox.html":{},"injectables/AppService.html":{},"injectables/AuthApiClient.html":{},"injectables/AuthEffects.html":{},"injectables/AuthGuard.html":{},"injectables/AuthSandbox.html":{},"directives/AuthorizeDirective.html":{},"injectables/AuthorizeGuard.html":{},"classes/BaseComponent.html":{},"components/BreadCrumbComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"injectables/ConfigService.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"modules/DocumentGenerationModule.html":{},"components/DocumentReportViewerComponent.html":{},"injectables/DocumentsHelper.html":{},"injectables/DossierApiClient.html":{},"injectables/DossierEffects.html":{},"components/DossierNavigatorComponent.html":{},"injectables/DossierSandbox.html":{},"injectables/DossierService.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"classes/HttpAdapter.html":{},"injectables/HttpResponseHandler.html":{},"injectables/HttpService.html":{},"modules/HttpServiceModule.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"injectables/LayoutSandbox.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"injectables/MenusEffects.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"injectables/PersonsApiClient.html":{},"components/PersonsComponent.html":{},"injectables/PersonsEffects.html":{},"injectables/PersonsResolver.html":{},"injectables/PersonsSandbox.html":{},"injectables/PersonsService.html":{},"injectables/ReportService.html":{},"components/ReportViewerComponent.html":{},"classes/Sandbox.html":{},"pipes/SanitizeHtmlPipe.html":{},"injectables/SearchBoxDatasEffects.html":{},"components/SelectedActionsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/State.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{},"classes/User.html":{},"injectables/UtilService.html":{},"modules/UtilityModule.html":{},"injectables/ValidationService.html":{}}}],["right",{"_index":2815,"title":{},"body":{"interfaces/State.html":{}}}],["right.model",{"_index":835,"title":{},"body":{"classes/BaseComponent.html":{}}}],["right.model.t",{"_index":859,"title":{},"body":{"classes/ClassRightModel.html":{}}}],["right.model.ts:2",{"_index":866,"title":{},"body":{"classes/ClassRightModel.html":{}}}],["right.model.ts:3",{"_index":867,"title":{},"body":{"classes/ClassRightModel.html":{}}}],["right.model.ts:4",{"_index":868,"title":{},"body":{"classes/ClassRightModel.html":{}}}],["right.model.ts:5",{"_index":865,"title":{},"body":{"classes/ClassRightModel.html":{}}}],["rightnam",{"_index":3192,"title":{},"body":{"interfaces/role.html":{}}}],["role",{"_index":44,"title":{"interfaces/role.html":{}},"body":{"classes/ActionHandler.html":{},"injectables/AppService.html":{},"directives/AuthorizeDirective.html":{},"injectables/AuthorizeGuard.html":{},"modules/PersonsRoutingModule.html":{},"injectables/SettingsEffects.html":{},"interfaces/role.html":{}}}],["roles.length",{"_index":808,"title":{},"body":{"directives/AuthorizeDirective.html":{},"injectables/AuthorizeGuard.html":{}}}],["root",{"_index":475,"title":{},"body":{"modules/AppModule.html":{}}}],["rout",{"_index":260,"title":{"routes.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthSandbox.html":{},"injectables/AuthorizeGuard.html":{},"components/DossierNavigatorComponent.html":{},"modules/DossierRoutingModule.html":{},"modules/ExceptionsRoutingModule.html":{},"components/PageBadGatewayComponent.html":{},"injectables/PersonsResolver.html":{},"modules/PersonsRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["route['url",{"_index":270,"title":{},"body":{"components/AppComponent.html":{}}}],["router",{"_index":231,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"injectables/AuthSandbox.html":{},"injectables/AuthorizeGuard.html":{},"components/DossierNavigatorComponent.html":{},"injectables/DossierSandbox.html":{},"injectables/HttpResponseHandler.html":{},"injectables/LayoutSandbox.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"injectables/PersonsSandbox.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{}}}],["routermodul",{"_index":521,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/ComponentsModule.html":{},"modules/DossierNavigatorModule.html":{},"modules/DossierRoutingModule.html":{},"modules/ExceptionsRoutingModule.html":{},"modules/LayoutContainersModule.html":{},"modules/PersonsModule.html":{},"modules/PersonsRoutingModule.html":{}}}],["routermodule.forchild(authrout",{"_index":735,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["routermodule.forchild(dossiernavrout",{"_index":1471,"title":{},"body":{"modules/DossierRoutingModule.html":{}}}],["routermodule.forchild(personsrout",{"_index":2471,"title":{},"body":{"modules/PersonsRoutingModule.html":{}}}],["routermodule.forchild(rout",{"_index":1566,"title":{},"body":{"modules/ExceptionsRoutingModule.html":{}}}],["routermodule.forroot(approut",{"_index":534,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":703,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthorizeGuard.html":{}}}],["routing.modul",{"_index":403,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DossierNavigatorModule.html":{},"modules/ExceptionsModule.html":{},"modules/PersonsModule.html":{}}}],["routing.module.t",{"_index":520,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/DossierRoutingModule.html":{},"modules/ExceptionsRoutingModule.html":{},"modules/PersonsRoutingModule.html":{}}}],["rule",{"_index":2084,"title":{},"body":{"components/LoginComponent.html":{}}}],["run",{"_index":481,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["rxj",{"_index":247,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"dependencies.html":{}}}],["rxjs/add/operator/catch",{"_index":692,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/AuthorizeGuard.html":{},"injectables/DossierEffects.html":{},"injectables/MenusEffects.html":{},"injectables/PersonsEffects.html":{},"injectables/SearchBoxDatasEffects.html":{},"injectables/SettingsEffects.html":{}}}],["rxjs/add/operator/map",{"_index":693,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/AuthorizeGuard.html":{},"injectables/ConfigService.html":{},"injectables/DossierEffects.html":{},"injectables/MenusEffects.html":{},"injectables/PersonsEffects.html":{},"injectables/SearchBoxDatasEffects.html":{},"injectables/SettingsEffects.html":{}}}],["rxjs/add/operator/switchmap",{"_index":694,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/AuthorizeGuard.html":{},"injectables/DossierEffects.html":{},"injectables/MenusEffects.html":{},"injectables/PersonsEffects.html":{},"injectables/SearchBoxDatasEffects.html":{},"injectables/SettingsEffects.html":{}}}],["rxjs/observ",{"_index":186,"title":{},"body":{"injectables/AppApiClient.html":{},"injectables/AppService.html":{},"injectables/AuthApiClient.html":{},"injectables/AuthEffects.html":{},"injectables/AuthorizeGuard.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"injectables/ConfigService.html":{},"components/DocumentReportViewerComponent.html":{},"injectables/DossierApiClient.html":{},"injectables/DossierEffects.html":{},"injectables/DossierService.html":{},"injectables/HttpResponseHandler.html":{},"injectables/HttpService.html":{},"components/LayoutContainer.html":{},"injectables/MenusEffects.html":{},"injectables/PersonsApiClient.html":{},"injectables/PersonsEffects.html":{},"injectables/PersonsService.html":{},"injectables/ReportService.html":{},"classes/Sandbox.html":{},"injectables/SearchBoxDatasEffects.html":{},"injectables/SettingsEffects.html":{}}}],["rxjs/observable/of",{"_index":695,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/DossierEffects.html":{},"injectables/MenusEffects.html":{},"injectables/PersonsEffects.html":{},"injectables/SearchBoxDatasEffects.html":{},"injectables/SettingsEffects.html":{}}}],["rxjs/rx",{"_index":708,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthSandbox.html":{},"directives/AuthorizeDirective.html":{},"injectables/ConfigService.html":{},"injectables/DocumentsHelper.html":{},"components/DossierNavigatorComponent.html":{},"injectables/DossierSandbox.html":{},"components/LayoutContainer.html":{},"injectables/LayoutSandbox.html":{},"components/PersonsComponent.html":{},"injectables/PersonsSandbox.html":{},"injectables/UtilService.html":{}}}],["s",{"_index":1450,"title":{},"body":{"classes/DossierNavigatorTreeModel.html":{},"interfaces/IDossierNavigatorTreeModel.html":{}}}],["s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0",{"_index":3058,"title":{},"body":{"injectables/ValidationService.html":{}}}],["safehtml",{"_index":2616,"title":{},"body":{"pipes/SanitizeHtmlPipe.html":{}}}],["sandbox",{"_index":551,"title":{"classes/Sandbox.html":{}},"body":{"injectables/AppSandbox.html":{},"injectables/AuthSandbox.html":{},"injectables/DossierSandbox.html":{},"injectables/LayoutSandbox.html":{},"components/LoginComponent.html":{},"injectables/PersonsSandbox.html":{},"classes/Sandbox.html":{}}}],["sandbox/base.sandbox",{"_index":2000,"title":{},"body":{"injectables/LayoutSandbox.html":{}}}],["sanit",{"_index":2619,"title":{},"body":{"pipes/SanitizeHtmlPipe.html":{}}}],["sanitizehtml",{"_index":2612,"title":{},"body":{"pipes/SanitizeHtmlPipe.html":{}}}],["sanitizehtml.pip",{"_index":2550,"title":{},"body":{"modules/PipesModule.html":{}}}],["sanitizehtmlpip",{"_index":2548,"title":{"pipes/SanitizeHtmlPipe.html":{}},"body":{"modules/PipesModule.html":{},"pipes/SanitizeHtmlPipe.html":{},"overview.html":{}}}],["save",{"_index":2606,"title":{},"body":{"classes/Sandbox.html":{},"classes/User.html":{},"index.html":{}}}],["save/remov",{"_index":770,"title":{},"body":{"injectables/AuthSandbox.html":{}}}],["sbdataact",{"_index":2005,"title":{},"body":{"injectables/LayoutSandbox.html":{}}}],["sbdataactions.loadact",{"_index":2021,"title":{},"body":{"injectables/LayoutSandbox.html":{}}}],["scope",{"_index":2141,"title":{},"body":{"classes/LoginForm.html":{}}}],["scratch",{"_index":2775,"title":{},"body":{"interfaces/State.html":{}}}],["screen",{"_index":3162,"title":{},"body":{"index.html":{}}}],["script",{"_index":1214,"title":{},"body":{"components/DocumentReportViewerComponent.html":{}}}],["search",{"_index":338,"title":{},"body":{"components/AppComponent.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"interfaces/State.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{}}}],["searchboxact",{"_index":2634,"title":{},"body":{"injectables/SearchBoxDatasEffects.html":{}}}],["searchboxactions.loadact",{"_index":2628,"title":{},"body":{"injectables/SearchBoxDatasEffects.html":{}}}],["searchboxactions.loadfailact",{"_index":2632,"title":{},"body":{"injectables/SearchBoxDatasEffects.html":{}}}],["searchboxactions.loadsuccessaction(data",{"_index":2631,"title":{},"body":{"injectables/SearchBoxDatasEffects.html":{}}}],["searchboxcompon",{"_index":337,"title":{"components/SearchBoxComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"modules/LayoutContainersModule.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{},"overview.html":{}}}],["searchboxdata",{"_index":1980,"title":{},"body":{"injectables/LayoutSandbox.html":{},"interfaces/State.html":{}}}],["searchboxdataseffect",{"_index":419,"title":{"injectables/SearchBoxDatasEffects.html":{}},"body":{"modules/AppModule.html":{},"injectables/SearchBoxDatasEffects.html":{}}}],["searchboxmodel",{"_index":1839,"title":{"classes/SearchBoxModel.html":{}},"body":{"interfaces/ISearchBoxModel.html":{},"injectables/SearchBoxDatasEffects.html":{},"classes/SearchBoxModel.html":{}}}],["searchboxsdata",{"_index":1612,"title":{},"body":{"components/HeaderComponent.html":{},"injectables/LayoutSandbox.html":{},"components/SearchBoxComponent.html":{}}}],["searchboxsmock",{"_index":2636,"title":{},"body":{"injectables/SearchBoxDatasEffects.html":{}}}],["searchparam",{"_index":605,"title":{},"body":{"injectables/AuthApiClient.html":{}}}],["see",{"_index":500,"title":{},"body":{"modules/AppModule.html":{},"injectables/HttpResponseHandler.html":{}}}],["select",{"_index":340,"title":{},"body":{"components/AppComponent.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"interfaces/IMenuModel.html":{},"interfaces/ISidebarMenuModel.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"injectables/LayoutSandbox.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"classes/MenuModel.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"injectables/PersonsSandbox.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"classes/Sandbox.html":{},"components/SearchBoxComponent.html":{},"classes/SelectAction.html":{},"components/SelectedActionsComponent.html":{},"classes/SetAvaiableMenu.html":{},"classes/SidebarMenuModel.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{}}}],["selectact",{"_index":2642,"title":{"classes/SelectAction.html":{}},"body":{"classes/SelectAction.html":{},"classes/SetAvaiableMenu.html":{},"miscellaneous/typealiases.html":{}}}],["selectdossi",{"_index":1479,"title":{},"body":{"injectables/DossierSandbox.html":{}}}],["selectdossier(treemodel",{"_index":1487,"title":{},"body":{"injectables/DossierSandbox.html":{}}}],["selectedact",{"_index":1531,"title":{},"body":{"injectables/DossierSandbox.html":{},"classes/Sandbox.html":{},"components/SelectedActionsComponent.html":{}}}],["selectedactionscompon",{"_index":339,"title":{"components/SelectedActionsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"modules/LayoutContainersModule.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{},"overview.html":{}}}],["selectedactionsmodel",{"_index":1515,"title":{"classes/SelectedActionsModel.html":{}},"body":{"injectables/DossierSandbox.html":{},"injectables/PersonsSandbox.html":{},"classes/SelectedActionsModel.html":{},"components/TreeListComponent.html":{}}}],["selectedcultur",{"_index":567,"title":{},"body":{"injectables/AppSandbox.html":{}}}],["selectedlang",{"_index":564,"title":{},"body":{"injectables/AppSandbox.html":{},"injectables/LayoutSandbox.html":{}}}],["selectedlang)[0].cultur",{"_index":569,"title":{},"body":{"injectables/AppSandbox.html":{}}}],["selectedlangflag",{"_index":1875,"title":{},"body":{"components/LanguageSelectorComponent.html":{}}}],["selectedlanguag",{"_index":1613,"title":{},"body":{"components/HeaderComponent.html":{},"components/LanguageSelectorComponent.html":{}}}],["selectedmenu",{"_index":1967,"title":{},"body":{"injectables/LayoutSandbox.html":{}}}],["selectionmod",{"_index":2659,"title":{},"body":{"components/SelectedActionsComponent.html":{}}}],["selectlanguag",{"_index":1617,"title":{},"body":{"components/HeaderComponent.html":{},"components/LanguageSelectorComponent.html":{},"injectables/LayoutSandbox.html":{}}}],["selectlanguage(lang",{"_index":1887,"title":{},"body":{"components/LanguageSelectorComponent.html":{},"injectables/LayoutSandbox.html":{}}}],["selectmenu",{"_index":1618,"title":{},"body":{"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LayoutContainer.html":{},"injectables/LayoutSandbox.html":{}}}],["selectmenu(",{"_index":1655,"title":{},"body":{"components/HorizontalNavigationComponent.html":{}}}],["selectmenu(menu",{"_index":1916,"title":{},"body":{"components/LayoutContainer.html":{},"injectables/LayoutSandbox.html":{}}}],["selector",{"_index":220,"title":{},"body":{"components/AppComponent.html":{},"directives/AuthorizeDirective.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"directives/DynamicTabsDirective.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"interfaces/State.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{}}}],["selector'},{'nam",{"_index":306,"title":{},"body":{"components/AppComponent.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{}}}],["selectperson",{"_index":2482,"title":{},"body":{"injectables/PersonsSandbox.html":{}}}],["selectperson(person",{"_index":2497,"title":{},"body":{"injectables/PersonsSandbox.html":{}}}],["selenium",{"_index":612,"title":{},"body":{"injectables/AuthApiClient.html":{}}}],["send",{"_index":3157,"title":{},"body":{"index.html":{}}}],["serrortext",{"_index":1063,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["server",{"_index":604,"title":{},"body":{"injectables/AuthApiClient.html":{},"injectables/ConfigService.html":{},"injectables/DossierSandbox.html":{},"injectables/HttpResponseHandler.html":{},"injectables/LayoutSandbox.html":{},"injectables/PersonsApiClient.html":{},"injectables/PersonsSandbox.html":{},"injectables/ReportService.html":{},"dependencies.html":{},"index.html":{}}}],["servic",{"_index":427,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["set",{"_index":262,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AppSandbox.html":{},"directives/AuthorizeDirective.html":{},"classes/DeleteItemSelectedAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"components/DocumentReportViewerComponent.html":{},"classes/GetTreeDetailAction.html":{},"components/LeftSidebarComponent.html":{},"classes/LoadAction.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"classes/ResetState.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetClosedAction.html":{},"classes/SetCultureAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{},"classes/SetLanguageAction.html":{},"interfaces/State.html":{},"classes/UpdateSelectedAction.html":{}}}],["set_avaible_languag",{"_index":1120,"title":{},"body":{"classes/DeleteItemSelectedAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetCultureAction.html":{},"classes/SetLanguageAction.html":{},"classes/UpdateSelectedAction.html":{}}}],["set_avaible_rol",{"_index":1115,"title":{},"body":{"classes/DeleteItemSelectedAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetCultureAction.html":{},"classes/SetLanguageAction.html":{},"classes/UpdateSelectedAction.html":{}}}],["set_cultur",{"_index":1111,"title":{},"body":{"classes/DeleteItemSelectedAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetCultureAction.html":{},"classes/SetLanguageAction.html":{},"classes/UpdateSelectedAction.html":{}}}],["set_languag",{"_index":1108,"title":{},"body":{"classes/DeleteItemSelectedAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetCultureAction.html":{},"classes/SetLanguageAction.html":{},"classes/UpdateSelectedAction.html":{}}}],["setactionbutton",{"_index":2266,"title":{},"body":{"components/PersonFormComponent.html":{}}}],["setactiveact",{"_index":1584,"title":{"classes/SetActiveAction.html":{}},"body":{"classes/GetTreeDetailAction.html":{},"classes/LoadAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"classes/ResetState.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetClosedAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{}}}],["setappauthorize(rol",{"_index":802,"title":{},"body":{"directives/AuthorizeDirective.html":{}}}],["setarchivedact",{"_index":1588,"title":{"classes/SetArchivedAction.html":{}},"body":{"classes/GetTreeDetailAction.html":{},"classes/LoadAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"classes/ResetState.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetClosedAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{}}}],["setavaiablemenu",{"_index":2650,"title":{"classes/SetAvaiableMenu.html":{}},"body":{"classes/SelectAction.html":{},"classes/SetAvaiableMenu.html":{},"miscellaneous/typealiases.html":{}}}],["setavailablelanguagesact",{"_index":1142,"title":{"classes/SetAvailableLanguagesAction.html":{}},"body":{"classes/DeleteItemSelectedAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetCultureAction.html":{},"classes/SetLanguageAction.html":{},"classes/UpdateSelectedAction.html":{},"miscellaneous/typealiases.html":{}}}],["setavailablerolesact",{"_index":1138,"title":{"classes/SetAvailableRolesAction.html":{}},"body":{"classes/DeleteItemSelectedAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetCultureAction.html":{},"classes/SetLanguageAction.html":{},"classes/UpdateSelectedAction.html":{},"miscellaneous/typealiases.html":{}}}],["setclassright",{"_index":2296,"title":{},"body":{"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{}}}],["setclassright('ctlperson",{"_index":2299,"title":{},"body":{"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{}}}],["setclosedact",{"_index":1586,"title":{"classes/SetClosedAction.html":{}},"body":{"classes/GetTreeDetailAction.html":{},"classes/LoadAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"classes/ResetState.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetClosedAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{}}}],["setcultur",{"_index":1112,"title":{},"body":{"classes/DeleteItemSelectedAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetCultureAction.html":{},"classes/SetLanguageAction.html":{},"classes/UpdateSelectedAction.html":{}}}],["setcultureact",{"_index":1134,"title":{"classes/SetCultureAction.html":{}},"body":{"classes/DeleteItemSelectedAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetCultureAction.html":{},"classes/SetLanguageAction.html":{},"classes/UpdateSelectedAction.html":{},"miscellaneous/typealiases.html":{}}}],["seteftogglenav",{"_index":2029,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["seteftogglenav(el",{"_index":2039,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["setincludegroupact",{"_index":1590,"title":{"classes/SetIncludeGroupAction.html":{}},"body":{"classes/GetTreeDetailAction.html":{},"classes/LoadAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"classes/ResetState.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetClosedAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{}}}],["setincludeguestact",{"_index":1592,"title":{"classes/SetIncludeGuestAction.html":{}},"body":{"classes/GetTreeDetailAction.html":{},"classes/LoadAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"classes/ResetState.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetClosedAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{}}}],["setincludetasksact",{"_index":1594,"title":{"classes/SetIncludeTasksAction.html":{}},"body":{"classes/GetTreeDetailAction.html":{},"classes/LoadAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"classes/ResetState.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetClosedAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{}}}],["setlanguag",{"_index":1110,"title":{},"body":{"classes/DeleteItemSelectedAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetCultureAction.html":{},"classes/SetLanguageAction.html":{},"classes/UpdateSelectedAction.html":{}}}],["setlanguageact",{"_index":1132,"title":{"classes/SetLanguageAction.html":{}},"body":{"classes/DeleteItemSelectedAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetCultureAction.html":{},"classes/SetLanguageAction.html":{},"classes/UpdateSelectedAction.html":{},"miscellaneous/typealiases.html":{}}}],["settingsact",{"_index":553,"title":{},"body":{"injectables/AppSandbox.html":{},"injectables/AuthSandbox.html":{},"injectables/DossierSandbox.html":{},"injectables/LayoutSandbox.html":{},"injectables/PersonsSandbox.html":{},"injectables/SettingsEffects.html":{}}}],["settingsaction.documentcr",{"_index":2719,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["settingsaction.documentcreateerror",{"_index":2724,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["settingsaction.documentcreatesuccess(docu",{"_index":2723,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["settingsaction.loadapirolesact",{"_index":2727,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["settingsaction.loadfailact",{"_index":2732,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["settingsaction.setavailablerolesaction(rol",{"_index":2731,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["settingsactions.deleteitemselectedaction(person",{"_index":2522,"title":{},"body":{"injectables/PersonsSandbox.html":{}}}],["settingsactions.deleteitemselectedaction(treemodel",{"_index":1528,"title":{},"body":{"injectables/DossierSandbox.html":{}}}],["settingsactions.documentcreate(payload",{"_index":575,"title":{},"body":{"injectables/AppSandbox.html":{}}}],["settingsactions.loadapirolesact",{"_index":574,"title":{},"body":{"injectables/AppSandbox.html":{},"injectables/AuthSandbox.html":{}}}],["settingsactions.resetst",{"_index":785,"title":{},"body":{"injectables/AuthSandbox.html":{}}}],["settingsactions.setcultureaction(lang.cultur",{"_index":2009,"title":{},"body":{"injectables/LayoutSandbox.html":{}}}],["settingsactions.setcultureaction(selectedcultur",{"_index":573,"title":{},"body":{"injectables/AppSandbox.html":{}}}],["settingsactions.setlanguageaction(lang.cod",{"_index":2008,"title":{},"body":{"injectables/LayoutSandbox.html":{}}}],["settingsactions.setlanguageaction(selectedlang",{"_index":572,"title":{},"body":{"injectables/AppSandbox.html":{}}}],["settingsactions.updateselectedaction(act",{"_index":1537,"title":{},"body":{"injectables/DossierSandbox.html":{},"injectables/PersonsSandbox.html":{}}}],["settingseffect",{"_index":417,"title":{"injectables/SettingsEffects.html":{}},"body":{"modules/AppModule.html":{},"injectables/SettingsEffects.html":{}}}],["settitl",{"_index":823,"title":{},"body":{"classes/BaseComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/LoginComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{}}}],["settitle(newtitl",{"_index":831,"title":{},"body":{"classes/BaseComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/LoginComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{}}}],["setuplanguag",{"_index":539,"title":{},"body":{"injectables/AppSandbox.html":{}}}],["setuprol",{"_index":540,"title":{},"body":{"injectables/AppSandbox.html":{}}}],["setviewermodel(viewermodel",{"_index":1225,"title":{},"body":{"components/DocumentReportViewerComponent.html":{}}}],["setvisibilityfilt",{"_index":1575,"title":{},"body":{"classes/GetTreeDetailAction.html":{},"classes/LoadAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"classes/ResetState.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetClosedAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{}}}],["setvisibilityfilter.act",{"_index":1585,"title":{},"body":{"classes/GetTreeDetailAction.html":{},"classes/LoadAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"classes/ResetState.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetClosedAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{}}}],["setvisibilityfilter.archiv",{"_index":1589,"title":{},"body":{"classes/GetTreeDetailAction.html":{},"classes/LoadAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"classes/ResetState.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetClosedAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{}}}],["setvisibilityfilter.clos",{"_index":1587,"title":{},"body":{"classes/GetTreeDetailAction.html":{},"classes/LoadAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"classes/ResetState.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetClosedAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{}}}],["setvisibilityfilter.include_group",{"_index":1591,"title":{},"body":{"classes/GetTreeDetailAction.html":{},"classes/LoadAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"classes/ResetState.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetClosedAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{}}}],["setvisibilityfilter.include_guest",{"_index":1593,"title":{},"body":{"classes/GetTreeDetailAction.html":{},"classes/LoadAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"classes/ResetState.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetClosedAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{}}}],["setvisibilityfilter.include_task",{"_index":1595,"title":{},"body":{"classes/GetTreeDetailAction.html":{},"classes/LoadAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"classes/ResetState.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetClosedAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{}}}],["setvisibilityfilteract",{"_index":1583,"title":{},"body":{"classes/GetTreeDetailAction.html":{},"classes/LoadAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"classes/ResetState.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetClosedAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{}}}],["setvisibilityfilteraction.setactiveact",{"_index":1597,"title":{},"body":{"classes/GetTreeDetailAction.html":{},"classes/LoadAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"classes/ResetState.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetClosedAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{},"miscellaneous/typealiases.html":{}}}],["setvisibilityfilteraction.setarchivedact",{"_index":1599,"title":{},"body":{"classes/GetTreeDetailAction.html":{},"classes/LoadAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"classes/ResetState.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetClosedAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{},"miscellaneous/typealiases.html":{}}}],["setvisibilityfilteraction.setclosedact",{"_index":1598,"title":{},"body":{"classes/GetTreeDetailAction.html":{},"classes/LoadAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"classes/ResetState.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetClosedAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{},"miscellaneous/typealiases.html":{}}}],["setvisibilityfilteraction.setincludegroupact",{"_index":1600,"title":{},"body":{"classes/GetTreeDetailAction.html":{},"classes/LoadAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"classes/ResetState.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetClosedAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{},"miscellaneous/typealiases.html":{}}}],["setvisibilityfilteraction.setincludeguestact",{"_index":1601,"title":{},"body":{"classes/GetTreeDetailAction.html":{},"classes/LoadAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"classes/ResetState.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetClosedAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{},"miscellaneous/typealiases.html":{}}}],["setvisibilityfilteraction.setincludetasksact",{"_index":1602,"title":{},"body":{"classes/GetTreeDetailAction.html":{},"classes/LoadAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"classes/ResetState.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetClosedAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{},"miscellaneous/typealiases.html":{}}}],["setwrappercontainer(valu",{"_index":2044,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sfileabsolutepath",{"_index":941,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["sfolderpath",{"_index":1033,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["shared/asyncservices/http",{"_index":185,"title":{},"body":{"injectables/AppApiClient.html":{},"injectables/AuthApiClient.html":{},"injectables/DossierApiClient.html":{},"injectables/PersonsApiClient.html":{}}}],["shared/asyncservices/http/http.decor",{"_index":2513,"title":{},"body":{"injectables/PersonsSandbox.html":{}}}],["shared/asyncservices/http/http.modul",{"_index":406,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/asyncservices/http/utils.servic",{"_index":615,"title":{},"body":{"injectables/AuthApiClient.html":{}}}],["shared/authorize/authorize.decor",{"_index":2297,"title":{},"body":{"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{}}}],["shared/authorize/authorize.guard",{"_index":405,"title":{},"body":{"modules/AppModule.html":{},"modules/PersonsRoutingModule.html":{}}}],["shared/compon",{"_index":731,"title":{},"body":{"modules/AuthModule.html":{},"modules/DossierNavigatorModule.html":{},"modules/PersonsModule.html":{}}}],["shared/components/base.compon",{"_index":1386,"title":{},"body":{"components/DossierNavigatorComponent.html":{},"components/LoginComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{}}}],["shared/components/control",{"_index":2443,"title":{},"body":{"modules/PersonsModule.html":{}}}],["shared/components/docu",{"_index":2445,"title":{},"body":{"modules/PersonsModule.html":{}}}],["shared/guards/auth.guard",{"_index":425,"title":{},"body":{"modules/AppModule.html":{},"modules/DossierRoutingModule.html":{},"modules/PersonsRoutingModule.html":{}}}],["shared/guards/candeactivate.guard",{"_index":426,"title":{},"body":{"modules/AppModule.html":{},"modules/DossierRoutingModule.html":{},"modules/PersonsRoutingModule.html":{}}}],["shared/layouts/layout.modul",{"_index":1435,"title":{},"body":{"modules/DossierNavigatorModule.html":{},"modules/PersonsModule.html":{}}}],["shared/mock",{"_index":1383,"title":{},"body":{"components/DossierNavigatorComponent.html":{},"injectables/PersonsApiClient.html":{},"components/PersonsComponent.html":{}}}],["shared/model",{"_index":248,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppSandbox.html":{},"injectables/AuthApiClient.html":{},"injectables/AuthSandbox.html":{},"injectables/DossierApiClient.html":{},"components/DossierNavigatorComponent.html":{},"injectables/DossierSandbox.html":{},"injectables/DossierService.html":{},"components/NavFiltersComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"injectables/PersonsSandbox.html":{},"injectables/PersonsService.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{}}}],["shared/models/person.model",{"_index":2295,"title":{},"body":{"components/PersonFormComponent.html":{},"injectables/PersonsApiClient.html":{}}}],["shared/sandbox/base.sandbox",{"_index":552,"title":{},"body":{"injectables/AppSandbox.html":{},"injectables/AuthSandbox.html":{},"injectables/DossierSandbox.html":{},"injectables/PersonsSandbox.html":{}}}],["shared/stor",{"_index":409,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppSandbox.html":{},"injectables/AuthSandbox.html":{},"injectables/DossierSandbox.html":{},"injectables/PersonsSandbox.html":{}}}],["shared/store/actions/auth.act",{"_index":763,"title":{},"body":{"injectables/AuthSandbox.html":{}}}],["shared/store/actions/dossier.act",{"_index":1514,"title":{},"body":{"injectables/DossierSandbox.html":{}}}],["shared/store/actions/person",{"_index":2515,"title":{},"body":{"injectables/PersonsSandbox.html":{}}}],["shared/store/actions/persons.act",{"_index":2514,"title":{},"body":{"injectables/PersonsSandbox.html":{}}}],["shared/store/actions/settings.act",{"_index":554,"title":{},"body":{"injectables/AppSandbox.html":{},"injectables/AuthSandbox.html":{},"injectables/DossierSandbox.html":{},"injectables/PersonsSandbox.html":{}}}],["shared/store/effects/auth.effect",{"_index":416,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/store/effects/dossier.effect",{"_index":423,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/store/effects/menus.effect",{"_index":414,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/store/effects/persons.effect",{"_index":412,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/store/effects/search",{"_index":420,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/store/effects/settings.effect",{"_index":418,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/util",{"_index":407,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthSandbox.html":{},"injectables/DossierApiClient.html":{},"injectables/DossierSandbox.html":{},"components/PersonsComponent.html":{},"injectables/PersonsSandbox.html":{}}}],["shared/utility/utilityhelp",{"_index":2098,"title":{},"body":{"components/LoginComponent.html":{}}}],["show",{"_index":1693,"title":{},"body":{"injectables/HttpResponseHandler.html":{},"components/LanguageSelectorComponent.html":{}}}],["shownotificationerror",{"_index":1683,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["shownotificationerror(titl",{"_index":1715,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["side",{"_index":634,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["sidebar",{"_index":2025,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidebar'},{'nam",{"_index":311,"title":{},"body":{"components/AppComponent.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{}}}],["sidebarmenumodel",{"_index":1847,"title":{"classes/SidebarMenuModel.html":{}},"body":{"interfaces/ISidebarMenuModel.html":{},"classes/SidebarMenuModel.html":{}}}],["sidebars.compon",{"_index":1960,"title":{},"body":{"modules/LayoutContainersModule.html":{}}}],["sidebars.component.html",{"_index":2027,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidebars.component.scss",{"_index":2026,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidebars.component.t",{"_index":2024,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidebars.component.ts:23",{"_index":2036,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidebars.component.ts:25",{"_index":2043,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidebars.component.ts:28",{"_index":2037,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidebars.component.ts:30",{"_index":2034,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidebars.component.ts:39",{"_index":2038,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidebars.component.ts:48",{"_index":2042,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidebars.component.ts:62",{"_index":2040,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["sidebars/dossi",{"_index":1306,"title":{},"body":{"components/DossierDetailsComponent.html":{},"modules/LayoutContainersModule.html":{}}}],["sidebars/left",{"_index":1959,"title":{},"body":{"modules/LayoutContainersModule.html":{},"components/LeftSidebarComponent.html":{}}}],["sidebars/select",{"_index":1954,"title":{},"body":{"modules/LayoutContainersModule.html":{},"components/SelectedActionsComponent.html":{}}}],["simpl",{"_index":3140,"title":{},"body":{"index.html":{}}}],["simplenotificationsmodul",{"_index":447,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["simplenotificationsmodule.forroot",{"_index":469,"title":{},"body":{"modules/AppModule.html":{}}}],["singl",{"_index":2678,"title":{},"body":{"components/SelectedActionsComponent.html":{},"interfaces/State.html":{}}}],["sm",{"_index":2272,"title":{},"body":{"components/PersonFormComponent.html":{},"components/TreeDetailComponent.html":{}}}],["smat",{"_index":3148,"title":{},"body":{"index.html":{}}}],["sort",{"_index":1827,"title":{},"body":{"interfaces/IMenuModel.html":{},"interfaces/ISidebarMenuModel.html":{},"classes/MenuModel.html":{},"classes/SidebarMenuModel.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"classes/Account.html":{},"classes/ActionHandler.html":{},"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"classes/AddUserAction.html":{},"injectables/AppApiClient.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppSandbox.html":{},"injectables/AppService.html":{},"injectables/AuthApiClient.html":{},"injectables/AuthEffects.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthSandbox.html":{},"directives/AuthorizeDirective.html":{},"injectables/AuthorizeGuard.html":{},"classes/BaseComponent.html":{},"components/BreadCrumbComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"classes/ClassRightModel.html":{},"modules/ComponentsModule.html":{},"injectables/ConfigService.html":{},"components/ControlWebDavComponent.html":{},"modules/ControlWebDavModule.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteItemSelectedAction.html":{},"classes/DeleteSuccessAction.html":{},"classes/DoLoginAction.html":{},"classes/DoLoginFailAction.html":{},"classes/DoLoginSuccessAction.html":{},"classes/DoLogoutAction.html":{},"classes/DoLogoutFailAction.html":{},"classes/DoLogoutSuccessAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"components/DocumentGenerationComponent.html":{},"modules/DocumentGenerationModule.html":{},"components/DocumentReportViewerComponent.html":{},"modules/DocumentReportViewerModule.html":{},"injectables/DocumentsHelper.html":{},"injectables/DossierApiClient.html":{},"components/DossierDetailsComponent.html":{},"injectables/DossierEffects.html":{},"classes/DossierFilterModel.html":{},"components/DossierNavigatorComponent.html":{},"modules/DossierNavigatorModule.html":{},"classes/DossierNavigatorTreeModel.html":{},"modules/DossierRoutingModule.html":{},"injectables/DossierSandbox.html":{},"injectables/DossierService.html":{},"directives/DynamicTabsDirective.html":{},"modules/ExceptionsModule.html":{},"modules/ExceptionsRoutingModule.html":{},"classes/GetTreeDetailAction.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"classes/HttpAdapter.html":{},"injectables/HttpResponseHandler.html":{},"injectables/HttpService.html":{},"modules/HttpServiceModule.html":{},"interfaces/IDossierFilterModel.html":{},"interfaces/IDossierNavigatorTreeModel.html":{},"interfaces/IMenuModel.html":{},"interfaces/IPerson.html":{},"interfaces/ISearchBoxModel.html":{},"interfaces/ISidebarMenuModel.html":{},"interfaces/ITemplateModel.html":{},"classes/ITreeNavModel.html":{},"interfaces/LanguageModel.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"modules/LayoutContainersModule.html":{},"injectables/LayoutSandbox.html":{},"components/LeftSidebarComponent.html":{},"classes/LoadAction.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"components/LoginComponent.html":{},"classes/LoginForm.html":{},"classes/MenuModel.html":{},"injectables/MenusEffects.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Person.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"injectables/PersonsApiClient.html":{},"components/PersonsComponent.html":{},"injectables/PersonsEffects.html":{},"modules/PersonsModule.html":{},"injectables/PersonsResolver.html":{},"modules/PersonsRoutingModule.html":{},"injectables/PersonsSandbox.html":{},"injectables/PersonsService.html":{},"modules/PipesModule.html":{},"components/ProfileBarComponent.html":{},"classes/RemoveUserAction.html":{},"injectables/ReportService.html":{},"components/ReportViewerComponent.html":{},"classes/ResetState.html":{},"classes/Sandbox.html":{},"pipes/SanitizeHtmlPipe.html":{},"components/SearchBoxComponent.html":{},"injectables/SearchBoxDatasEffects.html":{},"classes/SearchBoxModel.html":{},"classes/SelectAction.html":{},"components/SelectedActionsComponent.html":{},"classes/SelectedActionsModel.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetAvaiableMenu.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetClosedAction.html":{},"classes/SetCultureAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{},"classes/SetLanguageAction.html":{},"injectables/SettingsEffects.html":{},"classes/SidebarMenuModel.html":{},"components/SpinnerComponent.html":{},"interfaces/State.html":{},"classes/TemplateModel.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{},"classes/TreeNavModel.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSelectedAction.html":{},"classes/UpdateSuccessAction.html":{},"classes/User.html":{},"injectables/UtilService.html":{},"modules/UtilityModule.html":{},"injectables/ValidationService.html":{},"interfaces/role.html":{}}}],["space",{"_index":1795,"title":{},"body":{"injectables/HttpService.html":{},"components/LayoutContainer.html":{},"interfaces/State.html":{}}}],["spinner",{"_index":2747,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["spinner'},{'nam",{"_index":343,"title":{},"body":{"components/AppComponent.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{}}}],["spinner.component.html",{"_index":2749,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["spinner.component.scss",{"_index":2748,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["spinner/spinner.compon",{"_index":884,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["spinnercompon",{"_index":342,"title":{"components/SpinnerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadCrumbComponent.html":{},"modules/ComponentsModule.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{},"overview.html":{}}}],["split('?')[0",{"_index":1768,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["src/.../auth.action.t",{"_index":3195,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../control",{"_index":3121,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../doc",{"_index":3118,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../dossier.action.t",{"_index":3196,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../http.service.t",{"_index":3120,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../menus.action.t",{"_index":3197,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../person",{"_index":3198,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../persons.action.t",{"_index":3200,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../search",{"_index":3201,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../settings.action.t",{"_index":3203,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../utilityhelpers.t",{"_index":3205,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/app",{"_index":519,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/ConfigService.html":{}}}],["src/app/app.component.t",{"_index":213,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:15",{"_index":244,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:16",{"_index":232,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:20",{"_index":243,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:23",{"_index":235,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:30",{"_index":233,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:37",{"_index":236,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:47",{"_index":241,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":381,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/app.sandbox.t",{"_index":535,"title":{},"body":{"injectables/AppSandbox.html":{}}}],["src/app/app.sandbox.ts:12",{"_index":542,"title":{},"body":{"injectables/AppSandbox.html":{}}}],["src/app/app.sandbox.ts:24",{"_index":548,"title":{},"body":{"injectables/AppSandbox.html":{}}}],["src/app/app.sandbox.ts:40",{"_index":549,"title":{},"body":{"injectables/AppSandbox.html":{}}}],["src/app/app.sandbox.ts:44",{"_index":547,"title":{},"body":{"injectables/AppSandbox.html":{}}}],["src/app/app.sandbox.ts:51",{"_index":544,"title":{},"body":{"injectables/AppSandbox.html":{}}}],["src/app/app.service.t",{"_index":577,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app/app.service.ts:16",{"_index":594,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app/app.service.ts:25",{"_index":585,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app/app.service.ts:29",{"_index":583,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app/appapiclient.service.t",{"_index":160,"title":{},"body":{"injectables/AppApiClient.html":{}}}],["src/app/appapiclient.service.ts:30",{"_index":175,"title":{},"body":{"injectables/AppApiClient.html":{}}}],["src/app/appapiclient.service.ts:36",{"_index":174,"title":{},"body":{"injectables/AppApiClient.html":{}}}],["src/app/appapiclient.service.ts:43",{"_index":169,"title":{},"body":{"injectables/AppApiClient.html":{}}}],["src/app/auth/auth",{"_index":733,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["src/app/auth/auth.module.t",{"_index":726,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/auth/auth.sandbox.t",{"_index":736,"title":{},"body":{"injectables/AuthSandbox.html":{}}}],["src/app/auth/auth.sandbox.ts:23",{"_index":760,"title":{},"body":{"injectables/AuthSandbox.html":{}}}],["src/app/auth/auth.sandbox.ts:24",{"_index":759,"title":{},"body":{"injectables/AuthSandbox.html":{}}}],["src/app/auth/auth.sandbox.ts:26",{"_index":745,"title":{},"body":{"injectables/AuthSandbox.html":{}}}],["src/app/auth/auth.sandbox.ts:33",{"_index":761,"title":{},"body":{"injectables/AuthSandbox.html":{}}}],["src/app/auth/auth.sandbox.ts:44",{"_index":753,"title":{},"body":{"injectables/AuthSandbox.html":{}}}],["src/app/auth/auth.sandbox.ts:51",{"_index":757,"title":{},"body":{"injectables/AuthSandbox.html":{}}}],["src/app/auth/auth.sandbox.ts:58",{"_index":756,"title":{},"body":{"injectables/AuthSandbox.html":{}}}],["src/app/auth/auth.sandbox.ts:84",{"_index":747,"title":{},"body":{"injectables/AuthSandbox.html":{}}}],["src/app/auth/auth.sandbox.ts:89",{"_index":755,"title":{},"body":{"injectables/AuthSandbox.html":{}}}],["src/app/auth/auth.sandbox.ts:93",{"_index":751,"title":{},"body":{"injectables/AuthSandbox.html":{}}}],["src/app/auth/authapiclient.service.t",{"_index":599,"title":{},"body":{"injectables/AuthApiClient.html":{}}}],["src/app/auth/authapiclient.service.ts:38",{"_index":601,"title":{},"body":{"injectables/AuthApiClient.html":{}}}],["src/app/auth/authapiclient.service.ts:50",{"_index":606,"title":{},"body":{"injectables/AuthApiClient.html":{}}}],["src/app/auth/login/login.component.t",{"_index":2071,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:28",{"_index":2095,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:29",{"_index":2096,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:30",{"_index":2094,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:32",{"_index":2092,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:33",{"_index":2079,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:38",{"_index":2090,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:44",{"_index":2086,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:51",{"_index":2085,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:58",{"_index":2080,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/auth/login/login.component.ts:74",{"_index":2088,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/dossi",{"_index":1288,"title":{},"body":{"injectables/DossierApiClient.html":{},"components/DossierNavigatorComponent.html":{},"modules/DossierNavigatorModule.html":{},"modules/DossierRoutingModule.html":{},"injectables/DossierSandbox.html":{},"injectables/DossierService.html":{},"components/NavFiltersComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{}}}],["src/app/exceptions/except",{"_index":1563,"title":{},"body":{"modules/ExceptionsRoutingModule.html":{}}}],["src/app/exceptions/exceptions.module.t",{"_index":1560,"title":{},"body":{"modules/ExceptionsModule.html":{}}}],["src/app/exceptions/pagebadgateway/pagebadgateway.component.t",{"_index":2216,"title":{},"body":{"components/PageBadGatewayComponent.html":{}}}],["src/app/exceptions/pagebadgateway/pagebadgateway.component.ts:11",{"_index":2222,"title":{},"body":{"components/PageBadGatewayComponent.html":{}}}],["src/app/exceptions/pagebadgateway/pagebadgateway.component.ts:15",{"_index":2225,"title":{},"body":{"components/PageBadGatewayComponent.html":{}}}],["src/app/exceptions/pagebadgateway/pagebadgateway.component.ts:17",{"_index":2224,"title":{},"body":{"components/PageBadGatewayComponent.html":{}}}],["src/app/exceptions/pagebadgateway/pagebadgateway.component.ts:22",{"_index":2223,"title":{},"body":{"components/PageBadGatewayComponent.html":{}}}],["src/app/exceptions/pagenotfound/pagenotfound.component.t",{"_index":2237,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["src/app/exceptions/pagenotfound/pagenotfound.component.ts:10",{"_index":2241,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["src/app/exceptions/pagenotfound/pagenotfound.component.ts:13",{"_index":2242,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["src/app/persons/person",{"_index":2251,"title":{},"body":{"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"modules/PersonsRoutingModule.html":{}}}],["src/app/persons/person/person.component.t",{"_index":2387,"title":{},"body":{"components/PersonsComponent.html":{}}}],["src/app/persons/person/person.component.ts:28",{"_index":2391,"title":{},"body":{"components/PersonsComponent.html":{}}}],["src/app/persons/person/person.component.ts:33",{"_index":2396,"title":{},"body":{"components/PersonsComponent.html":{}}}],["src/app/persons/person/person.component.ts:38",{"_index":2392,"title":{},"body":{"components/PersonsComponent.html":{}}}],["src/app/persons/person/person.component.ts:42",{"_index":2393,"title":{},"body":{"components/PersonsComponent.html":{}}}],["src/app/persons/person/person.component.ts:47",{"_index":2394,"title":{},"body":{"components/PersonsComponent.html":{}}}],["src/app/persons/persons.module.t",{"_index":2442,"title":{},"body":{"modules/PersonsModule.html":{}}}],["src/app/persons/persons.resolver.t",{"_index":2452,"title":{},"body":{"injectables/PersonsResolver.html":{}}}],["src/app/persons/persons.resolver.ts:11",{"_index":2456,"title":{},"body":{"injectables/PersonsResolver.html":{}}}],["src/app/persons/persons.resolver.ts:13",{"_index":2462,"title":{},"body":{"injectables/PersonsResolver.html":{}}}],["src/app/persons/persons.resolver.ts:21",{"_index":2458,"title":{},"body":{"injectables/PersonsResolver.html":{}}}],["src/app/persons/persons.sandbox.t",{"_index":2472,"title":{},"body":{"injectables/PersonsSandbox.html":{}}}],["src/app/persons/persons.sandbox.ts:102",{"_index":2496,"title":{},"body":{"injectables/PersonsSandbox.html":{}}}],["src/app/persons/persons.sandbox.ts:109",{"_index":2495,"title":{},"body":{"injectables/PersonsSandbox.html":{}}}],["src/app/persons/persons.sandbox.ts:22",{"_index":2508,"title":{},"body":{"injectables/PersonsSandbox.html":{}}}],["src/app/persons/persons.sandbox.ts:23",{"_index":2510,"title":{},"body":{"injectables/PersonsSandbox.html":{}}}],["src/app/persons/persons.sandbox.ts:24",{"_index":2504,"title":{},"body":{"injectables/PersonsSandbox.html":{}}}],["src/app/persons/persons.sandbox.ts:25",{"_index":2506,"title":{},"body":{"injectables/PersonsSandbox.html":{}}}],["src/app/persons/persons.sandbox.ts:26",{"_index":2502,"title":{},"body":{"injectables/PersonsSandbox.html":{}}}],["src/app/persons/persons.sandbox.ts:27",{"_index":2512,"title":{},"body":{"injectables/PersonsSandbox.html":{}}}],["src/app/persons/persons.sandbox.ts:29",{"_index":2483,"title":{},"body":{"injectables/PersonsSandbox.html":{}}}],["src/app/persons/persons.sandbox.ts:44",{"_index":2490,"title":{},"body":{"injectables/PersonsSandbox.html":{}}}],["src/app/persons/persons.sandbox.ts:51",{"_index":2489,"title":{},"body":{"injectables/PersonsSandbox.html":{}}}],["src/app/persons/persons.sandbox.ts:56",{"_index":2485,"title":{},"body":{"injectables/PersonsSandbox.html":{}}}],["src/app/persons/persons.sandbox.ts:63",{"_index":2498,"title":{},"body":{"injectables/PersonsSandbox.html":{}}}],["src/app/persons/persons.sandbox.ts:76",{"_index":2487,"title":{},"body":{"injectables/PersonsSandbox.html":{}}}],["src/app/persons/persons.sandbox.ts:87",{"_index":2500,"title":{},"body":{"injectables/PersonsSandbox.html":{}}}],["src/app/persons/persons.sandbox.ts:91",{"_index":2493,"title":{},"body":{"injectables/PersonsSandbox.html":{}}}],["src/app/persons/persons.sandbox.ts:98",{"_index":2499,"title":{},"body":{"injectables/PersonsSandbox.html":{}}}],["src/app/persons/persons.service.t",{"_index":2526,"title":{},"body":{"injectables/PersonsService.html":{}}}],["src/app/persons/persons.service.ts:13",{"_index":2541,"title":{},"body":{"injectables/PersonsService.html":{}}}],["src/app/persons/persons.service.ts:20",{"_index":2534,"title":{},"body":{"injectables/PersonsService.html":{}}}],["src/app/persons/persons.service.ts:30",{"_index":2538,"title":{},"body":{"injectables/PersonsService.html":{}}}],["src/app/persons/persons.service.ts:39",{"_index":2540,"title":{},"body":{"injectables/PersonsService.html":{}}}],["src/app/persons/persons.service.ts:47",{"_index":2536,"title":{},"body":{"injectables/PersonsService.html":{}}}],["src/app/persons/persons.service.ts:55",{"_index":2532,"title":{},"body":{"injectables/PersonsService.html":{}}}],["src/app/persons/personsapiclient.service.t",{"_index":2350,"title":{},"body":{"injectables/PersonsApiClient.html":{}}}],["src/app/persons/personsapiclient.service.ts:32",{"_index":2361,"title":{},"body":{"injectables/PersonsApiClient.html":{}}}],["src/app/persons/personsapiclient.service.ts:44",{"_index":2360,"title":{},"body":{"injectables/PersonsApiClient.html":{}}}],["src/app/persons/personsapiclient.service.ts:54",{"_index":2366,"title":{},"body":{"injectables/PersonsApiClient.html":{}}}],["src/app/persons/personsapiclient.service.ts:63",{"_index":2363,"title":{},"body":{"injectables/PersonsApiClient.html":{}}}],["src/app/persons/personsapiclient.service.ts:72",{"_index":2358,"title":{},"body":{"injectables/PersonsApiClient.html":{}}}],["src/app/shared/asyncservices/http/http.adapter.t",{"_index":1659,"title":{},"body":{"classes/HttpAdapter.html":{}}}],["src/app/shared/asyncservices/http/http.adapter.ts:5",{"_index":1663,"title":{},"body":{"classes/HttpAdapter.html":{}}}],["src/app/shared/asyncservices/http/http.module.t",{"_index":1819,"title":{},"body":{"modules/HttpServiceModule.html":{}}}],["src/app/shared/asyncservices/http/http.service.t",{"_index":1770,"title":{},"body":{"injectables/HttpService.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/shared/asyncservices/http/http.service.ts:35",{"_index":1780,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/shared/asyncservices/http/http.service.ts:44",{"_index":1781,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/shared/asyncservices/http/http.service.ts:48",{"_index":1782,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/shared/asyncservices/http/http.service.ts:52",{"_index":1783,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/shared/asyncservices/http/http.service.ts:56",{"_index":1785,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/shared/asyncservices/http/http.service.ts:60",{"_index":1784,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/shared/asyncservices/http/http.service.ts:70",{"_index":1788,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/shared/asyncservices/http/http.service.ts:82",{"_index":1792,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/shared/asyncservices/http/httpresponsehandler.service.t",{"_index":1672,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["src/app/shared/asyncservices/http/httpresponsehandler.service.ts:101",{"_index":1702,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["src/app/shared/asyncservices/http/httpresponsehandler.service.ts:114",{"_index":1705,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["src/app/shared/asyncservices/http/httpresponsehandler.service.ts:130",{"_index":1707,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["src/app/shared/asyncservices/http/httpresponsehandler.service.ts:137",{"_index":1692,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["src/app/shared/asyncservices/http/httpresponsehandler.service.ts:150",{"_index":1700,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["src/app/shared/asyncservices/http/httpresponsehandler.service.ts:171",{"_index":1690,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["src/app/shared/asyncservices/http/httpresponsehandler.service.ts:185",{"_index":1686,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["src/app/shared/asyncservices/http/httpresponsehandler.service.ts:195",{"_index":1716,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["src/app/shared/asyncservices/http/httpresponsehandler.service.ts:24",{"_index":1713,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["src/app/shared/asyncservices/http/httpresponsehandler.service.ts:63",{"_index":1696,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["src/app/shared/asyncservices/http/httpresponsehandler.service.ts:83",{"_index":1710,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["src/app/shared/asyncservices/http/httpresponsehandler.service.ts:9",{"_index":1684,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["src/app/shared/authorize/authorize.directive.t",{"_index":792,"title":{},"body":{"directives/AuthorizeDirective.html":{}}}],["src/app/shared/authorize/authorize.directive.ts:16",{"_index":800,"title":{},"body":{"directives/AuthorizeDirective.html":{}}}],["src/app/shared/authorize/authorize.directive.ts:9",{"_index":799,"title":{},"body":{"directives/AuthorizeDirective.html":{}}}],["src/app/shared/authorize/authorize.guard.t",{"_index":809,"title":{},"body":{"injectables/AuthorizeGuard.html":{}}}],["src/app/shared/authorize/authorize.guard.ts:13",{"_index":811,"title":{},"body":{"injectables/AuthorizeGuard.html":{}}}],["src/app/shared/authorize/authorize.guard.ts:16",{"_index":812,"title":{},"body":{"injectables/AuthorizeGuard.html":{}}}],["src/app/shared/authorize/authorize.guard.ts:20",{"_index":814,"title":{},"body":{"injectables/AuthorizeGuard.html":{}}}],["src/app/shared/components/base.component.t",{"_index":818,"title":{},"body":{"classes/BaseComponent.html":{}}}],["src/app/shared/components/base.component.ts:10",{"_index":828,"title":{},"body":{"classes/BaseComponent.html":{}}}],["src/app/shared/components/base.component.ts:12",{"_index":826,"title":{},"body":{"classes/BaseComponent.html":{}}}],["src/app/shared/components/base.component.ts:18",{"_index":832,"title":{},"body":{"classes/BaseComponent.html":{}}}],["src/app/shared/components/base.component.ts:22",{"_index":830,"title":{},"body":{"classes/BaseComponent.html":{}}}],["src/app/shared/components/base.component.ts:9",{"_index":829,"title":{},"body":{"classes/BaseComponent.html":{}}}],["src/app/shared/components/control",{"_index":927,"title":{},"body":{"components/ControlWebDavComponent.html":{},"modules/ControlWebDavModule.html":{},"interfaces/ITemplateModel.html":{},"classes/TemplateModel.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/shared/components/docu",{"_index":1173,"title":{},"body":{"components/DocumentGenerationComponent.html":{},"modules/DocumentGenerationModule.html":{},"components/DocumentReportViewerComponent.html":{},"modules/DocumentReportViewerModule.html":{},"injectables/DocumentsHelper.html":{},"injectables/ReportService.html":{},"components/ReportViewerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/shared/components/index.t",{"_index":879,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["src/app/shared/components/spinner/spinner.component.t",{"_index":2746,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["src/app/shared/components/spinner/spinner.component.ts:10",{"_index":2753,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["src/app/shared/components/spinner/spinner.component.ts:9",{"_index":2752,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["src/app/shared/directives/dynam",{"_index":1550,"title":{},"body":{"directives/DynamicTabsDirective.html":{}}}],["src/app/shared/guards/auth.guard.t",{"_index":697,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/app/shared/guards/auth.guard.ts:10",{"_index":700,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/app/shared/guards/auth.guard.ts:13",{"_index":704,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/app/shared/guards/auth.guard.ts:18",{"_index":706,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/app/shared/guards/candeactivate.guard.t",{"_index":852,"title":{},"body":{"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{}}}],["src/app/shared/guards/candeactivate.guard.ts:11",{"_index":857,"title":{},"body":{"injectables/CanDeactivateGuard.html":{}}}],["src/app/shared/layouts/contents/bread",{"_index":841,"title":{},"body":{"components/BreadCrumbComponent.html":{}}}],["src/app/shared/layouts/contents/pag",{"_index":2233,"title":{},"body":{"components/PageContentComponent.html":{}}}],["src/app/shared/layouts/contents/toolbars/toolbars.component.t",{"_index":2914,"title":{},"body":{"components/ToolbarsComponent.html":{}}}],["src/app/shared/layouts/contents/toolbars/toolbars.component.ts:21",{"_index":2923,"title":{},"body":{"components/ToolbarsComponent.html":{}}}],["src/app/shared/layouts/contents/toolbars/toolbars.component.ts:22",{"_index":2921,"title":{},"body":{"components/ToolbarsComponent.html":{}}}],["src/app/shared/layouts/contents/toolbars/toolbars.component.ts:23",{"_index":2924,"title":{},"body":{"components/ToolbarsComponent.html":{}}}],["src/app/shared/layouts/contents/toolbars/toolbars.component.ts:24",{"_index":2922,"title":{},"body":{"components/ToolbarsComponent.html":{}}}],["src/app/shared/layouts/contents/toolbars/toolbars.component.ts:25",{"_index":2926,"title":{},"body":{"components/ToolbarsComponent.html":{}}}],["src/app/shared/layouts/contents/toolbars/toolbars.component.ts:26",{"_index":2925,"title":{},"body":{"components/ToolbarsComponent.html":{}}}],["src/app/shared/layouts/contents/toolbars/toolbars.component.ts:27",{"_index":2920,"title":{},"body":{"components/ToolbarsComponent.html":{}}}],["src/app/shared/layouts/contents/toolbars/toolbars.component.ts:31",{"_index":2928,"title":{},"body":{"components/ToolbarsComponent.html":{}}}],["src/app/shared/layouts/headers/header.component.t",{"_index":1603,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/layouts/headers/header.component.ts:20",{"_index":1635,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/layouts/headers/header.component.ts:21",{"_index":1623,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/layouts/headers/header.component.ts:22",{"_index":1620,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/layouts/headers/header.component.ts:23",{"_index":1625,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/layouts/headers/header.component.ts:24",{"_index":1624,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/layouts/headers/header.component.ts:26",{"_index":1628,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/layouts/headers/header.component.ts:27",{"_index":1627,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/layouts/headers/header.component.ts:28",{"_index":1626,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/layouts/headers/header.component.ts:31",{"_index":1621,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/layouts/headers/header.component.ts:32",{"_index":1629,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/layouts/headers/header.component.ts:35",{"_index":1622,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/layouts/headers/header.component.ts:37",{"_index":1619,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/layouts/headers/header.component.ts:45",{"_index":1634,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/layouts/headers/header.component.ts:51",{"_index":1631,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/layouts/headers/horizont",{"_index":1647,"title":{},"body":{"components/HorizontalNavigationComponent.html":{}}}],["src/app/shared/layouts/headers/languages/languageselector.component.t",{"_index":1872,"title":{},"body":{"components/LanguageSelectorComponent.html":{}}}],["src/app/shared/layouts/headers/languages/languageselector.component.ts:21",{"_index":1889,"title":{},"body":{"components/LanguageSelectorComponent.html":{}}}],["src/app/shared/layouts/headers/languages/languageselector.component.ts:22",{"_index":1881,"title":{},"body":{"components/LanguageSelectorComponent.html":{}}}],["src/app/shared/layouts/headers/languages/languageselector.component.ts:23",{"_index":1880,"title":{},"body":{"components/LanguageSelectorComponent.html":{}}}],["src/app/shared/layouts/headers/languages/languageselector.component.ts:24",{"_index":1882,"title":{},"body":{"components/LanguageSelectorComponent.html":{}}}],["src/app/shared/layouts/headers/languages/languageselector.component.ts:26",{"_index":1879,"title":{},"body":{"components/LanguageSelectorComponent.html":{}}}],["src/app/shared/layouts/headers/languages/languageselector.component.ts:31",{"_index":1883,"title":{},"body":{"components/LanguageSelectorComponent.html":{}}}],["src/app/shared/layouts/headers/languages/languageselector.component.ts:36",{"_index":1885,"title":{},"body":{"components/LanguageSelectorComponent.html":{}}}],["src/app/shared/layouts/headers/languages/languageselector.component.ts:42",{"_index":1886,"title":{},"body":{"components/LanguageSelectorComponent.html":{}}}],["src/app/shared/layouts/headers/languages/languageselector.component.ts:46",{"_index":1888,"title":{},"body":{"components/LanguageSelectorComponent.html":{}}}],["src/app/shared/layouts/headers/notif",{"_index":2210,"title":{},"body":{"components/NotificationBoxComponent.html":{}}}],["src/app/shared/layouts/headers/profil",{"_index":2551,"title":{},"body":{"components/ProfileBarComponent.html":{}}}],["src/app/shared/layouts/headers/search",{"_index":2621,"title":{},"body":{"components/SearchBoxComponent.html":{}}}],["src/app/shared/layouts/layout.container.t",{"_index":1903,"title":{},"body":{"components/LayoutContainer.html":{}}}],["src/app/shared/layouts/layout.container.ts:29",{"_index":1922,"title":{},"body":{"components/LayoutContainer.html":{}}}],["src/app/shared/layouts/layout.container.ts:30",{"_index":1921,"title":{},"body":{"components/LayoutContainer.html":{}}}],["src/app/shared/layouts/layout.container.ts:31",{"_index":1918,"title":{},"body":{"components/LayoutContainer.html":{}}}],["src/app/shared/layouts/layout.container.ts:32",{"_index":1912,"title":{},"body":{"components/LayoutContainer.html":{}}}],["src/app/shared/layouts/layout.container.ts:34",{"_index":1920,"title":{},"body":{"components/LayoutContainer.html":{}}}],["src/app/shared/layouts/layout.container.ts:36",{"_index":1911,"title":{},"body":{"components/LayoutContainer.html":{}}}],["src/app/shared/layouts/layout.container.ts:40",{"_index":1919,"title":{},"body":{"components/LayoutContainer.html":{}}}],["src/app/shared/layouts/layout.container.ts:45",{"_index":1914,"title":{},"body":{"components/LayoutContainer.html":{}}}],["src/app/shared/layouts/layout.container.ts:49",{"_index":1913,"title":{},"body":{"components/LayoutContainer.html":{}}}],["src/app/shared/layouts/layout.container.ts:53",{"_index":1915,"title":{},"body":{"components/LayoutContainer.html":{}}}],["src/app/shared/layouts/layout.container.ts:63",{"_index":1917,"title":{},"body":{"components/LayoutContainer.html":{}}}],["src/app/shared/layouts/layout.module.t",{"_index":1940,"title":{},"body":{"modules/LayoutContainersModule.html":{}}}],["src/app/shared/layouts/layout.sandbox.t",{"_index":1965,"title":{},"body":{"injectables/LayoutSandbox.html":{}}}],["src/app/shared/layouts/layout.sandbox.ts:101",{"_index":1979,"title":{},"body":{"injectables/LayoutSandbox.html":{}}}],["src/app/shared/layouts/layout.sandbox.ts:108",{"_index":1986,"title":{},"body":{"injectables/LayoutSandbox.html":{}}}],["src/app/shared/layouts/layout.sandbox.ts:115",{"_index":1982,"title":{},"body":{"injectables/LayoutSandbox.html":{}}}],["src/app/shared/layouts/layout.sandbox.ts:19",{"_index":1997,"title":{},"body":{"injectables/LayoutSandbox.html":{}}}],["src/app/shared/layouts/layout.sandbox.ts:20",{"_index":1988,"title":{},"body":{"injectables/LayoutSandbox.html":{}}}],["src/app/shared/layouts/layout.sandbox.ts:21",{"_index":1992,"title":{},"body":{"injectables/LayoutSandbox.html":{}}}],["src/app/shared/layouts/layout.sandbox.ts:22",{"_index":1995,"title":{},"body":{"injectables/LayoutSandbox.html":{}}}],["src/app/shared/layouts/layout.sandbox.ts:23",{"_index":1999,"title":{},"body":{"injectables/LayoutSandbox.html":{}}}],["src/app/shared/layouts/layout.sandbox.ts:24",{"_index":1990,"title":{},"body":{"injectables/LayoutSandbox.html":{}}}],["src/app/shared/layouts/layout.sandbox.ts:25",{"_index":1993,"title":{},"body":{"injectables/LayoutSandbox.html":{}}}],["src/app/shared/layouts/layout.sandbox.ts:27",{"_index":1973,"title":{},"body":{"injectables/LayoutSandbox.html":{}}}],["src/app/shared/layouts/layout.sandbox.ts:38",{"_index":1983,"title":{},"body":{"injectables/LayoutSandbox.html":{}}}],["src/app/shared/layouts/layout.sandbox.ts:44",{"_index":1981,"title":{},"body":{"injectables/LayoutSandbox.html":{}}}],["src/app/shared/layouts/layout.sandbox.ts:49",{"_index":1985,"title":{},"body":{"injectables/LayoutSandbox.html":{}}}],["src/app/shared/layouts/layout.sandbox.ts:63",{"_index":1978,"title":{},"body":{"injectables/LayoutSandbox.html":{}}}],["src/app/shared/layouts/layout.sandbox.ts:71",{"_index":1984,"title":{},"body":{"injectables/LayoutSandbox.html":{}}}],["src/app/shared/layouts/layout.sandbox.ts:78",{"_index":1975,"title":{},"body":{"injectables/LayoutSandbox.html":{}}}],["src/app/shared/layouts/layout.sandbox.ts:88",{"_index":1977,"title":{},"body":{"injectables/LayoutSandbox.html":{}}}],["src/app/shared/layouts/left",{"_index":1305,"title":{},"body":{"components/DossierDetailsComponent.html":{},"components/LeftSidebarComponent.html":{},"components/SelectedActionsComponent.html":{}}}],["src/app/shared/models/account.model.t",{"_index":5,"title":{},"body":{"classes/Account.html":{}}}],["src/app/shared/models/account.model.ts:2",{"_index":25,"title":{},"body":{"classes/Account.html":{}}}],["src/app/shared/models/account.model.ts:3",{"_index":23,"title":{},"body":{"classes/Account.html":{}}}],["src/app/shared/models/account.model.ts:4",{"_index":26,"title":{},"body":{"classes/Account.html":{}}}],["src/app/shared/models/account.model.ts:5",{"_index":16,"title":{},"body":{"classes/Account.html":{}}}],["src/app/shared/models/act",{"_index":40,"title":{},"body":{"classes/ActionHandler.html":{}}}],["src/app/shared/models/auth/class",{"_index":858,"title":{},"body":{"classes/ClassRightModel.html":{}}}],["src/app/shared/models/auth/login.model.t",{"_index":2137,"title":{},"body":{"classes/LoginForm.html":{}}}],["src/app/shared/models/auth/login.model.ts:2",{"_index":2144,"title":{},"body":{"classes/LoginForm.html":{}}}],["src/app/shared/models/auth/login.model.ts:3",{"_index":2145,"title":{},"body":{"classes/LoginForm.html":{}}}],["src/app/shared/models/auth/login.model.ts:4",{"_index":2146,"title":{},"body":{"classes/LoginForm.html":{}}}],["src/app/shared/models/auth/login.model.ts:5",{"_index":2147,"title":{},"body":{"classes/LoginForm.html":{}}}],["src/app/shared/models/auth/login.model.ts:6",{"_index":2148,"title":{},"body":{"classes/LoginForm.html":{}}}],["src/app/shared/models/auth/login.model.ts:7",{"_index":2143,"title":{},"body":{"classes/LoginForm.html":{}}}],["src/app/shared/models/auth/role.model.t",{"_index":3191,"title":{},"body":{"interfaces/role.html":{}}}],["src/app/shared/models/auth/user.model.t",{"_index":2991,"title":{},"body":{"classes/User.html":{}}}],["src/app/shared/models/auth/user.model.ts:20",{"_index":3000,"title":{},"body":{"classes/User.html":{}}}],["src/app/shared/models/auth/user.model.ts:28",{"_index":2999,"title":{},"body":{"classes/User.html":{}}}],["src/app/shared/models/auth/user.model.ts:3",{"_index":2996,"title":{},"body":{"classes/User.html":{}}}],["src/app/shared/models/auth/user.model.ts:4",{"_index":2997,"title":{},"body":{"classes/User.html":{}}}],["src/app/shared/models/auth/user.model.ts:5",{"_index":2998,"title":{},"body":{"classes/User.html":{}}}],["src/app/shared/models/auth/user.model.ts:6",{"_index":2995,"title":{},"body":{"classes/User.html":{}}}],["src/app/shared/models/dossier/dossi",{"_index":1330,"title":{},"body":{"classes/DossierFilterModel.html":{},"interfaces/IDossierFilterModel.html":{}}}],["src/app/shared/models/dossier/tre",{"_index":1861,"title":{},"body":{"classes/ITreeNavModel.html":{},"classes/TreeNavModel.html":{}}}],["src/app/shared/models/dossier/tree.model.t",{"_index":1438,"title":{},"body":{"classes/DossierNavigatorTreeModel.html":{},"interfaces/IDossierNavigatorTreeModel.html":{}}}],["src/app/shared/models/dossier/tree.model.ts:10",{"_index":1467,"title":{},"body":{"classes/DossierNavigatorTreeModel.html":{}}}],["src/app/shared/models/dossier/tree.model.ts:11",{"_index":1453,"title":{},"body":{"classes/DossierNavigatorTreeModel.html":{}}}],["src/app/shared/models/dossier/tree.model.ts:12",{"_index":1455,"title":{},"body":{"classes/DossierNavigatorTreeModel.html":{}}}],["src/app/shared/models/dossier/tree.model.ts:13",{"_index":1465,"title":{},"body":{"classes/DossierNavigatorTreeModel.html":{}}}],["src/app/shared/models/dossier/tree.model.ts:14",{"_index":1457,"title":{},"body":{"classes/DossierNavigatorTreeModel.html":{}}}],["src/app/shared/models/dossier/tree.model.ts:15",{"_index":1461,"title":{},"body":{"classes/DossierNavigatorTreeModel.html":{}}}],["src/app/shared/models/dossier/tree.model.ts:16",{"_index":1452,"title":{},"body":{"classes/DossierNavigatorTreeModel.html":{}}}],["src/app/shared/models/dossier/tree.model.ts:17",{"_index":1460,"title":{},"body":{"classes/DossierNavigatorTreeModel.html":{}}}],["src/app/shared/models/dossier/tree.model.ts:18",{"_index":1456,"title":{},"body":{"classes/DossierNavigatorTreeModel.html":{}}}],["src/app/shared/models/dossier/tree.model.ts:19",{"_index":1464,"title":{},"body":{"classes/DossierNavigatorTreeModel.html":{}}}],["src/app/shared/models/dossier/tree.model.ts:20",{"_index":1451,"title":{},"body":{"classes/DossierNavigatorTreeModel.html":{}}}],["src/app/shared/models/dossier/tree.model.ts:4",{"_index":1459,"title":{},"body":{"classes/DossierNavigatorTreeModel.html":{}}}],["src/app/shared/models/dossier/tree.model.ts:5",{"_index":1463,"title":{},"body":{"classes/DossierNavigatorTreeModel.html":{}}}],["src/app/shared/models/dossier/tree.model.ts:6",{"_index":1466,"title":{},"body":{"classes/DossierNavigatorTreeModel.html":{}}}],["src/app/shared/models/dossier/tree.model.ts:7",{"_index":1458,"title":{},"body":{"classes/DossierNavigatorTreeModel.html":{}}}],["src/app/shared/models/dossier/tree.model.ts:8",{"_index":1462,"title":{},"body":{"classes/DossierNavigatorTreeModel.html":{}}}],["src/app/shared/models/dossier/tree.model.ts:9",{"_index":1454,"title":{},"body":{"classes/DossierNavigatorTreeModel.html":{}}}],["src/app/shared/models/person.model.t",{"_index":1830,"title":{},"body":{"interfaces/IPerson.html":{},"classes/Person.html":{}}}],["src/app/shared/models/person.model.ts:2",{"_index":2247,"title":{},"body":{"classes/Person.html":{}}}],["src/app/shared/models/person.model.ts:3",{"_index":2248,"title":{},"body":{"classes/Person.html":{}}}],["src/app/shared/models/person.model.ts:4",{"_index":2250,"title":{},"body":{"classes/Person.html":{}}}],["src/app/shared/models/person.model.ts:5",{"_index":2249,"title":{},"body":{"classes/Person.html":{}}}],["src/app/shared/models/person.model.ts:6",{"_index":2246,"title":{},"body":{"classes/Person.html":{}}}],["src/app/shared/models/shared/language.model.t",{"_index":1870,"title":{},"body":{"interfaces/LanguageModel.html":{}}}],["src/app/shared/models/shared/menu.model.t",{"_index":1824,"title":{},"body":{"interfaces/IMenuModel.html":{},"classes/MenuModel.html":{}}}],["src/app/shared/models/shared/menu.model.ts:10",{"_index":2163,"title":{},"body":{"classes/MenuModel.html":{}}}],["src/app/shared/models/shared/menu.model.ts:11",{"_index":2159,"title":{},"body":{"classes/MenuModel.html":{}}}],["src/app/shared/models/shared/menu.model.ts:4",{"_index":2162,"title":{},"body":{"classes/MenuModel.html":{}}}],["src/app/shared/models/shared/menu.model.ts:5",{"_index":2164,"title":{},"body":{"classes/MenuModel.html":{}}}],["src/app/shared/models/shared/menu.model.ts:6",{"_index":2161,"title":{},"body":{"classes/MenuModel.html":{}}}],["src/app/shared/models/shared/menu.model.ts:7",{"_index":2166,"title":{},"body":{"classes/MenuModel.html":{}}}],["src/app/shared/models/shared/menu.model.ts:8",{"_index":2160,"title":{},"body":{"classes/MenuModel.html":{}}}],["src/app/shared/models/shared/menu.model.ts:9",{"_index":2165,"title":{},"body":{"classes/MenuModel.html":{}}}],["src/app/shared/models/shared/search",{"_index":1835,"title":{},"body":{"interfaces/ISearchBoxModel.html":{},"classes/SearchBoxModel.html":{}}}],["src/app/shared/models/shared/selectedactions.model.t",{"_index":2688,"title":{},"body":{"classes/SelectedActionsModel.html":{}}}],["src/app/shared/models/shared/selectedactions.model.ts:2",{"_index":2690,"title":{},"body":{"classes/SelectedActionsModel.html":{}}}],["src/app/shared/models/shared/selectedactions.model.ts:3",{"_index":2692,"title":{},"body":{"classes/SelectedActionsModel.html":{}}}],["src/app/shared/models/shared/selectedactions.model.ts:4",{"_index":2691,"title":{},"body":{"classes/SelectedActionsModel.html":{}}}],["src/app/shared/models/shared/selectedactions.model.ts:5",{"_index":2689,"title":{},"body":{"classes/SelectedActionsModel.html":{}}}],["src/app/shared/models/shared/sidebar",{"_index":1841,"title":{},"body":{"interfaces/ISidebarMenuModel.html":{},"classes/SidebarMenuModel.html":{}}}],["src/app/shared/pipes/index.t",{"_index":2549,"title":{},"body":{"modules/PipesModule.html":{}}}],["src/app/shared/pipes/sanitizehtml.pipe.t",{"_index":2611,"title":{},"body":{"pipes/SanitizeHtmlPipe.html":{}}}],["src/app/shared/pipes/sanitizehtml.pipe.ts:16",{"_index":2614,"title":{},"body":{"pipes/SanitizeHtmlPipe.html":{}}}],["src/app/shared/sandbox/base.sandbox.t",{"_index":2586,"title":{},"body":{"classes/Sandbox.html":{}}}],["src/app/shared/sandbox/base.sandbox.ts:11",{"_index":2598,"title":{},"body":{"classes/Sandbox.html":{}}}],["src/app/shared/sandbox/base.sandbox.ts:12",{"_index":2596,"title":{},"body":{"classes/Sandbox.html":{}}}],["src/app/shared/sandbox/base.sandbox.ts:13",{"_index":2594,"title":{},"body":{"classes/Sandbox.html":{}}}],["src/app/shared/sandbox/base.sandbox.ts:14",{"_index":2593,"title":{},"body":{"classes/Sandbox.html":{}}}],["src/app/shared/sandbox/base.sandbox.ts:15",{"_index":2591,"title":{},"body":{"classes/Sandbox.html":{}}}],["src/app/shared/sandbox/base.sandbox.ts:22",{"_index":2604,"title":{},"body":{"classes/Sandbox.html":{}}}],["src/app/shared/sandbox/base.sandbox.ts:32",{"_index":2601,"title":{},"body":{"classes/Sandbox.html":{}}}],["src/app/shared/store/actions/auth.action.t",{"_index":126,"title":{},"body":{"classes/AddUserAction.html":{},"classes/DoLoginAction.html":{},"classes/DoLoginFailAction.html":{},"classes/DoLoginSuccessAction.html":{},"classes/DoLogoutAction.html":{},"classes/DoLogoutFailAction.html":{},"classes/DoLogoutSuccessAction.html":{},"classes/RemoveUserAction.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/shared/store/actions/auth.action.ts:22",{"_index":1155,"title":{},"body":{"classes/DoLoginAction.html":{}}}],["src/app/shared/store/actions/auth.action.ts:24",{"_index":1156,"title":{},"body":{"classes/DoLoginAction.html":{}}}],["src/app/shared/store/actions/auth.action.ts:28",{"_index":1159,"title":{},"body":{"classes/DoLoginSuccessAction.html":{}}}],["src/app/shared/store/actions/auth.action.ts:30",{"_index":1160,"title":{},"body":{"classes/DoLoginSuccessAction.html":{}}}],["src/app/shared/store/actions/auth.action.ts:34",{"_index":1157,"title":{},"body":{"classes/DoLoginFailAction.html":{}}}],["src/app/shared/store/actions/auth.action.ts:36",{"_index":1158,"title":{},"body":{"classes/DoLoginFailAction.html":{}}}],["src/app/shared/store/actions/auth.action.ts:43",{"_index":1161,"title":{},"body":{"classes/DoLogoutAction.html":{}}}],["src/app/shared/store/actions/auth.action.ts:45",{"_index":1162,"title":{},"body":{"classes/DoLogoutAction.html":{}}}],["src/app/shared/store/actions/auth.action.ts:49",{"_index":1165,"title":{},"body":{"classes/DoLogoutSuccessAction.html":{}}}],["src/app/shared/store/actions/auth.action.ts:51",{"_index":1166,"title":{},"body":{"classes/DoLogoutSuccessAction.html":{}}}],["src/app/shared/store/actions/auth.action.ts:55",{"_index":1163,"title":{},"body":{"classes/DoLogoutFailAction.html":{}}}],["src/app/shared/store/actions/auth.action.ts:57",{"_index":1164,"title":{},"body":{"classes/DoLogoutFailAction.html":{}}}],["src/app/shared/store/actions/auth.action.ts:65",{"_index":128,"title":{},"body":{"classes/AddUserAction.html":{}}}],["src/app/shared/store/actions/auth.action.ts:67",{"_index":129,"title":{},"body":{"classes/AddUserAction.html":{}}}],["src/app/shared/store/actions/auth.action.ts:71",{"_index":2560,"title":{},"body":{"classes/RemoveUserAction.html":{}}}],["src/app/shared/store/actions/auth.action.ts:73",{"_index":2561,"title":{},"body":{"classes/RemoveUserAction.html":{}}}],["src/app/shared/store/actions/dossier.action.t",{"_index":1568,"title":{},"body":{"classes/GetTreeDetailAction.html":{},"classes/LoadAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"classes/ResetState.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetClosedAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/shared/store/actions/dossier.action.ts:29",{"_index":2061,"title":{},"body":{"classes/LoadAction.html":{}}}],["src/app/shared/store/actions/dossier.action.ts:30",{"_index":2062,"title":{},"body":{"classes/LoadAction.html":{}}}],["src/app/shared/store/actions/dossier.action.ts:34",{"_index":2069,"title":{},"body":{"classes/LoadSuccessAction.html":{}}}],["src/app/shared/store/actions/dossier.action.ts:35",{"_index":2070,"title":{},"body":{"classes/LoadSuccessAction.html":{}}}],["src/app/shared/store/actions/dossier.action.ts:39",{"_index":2067,"title":{},"body":{"classes/LoadFailAction.html":{}}}],["src/app/shared/store/actions/dossier.action.ts:40",{"_index":2068,"title":{},"body":{"classes/LoadFailAction.html":{}}}],["src/app/shared/store/actions/dossier.action.ts:44",{"_index":1569,"title":{},"body":{"classes/GetTreeDetailAction.html":{}}}],["src/app/shared/store/actions/dossier.action.ts:46",{"_index":1570,"title":{},"body":{"classes/GetTreeDetailAction.html":{}}}],["src/app/shared/store/actions/dossier.action.ts:50",{"_index":2584,"title":{},"body":{"classes/ResetState.html":{}}}],["src/app/shared/store/actions/dossier.action.ts:51",{"_index":2585,"title":{},"body":{"classes/ResetState.html":{}}}],["src/app/shared/store/actions/dossier.action.ts:63",{"_index":2693,"title":{},"body":{"classes/SetActiveAction.html":{}}}],["src/app/shared/store/actions/dossier.action.ts:64",{"_index":2694,"title":{},"body":{"classes/SetActiveAction.html":{}}}],["src/app/shared/store/actions/dossier.action.ts:67",{"_index":2703,"title":{},"body":{"classes/SetClosedAction.html":{}}}],["src/app/shared/store/actions/dossier.action.ts:68",{"_index":2704,"title":{},"body":{"classes/SetClosedAction.html":{}}}],["src/app/shared/store/actions/dossier.action.ts:71",{"_index":2695,"title":{},"body":{"classes/SetArchivedAction.html":{}}}],["src/app/shared/store/actions/dossier.action.ts:72",{"_index":2696,"title":{},"body":{"classes/SetArchivedAction.html":{}}}],["src/app/shared/store/actions/dossier.action.ts:75",{"_index":2707,"title":{},"body":{"classes/SetIncludeGroupAction.html":{}}}],["src/app/shared/store/actions/dossier.action.ts:76",{"_index":2708,"title":{},"body":{"classes/SetIncludeGroupAction.html":{}}}],["src/app/shared/store/actions/dossier.action.ts:79",{"_index":2709,"title":{},"body":{"classes/SetIncludeGuestAction.html":{}}}],["src/app/shared/store/actions/dossier.action.ts:80",{"_index":2710,"title":{},"body":{"classes/SetIncludeGuestAction.html":{}}}],["src/app/shared/store/actions/dossier.action.ts:83",{"_index":2711,"title":{},"body":{"classes/SetIncludeTasksAction.html":{}}}],["src/app/shared/store/actions/dossier.action.ts:84",{"_index":2712,"title":{},"body":{"classes/SetIncludeTasksAction.html":{}}}],["src/app/shared/store/actions/menus.action.t",{"_index":2643,"title":{},"body":{"classes/SelectAction.html":{},"classes/SetAvaiableMenu.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/shared/store/actions/menus.action.ts:17",{"_index":2644,"title":{},"body":{"classes/SelectAction.html":{}}}],["src/app/shared/store/actions/menus.action.ts:19",{"_index":2645,"title":{},"body":{"classes/SelectAction.html":{}}}],["src/app/shared/store/actions/menus.action.ts:23",{"_index":2697,"title":{},"body":{"classes/SetAvaiableMenu.html":{}}}],["src/app/shared/store/actions/menus.action.ts:25",{"_index":2698,"title":{},"body":{"classes/SetAvaiableMenu.html":{}}}],["src/app/shared/store/actions/person",{"_index":3206,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/shared/store/actions/persons.action.t",{"_index":57,"title":{},"body":{"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteSuccessAction.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSuccessAction.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/shared/store/actions/persons.action.ts:55",{"_index":121,"title":{},"body":{"classes/AddNewAction.html":{}}}],["src/app/shared/store/actions/persons.action.ts:57",{"_index":122,"title":{},"body":{"classes/AddNewAction.html":{}}}],["src/app/shared/store/actions/persons.action.ts:61",{"_index":123,"title":{},"body":{"classes/AddSuccessAction.html":{}}}],["src/app/shared/store/actions/persons.action.ts:62",{"_index":124,"title":{},"body":{"classes/AddSuccessAction.html":{}}}],["src/app/shared/store/actions/persons.action.ts:66",{"_index":62,"title":{},"body":{"classes/AddFailAction.html":{}}}],["src/app/shared/store/actions/persons.action.ts:67",{"_index":63,"title":{},"body":{"classes/AddFailAction.html":{}}}],["src/app/shared/store/actions/persons.action.ts:71",{"_index":2983,"title":{},"body":{"classes/UpdateAction.html":{}}}],["src/app/shared/store/actions/persons.action.ts:72",{"_index":2984,"title":{},"body":{"classes/UpdateAction.html":{}}}],["src/app/shared/store/actions/persons.action.ts:76",{"_index":2989,"title":{},"body":{"classes/UpdateSuccessAction.html":{}}}],["src/app/shared/store/actions/persons.action.ts:77",{"_index":2990,"title":{},"body":{"classes/UpdateSuccessAction.html":{}}}],["src/app/shared/store/actions/persons.action.ts:81",{"_index":2985,"title":{},"body":{"classes/UpdateFailAction.html":{}}}],["src/app/shared/store/actions/persons.action.ts:82",{"_index":2986,"title":{},"body":{"classes/UpdateFailAction.html":{}}}],["src/app/shared/store/actions/persons.action.ts:86",{"_index":1099,"title":{},"body":{"classes/DeleteAction.html":{}}}],["src/app/shared/store/actions/persons.action.ts:87",{"_index":1100,"title":{},"body":{"classes/DeleteAction.html":{}}}],["src/app/shared/store/actions/persons.action.ts:91",{"_index":1153,"title":{},"body":{"classes/DeleteSuccessAction.html":{}}}],["src/app/shared/store/actions/persons.action.ts:92",{"_index":1154,"title":{},"body":{"classes/DeleteSuccessAction.html":{}}}],["src/app/shared/store/actions/persons.action.ts:96",{"_index":1101,"title":{},"body":{"classes/DeleteFailAction.html":{}}}],["src/app/shared/store/actions/persons.action.ts:97",{"_index":1102,"title":{},"body":{"classes/DeleteFailAction.html":{}}}],["src/app/shared/store/actions/search",{"_index":3207,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/shared/store/actions/settings.action.t",{"_index":1104,"title":{},"body":{"classes/DeleteItemSelectedAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetCultureAction.html":{},"classes/SetLanguageAction.html":{},"classes/UpdateSelectedAction.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/shared/store/actions/settings.action.ts:24",{"_index":2713,"title":{},"body":{"classes/SetLanguageAction.html":{}}}],["src/app/shared/store/actions/settings.action.ts:26",{"_index":2714,"title":{},"body":{"classes/SetLanguageAction.html":{}}}],["src/app/shared/store/actions/settings.action.ts:30",{"_index":2705,"title":{},"body":{"classes/SetCultureAction.html":{}}}],["src/app/shared/store/actions/settings.action.ts:32",{"_index":2706,"title":{},"body":{"classes/SetCultureAction.html":{}}}],["src/app/shared/store/actions/settings.action.ts:36",{"_index":2065,"title":{},"body":{"classes/LoadApiRolesAction.html":{}}}],["src/app/shared/store/actions/settings.action.ts:38",{"_index":2066,"title":{},"body":{"classes/LoadApiRolesAction.html":{}}}],["src/app/shared/store/actions/settings.action.ts:42",{"_index":2701,"title":{},"body":{"classes/SetAvailableRolesAction.html":{}}}],["src/app/shared/store/actions/settings.action.ts:44",{"_index":2702,"title":{},"body":{"classes/SetAvailableRolesAction.html":{}}}],["src/app/shared/store/actions/settings.action.ts:55",{"_index":2063,"title":{},"body":{"classes/LoadApiLangsAction.html":{}}}],["src/app/shared/store/actions/settings.action.ts:57",{"_index":2064,"title":{},"body":{"classes/LoadApiLangsAction.html":{}}}],["src/app/shared/store/actions/settings.action.ts:61",{"_index":2699,"title":{},"body":{"classes/SetAvailableLanguagesAction.html":{}}}],["src/app/shared/store/actions/settings.action.ts:63",{"_index":2700,"title":{},"body":{"classes/SetAvailableLanguagesAction.html":{}}}],["src/app/shared/store/actions/settings.action.ts:67",{"_index":2987,"title":{},"body":{"classes/UpdateSelectedAction.html":{}}}],["src/app/shared/store/actions/settings.action.ts:68",{"_index":2988,"title":{},"body":{"classes/UpdateSelectedAction.html":{}}}],["src/app/shared/store/actions/settings.action.ts:72",{"_index":1105,"title":{},"body":{"classes/DeleteItemSelectedAction.html":{}}}],["src/app/shared/store/actions/settings.action.ts:73",{"_index":1106,"title":{},"body":{"classes/DeleteItemSelectedAction.html":{}}}],["src/app/shared/store/actions/settings.action.ts:83",{"_index":1167,"title":{},"body":{"classes/DocumentCreate.html":{}}}],["src/app/shared/store/actions/settings.action.ts:84",{"_index":1168,"title":{},"body":{"classes/DocumentCreate.html":{}}}],["src/app/shared/store/actions/settings.action.ts:88",{"_index":1171,"title":{},"body":{"classes/DocumentCreateSuccess.html":{}}}],["src/app/shared/store/actions/settings.action.ts:89",{"_index":1172,"title":{},"body":{"classes/DocumentCreateSuccess.html":{}}}],["src/app/shared/store/actions/settings.action.ts:93",{"_index":1169,"title":{},"body":{"classes/DocumentCreateError.html":{}}}],["src/app/shared/store/actions/settings.action.ts:94",{"_index":1170,"title":{},"body":{"classes/DocumentCreateError.html":{}}}],["src/app/shared/store/effects/auth.effect.t",{"_index":629,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/shared/store/effects/auth.effect.ts:30",{"_index":657,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/shared/store/effects/auth.effect.ts:41",{"_index":683,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/shared/store/effects/auth.effect.ts:61",{"_index":691,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/shared/store/effects/dossier.effect.t",{"_index":1318,"title":{},"body":{"injectables/DossierEffects.html":{}}}],["src/app/shared/store/effects/dossier.effect.ts:19",{"_index":1319,"title":{},"body":{"injectables/DossierEffects.html":{}}}],["src/app/shared/store/effects/dossier.effect.ts:30",{"_index":1327,"title":{},"body":{"injectables/DossierEffects.html":{}}}],["src/app/shared/store/effects/menus.effect.t",{"_index":2167,"title":{},"body":{"injectables/MenusEffects.html":{}}}],["src/app/shared/store/effects/menus.effect.ts:18",{"_index":2169,"title":{},"body":{"injectables/MenusEffects.html":{}}}],["src/app/shared/store/effects/menus.effect.ts:28",{"_index":2175,"title":{},"body":{"injectables/MenusEffects.html":{}}}],["src/app/shared/store/effects/persons.effect.t",{"_index":2401,"title":{},"body":{"injectables/PersonsEffects.html":{}}}],["src/app/shared/store/effects/persons.effect.ts:18",{"_index":2403,"title":{},"body":{"injectables/PersonsEffects.html":{}}}],["src/app/shared/store/effects/persons.effect.ts:29",{"_index":2422,"title":{},"body":{"injectables/PersonsEffects.html":{}}}],["src/app/shared/store/effects/persons.effect.ts:42",{"_index":2416,"title":{},"body":{"injectables/PersonsEffects.html":{}}}],["src/app/shared/store/effects/persons.effect.ts:53",{"_index":2410,"title":{},"body":{"injectables/PersonsEffects.html":{}}}],["src/app/shared/store/effects/search",{"_index":2623,"title":{},"body":{"injectables/SearchBoxDatasEffects.html":{}}}],["src/app/shared/store/effects/settings.effect.t",{"_index":2715,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["src/app/shared/store/effects/settings.effect.ts:17",{"_index":2717,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["src/app/shared/store/effects/settings.effect.ts:28",{"_index":2733,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["src/app/shared/store/effects/settings.effect.ts:38",{"_index":2725,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["src/app/shared/store/index.t",{"_index":2754,"title":{},"body":{"interfaces/State.html":{}}}],["src/app/shared/utility/utility.module.t",{"_index":3040,"title":{},"body":{"modules/UtilityModule.html":{}}}],["src/app/shared/utility/utility.service.t",{"_index":3010,"title":{},"body":{"injectables/UtilService.html":{}}}],["src/app/shared/utility/utility.service.ts:23",{"_index":3018,"title":{},"body":{"injectables/UtilService.html":{}}}],["src/app/shared/utility/utility.service.ts:53",{"_index":3022,"title":{},"body":{"injectables/UtilService.html":{}}}],["src/app/shared/utility/utility.service.ts:61",{"_index":3020,"title":{},"body":{"injectables/UtilService.html":{}}}],["src/app/shared/utility/utility.service.ts:8",{"_index":3016,"title":{},"body":{"injectables/UtilService.html":{}}}],["src/app/shared/utility/utilityhelpers.t",{"_index":3208,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/shared/utility/validation.service.t",{"_index":3043,"title":{},"body":{"injectables/ValidationService.html":{}}}],["src/app/shared/utility/validation.service.ts:14",{"_index":3055,"title":{},"body":{"injectables/ValidationService.html":{}}}],["src/app/shared/utility/validation.service.ts:24",{"_index":3052,"title":{},"body":{"injectables/ValidationService.html":{}}}],["src/app/shared/utility/validation.service.ts:34",{"_index":3049,"title":{},"body":{"injectables/ValidationService.html":{}}}],["start",{"_index":507,"title":{"index.html":{}},"body":{"modules/AppModule.html":{},"index.html":{}}}],["state",{"_index":255,"title":{"interfaces/State.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthEffects.html":{},"injectables/AuthGuard.html":{},"injectables/AuthSandbox.html":{},"classes/DeleteItemSelectedAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"classes/GetTreeDetailAction.html":{},"classes/LoadAction.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"injectables/PersonsEffects.html":{},"classes/ResetState.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetClosedAction.html":{},"classes/SetCultureAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{},"classes/SetLanguageAction.html":{},"interfaces/State.html":{},"classes/UpdateSelectedAction.html":{},"index.html":{}}}],["state.client_id",{"_index":670,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["state.client_secret",{"_index":672,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["state.contextvalu",{"_index":2721,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["state.dossierdata",{"_index":2899,"title":{},"body":{"interfaces/State.html":{}}}],["state.grant_typ",{"_index":674,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["state.login",{"_index":2847,"title":{},"body":{"interfaces/State.html":{}}}],["state.menu",{"_index":2878,"title":{},"body":{"interfaces/State.html":{}}}],["state.password",{"_index":668,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["state.person",{"_index":2856,"title":{},"body":{"interfaces/State.html":{}}}],["state.persondetail",{"_index":2869,"title":{},"body":{"interfaces/State.html":{}}}],["state.scop",{"_index":676,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["state.searchboxdata",{"_index":2890,"title":{},"body":{"interfaces/State.html":{}}}],["state.set",{"_index":2830,"title":{},"body":{"interfaces/State.html":{}}}],["state.usernam",{"_index":666,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["stateupd",{"_index":636,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["static",{"_index":578,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthSandbox.html":{},"injectables/DossierService.html":{},"classes/HttpAdapter.html":{},"modules/HttpServiceModule.html":{},"injectables/PersonsService.html":{},"components/SelectedActionsComponent.html":{},"modules/UtilityModule.html":{}}}],["statu",{"_index":1694,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["statusad",{"_index":2477,"title":{},"body":{"injectables/PersonsSandbox.html":{}}}],["step",{"_index":3150,"title":{},"body":{"index.html":{}}}],["stock",{"_index":3033,"title":{},"body":{"injectables/UtilService.html":{}}}],["storag",{"_index":253,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthSandbox.html":{},"classes/Sandbox.html":{},"classes/User.html":{}}}],["store",{"_index":408,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppSandbox.html":{},"injectables/AuthEffects.html":{},"injectables/AuthSandbox.html":{},"directives/AuthorizeDirective.html":{},"injectables/DossierEffects.html":{},"injectables/DossierSandbox.html":{},"injectables/LayoutSandbox.html":{},"injectables/MenusEffects.html":{},"injectables/PersonsEffects.html":{},"injectables/PersonsSandbox.html":{},"classes/Sandbox.html":{},"injectables/SearchBoxDatasEffects.html":{},"injectables/SettingsEffects.html":{},"interfaces/State.html":{}}}],["store(st",{"_index":2823,"title":{},"body":{"interfaces/State.html":{}}}],["store/actions/auth.act",{"_index":2001,"title":{},"body":{"injectables/LayoutSandbox.html":{},"classes/Sandbox.html":{}}}],["store/actions/menus.act",{"_index":2004,"title":{},"body":{"injectables/LayoutSandbox.html":{}}}],["store/actions/search",{"_index":2006,"title":{},"body":{"injectables/LayoutSandbox.html":{}}}],["store/actions/settings.act",{"_index":2002,"title":{},"body":{"injectables/LayoutSandbox.html":{}}}],["storedevtoolsmodul",{"_index":439,"title":{},"body":{"modules/AppModule.html":{}}}],["storedevtoolsmodule.instrumentonlywithextens",{"_index":502,"title":{},"body":{"modules/AppModule.html":{}}}],["storelogg",{"_index":2812,"title":{},"body":{"interfaces/State.html":{}}}],["storemodul",{"_index":436,"title":{},"body":{"modules/AppModule.html":{}}}],["storemodule.providestor",{"_index":473,"title":{},"body":{"modules/AppModule.html":{}}}],["storemodule.providestore(stor",{"_index":484,"title":{},"body":{"modules/AppModule.html":{}}}],["string",{"_index":22,"title":{},"body":{"classes/Account.html":{},"classes/ActionHandler.html":{},"injectables/AppSandbox.html":{},"injectables/AuthGuard.html":{},"directives/AuthorizeDirective.html":{},"classes/BaseComponent.html":{},"classes/ClassRightModel.html":{},"components/ControlWebDavComponent.html":{},"classes/DeleteItemSelectedAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"components/DocumentGenerationComponent.html":{},"components/DossierNavigatorComponent.html":{},"injectables/DossierSandbox.html":{},"components/HeaderComponent.html":{},"injectables/HttpResponseHandler.html":{},"injectables/HttpService.html":{},"interfaces/IMenuModel.html":{},"interfaces/IPerson.html":{},"interfaces/ISidebarMenuModel.html":{},"interfaces/ITemplateModel.html":{},"classes/ITreeNavModel.html":{},"interfaces/LanguageModel.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"components/LoginComponent.html":{},"classes/LoginForm.html":{},"classes/MenuModel.html":{},"classes/Person.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"injectables/PersonsSandbox.html":{},"components/ProfileBarComponent.html":{},"injectables/ReportService.html":{},"components/ReportViewerComponent.html":{},"classes/Sandbox.html":{},"pipes/SanitizeHtmlPipe.html":{},"components/SelectedActionsComponent.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetCultureAction.html":{},"classes/SetLanguageAction.html":{},"classes/SidebarMenuModel.html":{},"components/SpinnerComponent.html":{},"classes/TemplateModel.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{},"classes/TreeNavModel.html":{},"classes/UpdateSelectedAction.html":{},"classes/User.html":{},"injectables/UtilService.html":{},"injectables/ValidationService.html":{},"interfaces/role.html":{}}}],["style",{"_index":3142,"title":{},"body":{"index.html":{}}}],["style.background",{"_index":2964,"title":{},"body":{"components/TreeListComponent.html":{}}}],["styleurl",{"_index":845,"title":{},"body":{"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{}}}],["sub.unsubscrib",{"_index":273,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthSandbox.html":{},"components/DossierNavigatorComponent.html":{},"injectables/DossierSandbox.html":{},"components/LayoutContainer.html":{},"injectables/LayoutSandbox.html":{},"injectables/PersonsSandbox.html":{}}}],["submit",{"_index":602,"title":{},"body":{"injectables/AuthApiClient.html":{},"components/LoginComponent.html":{},"injectables/PersonsApiClient.html":{},"index.html":{}}}],["subscrib",{"_index":259,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthSandbox.html":{},"injectables/DossierSandbox.html":{},"components/LayoutContainer.html":{},"injectables/LayoutSandbox.html":{},"injectables/PersonsResolver.html":{},"injectables/PersonsSandbox.html":{}}}],["subscribe((data",{"_index":922,"title":{},"body":{"injectables/ConfigService.html":{}}}],["subscribe((env_data",{"_index":913,"title":{},"body":{"injectables/ConfigService.html":{}}}],["subscribe(load",{"_index":2014,"title":{},"body":{"injectables/LayoutSandbox.html":{}}}],["subscribetologinchang",{"_index":1972,"title":{},"body":{"injectables/LayoutSandbox.html":{}}}],["subscript",{"_index":225,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthSandbox.html":{},"components/DossierNavigatorComponent.html":{},"injectables/DossierSandbox.html":{},"components/LayoutContainer.html":{},"injectables/LayoutSandbox.html":{},"components/PersonsComponent.html":{},"injectables/PersonsSandbox.html":{},"index.html":{}}}],["success",{"_index":78,"title":{},"body":{"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"classes/AddUserAction.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteItemSelectedAction.html":{},"classes/DeleteSuccessAction.html":{},"classes/DoLoginAction.html":{},"classes/DoLoginFailAction.html":{},"classes/DoLoginSuccessAction.html":{},"classes/DoLogoutAction.html":{},"classes/DoLogoutFailAction.html":{},"classes/DoLogoutSuccessAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"classes/GetTreeDetailAction.html":{},"classes/LoadAction.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"classes/RemoveUserAction.html":{},"classes/ResetState.html":{},"classes/SelectAction.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetAvaiableMenu.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetClosedAction.html":{},"classes/SetCultureAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{},"classes/SetLanguageAction.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSelectedAction.html":{},"classes/UpdateSuccessAction.html":{},"injectables/UtilService.html":{}}}],["successfulli",{"_index":1053,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["such",{"_index":1059,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["suffix",{"_index":1926,"title":{},"body":{"components/LayoutContainer.html":{}}}],["super(appst",{"_index":556,"title":{},"body":{"injectables/AppSandbox.html":{},"injectables/AuthSandbox.html":{},"injectables/DossierSandbox.html":{},"injectables/LayoutSandbox.html":{},"injectables/PersonsSandbox.html":{}}}],["super(injector",{"_index":1387,"title":{},"body":{"components/DossierNavigatorComponent.html":{},"components/LoginComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{}}}],["support",{"_index":451,"title":{},"body":{"modules/AppModule.html":{},"injectables/HttpService.html":{},"miscellaneous/enumerations.html":{},"modules.html":{}}}],["svg",{"_index":3181,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":1023,"title":{},"body":{"components/ControlWebDavComponent.html":{},"injectables/DocumentsHelper.html":{},"injectables/HttpResponseHandler.html":{},"injectables/UtilService.html":{}}}],["switchmap",{"_index":2728,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["switchmap((st",{"_index":663,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/DossierEffects.html":{},"injectables/PersonsEffects.html":{},"injectables/SettingsEffects.html":{}}}],["switchmap(st",{"_index":686,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/MenusEffects.html":{},"injectables/PersonsEffects.html":{},"injectables/SearchBoxDatasEffects.html":{}}}],["symbol",{"_index":465,"title":{},"body":{"modules/AppModule.html":{}}}],["tab",{"_index":354,"title":{},"body":{"components/AppComponent.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"directives/DynamicTabsDirective.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{},"index.html":{}}}],["tabl",{"_index":2757,"title":{},"body":{"interfaces/State.html":{}}}],["tabs.direct",{"_index":887,"title":{},"body":{"modules/ComponentsModule.html":{}}}],["tabs.directive.t",{"_index":1551,"title":{},"body":{"directives/DynamicTabsDirective.html":{}}}],["tabs.directive.ts:7",{"_index":1553,"title":{},"body":{"directives/DynamicTabsDirective.html":{}}}],["tabs.directive.ts:8",{"_index":1554,"title":{},"body":{"directives/DynamicTabsDirective.html":{}}}],["tag",{"_index":267,"title":{},"body":{"components/AppComponent.html":{}}}],["take",{"_index":2806,"title":{},"body":{"interfaces/State.html":{}}}],["templat",{"_index":205,"title":{},"body":{"injectables/AppApiClient.html":{},"components/AppComponent.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{}}}],["template.model",{"_index":998,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["templateid",{"_index":170,"title":{},"body":{"injectables/AppApiClient.html":{},"components/DocumentGenerationComponent.html":{}}}],["templatemodel",{"_index":963,"title":{"classes/TemplateModel.html":{}},"body":{"components/ControlWebDavComponent.html":{},"interfaces/ITemplateModel.html":{},"classes/TemplateModel.html":{}}}],["templatemodel(item",{"_index":1080,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["templateref",{"_index":796,"title":{},"body":{"directives/AuthorizeDirective.html":{}}}],["templateurl",{"_index":221,"title":{},"body":{"components/AppComponent.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{}}}],["tesst",{"_index":2395,"title":{},"body":{"components/PersonsComponent.html":{}}}],["test",{"_index":633,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["text",{"_index":1864,"title":{},"body":{"classes/ITreeNavModel.html":{},"classes/TreeNavModel.html":{}}}],["thay",{"_index":1532,"title":{},"body":{"injectables/DossierSandbox.html":{}}}],["theme",{"_index":3141,"title":{},"body":{"index.html":{}}}],["third",{"_index":433,"title":{},"body":{"modules/AppModule.html":{}}}],["this)[properti",{"_index":1349,"title":{},"body":{"classes/DossierFilterModel.html":{},"classes/DossierNavigatorTreeModel.html":{},"interfaces/IDossierFilterModel.html":{},"interfaces/IDossierNavigatorTreeModel.html":{},"interfaces/IMenuModel.html":{},"interfaces/IPerson.html":{},"interfaces/ISearchBoxModel.html":{},"interfaces/ISidebarMenuModel.html":{},"classes/ITreeNavModel.html":{},"classes/MenuModel.html":{},"classes/Person.html":{},"classes/SearchBoxModel.html":{},"classes/SidebarMenuModel.html":{},"classes/TreeNavModel.html":{}}}],["this._document.downloadfile(document.filebinari",{"_index":1204,"title":{},"body":{"modules/DocumentGenerationModule.html":{},"components/PersonFormComponent.html":{}}}],["this._viewermodel",{"_index":1236,"title":{},"body":{"components/DocumentReportViewerComponent.html":{}}}],["this._wrappercontain",{"_index":2046,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["this.access_token",{"_index":3001,"title":{},"body":{"classes/User.html":{}}}],["this.act",{"_index":658,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/DossierEffects.html":{},"injectables/MenusEffects.html":{},"injectables/PersonsEffects.html":{},"injectables/SearchBoxDatasEffects.html":{},"injectables/SettingsEffects.html":{}}}],["this.actioncancel.isvis",{"_index":2305,"title":{},"body":{"components/PersonFormComponent.html":{}}}],["this.actioncancel.rol",{"_index":2306,"title":{},"body":{"components/PersonFormComponent.html":{}}}],["this.actiondelet",{"_index":2313,"title":{},"body":{"components/PersonFormComponent.html":{}}}],["this.actiondelete.isvis",{"_index":2314,"title":{},"body":{"components/PersonFormComponent.html":{}}}],["this.actiondelete.rol",{"_index":2317,"title":{},"body":{"components/PersonFormComponent.html":{}}}],["this.actionnew",{"_index":2343,"title":{},"body":{"components/PersonListComponent.html":{}}}],["this.actionnew.isvis",{"_index":2344,"title":{},"body":{"components/PersonListComponent.html":{}}}],["this.actionnew.rol",{"_index":2345,"title":{},"body":{"components/PersonListComponent.html":{}}}],["this.actionsav",{"_index":2310,"title":{},"body":{"components/PersonFormComponent.html":{}}}],["this.actionsave.isvis",{"_index":2311,"title":{},"body":{"components/PersonFormComponent.html":{}}}],["this.actionsave.rol",{"_index":2312,"title":{},"body":{"components/PersonFormComponent.html":{}}}],["this.appapiclient.documentcreate(state.templateid",{"_index":2720,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["this.appapiclient.getrol",{"_index":2729,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["this.appsandbox.loadus",{"_index":256,"title":{},"body":{"components/AppComponent.html":{}}}],["this.appsandbox.postdocumentcreate(",{"_index":1202,"title":{},"body":{"modules/DocumentGenerationModule.html":{}}}],["this.appsandbox.setuplanguag",{"_index":251,"title":{},"body":{"components/AppComponent.html":{}}}],["this.appsandbox.xdocument$.subscribe(docu",{"_index":1203,"title":{},"body":{"modules/DocumentGenerationModule.html":{}}}],["this.appstate$.dispatch(new",{"_index":571,"title":{},"body":{"injectables/AppSandbox.html":{},"injectables/AuthSandbox.html":{},"injectables/DossierSandbox.html":{},"injectables/LayoutSandbox.html":{},"injectables/PersonsSandbox.html":{},"classes/Sandbox.html":{}}}],["this.appstate$.select(store.getauthload",{"_index":758,"title":{},"body":{"injectables/AuthSandbox.html":{},"injectables/LayoutSandbox.html":{}}}],["this.appstate$.select(store.getavaiablemenu",{"_index":1989,"title":{},"body":{"injectables/LayoutSandbox.html":{}}}],["this.appstate$.select(store.getavailablelanguag",{"_index":1987,"title":{},"body":{"injectables/LayoutSandbox.html":{}}}],["this.appstate$.select(store.getavailablerol",{"_index":2592,"title":{},"body":{"classes/Sandbox.html":{}}}],["this.appstate$.select(store.getdossiertreesdata",{"_index":1492,"title":{},"body":{"injectables/DossierSandbox.html":{}}}],["this.appstate$.select(store.getdossiertreesload",{"_index":1496,"title":{},"body":{"injectables/DossierSandbox.html":{}}}],["this.appstate$.select(store.getfiltersdossi",{"_index":1498,"title":{},"body":{"injectables/DossierSandbox.html":{}}}],["this.appstate$.select(store.getloggedus",{"_index":2597,"title":{},"body":{"classes/Sandbox.html":{}}}],["this.appstate$.select(store.getmenusdata",{"_index":1991,"title":{},"body":{"injectables/LayoutSandbox.html":{}}}],["this.appstate$.select(store.getpersonaddnew",{"_index":2501,"title":{},"body":{"injectables/PersonsSandbox.html":{}}}],["this.appstate$.select(store.getpersondetailsdata",{"_index":2503,"title":{},"body":{"injectables/PersonsSandbox.html":{}}}],["this.appstate$.select(store.getpersondetailsload",{"_index":2505,"title":{},"body":{"injectables/PersonsSandbox.html":{}}}],["this.appstate$.select(store.getpersonsdata",{"_index":2507,"title":{},"body":{"injectables/PersonsSandbox.html":{}}}],["this.appstate$.select(store.getpersonsload",{"_index":2509,"title":{},"body":{"injectables/PersonsSandbox.html":{}}}],["this.appstate$.select(store.getsearchboxdatasdata",{"_index":1994,"title":{},"body":{"injectables/LayoutSandbox.html":{}}}],["this.appstate$.select(store.getselectedact",{"_index":2599,"title":{},"body":{"classes/Sandbox.html":{}}}],["this.appstate$.select(store.getselectedcultur",{"_index":2595,"title":{},"body":{"classes/Sandbox.html":{}}}],["this.appstate$.select(store.getselectedlanguag",{"_index":1996,"title":{},"body":{"injectables/LayoutSandbox.html":{}}}],["this.appstate$.select(store.getselectmenu",{"_index":1998,"title":{},"body":{"injectables/LayoutSandbox.html":{}}}],["this.appstate$.select(store.getstatusad",{"_index":2511,"title":{},"body":{"injectables/PersonsSandbox.html":{}}}],["this.appstate$.select(store.gettreedetail",{"_index":1494,"title":{},"body":{"injectables/DossierSandbox.html":{}}}],["this.appstate$.select(store.getxdocumentcr",{"_index":550,"title":{},"body":{"injectables/AppSandbox.html":{}}}],["this.assetsfold",{"_index":1928,"title":{},"body":{"components/LayoutContainer.html":{}}}],["this.authapiclient.login(urlsearchparams.tostr",{"_index":677,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.authapiclient.logout",{"_index":687,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.authsandbox.availableroles$.subscribe(right",{"_index":804,"title":{},"body":{"directives/AuthorizeDirective.html":{}}}],["this.authsandbox.availableroles$.switchmap((right",{"_index":816,"title":{},"body":{"injectables/AuthorizeGuard.html":{}}}],["this.authsandbox.getconfigstoken",{"_index":2112,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authsandbox.login(form",{"_index":2122,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authsandbox.unregisterev",{"_index":2103,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.availablelanguages.find(lang",{"_index":1893,"title":{},"body":{"components/LanguageSelectorComponent.html":{}}}],["this.checkauthorize(route.data.rol",{"_index":815,"title":{},"body":{"injectables/AuthorizeGuard.html":{}}}],["this.classnam",{"_index":869,"title":{},"body":{"classes/ClassRightModel.html":{}}}],["this.client_id",{"_index":2149,"title":{},"body":{"classes/LoginForm.html":{}}}],["this.client_secret",{"_index":2151,"title":{},"body":{"classes/LoginForm.html":{}}}],["this.config",{"_index":923,"title":{},"body":{"injectables/ConfigService.html":{},"components/ControlWebDavComponent.html":{}}}],["this.config.folder_plugin",{"_index":1017,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["this.config.host}/${this.userfold",{"_index":1011,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["this.config[key",{"_index":926,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.configfold",{"_index":1007,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["this.configservice.get('api",{"_index":1806,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.configservice.get('api').baseurl",{"_index":1805,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.configservice.get('loc",{"_index":557,"title":{},"body":{"injectables/AppSandbox.html":{}}}],["this.configservice.get('notifications').notfoundendpoint",{"_index":1747,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["this.configservice.get('notifications').opt",{"_index":576,"title":{},"body":{"injectables/AppSandbox.html":{},"injectables/HttpResponseHandler.html":{},"injectables/UtilService.html":{}}}],["this.configservice.get('notifications').unauthorizedendpoint",{"_index":1737,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["this.configservice.get('paths').userimagefold",{"_index":1929,"title":{},"body":{"components/LayoutContainer.html":{}}}],["this.configservice.get(key",{"_index":3039,"title":{},"body":{"injectables/UtilService.html":{}}}],["this.control.nativeel",{"_index":1241,"title":{},"body":{"components/DocumentReportViewerComponent.html":{}}}],["this.copyrightnam",{"_index":2101,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.cultur",{"_index":1541,"title":{},"body":{"injectables/DossierSandbox.html":{},"injectables/PersonsSandbox.html":{},"classes/Sandbox.html":{}}}],["this.displaynam",{"_index":1855,"title":{},"body":{"interfaces/ITemplateModel.html":{},"classes/TemplateModel.html":{}}}],["this.dossierapiclient.gettrees(queri",{"_index":1323,"title":{},"body":{"injectables/DossierEffects.html":{}}}],["this.dossiersandbox.deletedossieritem(itemdata",{"_index":1417,"title":{},"body":{"components/DossierNavigatorComponent.html":{}}}],["this.dossiersandbox.dossierdetail$.subscribe((dossi",{"_index":2947,"title":{},"body":{"components/TreeDetailComponent.html":{}}}],["this.dossiersandbox.loaddossiertrees(filt",{"_index":1414,"title":{},"body":{"components/DossierNavigatorComponent.html":{}}}],["this.dossiersandbox.resetst",{"_index":1388,"title":{},"body":{"components/DossierNavigatorComponent.html":{}}}],["this.dossiersandbox.selectdossier(itemdata.data",{"_index":1415,"title":{},"body":{"components/DossierNavigatorComponent.html":{}}}],["this.dossiersandbox.selectdossier(treemodel",{"_index":2961,"title":{},"body":{"components/TreeListComponent.html":{}}}],["this.elementref.nativeelement.contains(event.target",{"_index":1897,"title":{},"body":{"components/LanguageSelectorComponent.html":{}}}],["this.email",{"_index":31,"title":{},"body":{"classes/Account.html":{}}}],["this.env",{"_index":914,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.env[key",{"_index":925,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.expires_in",{"_index":3005,"title":{},"body":{"classes/User.html":{}}}],["this.fb.group",{"_index":2105,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.filenam",{"_index":1853,"title":{},"body":{"interfaces/ITemplateModel.html":{},"classes/TemplateModel.html":{}}}],["this.filterdossier$.subscribe(filt",{"_index":1501,"title":{},"body":{"injectables/DossierSandbox.html":{}}}],["this.formdata",{"_index":2315,"title":{},"body":{"components/PersonFormComponent.html":{},"components/TreeDetailComponent.html":{}}}],["this.formdata.id",{"_index":2316,"title":{},"body":{"components/PersonFormComponent.html":{}}}],["this.getconfigsapi()['dossi",{"_index":1301,"title":{},"body":{"injectables/DossierApiClient.html":{}}}],["this.getlangcultur",{"_index":1815,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.getrelativeurl(responsebody.url",{"_index":1739,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["this.gettoken",{"_index":1813,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.gettranslatedvalue(response[key",{"_index":1761,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["this.gettranslatedvalue(valu",{"_index":1760,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["this.gettype(typ",{"_index":1266,"title":{},"body":{"injectables/DocumentsHelper.html":{}}}],["this.grant_typ",{"_index":2153,"title":{},"body":{"classes/LoginForm.html":{}}}],["this.handlebadgatewayerror",{"_index":1726,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["this.handlebadrequest(respons",{"_index":1720,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["this.handleerrormessages(bodypars",{"_index":1731,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["this.handleforbidden",{"_index":1722,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["this.handlenotfound(respons",{"_index":1723,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["this.handlertogglenav(el",{"_index":1643,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.handleservererror(respons",{"_index":1724,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["this.handleservererror(responsebodi",{"_index":1732,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["this.handleunauthorized(respons",{"_index":1721,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["this.head",{"_index":1005,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["this.header.append('cont",{"_index":1006,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["this.homepag",{"_index":1639,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.href",{"_index":1858,"title":{},"body":{"interfaces/ITemplateModel.html":{},"classes/TemplateModel.html":{}}}],["this.http.get('/config",{"_index":916,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.http.get('/config/env.json",{"_index":910,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.http.get>(this._url",{"_index":2572,"title":{},"body":{"injectables/ReportService.html":{}}}],["this.id",{"_index":29,"title":{},"body":{"classes/Account.html":{}}}],["this.initactionnew",{"_index":2342,"title":{},"body":{"components/PersonListComponent.html":{}}}],["this.initloginform",{"_index":2100,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.isloggedin",{"_index":3002,"title":{},"body":{"classes/User.html":{}}}],["this.isloggedin(state.url",{"_index":711,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["this.isloginpag",{"_index":269,"title":{},"body":{"components/AppComponent.html":{}}}],["this.isnavbar",{"_index":2049,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["this.istoggl",{"_index":1021,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["this.istogglenav",{"_index":1641,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.layoutsandbox.selectmenu(menu",{"_index":1935,"title":{},"body":{"components/LayoutContainer.html":{}}}],["this.loaddetail",{"_index":2946,"title":{},"body":{"components/TreeDetailComponent.html":{}}}],["this.loadmenu",{"_index":2022,"title":{},"body":{"injectables/LayoutSandbox.html":{}}}],["this.loadperson",{"_index":2525,"title":{},"body":{"injectables/PersonsSandbox.html":{}}}],["this.loadpersondata",{"_index":2341,"title":{},"body":{"components/PersonListComponent.html":{}}}],["this.loadpersondetail",{"_index":2304,"title":{},"body":{"components/PersonFormComponent.html":{}}}],["this.loadsearchboxdata",{"_index":2023,"title":{},"body":{"injectables/LayoutSandbox.html":{}}}],["this.loadtrees(filt",{"_index":1412,"title":{},"body":{"components/DossierNavigatorComponent.html":{}}}],["this.location.back",{"_index":2229,"title":{},"body":{"components/PageBadGatewayComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["this.loginform",{"_index":2104,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.controls['password",{"_index":2108,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.controls['usernam",{"_index":2107,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.valid",{"_index":2121,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginload",{"_index":2013,"title":{},"body":{"injectables/LayoutSandbox.html":{}}}],["this.maydelet",{"_index":874,"title":{},"body":{"classes/ClassRightModel.html":{}}}],["this.mayinsert",{"_index":870,"title":{},"body":{"classes/ClassRightModel.html":{}}}],["this.mayupd",{"_index":872,"title":{},"body":{"classes/ClassRightModel.html":{}}}],["this.messag",{"_index":2226,"title":{},"body":{"components/PageBadGatewayComponent.html":{}}}],["this.notificationservice[type](titl",{"_index":3031,"title":{},"body":{"injectables/UtilService.html":{}}}],["this.notificationsservice.error",{"_index":1744,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["this.notificationsservice.error(titl",{"_index":1769,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["this.notificationsservice.info",{"_index":1742,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["this.onclickevent.emit(docu",{"_index":1194,"title":{},"body":{"components/DocumentGenerationComponent.html":{}}}],["this.onclickevent.emit(report",{"_index":2583,"title":{},"body":{"components/ReportViewerComponent.html":{}}}],["this.ondeleteclick.emit(",{"_index":2684,"title":{},"body":{"components/SelectedActionsComponent.html":{}}}],["this.ongoback.emit(",{"_index":2929,"title":{},"body":{"components/ToolbarsComponent.html":{}}}],["this.onitemclick.emit(",{"_index":2683,"title":{},"body":{"components/SelectedActionsComponent.html":{}}}],["this.onvaluedactive.emit(",{"_index":2198,"title":{},"body":{"components/NavFiltersComponent.html":{}}}],["this.onvaluedarchived.emit(",{"_index":2202,"title":{},"body":{"components/NavFiltersComponent.html":{}}}],["this.onvaluedclosed.emit(",{"_index":2200,"title":{},"body":{"components/NavFiltersComponent.html":{}}}],["this.onvaluedincludegroup.emit(",{"_index":2204,"title":{},"body":{"components/NavFiltersComponent.html":{}}}],["this.onvaluedincludeguest.emit(",{"_index":2206,"title":{},"body":{"components/NavFiltersComponent.html":{}}}],["this.onvaluedincludetasks.emit(",{"_index":2208,"title":{},"body":{"components/NavFiltersComponent.html":{}}}],["this.password",{"_index":35,"title":{},"body":{"classes/Account.html":{},"components/LoginComponent.html":{},"classes/LoginForm.html":{}}}],["this.pathdoc",{"_index":1014,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["this.pathplugin",{"_index":1016,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["this.pathtemp",{"_index":1012,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["this.pathus",{"_index":1010,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["this.pathuser}/${this.config.folder_doc",{"_index":1015,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["this.pathuser}/${this.config.folder_temp",{"_index":1013,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["this.pathuser}/${this.config.folder_temp}/_blank.docx",{"_index":1019,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["this.pathuser}/${this.pathdoc",{"_index":1034,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["this.permissions.maydelet",{"_index":2309,"title":{},"body":{"components/PersonFormComponent.html":{}}}],["this.permissions.mayinsert",{"_index":2307,"title":{},"body":{"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{}}}],["this.permissions.mayupd",{"_index":2308,"title":{},"body":{"components/PersonFormComponent.html":{}}}],["this.personsapiclient.getperson",{"_index":2419,"title":{},"body":{"injectables/PersonsEffects.html":{}}}],["this.personsapiclient.getpersondetails(st",{"_index":2413,"title":{},"body":{"injectables/PersonsEffects.html":{}}}],["this.personsapiclient.insertperson(st",{"_index":2406,"title":{},"body":{"injectables/PersonsEffects.html":{}}}],["this.personsapiclient.updateperson(id",{"_index":2432,"title":{},"body":{"injectables/PersonsEffects.html":{}}}],["this.personsdata",{"_index":2347,"title":{},"body":{"components/PersonListComponent.html":{}}}],["this.personssandbox.deletepersonitem(itemdata",{"_index":2400,"title":{},"body":{"components/PersonsComponent.html":{}}}],["this.personssandbox.loadpersondetails(parseint(route.params.id",{"_index":2464,"title":{},"body":{"injectables/PersonsResolver.html":{}}}],["this.personssandbox.persondetails$.subscribe(person",{"_index":2318,"title":{},"body":{"components/PersonFormComponent.html":{},"injectables/PersonsResolver.html":{}}}],["this.personssandbox.persons$.subscribe(person",{"_index":2346,"title":{},"body":{"components/PersonListComponent.html":{}}}],["this.personssandbox.resetst",{"_index":2398,"title":{},"body":{"components/PersonsComponent.html":{}}}],["this.personssandbox.selectperson(data",{"_index":2348,"title":{},"body":{"components/PersonListComponent.html":{}}}],["this.personssandbox.selectperson(itemdata.data",{"_index":2399,"title":{},"body":{"components/PersonsComponent.html":{}}}],["this.personssandbox.selectperson(person",{"_index":2465,"title":{},"body":{"injectables/PersonsResolver.html":{}}}],["this.personssubscript",{"_index":2463,"title":{},"body":{"injectables/PersonsResolver.html":{}}}],["this.registerauthev",{"_index":767,"title":{},"body":{"injectables/AuthSandbox.html":{}}}],["this.registerev",{"_index":257,"title":{},"body":{"components/AppComponent.html":{},"components/DossierNavigatorComponent.html":{},"injectables/DossierSandbox.html":{},"components/LayoutContainer.html":{},"injectables/LayoutSandbox.html":{},"injectables/PersonsSandbox.html":{}}}],["this.renderer.addclass(el",{"_index":1645,"title":{},"body":{"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{}}}],["this.renderer.appendchild(this.scripts.nativeel",{"_index":1235,"title":{},"body":{"components/DocumentReportViewerComponent.html":{}}}],["this.renderer.createelement('div",{"_index":1233,"title":{},"body":{"components/DocumentReportViewerComponent.html":{}}}],["this.renderer.parentnode(el.target.offsetpar",{"_index":2058,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["this.renderer.removeclass(el",{"_index":1644,"title":{},"body":{"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{}}}],["this.responsehandler.oncatch(err",{"_index":1818,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.responseinterceptor(this.http.post(`${this.getconfigsapi().baseurltoken}/connect/token",{"_index":625,"title":{},"body":{"injectables/AuthApiClient.html":{}}}],["this.route.queryparams.subscribe(parram",{"_index":1390,"title":{},"body":{"components/DossierNavigatorComponent.html":{}}}],["this.route.snapshot.parammap.get('rol",{"_index":2227,"title":{},"body":{"components/PageBadGatewayComponent.html":{}}}],["this.router.events.subscribe((rout",{"_index":268,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navigate(['/502",{"_index":1756,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["this.router.navigate(['/login",{"_index":719,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/HttpResponseHandler.html":{},"injectables/LayoutSandbox.html":{}}}],["this.router.navigate(['dossi",{"_index":1536,"title":{},"body":{"injectables/DossierSandbox.html":{},"injectables/PersonsSandbox.html":{}}}],["this.router.navigate([`dossier/detail/${treemodel.id}/${treemodel.faleistungid",{"_index":2962,"title":{},"body":{"components/TreeListComponent.html":{}}}],["this.router.navigate([`persons/detail/${data.id",{"_index":2349,"title":{},"body":{"components/PersonListComponent.html":{}}}],["this.router.navigate([environment.page.dossi",{"_index":783,"title":{},"body":{"injectables/AuthSandbox.html":{}}}],["this.router.navigate([itemdata.url",{"_index":1416,"title":{},"body":{"components/DossierNavigatorComponent.html":{},"components/PersonsComponent.html":{}}}],["this.router.navigate([menu.url",{"_index":2018,"title":{},"body":{"injectables/LayoutSandbox.html":{}}}],["this.router.url",{"_index":781,"title":{},"body":{"injectables/AuthSandbox.html":{}}}],["this.sanitizer.bypasssecuritytrusthtml(v",{"_index":2620,"title":{},"body":{"pipes/SanitizeHtmlPipe.html":{}}}],["this.scop",{"_index":2155,"title":{},"body":{"classes/LoginForm.html":{}}}],["this.select.emit",{"_index":1900,"title":{},"body":{"components/LanguageSelectorComponent.html":{}}}],["this.select.emit(",{"_index":1657,"title":{},"body":{"components/HorizontalNavigationComponent.html":{}}}],["this.selectedaction$.subscribe(dossi",{"_index":1533,"title":{},"body":{"injectables/DossierSandbox.html":{},"injectables/PersonsSandbox.html":{}}}],["this.selectedlangflag",{"_index":1895,"title":{},"body":{"components/LanguageSelectorComponent.html":{}}}],["this.selectedlanguag",{"_index":1894,"title":{},"body":{"components/LanguageSelectorComponent.html":{}}}],["this.setactionbutton",{"_index":2303,"title":{},"body":{"components/PersonFormComponent.html":{}}}],["this.seteftogglenav(elwrapp",{"_index":2059,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["this.seteftogglenav(this._wrappercontain",{"_index":2050,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["this.settitle('login",{"_index":2099,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.settitle(this.titlepag",{"_index":2321,"title":{},"body":{"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{}}}],["this.sfileabsolutepath",{"_index":1018,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["this.show",{"_index":1898,"title":{},"body":{"components/LanguageSelectorComponent.html":{}}}],["this.shownotificationerror('error",{"_index":1753,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["this.shownotificationerror(titl",{"_index":1752,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["this.submit",{"_index":2110,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.subscribetologinchang",{"_index":2012,"title":{},"body":{"injectables/LayoutSandbox.html":{}}}],["this.subscriptions.foreach(sub",{"_index":272,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthSandbox.html":{},"components/DossierNavigatorComponent.html":{},"injectables/DossierSandbox.html":{},"components/LayoutContainer.html":{},"injectables/LayoutSandbox.html":{},"injectables/PersonsSandbox.html":{}}}],["this.subscriptions.push(this.culture$.subscribe((cultur",{"_index":1540,"title":{},"body":{"injectables/DossierSandbox.html":{},"injectables/PersonsSandbox.html":{}}}],["this.subscriptions.push(this.dossiersandbox.loggeduser$.subscribe((us",{"_index":1413,"title":{},"body":{"components/DossierNavigatorComponent.html":{}}}],["this.subscriptions.push(this.layoutsandbox.loggeduser$.subscribe((us",{"_index":1930,"title":{},"body":{"components/LayoutContainer.html":{}}}],["this.subscriptions.push(this.loggeduser$.subscribe((us",{"_index":771,"title":{},"body":{"injectables/AuthSandbox.html":{},"injectables/PersonsSandbox.html":{}}}],["this.templ",{"_index":1071,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["this.titlepag",{"_index":2319,"title":{},"body":{"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{}}}],["this.titleservic",{"_index":837,"title":{},"body":{"classes/BaseComponent.html":{}}}],["this.titleservice.gettitl",{"_index":840,"title":{},"body":{"classes/BaseComponent.html":{}}}],["this.titleservice.settitle(newtitl",{"_index":839,"title":{},"body":{"classes/BaseComponent.html":{}}}],["this.token_typ",{"_index":3003,"title":{},"body":{"classes/User.html":{}}}],["this.translate.addlangs(languag",{"_index":562,"title":{},"body":{"injectables/AppSandbox.html":{}}}],["this.translate.getbrowserlang",{"_index":561,"title":{},"body":{"injectables/AppSandbox.html":{}}}],["this.translate.setdefaultlang(localization.defaultlanguag",{"_index":563,"title":{},"body":{"injectables/AppSandbox.html":{}}}],["this.translate.use(selectedlang",{"_index":570,"title":{},"body":{"injectables/AppSandbox.html":{}}}],["this.translateservice.instant('errornotificationtitl",{"_index":1751,"title":{},"body":{"injectables/HttpResponseHandler.html":{},"injectables/UtilService.html":{}}}],["this.translateservice.instant('infonotificationtitl",{"_index":3030,"title":{},"body":{"injectables/UtilService.html":{}}}],["this.translateservice.instant('lookups')[lookup.cod",{"_index":3038,"title":{},"body":{"injectables/UtilService.html":{}}}],["this.translateservice.instant('servererror401",{"_index":1743,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["this.translateservice.instant('servererror403",{"_index":1745,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["this.translateservice.instant('servererror404",{"_index":1750,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["this.translateservice.instant('servererror502",{"_index":1755,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["this.translateservice.instant('successnotificationtitl",{"_index":3027,"title":{},"body":{"injectables/UtilService.html":{}}}],["this.translateservice.instant('warningnotificationtitl",{"_index":3029,"title":{},"body":{"injectables/UtilService.html":{}}}],["this.translateservice.instant(key",{"_index":1766,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["this.translateservice.instant(messagetranslationcod",{"_index":3025,"title":{},"body":{"injectables/UtilService.html":{}}}],["this.translateservice.instant(titletranslationcod",{"_index":3026,"title":{},"body":{"injectables/UtilService.html":{}}}],["this.translateservice.use(lang.cod",{"_index":2010,"title":{},"body":{"injectables/LayoutSandbox.html":{}}}],["this.unregisterev",{"_index":258,"title":{},"body":{"components/AppComponent.html":{},"components/DossierNavigatorComponent.html":{}}}],["this.updateselectedactions(act",{"_index":1527,"title":{},"body":{"injectables/DossierSandbox.html":{},"injectables/PersonsSandbox.html":{}}}],["this.us",{"_index":1008,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["this.useremail",{"_index":1933,"title":{},"body":{"components/LayoutContainer.html":{}}}],["this.userfold",{"_index":1009,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["this.userimag",{"_index":1931,"title":{},"body":{"components/LayoutContainer.html":{}}}],["this.usernam",{"_index":33,"title":{},"body":{"classes/Account.html":{},"components/LoginComponent.html":{},"classes/LoginForm.html":{}}}],["this.utilservice.displaynotification(messagetranslationcod",{"_index":2523,"title":{},"body":{"injectables/PersonsSandbox.html":{}}}],["this.utilservice.getconfig('token",{"_index":791,"title":{},"body":{"injectables/AuthSandbox.html":{}}}],["this.webdavdelet",{"_index":1028,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["this.webdavgetfold",{"_index":1020,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["this.webdavnew",{"_index":1025,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["this.webdavopenfile(this.filenam",{"_index":1022,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["time",{"_index":492,"title":{},"body":{"modules/AppModule.html":{}}}],["titl",{"_index":387,"title":{},"body":{"modules/AppModule.html":{},"classes/BaseComponent.html":{},"components/DossierNavigatorComponent.html":{},"injectables/HttpResponseHandler.html":{},"components/LoginComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"modules/PersonsRoutingModule.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{},"injectables/UtilService.html":{}}}],["titlepag",{"_index":820,"title":{},"body":{"classes/BaseComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/LoginComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{}}}],["titleservic",{"_index":821,"title":{},"body":{"classes/BaseComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/LoginComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{}}}],["titletranslationcod",{"_index":2492,"title":{},"body":{"injectables/PersonsSandbox.html":{},"injectables/UtilService.html":{}}}],["togeth",{"_index":2808,"title":{},"body":{"interfaces/State.html":{}}}],["toggl",{"_index":1090,"title":{},"body":{"components/ControlWebDavComponent.html":{},"components/HeaderComponent.html":{},"components/LeftSidebarComponent.html":{}}}],["togglenavig",{"_index":2030,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["togglenavigator(isnavbar",{"_index":2041,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["token",{"_index":2111,"title":{},"body":{"components/LoginComponent.html":{},"index.html":{}}}],["token_typ",{"_index":2993,"title":{},"body":{"classes/User.html":{}}}],["tokens.client_id",{"_index":2114,"title":{},"body":{"components/LoginComponent.html":{}}}],["tokens.client_secret",{"_index":2116,"title":{},"body":{"components/LoginComponent.html":{}}}],["tokens.grant_typ",{"_index":2118,"title":{},"body":{"components/LoginComponent.html":{}}}],["tokens.scop",{"_index":2120,"title":{},"body":{"components/LoginComponent.html":{}}}],["toolbar",{"_index":2915,"title":{},"body":{"components/ToolbarsComponent.html":{}}}],["toolbar1",{"_index":3174,"title":{},"body":{"index.html":{}}}],["toolbar2",{"_index":3175,"title":{},"body":{"index.html":{}}}],["toolbars'},{'nam",{"_index":345,"title":{},"body":{"components/AppComponent.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{}}}],["toolbars.component.html",{"_index":2917,"title":{},"body":{"components/ToolbarsComponent.html":{}}}],["toolbars.component.scss",{"_index":2916,"title":{},"body":{"components/ToolbarsComponent.html":{}}}],["toolbarscompon",{"_index":344,"title":{"components/ToolbarsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"modules/LayoutContainersModule.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{},"overview.html":{}}}],["top",{"_index":2760,"title":{},"body":{"interfaces/State.html":{}}}],["topayload",{"_index":639,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["transform",{"_index":586,"title":{},"body":{"injectables/AppService.html":{},"injectables/DossierService.html":{},"injectables/HttpService.html":{},"injectables/PersonsService.html":{},"pipes/SanitizeHtmlPipe.html":{}}}],["transform(v",{"_index":2613,"title":{},"body":{"pipes/SanitizeHtmlPipe.html":{}}}],["translat",{"_index":445,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppSandbox.html":{},"modules/AuthModule.html":{},"modules/ComponentsModule.html":{},"classes/DeleteItemSelectedAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"modules/DossierNavigatorModule.html":{},"modules/ExceptionsModule.html":{},"injectables/HttpResponseHandler.html":{},"modules/LayoutContainersModule.html":{},"injectables/LayoutSandbox.html":{},"components/LeftSidebarComponent.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"components/LoginComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageNotFoundComponent.html":{},"modules/PersonsModule.html":{},"components/ProfileBarComponent.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetCultureAction.html":{},"classes/SetLanguageAction.html":{},"classes/UpdateSelectedAction.html":{},"injectables/UtilService.html":{},"dependencies.html":{}}}],["translateload",{"_index":442,"title":{},"body":{"modules/AppModule.html":{}}}],["translatelookupdata",{"_index":3013,"title":{},"body":{"injectables/UtilService.html":{}}}],["translatelookupdata(data",{"_index":3021,"title":{},"body":{"injectables/UtilService.html":{}}}],["translatemodul",{"_index":441,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ComponentsModule.html":{},"modules/DossierNavigatorModule.html":{},"modules/ExceptionsModule.html":{},"modules/LayoutContainersModule.html":{},"modules/PersonsModule.html":{}}}],["translatemodule.forroot",{"_index":468,"title":{},"body":{"modules/AppModule.html":{}}}],["translateservic",{"_index":446,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppSandbox.html":{},"injectables/HttpResponseHandler.html":{},"injectables/LayoutSandbox.html":{},"components/LeftSidebarComponent.html":{},"injectables/UtilService.html":{}}}],["translatestaticload",{"_index":443,"title":{},"body":{"modules/AppModule.html":{}}}],["travel",{"_index":493,"title":{},"body":{"modules/AppModule.html":{}}}],["treat",{"_index":2755,"title":{},"body":{"interfaces/State.html":{}}}],["tree",{"_index":212,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppService.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"injectables/DossierApiClient.html":{},"components/DossierDetailsComponent.html":{},"injectables/DossierEffects.html":{},"components/DossierNavigatorComponent.html":{},"modules/DossierNavigatorModule.html":{},"modules/DossierRoutingModule.html":{},"injectables/DossierSandbox.html":{},"injectables/DossierService.html":{},"classes/GetTreeDetailAction.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"components/LeftSidebarComponent.html":{},"classes/LoadAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"classes/ResetState.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetClosedAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{},"injectables/SettingsEffects.html":{},"components/SpinnerComponent.html":{},"interfaces/State.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{}}}],["treedetailcompon",{"_index":346,"title":{"components/TreeDetailComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"modules/DossierNavigatorModule.html":{},"modules/DossierRoutingModule.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{},"overview.html":{}}}],["treeform",{"_index":2934,"title":{},"body":{"components/TreeDetailComponent.html":{}}}],["treelistcompon",{"_index":348,"title":{"components/TreeListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"modules/DossierNavigatorModule.html":{},"modules/DossierRoutingModule.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{},"overview.html":{}}}],["treemodel",{"_index":1313,"title":{},"body":{"components/DossierDetailsComponent.html":{},"injectables/DossierEffects.html":{},"components/DossierNavigatorComponent.html":{},"injectables/DossierSandbox.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{}}}],["treemodel.id",{"_index":1521,"title":{},"body":{"injectables/DossierSandbox.html":{}}}],["treemodel.nam",{"_index":1523,"title":{},"body":{"injectables/DossierSandbox.html":{}}}],["treenavmodel",{"_index":1382,"title":{"classes/TreeNavModel.html":{}},"body":{"components/DossierNavigatorComponent.html":{},"classes/ITreeNavModel.html":{},"components/PersonsComponent.html":{},"classes/TreeNavModel.html":{}}}],["trees.map(tre",{"_index":1548,"title":{},"body":{"injectables/DossierService.html":{}}}],["trees[0].parentid",{"_index":1303,"title":{},"body":{"injectables/DossierApiClient.html":{},"injectables/DossierService.html":{}}}],["treesdata",{"_index":2953,"title":{},"body":{"components/TreeListComponent.html":{}}}],["treesmodel",{"_index":177,"title":{},"body":{"injectables/AppApiClient.html":{},"injectables/DossierApiClient.html":{},"injectables/DossierService.html":{},"classes/GetTreeDetailAction.html":{},"classes/LoadAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"classes/ResetState.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetClosedAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{}}}],["treesmodel(tre",{"_index":1549,"title":{},"body":{"injectables/DossierService.html":{}}}],["tri",{"_index":1667,"title":{},"body":{"classes/HttpAdapter.html":{},"injectables/HttpResponseHandler.html":{}}}],["trigger",{"_index":2459,"title":{},"body":{"injectables/PersonsResolver.html":{}}}],["true",{"_index":271,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"components/ControlWebDavComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/LoginComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/SelectedActionsComponent.html":{},"classes/User.html":{}}}],["trymappathapi",{"_index":1296,"title":{},"body":{"injectables/DossierApiClient.html":{},"injectables/DossierEffects.html":{}}}],["trymappathapi(st",{"_index":1322,"title":{},"body":{"injectables/DossierEffects.html":{}}}],["tryparsejwt",{"_index":764,"title":{},"body":{"injectables/AuthSandbox.html":{}}}],["tryparsejwt(user.access_token",{"_index":776,"title":{},"body":{"injectables/AuthSandbox.html":{}}}],["ts",{"_index":3112,"title":{},"body":{"dependencies.html":{}}}],["tslint:dis",{"_index":714,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthSandbox.html":{},"injectables/DossierSandbox.html":{},"injectables/HttpResponseHandler.html":{},"injectables/HttpService.html":{},"components/LayoutContainer.html":{},"injectables/LayoutSandbox.html":{},"components/LoginComponent.html":{},"injectables/PersonsSandbox.html":{},"interfaces/State.html":{}}}],["type",{"_index":20,"title":{},"body":{"classes/Account.html":{},"classes/ActionHandler.html":{},"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"classes/AddUserAction.html":{},"injectables/AppApiClient.html":{},"components/AppComponent.html":{},"injectables/AppSandbox.html":{},"injectables/AppService.html":{},"injectables/AuthApiClient.html":{},"injectables/AuthEffects.html":{},"injectables/AuthGuard.html":{},"injectables/AuthSandbox.html":{},"directives/AuthorizeDirective.html":{},"injectables/AuthorizeGuard.html":{},"classes/BaseComponent.html":{},"interfaces/CanComponentDeactivate.html":{},"injectables/CanDeactivateGuard.html":{},"classes/ClassRightModel.html":{},"injectables/ConfigService.html":{},"components/ControlWebDavComponent.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteItemSelectedAction.html":{},"classes/DeleteSuccessAction.html":{},"classes/DoLoginAction.html":{},"classes/DoLoginFailAction.html":{},"classes/DoLoginSuccessAction.html":{},"classes/DoLogoutAction.html":{},"classes/DoLogoutFailAction.html":{},"classes/DoLogoutSuccessAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"injectables/DocumentsHelper.html":{},"injectables/DossierApiClient.html":{},"components/DossierDetailsComponent.html":{},"injectables/DossierEffects.html":{},"classes/DossierFilterModel.html":{},"components/DossierNavigatorComponent.html":{},"classes/DossierNavigatorTreeModel.html":{},"injectables/DossierSandbox.html":{},"injectables/DossierService.html":{},"directives/DynamicTabsDirective.html":{},"classes/GetTreeDetailAction.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"classes/HttpAdapter.html":{},"injectables/HttpResponseHandler.html":{},"injectables/HttpService.html":{},"interfaces/IDossierFilterModel.html":{},"interfaces/IDossierNavigatorTreeModel.html":{},"interfaces/IMenuModel.html":{},"interfaces/IPerson.html":{},"interfaces/ISearchBoxModel.html":{},"interfaces/ISidebarMenuModel.html":{},"interfaces/ITemplateModel.html":{},"classes/ITreeNavModel.html":{},"interfaces/LanguageModel.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"injectables/LayoutSandbox.html":{},"components/LeftSidebarComponent.html":{},"classes/LoadAction.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"components/LoginComponent.html":{},"classes/LoginForm.html":{},"classes/MenuModel.html":{},"injectables/MenusEffects.html":{},"components/NavFiltersComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageNotFoundComponent.html":{},"classes/Person.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"injectables/PersonsApiClient.html":{},"components/PersonsComponent.html":{},"injectables/PersonsEffects.html":{},"injectables/PersonsResolver.html":{},"injectables/PersonsSandbox.html":{},"injectables/PersonsService.html":{},"components/ProfileBarComponent.html":{},"classes/RemoveUserAction.html":{},"injectables/ReportService.html":{},"components/ReportViewerComponent.html":{},"classes/ResetState.html":{},"classes/Sandbox.html":{},"pipes/SanitizeHtmlPipe.html":{},"components/SearchBoxComponent.html":{},"injectables/SearchBoxDatasEffects.html":{},"classes/SearchBoxModel.html":{},"classes/SelectAction.html":{},"components/SelectedActionsComponent.html":{},"classes/SelectedActionsModel.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetAvaiableMenu.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetClosedAction.html":{},"classes/SetCultureAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{},"classes/SetLanguageAction.html":{},"injectables/SettingsEffects.html":{},"classes/SidebarMenuModel.html":{},"components/SpinnerComponent.html":{},"interfaces/State.html":{},"classes/TemplateModel.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{},"classes/TreeNavModel.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSelectedAction.html":{},"classes/UpdateSuccessAction.html":{},"classes/User.html":{},"injectables/UtilService.html":{},"injectables/ValidationService.html":{},"miscellaneous/enumerations.html":{},"interfaces/role.html":{},"miscellaneous/typealiases.html":{}}}],["type('[auth",{"_index":133,"title":{},"body":{"classes/AddUserAction.html":{},"classes/DoLoginAction.html":{},"classes/DoLoginFailAction.html":{},"classes/DoLoginSuccessAction.html":{},"classes/DoLogoutAction.html":{},"classes/DoLogoutFailAction.html":{},"classes/DoLogoutSuccessAction.html":{},"classes/RemoveUserAction.html":{}}}],["type('[delete_item_select_act",{"_index":1125,"title":{},"body":{"classes/DeleteItemSelectedAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetCultureAction.html":{},"classes/SetLanguageAction.html":{},"classes/UpdateSelectedAction.html":{}}}],["type('[docu",{"_index":1129,"title":{},"body":{"classes/DeleteItemSelectedAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetCultureAction.html":{},"classes/SetLanguageAction.html":{},"classes/UpdateSelectedAction.html":{}}}],["type('[dossi",{"_index":1572,"title":{},"body":{"classes/GetTreeDetailAction.html":{},"classes/LoadAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"classes/ResetState.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetClosedAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{}}}],["type('[get_tree_detail",{"_index":1574,"title":{},"body":{"classes/GetTreeDetailAction.html":{},"classes/LoadAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"classes/ResetState.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetClosedAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{}}}],["type('[load_api_languag",{"_index":1119,"title":{},"body":{"classes/DeleteItemSelectedAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetCultureAction.html":{},"classes/SetLanguageAction.html":{},"classes/UpdateSelectedAction.html":{}}}],["type('[load_api_rol",{"_index":1114,"title":{},"body":{"classes/DeleteItemSelectedAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetCultureAction.html":{},"classes/SetLanguageAction.html":{},"classes/UpdateSelectedAction.html":{}}}],["type('[load_fail",{"_index":1117,"title":{},"body":{"classes/DeleteItemSelectedAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetCultureAction.html":{},"classes/SetLanguageAction.html":{},"classes/UpdateSelectedAction.html":{}}}],["type('[menu",{"_index":2647,"title":{},"body":{"classes/SelectAction.html":{},"classes/SetAvaiableMenu.html":{}}}],["type('[person",{"_index":76,"title":{},"body":{"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteSuccessAction.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSuccessAction.html":{}}}],["type('[reset_st",{"_index":1127,"title":{},"body":{"classes/DeleteItemSelectedAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"classes/GetTreeDetailAction.html":{},"classes/LoadAction.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"classes/ResetState.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetClosedAction.html":{},"classes/SetCultureAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{},"classes/SetLanguageAction.html":{},"classes/UpdateSelectedAction.html":{}}}],["type('[set",{"_index":1109,"title":{},"body":{"classes/DeleteItemSelectedAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetCultureAction.html":{},"classes/SetLanguageAction.html":{},"classes/UpdateSelectedAction.html":{}}}],["type('[set_avaible_languag",{"_index":1121,"title":{},"body":{"classes/DeleteItemSelectedAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetCultureAction.html":{},"classes/SetLanguageAction.html":{},"classes/UpdateSelectedAction.html":{}}}],["type('[set_avaible_rol",{"_index":1116,"title":{},"body":{"classes/DeleteItemSelectedAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetCultureAction.html":{},"classes/SetLanguageAction.html":{},"classes/UpdateSelectedAction.html":{}}}],["type('[set_visibility_filt",{"_index":1576,"title":{},"body":{"classes/GetTreeDetailAction.html":{},"classes/LoadAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"classes/ResetState.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetClosedAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{}}}],["type('[update_select_act",{"_index":1123,"title":{},"body":{"classes/DeleteItemSelectedAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetCultureAction.html":{},"classes/SetLanguageAction.html":{},"classes/UpdateSelectedAction.html":{}}}],["type('person",{"_index":95,"title":{},"body":{"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteSuccessAction.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSuccessAction.html":{}}}],["typeact",{"_index":960,"title":{},"body":{"components/ControlWebDavComponent.html":{},"miscellaneous/enumerations.html":{}}}],["typeaction.delet",{"_index":1027,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["typeaction.new",{"_index":982,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["typealias",{"_index":3193,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typedef",{"_index":1040,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["typefil",{"_index":1265,"title":{},"body":{"injectables/DocumentsHelper.html":{}}}],["typefile.typ",{"_index":1269,"title":{},"body":{"injectables/DocumentsHelper.html":{}}}],["types/circular",{"_index":3080,"title":{},"body":{"dependencies.html":{}}}],["types/jwt",{"_index":3082,"title":{},"body":{"dependencies.html":{}}}],["types/knockout",{"_index":3085,"title":{},"body":{"dependencies.html":{}}}],["udpat",{"_index":2649,"title":{},"body":{"classes/SelectAction.html":{},"classes/SetAvaiableMenu.html":{}}}],["unauthorizedendpoint",{"_index":1736,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["unauthorizedendpoints.filter(endpoint",{"_index":1738,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["unauthorizedendpoints.length",{"_index":1741,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["unbekannt",{"_index":3125,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["uncapit",{"_index":748,"title":{},"body":{"injectables/AuthSandbox.html":{}}}],["undefin",{"_index":1192,"title":{},"body":{"components/DocumentGenerationComponent.html":{},"classes/DossierNavigatorTreeModel.html":{},"components/HeaderComponent.html":{},"interfaces/IDossierNavigatorTreeModel.html":{},"interfaces/IMenuModel.html":{},"interfaces/ISearchBoxModel.html":{},"interfaces/ISidebarMenuModel.html":{},"components/LayoutContainer.html":{},"injectables/LayoutSandbox.html":{},"components/LeftSidebarComponent.html":{},"classes/MenuModel.html":{},"components/ReportViewerComponent.html":{},"classes/SearchBoxModel.html":{},"classes/SidebarMenuModel.html":{}}}],["unfamiliar",{"_index":642,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["unregisterev",{"_index":229,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthSandbox.html":{},"components/DossierNavigatorComponent.html":{},"injectables/DossierSandbox.html":{},"injectables/LayoutSandbox.html":{},"injectables/PersonsSandbox.html":{}}}],["unsubscrib",{"_index":242,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthSandbox.html":{},"components/DossierNavigatorComponent.html":{},"injectables/DossierSandbox.html":{},"injectables/LayoutSandbox.html":{},"injectables/PersonsSandbox.html":{}}}],["up",{"_index":504,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppSandbox.html":{},"interfaces/State.html":{}}}],["updat",{"_index":87,"title":{},"body":{"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteItemSelectedAction.html":{},"classes/DeleteSuccessAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"injectables/DossierSandbox.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"injectables/PersonsApiClient.html":{},"injectables/PersonsEffects.html":{},"injectables/PersonsService.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetCultureAction.html":{},"classes/SetLanguageAction.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSelectedAction.html":{},"classes/UpdateSuccessAction.html":{}}}],["update_fail",{"_index":89,"title":{},"body":{"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteSuccessAction.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSuccessAction.html":{}}}],["update_select_act",{"_index":1122,"title":{},"body":{"classes/DeleteItemSelectedAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetCultureAction.html":{},"classes/SetLanguageAction.html":{},"classes/UpdateSelectedAction.html":{}}}],["update_success",{"_index":88,"title":{},"body":{"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteSuccessAction.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSuccessAction.html":{}}}],["updateact",{"_index":108,"title":{"classes/UpdateAction.html":{}},"body":{"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteSuccessAction.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSuccessAction.html":{},"miscellaneous/typealiases.html":{}}}],["updatecontrol",{"_index":948,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["updatecontrol(fnam",{"_index":972,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["updatefailact",{"_index":113,"title":{"classes/UpdateFailAction.html":{}},"body":{"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteSuccessAction.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSuccessAction.html":{},"miscellaneous/typealiases.html":{}}}],["updateperson",{"_index":2355,"title":{},"body":{"injectables/PersonsApiClient.html":{},"injectables/PersonsEffects.html":{}}}],["updateperson(@path('id",{"_index":2380,"title":{},"body":{"injectables/PersonsApiClient.html":{}}}],["updateperson(id",{"_index":2364,"title":{},"body":{"injectables/PersonsApiClient.html":{}}}],["updatepersonadapt",{"_index":2530,"title":{},"body":{"injectables/PersonsService.html":{}}}],["updatepersonadapter(id",{"_index":2539,"title":{},"body":{"injectables/PersonsService.html":{}}}],["updateselectedact",{"_index":1144,"title":{"classes/UpdateSelectedAction.html":{}},"body":{"classes/DeleteItemSelectedAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"injectables/DossierSandbox.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"injectables/PersonsSandbox.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetCultureAction.html":{},"classes/SetLanguageAction.html":{},"classes/UpdateSelectedAction.html":{},"miscellaneous/typealiases.html":{}}}],["updateselectedactions(act",{"_index":1490,"title":{},"body":{"injectables/DossierSandbox.html":{},"injectables/PersonsSandbox.html":{}}}],["updatesuccessact",{"_index":111,"title":{"classes/UpdateSuccessAction.html":{}},"body":{"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteSuccessAction.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSuccessAction.html":{},"miscellaneous/typealiases.html":{}}}],["url",{"_index":707,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/DocumentsHelper.html":{},"injectables/HttpResponseHandler.html":{},"interfaces/IMenuModel.html":{},"interfaces/ISidebarMenuModel.html":{},"classes/MenuModel.html":{},"classes/SelectedActionsModel.html":{},"classes/SidebarMenuModel.html":{},"index.html":{}}}],["url.tolowercase().replac",{"_index":1767,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["urlencod",{"_index":620,"title":{},"body":{"injectables/AuthApiClient.html":{}}}],["urlsearchparam",{"_index":664,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["urlsearchparams.append('client_id",{"_index":669,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["urlsearchparams.append('client_secret",{"_index":671,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["urlsearchparams.append('grant_typ",{"_index":673,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["urlsearchparams.append('password",{"_index":667,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["urlsearchparams.append('scop",{"_index":675,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["urlsearchparams.append('usernam",{"_index":665,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["us",{"_index":452,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppSandbox.html":{},"injectables/AuthEffects.html":{},"modules/DocumentGenerationModule.html":{},"components/LoginComponent.html":{},"interfaces/State.html":{}}}],["useabl",{"_index":2828,"title":{},"body":{"interfaces/State.html":{}}}],["usefactori",{"_index":515,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":83,"title":{"classes/User.html":{}},"body":{"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"classes/AddUserAction.html":{},"components/AppComponent.html":{},"injectables/AppSandbox.html":{},"injectables/AuthApiClient.html":{},"injectables/AuthEffects.html":{},"injectables/AuthSandbox.html":{},"components/ControlWebDavComponent.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteSuccessAction.html":{},"classes/DoLoginAction.html":{},"classes/DoLoginFailAction.html":{},"classes/DoLoginSuccessAction.html":{},"classes/DoLogoutAction.html":{},"classes/DoLogoutFailAction.html":{},"classes/DoLogoutSuccessAction.html":{},"components/DossierNavigatorComponent.html":{},"injectables/DossierSandbox.html":{},"injectables/HttpResponseHandler.html":{},"components/LayoutContainer.html":{},"injectables/PersonsSandbox.html":{},"classes/RemoveUserAction.html":{},"classes/Sandbox.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSuccessAction.html":{},"classes/User.html":{},"index.html":{}}}],["user(us",{"_index":680,"title":{},"body":{"injectables/AuthEffects.html":{},"classes/Sandbox.html":{}}}],["user.access_token",{"_index":790,"title":{},"body":{"injectables/AuthSandbox.html":{},"classes/User.html":{}}}],["user.expires_in",{"_index":3006,"title":{},"body":{"classes/User.html":{}}}],["user.isloggedin",{"_index":772,"title":{},"body":{"injectables/AuthSandbox.html":{},"components/DossierNavigatorComponent.html":{},"components/LayoutContainer.html":{},"injectables/PersonsSandbox.html":{}}}],["user.jpg",{"_index":1932,"title":{},"body":{"components/LayoutContainer.html":{}}}],["user.remov",{"_index":786,"title":{},"body":{"injectables/AuthSandbox.html":{}}}],["user.sav",{"_index":773,"title":{},"body":{"injectables/AuthSandbox.html":{}}}],["user.token_typ",{"_index":3004,"title":{},"body":{"classes/User.html":{}}}],["useremail",{"_index":1614,"title":{},"body":{"components/HeaderComponent.html":{},"components/LayoutContainer.html":{},"components/ProfileBarComponent.html":{}}}],["userfold",{"_index":954,"title":{},"body":{"components/ControlWebDavComponent.html":{},"components/PersonFormComponent.html":{}}}],["userid",{"_index":1339,"title":{},"body":{"classes/DossierFilterModel.html":{},"classes/DossierNavigatorTreeModel.html":{},"interfaces/IDossierFilterModel.html":{},"interfaces/IDossierNavigatorTreeModel.html":{}}}],["userimag",{"_index":1615,"title":{},"body":{"components/HeaderComponent.html":{},"components/LayoutContainer.html":{},"components/ProfileBarComponent.html":{}}}],["userinfo",{"_index":775,"title":{},"body":{"injectables/AuthSandbox.html":{}}}],["userinfo.logonnam",{"_index":780,"title":{},"body":{"injectables/AuthSandbox.html":{}}}],["userinfo.sub",{"_index":778,"title":{},"body":{"injectables/AuthSandbox.html":{}}}],["usernam",{"_index":12,"title":{},"body":{"classes/Account.html":{},"components/LoginComponent.html":{},"classes/LoginForm.html":{}}}],["util",{"_index":71,"title":{},"body":{"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"classes/AddUserAction.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteItemSelectedAction.html":{},"classes/DeleteSuccessAction.html":{},"classes/DoLoginAction.html":{},"classes/DoLoginFailAction.html":{},"classes/DoLoginSuccessAction.html":{},"classes/DoLogoutAction.html":{},"classes/DoLogoutFailAction.html":{},"classes/DoLogoutSuccessAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"injectables/DossierEffects.html":{},"classes/GetTreeDetailAction.html":{},"components/HeaderComponent.html":{},"injectables/LayoutSandbox.html":{},"classes/LoadAction.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"classes/RemoveUserAction.html":{},"classes/ResetState.html":{},"classes/Sandbox.html":{},"classes/SelectAction.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetAvaiableMenu.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetClosedAction.html":{},"classes/SetCultureAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{},"classes/SetLanguageAction.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSelectedAction.html":{},"classes/UpdateSuccessAction.html":{}}}],["utility.servic",{"_index":3041,"title":{},"body":{"modules/UtilityModule.html":{}}}],["utilitymodul",{"_index":369,"title":{"modules/UtilityModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UtilityModule.html":{},"modules.html":{},"overview.html":{}}}],["utilitymodule.forroot",{"_index":472,"title":{},"body":{"modules/AppModule.html":{}}}],["utils.servic",{"_index":1800,"title":{},"body":{"injectables/HttpService.html":{}}}],["utilservic",{"_index":744,"title":{"injectables/UtilService.html":{}},"body":{"injectables/AuthSandbox.html":{},"injectables/DossierSandbox.html":{},"injectables/PersonsSandbox.html":{},"injectables/UtilService.html":{},"modules/UtilityModule.html":{}}}],["v",{"_index":2615,"title":{},"body":{"pipes/SanitizeHtmlPipe.html":{}}}],["valid",{"_index":2083,"title":{},"body":{"components/LoginComponent.html":{},"injectables/ValidationService.html":{}}}],["validateemail",{"_index":3046,"title":{},"body":{"injectables/ValidationService.html":{}}}],["validateemail(formcontrol",{"_index":3054,"title":{},"body":{"injectables/ValidationService.html":{}}}],["validation.servic",{"_index":3042,"title":{},"body":{"modules/UtilityModule.html":{}}}],["validationservic",{"_index":738,"title":{"injectables/ValidationService.html":{}},"body":{"injectables/AuthSandbox.html":{},"modules/UtilityModule.html":{},"injectables/ValidationService.html":{}}}],["validators.requir",{"_index":2106,"title":{},"body":{"components/LoginComponent.html":{}}}],["valu",{"_index":47,"title":{},"body":{"classes/ActionHandler.html":{},"classes/AddFailAction.html":{},"classes/AddNewAction.html":{},"classes/AddSuccessAction.html":{},"classes/AddUserAction.html":{},"components/AppComponent.html":{},"injectables/AppSandbox.html":{},"injectables/AuthEffects.html":{},"injectables/AuthSandbox.html":{},"injectables/ConfigService.html":{},"components/ControlWebDavComponent.html":{},"classes/DeleteAction.html":{},"classes/DeleteFailAction.html":{},"classes/DeleteItemSelectedAction.html":{},"classes/DeleteSuccessAction.html":{},"classes/DoLoginAction.html":{},"classes/DoLoginFailAction.html":{},"classes/DoLoginSuccessAction.html":{},"classes/DoLogoutAction.html":{},"classes/DoLogoutFailAction.html":{},"classes/DoLogoutSuccessAction.html":{},"classes/DocumentCreate.html":{},"classes/DocumentCreateError.html":{},"classes/DocumentCreateSuccess.html":{},"components/DocumentGenerationComponent.html":{},"injectables/DossierEffects.html":{},"components/DossierNavigatorComponent.html":{},"injectables/DossierSandbox.html":{},"classes/GetTreeDetailAction.html":{},"components/HeaderComponent.html":{},"injectables/HttpResponseHandler.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"injectables/LayoutSandbox.html":{},"components/LeftSidebarComponent.html":{},"classes/LoadAction.html":{},"classes/LoadApiLangsAction.html":{},"classes/LoadApiRolesAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"components/LoginComponent.html":{},"injectables/MenusEffects.html":{},"components/NavFiltersComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonsComponent.html":{},"injectables/PersonsEffects.html":{},"injectables/PersonsSandbox.html":{},"classes/RemoveUserAction.html":{},"injectables/ReportService.html":{},"components/ReportViewerComponent.html":{},"classes/ResetState.html":{},"classes/Sandbox.html":{},"injectables/SearchBoxDatasEffects.html":{},"classes/SelectAction.html":{},"components/SelectedActionsComponent.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetAvaiableMenu.html":{},"classes/SetAvailableLanguagesAction.html":{},"classes/SetAvailableRolesAction.html":{},"classes/SetClosedAction.html":{},"classes/SetCultureAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{},"classes/SetLanguageAction.html":{},"injectables/SettingsEffects.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{},"classes/UpdateAction.html":{},"classes/UpdateFailAction.html":{},"classes/UpdateSelectedAction.html":{},"classes/UpdateSuccessAction.html":{},"injectables/UtilService.html":{},"injectables/ValidationService.html":{},"miscellaneous/enumerations.html":{}}}],["value.indexof",{"_index":1762,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["value.lastindexof",{"_index":1765,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["value.substring(value.lastindexof",{"_index":1764,"title":{},"body":{"injectables/HttpResponseHandler.html":{}}}],["var",{"_index":278,"title":{},"body":{"components/AppComponent.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"interfaces/IMenuModel.html":{},"interfaces/ISearchBoxModel.html":{},"interfaces/ISidebarMenuModel.html":{},"classes/ITreeNavModel.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"classes/MenuModel.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"classes/SearchBoxModel.html":{},"components/SelectedActionsComponent.html":{},"classes/SidebarMenuModel.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{},"classes/TreeNavModel.html":{}}}],["variabl",{"_index":263,"title":{},"body":{"components/AppComponent.html":{},"injectables/ConfigService.html":{}}}],["version",{"_index":488,"title":{},"body":{"modules/AppModule.html":{}}}],["viewchild",{"_index":996,"title":{},"body":{"components/ControlWebDavComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/LayoutContainer.html":{},"injectables/LayoutSandbox.html":{},"components/LeftSidebarComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/SelectedActionsComponent.html":{},"components/TreeDetailComponent.html":{}}}],["viewchild('control",{"_index":1231,"title":{},"body":{"components/DocumentReportViewerComponent.html":{}}}],["viewchild('personform",{"_index":2301,"title":{},"body":{"components/PersonFormComponent.html":{}}}],["viewchild('script",{"_index":1230,"title":{},"body":{"components/DocumentReportViewerComponent.html":{}}}],["viewchild('treeform",{"_index":2945,"title":{},"body":{"components/TreeDetailComponent.html":{}}}],["viewchild('wrappercontain",{"_index":1927,"title":{},"body":{"components/LayoutContainer.html":{}}}],["viewcontain",{"_index":797,"title":{},"body":{"directives/AuthorizeDirective.html":{},"directives/DynamicTabsDirective.html":{}}}],["viewcontainerref",{"_index":798,"title":{},"body":{"directives/AuthorizeDirective.html":{},"directives/DynamicTabsDirective.html":{},"components/PersonsComponent.html":{}}}],["viewencapsul",{"_index":2959,"title":{},"body":{"components/TreeListComponent.html":{}}}],["viewencapsulation.non",{"_index":2950,"title":{},"body":{"components/TreeListComponent.html":{}}}],["viewer",{"_index":1210,"title":{},"body":{"components/DocumentReportViewerComponent.html":{},"components/ReportViewerComponent.html":{}}}],["viewer'},{'nam",{"_index":293,"title":{},"body":{"components/AppComponent.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{}}}],["viewer.compon",{"_index":1251,"title":{},"body":{"modules/DocumentReportViewerModule.html":{}}}],["viewer.component.css",{"_index":1211,"title":{},"body":{"components/DocumentReportViewerComponent.html":{}}}],["viewer.component.html",{"_index":1212,"title":{},"body":{"components/DocumentReportViewerComponent.html":{},"components/ReportViewerComponent.html":{}}}],["viewer.component.scss",{"_index":2575,"title":{},"body":{"components/ReportViewerComponent.html":{}}}],["viewer.component.t",{"_index":1209,"title":{},"body":{"components/DocumentReportViewerComponent.html":{},"components/ReportViewerComponent.html":{}}}],["viewer.component.ts:10",{"_index":2578,"title":{},"body":{"components/ReportViewerComponent.html":{}}}],["viewer.component.ts:11",{"_index":2580,"title":{},"body":{"components/ReportViewerComponent.html":{}}}],["viewer.component.ts:12",{"_index":2579,"title":{},"body":{"components/ReportViewerComponent.html":{}}}],["viewer.component.ts:13",{"_index":1221,"title":{},"body":{"components/DocumentReportViewerComponent.html":{},"components/ReportViewerComponent.html":{}}}],["viewer.component.ts:14",{"_index":2577,"title":{},"body":{"components/ReportViewerComponent.html":{}}}],["viewer.component.ts:16",{"_index":1222,"title":{},"body":{"components/DocumentReportViewerComponent.html":{}}}],["viewer.component.ts:18",{"_index":2582,"title":{},"body":{"components/ReportViewerComponent.html":{}}}],["viewer.component.ts:19",{"_index":1217,"title":{},"body":{"components/DocumentReportViewerComponent.html":{}}}],["viewer.component.ts:23",{"_index":1220,"title":{},"body":{"components/DocumentReportViewerComponent.html":{}}}],["viewer.component.ts:38",{"_index":1219,"title":{},"body":{"components/DocumentReportViewerComponent.html":{}}}],["viewer.component.ts:41",{"_index":1224,"title":{},"body":{"components/DocumentReportViewerComponent.html":{}}}],["viewer.modul",{"_index":2446,"title":{},"body":{"modules/PersonsModule.html":{}}}],["viewer.module.t",{"_index":1249,"title":{},"body":{"modules/DocumentReportViewerModule.html":{}}}],["viewer/docu",{"_index":1208,"title":{},"body":{"components/DocumentReportViewerComponent.html":{},"modules/DocumentReportViewerModule.html":{},"modules/PersonsModule.html":{}}}],["viewer/report",{"_index":1252,"title":{},"body":{"modules/DocumentReportViewerModule.html":{},"components/ReportViewerComponent.html":{}}}],["viewer/report.service.t",{"_index":2562,"title":{},"body":{"injectables/ReportService.html":{}}}],["viewer/report.service.ts:11",{"_index":2570,"title":{},"body":{"injectables/ReportService.html":{}}}],["viewer/report.service.ts:16",{"_index":2569,"title":{},"body":{"injectables/ReportService.html":{}}}],["viewer/report.service.ts:7",{"_index":2566,"title":{},"body":{"injectables/ReportService.html":{}}}],["viewermodel",{"_index":1215,"title":{},"body":{"components/DocumentReportViewerComponent.html":{}}}],["viewermodel(viewermodel",{"_index":1242,"title":{},"body":{"components/DocumentReportViewerComponent.html":{}}}],["visibl",{"_index":1581,"title":{},"body":{"classes/GetTreeDetailAction.html":{},"classes/LoadAction.html":{},"classes/LoadFailAction.html":{},"classes/LoadSuccessAction.html":{},"classes/ResetState.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetClosedAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{}}}],["void",{"_index":234,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppSandbox.html":{},"injectables/AuthSandbox.html":{},"directives/AuthorizeDirective.html":{},"classes/BaseComponent.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"injectables/DocumentsHelper.html":{},"components/DossierNavigatorComponent.html":{},"injectables/DossierSandbox.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"injectables/HttpResponseHandler.html":{},"injectables/HttpService.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"injectables/LayoutSandbox.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"injectables/PersonsResolver.html":{},"injectables/PersonsSandbox.html":{},"components/ReportViewerComponent.html":{},"classes/Sandbox.html":{},"components/SelectedActionsComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{},"classes/User.html":{},"injectables/UtilService.html":{}}}],["vornam",{"_index":1833,"title":{},"body":{"interfaces/IPerson.html":{},"classes/Person.html":{}}}],["w",{"_index":2686,"title":{},"body":{"components/SelectedActionsComponent.html":{}}}],["way",{"_index":463,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthEffects.html":{},"components/PageBadGatewayComponent.html":{}}}],["way'},{'nam",{"_index":322,"title":{},"body":{"components/AppComponent.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{}}}],["web",{"_index":287,"title":{},"body":{"components/AppComponent.html":{},"components/BreadCrumbComponent.html":{},"components/ControlWebDavComponent.html":{},"modules/ControlWebDavModule.html":{},"components/DocumentGenerationComponent.html":{},"components/DocumentReportViewerComponent.html":{},"components/DossierDetailsComponent.html":{},"components/DossierNavigatorComponent.html":{},"components/HeaderComponent.html":{},"components/HorizontalNavigationComponent.html":{},"interfaces/ITemplateModel.html":{},"components/LanguageSelectorComponent.html":{},"components/LayoutContainer.html":{},"components/LeftSidebarComponent.html":{},"components/LoginComponent.html":{},"components/NavFiltersComponent.html":{},"components/NotificationBoxComponent.html":{},"components/PageBadGatewayComponent.html":{},"components/PageContentComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PersonFormComponent.html":{},"components/PersonListComponent.html":{},"components/PersonsComponent.html":{},"modules/PersonsModule.html":{},"components/ProfileBarComponent.html":{},"components/ReportViewerComponent.html":{},"components/SearchBoxComponent.html":{},"components/SelectedActionsComponent.html":{},"components/SpinnerComponent.html":{},"classes/TemplateModel.html":{},"components/ToolbarsComponent.html":{},"components/TreeDetailComponent.html":{},"components/TreeListComponent.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["webdav",{"_index":2300,"title":{},"body":{"components/PersonFormComponent.html":{}}}],["webdavdelet",{"_index":949,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["webdavgetfold",{"_index":950,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["webdavnew",{"_index":951,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["webdavopenfil",{"_index":952,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["webdavopenfile(fil",{"_index":980,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["webdavsess",{"_index":1029,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["webdavsession.openfileasync(this.sfileabsolutepath",{"_index":1038,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["webdavsession.openfolderasync(sfolderabsolutepath",{"_index":1072,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["webdavsession.openfolderasync(sfolderpath",{"_index":1044,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["webdriver/http",{"_index":613,"title":{},"body":{"injectables/AuthApiClient.html":{}}}],["width",{"_index":2270,"title":{},"body":{"components/PersonFormComponent.html":{},"components/TreeDetailComponent.html":{}}}],["window.open(installerfilepath",{"_index":1089,"title":{},"body":{"components/ControlWebDavComponent.html":{}}}],["window.url.createobjecturl(blob",{"_index":1271,"title":{},"body":{"injectables/DocumentsHelper.html":{}}}],["window.url.revokeobjecturl(url",{"_index":1277,"title":{},"body":{"injectables/DocumentsHelper.html":{}}}],["within",{"_index":635,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["word",{"_index":3122,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["work",{"_index":454,"title":{},"body":{"modules/AppModule.html":{},"components/BreadCrumbComponent.html":{},"components/NotificationBoxComponent.html":{}}}],["wrap",{"_index":2811,"title":{},"body":{"interfaces/State.html":{}}}],["wrappercontain",{"_index":2031,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["wrappercontainer(valu",{"_index":2045,"title":{},"body":{"components/LeftSidebarComponent.html":{}}}],["www",{"_index":619,"title":{},"body":{"injectables/AuthApiClient.html":{}}}],["xdocument",{"_index":536,"title":{},"body":{"injectables/AppSandbox.html":{},"injectables/AppService.html":{}}}],["xhrbackend",{"_index":400,"title":{},"body":{"modules/AppModule.html":{}}}],["xl",{"_index":1283,"title":{},"body":{"injectables/DocumentsHelper.html":{}}}],["xs",{"_index":2271,"title":{},"body":{"components/PersonFormComponent.html":{},"components/TreeDetailComponent.html":{}}}],["ye",{"_index":976,"title":{},"body":{"components/ControlWebDavComponent.html":{},"injectables/DocumentsHelper.html":{},"classes/DossierFilterModel.html":{},"classes/DossierNavigatorTreeModel.html":{},"classes/HttpAdapter.html":{},"injectables/HttpService.html":{},"classes/MenuModel.html":{},"classes/Person.html":{},"injectables/PersonsSandbox.html":{},"classes/SearchBoxModel.html":{},"classes/SetActiveAction.html":{},"classes/SetArchivedAction.html":{},"classes/SetClosedAction.html":{},"classes/SetIncludeGroupAction.html":{},"classes/SetIncludeGuestAction.html":{},"classes/SetIncludeTasksAction.html":{},"classes/SidebarMenuModel.html":{},"classes/TemplateModel.html":{},"classes/TreeNavModel.html":{},"classes/User.html":{},"injectables/UtilService.html":{}}}],["z",{"_index":3062,"title":{},"body":{"injectables/ValidationService.html":{}}}],["z]{2",{"_index":3064,"title":{},"body":{"injectables/ValidationService.html":{}}}],["za",{"_index":3061,"title":{},"body":{"injectables/ValidationService.html":{}}}],["zone.j",{"_index":3114,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":378,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ComponentsModule.html":{},"modules/ControlWebDavModule.html":{},"modules/DocumentGenerationModule.html":{},"modules/DocumentReportViewerModule.html":{},"modules/DossierNavigatorModule.html":{},"modules/ExceptionsModule.html":{},"modules/LayoutContainersModule.html":{},"modules/PersonsModule.html":{},"modules/PipesModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/Account.html":{"url":"classes/Account.html","title":"class - Account","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Account\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/account.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                passWord\n                            \n                            \n                                    Public\n                                userName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(account: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/models/account.model.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        account\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/account.model.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/account.model.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            passWord\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        passWord:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/account.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/account.model.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Account {\n    public id:                  number;\n    public email:               string;\n    public userName:            string;\n    public passWord:            string;\n   \n    constructor(account: any = null) {\n      this.id                 = account ? account.id || null : null;\n      this.email              = account ? account.email || '' : null;\n      this.userName           = account ? account.userName || '' : null;\n      this.passWord           = account ? account.passWord || '' : null;     \n    }\n  }\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ActionHandler.html":{"url":"classes/ActionHandler.html","title":"class - ActionHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ActionHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/action-handler.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isVisible\n                            \n                            \n                                onClick\n                            \n                            \n                                roles\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isVisible\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isVisible:     Boolean\n\n                    \n                \n                    \n                        \n                            Type :     Boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/action-handler.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClick\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        onClick:     EventEmitter\n\n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/action-handler.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roles\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        roles:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/action-handler.model.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { EventEmitter } from '@angular/core';\n\nexport class ActionHandler {\n    isVisible: Boolean = false;\n    roles: string[] = [];\n    onClick: EventEmitter = new EventEmitter();\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddFailAction.html":{"url":"classes/AddFailAction.html","title":"class - AddFailAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddFailAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/store/actions/persons.action.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/store/actions/persons.action.ts:66\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/actions/persons.action.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : ActionTypes.Add_FAIL\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/actions/persons.action.ts:66\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { DELETE } from './../../asyncServices/http/http.decorator';\nimport { Account } from './../../models/account.model';\nimport { Action }   from '@ngrx/store';\nimport { Person }  from '../../models';\nimport { type }     from '../../utility';\n\nexport const ActionTypes = {\n  // Actions Load data\n  LOAD:               type('[Persons] Load'),\n  LOAD_SUCCESS:       type('[Persons] Load Success'),\n  LOAD_FAIL:          type('[Persons] Load Fail'),\n  // Actions Add New person\n  ADD_NEW:            type('[Person] User Add new'),\n  ADDING:             type('[Person] Adding'),\n  ADD_SUCCESS:        type('[Person] Add new person success'),\n  Add_FAIL:           type('[Person] Add new person Fail'),\n  // Action Update\n  UPDATE:             type('[Person] Update'),\n  UPDATING:           type('[Person] Updating'),\n  UPDATE_SUCCESS:     type('[Person] Update success'),\n  UPDATE_FAIL:        type('[Person] Update fail'),\n  // Action Delete\n  DELETE:             type('[Person] Delete person'),\n  DELETING:           type('[Person] Deleting'),\n  DELETE_SUCCESS:     type('[Person] Delete success'),\n  DELETE_FAIL:        type('[Person] Delete fail'),\n  \n  // page details\n  LOAD_DETAIL:        type('Person Load detail')\n};\n\n/**\n * Person Action\n */\n\n export class LoadAction implements Action {\n    type = ActionTypes.LOAD;\n\n    constructor(public payload: any = null) {}\n }\n\n export class LoadSuccessAction implements Action {\n    type = ActionTypes.LOAD_SUCCESS;\n  \n    constructor(public payload: Array) { }\n  }\n  \n  export class LoadFailAction implements Action {\n    type = ActionTypes.LOAD_FAIL;\n  \n    constructor(public payload: any = null) { }\n  }\n\n  export class AddNewAction implements Action {\n    type = ActionTypes.ADD_NEW;\n\n    constructor(public payload: Person) {}\n  }\n\n  export class AddSuccessAction implements Action {\n    type = ActionTypes.ADD_SUCCESS;\n    constructor(public payload: Person){}\n  }\n\n  export class AddFailAction implements Action {\n    type = ActionTypes.Add_FAIL;\n    constructor(public payload: any = null){}\n  }\n\n  export class UpdateAction implements Action {\n    type = ActionTypes.UPDATE;\n    constructor(id: any, public payload: any = null) {}\n  }\n\n  export class UpdateSuccessAction implements Action {\n    type = ActionTypes.UPDATE_SUCCESS;\n    constructor(public payload: any = null){}\n  }\n\n  export class UpdateFailAction implements Action {\n    type = ActionTypes.UPDATE_FAIL;\n    constructor(public payload: any = null){}\n  }\n\n  export class DeleteAction implements Action {\n    type = ActionTypes.DELETE;\n    constructor(public payload: any){}\n  }\n\n  export class DeleteSuccessAction implements Action {\n    type = ActionTypes.DELETE_SUCCESS;\n    constructor(public payload: any = null){}\n  }\n\n  export class DeleteFailAction implements Action {\n    type = ActionTypes.DELETE_FAIL;\n    constructor(public payload: any = null){}\n  }\n  \n  export type Actions\n    = LoadAction\n    | LoadSuccessAction\n    | LoadFailAction\n    | AddNewAction\n    | AddSuccessAction\n    | AddFailAction\n    | UpdateAction\n    | UpdateSuccessAction\n    | UpdateFailAction\n    | DeleteAction\n    | DeleteSuccessAction\n    | DeleteFailAction\n \n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddNewAction.html":{"url":"classes/AddNewAction.html","title":"class - AddNewAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddNewAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/store/actions/persons.action.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: Person)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/store/actions/persons.action.ts:55\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    Person\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     Person\n\n                    \n                \n                    \n                        \n                            Type :     Person\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/actions/persons.action.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : ActionTypes.ADD_NEW\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/actions/persons.action.ts:55\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { DELETE } from './../../asyncServices/http/http.decorator';\nimport { Account } from './../../models/account.model';\nimport { Action }   from '@ngrx/store';\nimport { Person }  from '../../models';\nimport { type }     from '../../utility';\n\nexport const ActionTypes = {\n  // Actions Load data\n  LOAD:               type('[Persons] Load'),\n  LOAD_SUCCESS:       type('[Persons] Load Success'),\n  LOAD_FAIL:          type('[Persons] Load Fail'),\n  // Actions Add New person\n  ADD_NEW:            type('[Person] User Add new'),\n  ADDING:             type('[Person] Adding'),\n  ADD_SUCCESS:        type('[Person] Add new person success'),\n  Add_FAIL:           type('[Person] Add new person Fail'),\n  // Action Update\n  UPDATE:             type('[Person] Update'),\n  UPDATING:           type('[Person] Updating'),\n  UPDATE_SUCCESS:     type('[Person] Update success'),\n  UPDATE_FAIL:        type('[Person] Update fail'),\n  // Action Delete\n  DELETE:             type('[Person] Delete person'),\n  DELETING:           type('[Person] Deleting'),\n  DELETE_SUCCESS:     type('[Person] Delete success'),\n  DELETE_FAIL:        type('[Person] Delete fail'),\n  \n  // page details\n  LOAD_DETAIL:        type('Person Load detail')\n};\n\n/**\n * Person Action\n */\n\n export class LoadAction implements Action {\n    type = ActionTypes.LOAD;\n\n    constructor(public payload: any = null) {}\n }\n\n export class LoadSuccessAction implements Action {\n    type = ActionTypes.LOAD_SUCCESS;\n  \n    constructor(public payload: Array) { }\n  }\n  \n  export class LoadFailAction implements Action {\n    type = ActionTypes.LOAD_FAIL;\n  \n    constructor(public payload: any = null) { }\n  }\n\n  export class AddNewAction implements Action {\n    type = ActionTypes.ADD_NEW;\n\n    constructor(public payload: Person) {}\n  }\n\n  export class AddSuccessAction implements Action {\n    type = ActionTypes.ADD_SUCCESS;\n    constructor(public payload: Person){}\n  }\n\n  export class AddFailAction implements Action {\n    type = ActionTypes.Add_FAIL;\n    constructor(public payload: any = null){}\n  }\n\n  export class UpdateAction implements Action {\n    type = ActionTypes.UPDATE;\n    constructor(id: any, public payload: any = null) {}\n  }\n\n  export class UpdateSuccessAction implements Action {\n    type = ActionTypes.UPDATE_SUCCESS;\n    constructor(public payload: any = null){}\n  }\n\n  export class UpdateFailAction implements Action {\n    type = ActionTypes.UPDATE_FAIL;\n    constructor(public payload: any = null){}\n  }\n\n  export class DeleteAction implements Action {\n    type = ActionTypes.DELETE;\n    constructor(public payload: any){}\n  }\n\n  export class DeleteSuccessAction implements Action {\n    type = ActionTypes.DELETE_SUCCESS;\n    constructor(public payload: any = null){}\n  }\n\n  export class DeleteFailAction implements Action {\n    type = ActionTypes.DELETE_FAIL;\n    constructor(public payload: any = null){}\n  }\n  \n  export type Actions\n    = LoadAction\n    | LoadSuccessAction\n    | LoadFailAction\n    | AddNewAction\n    | AddSuccessAction\n    | AddFailAction\n    | UpdateAction\n    | UpdateSuccessAction\n    | UpdateFailAction\n    | DeleteAction\n    | DeleteSuccessAction\n    | DeleteFailAction\n \n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddSuccessAction.html":{"url":"classes/AddSuccessAction.html","title":"class - AddSuccessAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddSuccessAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/store/actions/persons.action.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: Person)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/store/actions/persons.action.ts:61\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    Person\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     Person\n\n                    \n                \n                    \n                        \n                            Type :     Person\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/actions/persons.action.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : ActionTypes.ADD_SUCCESS\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/actions/persons.action.ts:61\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { DELETE } from './../../asyncServices/http/http.decorator';\nimport { Account } from './../../models/account.model';\nimport { Action }   from '@ngrx/store';\nimport { Person }  from '../../models';\nimport { type }     from '../../utility';\n\nexport const ActionTypes = {\n  // Actions Load data\n  LOAD:               type('[Persons] Load'),\n  LOAD_SUCCESS:       type('[Persons] Load Success'),\n  LOAD_FAIL:          type('[Persons] Load Fail'),\n  // Actions Add New person\n  ADD_NEW:            type('[Person] User Add new'),\n  ADDING:             type('[Person] Adding'),\n  ADD_SUCCESS:        type('[Person] Add new person success'),\n  Add_FAIL:           type('[Person] Add new person Fail'),\n  // Action Update\n  UPDATE:             type('[Person] Update'),\n  UPDATING:           type('[Person] Updating'),\n  UPDATE_SUCCESS:     type('[Person] Update success'),\n  UPDATE_FAIL:        type('[Person] Update fail'),\n  // Action Delete\n  DELETE:             type('[Person] Delete person'),\n  DELETING:           type('[Person] Deleting'),\n  DELETE_SUCCESS:     type('[Person] Delete success'),\n  DELETE_FAIL:        type('[Person] Delete fail'),\n  \n  // page details\n  LOAD_DETAIL:        type('Person Load detail')\n};\n\n/**\n * Person Action\n */\n\n export class LoadAction implements Action {\n    type = ActionTypes.LOAD;\n\n    constructor(public payload: any = null) {}\n }\n\n export class LoadSuccessAction implements Action {\n    type = ActionTypes.LOAD_SUCCESS;\n  \n    constructor(public payload: Array) { }\n  }\n  \n  export class LoadFailAction implements Action {\n    type = ActionTypes.LOAD_FAIL;\n  \n    constructor(public payload: any = null) { }\n  }\n\n  export class AddNewAction implements Action {\n    type = ActionTypes.ADD_NEW;\n\n    constructor(public payload: Person) {}\n  }\n\n  export class AddSuccessAction implements Action {\n    type = ActionTypes.ADD_SUCCESS;\n    constructor(public payload: Person){}\n  }\n\n  export class AddFailAction implements Action {\n    type = ActionTypes.Add_FAIL;\n    constructor(public payload: any = null){}\n  }\n\n  export class UpdateAction implements Action {\n    type = ActionTypes.UPDATE;\n    constructor(id: any, public payload: any = null) {}\n  }\n\n  export class UpdateSuccessAction implements Action {\n    type = ActionTypes.UPDATE_SUCCESS;\n    constructor(public payload: any = null){}\n  }\n\n  export class UpdateFailAction implements Action {\n    type = ActionTypes.UPDATE_FAIL;\n    constructor(public payload: any = null){}\n  }\n\n  export class DeleteAction implements Action {\n    type = ActionTypes.DELETE;\n    constructor(public payload: any){}\n  }\n\n  export class DeleteSuccessAction implements Action {\n    type = ActionTypes.DELETE_SUCCESS;\n    constructor(public payload: any = null){}\n  }\n\n  export class DeleteFailAction implements Action {\n    type = ActionTypes.DELETE_FAIL;\n    constructor(public payload: any = null){}\n  }\n  \n  export type Actions\n    = LoadAction\n    | LoadSuccessAction\n    | LoadFailAction\n    | AddNewAction\n    | AddSuccessAction\n    | AddFailAction\n    | UpdateAction\n    | UpdateSuccessAction\n    | UpdateFailAction\n    | DeleteAction\n    | DeleteSuccessAction\n    | DeleteFailAction\n \n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddUserAction.html":{"url":"classes/AddUserAction.html","title":"class - AddUserAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddUserAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/store/actions/auth.action.ts\n        \n\n            \n                Description\n            \n            \n                User Actions\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/store/actions/auth.action.ts:65\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/actions/auth.action.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : ActionTypes.ADD_USER\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/actions/auth.action.ts:65\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport {\n  LoginForm\n}                 from '../../models';\nimport { type }   from '../../utility';\n\nexport const ActionTypes = {\n  DO_LOGIN:                  type('[Auth] Do Login'),\n  DO_LOGIN_SUCCESS:          type('[Auth] Do Login Success'),\n  DO_LOGIN_FAIL:             type('[Auth] Do Login Fail'),\n  DO_LOGOUT:                 type('[Auth] Do Logout'),\n  DO_LOGOUT_SUCCESS:         type('[Auth] Do Logout Success'),\n  DO_LOGOUT_FAIL:            type('[Auth] Do Logout Fail'),\n  ADD_USER:                  type('[Auth] Add user'),\n  REMOVE_USER:               type('[Auth] Remove user')\n};\n\n/**\n * Login Actions\n */\nexport class DoLoginAction implements Action {\n  type = ActionTypes.DO_LOGIN;\n\n  constructor(public payload: LoginForm) { }\n}\n\nexport class DoLoginSuccessAction implements Action {\n  type = ActionTypes.DO_LOGIN_SUCCESS;\n\n  constructor(public payload: any) { }\n}\n\nexport class DoLoginFailAction implements Action {\n  type = ActionTypes.DO_LOGIN_FAIL;\n\n  constructor(public payload: any = null) { }\n}\n\n/**\n * Logout Actions\n */\nexport class DoLogoutAction implements Action {\n  type = ActionTypes.DO_LOGOUT;\n\n  constructor(public payload: any = null) { }\n}\n\nexport class DoLogoutSuccessAction implements Action {\n  type = ActionTypes.DO_LOGOUT_SUCCESS;\n\n  constructor(public payload: any = null) { }\n}\n\nexport class DoLogoutFailAction implements Action {\n  type = ActionTypes.DO_LOGOUT_FAIL;\n\n  constructor(public payload: any = null) { }\n}\n\n\n/**\n * User Actions\n */\nexport class AddUserAction implements Action {\n  type = ActionTypes.ADD_USER;\n\n  constructor(public payload: any) { }\n}\n\nexport class RemoveUserAction implements Action {\n  type = ActionTypes.REMOVE_USER;\n\n  constructor(public payload: any) { }\n}\n\nexport type Actions\n  = DoLoginAction\n  | DoLoginSuccessAction\n  | DoLoginFailAction\n  | DoLogoutAction\n  | DoLogoutSuccessAction\n  | DoLogoutFailAction\n  | AddUserAction\n  | RemoveUserAction;\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppApiClient.html":{"url":"injectables/AppApiClient.html","title":"injectable - AppApiClient","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AppApiClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/appApiClient.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                DocumentCreate\n                            \n                            \n                                    Public\n                                getLanguages\n                            \n                            \n                                    Public\n                                getRoles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            DocumentCreate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        DocumentCreate(templateId: any, contextValues: any)\n                    \n                \n\n                    \n                        \n                            Decorators : POSTAdapter\n                        \n                    \n\n                        \n                            \n                                    Defined in src/app/appApiClient.service.ts:43\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        templateId\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        contextValues\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getLanguages\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getLanguages()\n                    \n                \n\n                    \n                        \n                            Decorators : GETAdapter\n                        \n                    \n\n                        \n                            \n                                    Defined in src/app/appApiClient.service.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getRoles\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getRoles()\n                    \n                \n\n                    \n                        \n                            Decorators : GETAdapter\n                        \n                    \n\n                        \n                            \n                                    Defined in src/app/appApiClient.service.ts:30\n                            \n                        \n\n\n                \n                    \n                            Retrieves all TreesModel\n\n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {\n  Injectable, QueryList\n} from '@angular/core';\nimport {\n  HttpService,\n  GET,\n  Adapter,\n  DefaultHeaders,\n  POST,\n  Path,\n  Body\n} from './shared/asyncServices/http';\nimport { Observable } from 'rxjs/Observable';\nimport { HttpHeaders, HttpParams } from '@angular/common/http';\nimport { AppService } from './app.service';\n\n@Injectable()\n@DefaultHeaders({\n  'Accept': 'application/json',\n  'Content-Type': 'application/json',\n})\n\nexport class AppApiClient extends HttpService {\n\n  /**\n   * Retrieves all TreesModel\n   */\n  @GET('api/me/rights')\n  @Adapter(AppService.getRolesAdapter)\n  public getRoles(): Observable {\n    return Observable.of(this.getConfigsApi()['rights']);\n  }\n\n  @GET('api/translations')\n  @Adapter(AppService.getLangsAdapter)\n  public getLanguages(): Observable {\n    return null;\n  };\n\n  // call api documents create template\n  @POST('api/documents/create?templateId={templateId}')\n  @Adapter(AppService.getDocumentCreate)\n  public DocumentCreate(@Path('templateId') templateId: any, @Body contextValues: any): Observable {\n    return null;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnDestroy\n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n            \n                host\n                {}\n            \n\n\n\n\n            \n                providers\n                \n                            AppSandbox\n                \n            \n\n\n            \n                selector\n                body\n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                appSandbox\n                            \n                            \n                                    Public\n                                isLoginPage\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                registerEvents\n                            \n                            \n                                    Public\n                                unregisterEvents\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, appSandbox: AppSandbox)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        appSandbox\n                                                  \n                                                        \n                                                                    AppSandbox\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            registerEvents\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerEvents()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:37\n                            \n                        \n\n\n                \n                    \n                            Registers events needed for the application\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            unregisterEvents\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        unregisterEvents()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:47\n                            \n                        \n\n\n                \n                    \n                            Unsubscribes from events\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            appSandbox\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        appSandbox:     AppSandbox\n\n                    \n                \n                    \n                        \n                            Type :     AppSandbox\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isLoginPage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isLoginPage:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AppSandbox } from './app.sandbox';\nimport { Subscription } from 'rxjs';\nimport { User } from './shared/models';\n\n@Component({\n  selector: 'body',\n  templateUrl: `./app.component.html`,\n  host: { '[class.body-loginPage]': 'isLoginPage' },\n  providers: [AppSandbox]\n})\nexport class AppComponent implements OnDestroy, OnInit {\n\n  public isLoginPage: boolean;\n  private subscriptions: Array = [];\n\n  constructor(\n    private router: Router,\n    public appSandbox: AppSandbox\n  ) { }\n\n  ngOnInit() {\n    this.appSandbox.setupLanguage();\n    // Load user from local storage into redux state\n    this.appSandbox.loadUser();\n    this.registerEvents();\n  }\n\n  ngOnDestroy(): void {\n    this.unregisterEvents();\n  }\n\n  /**\n   * Registers events needed for the application\n   */\n  private registerEvents(): void {\n    // Subscribes to route change event and sets \"isLoginPage\" variable in order to set correct CSS class on body tag.\n    this.router.events.subscribe((route) => {\n      this.isLoginPage = route['url'] === '/login' ? true : false;\n    });\n  }\n\n  /**\n* Unsubscribes from events\n*/\n  public unregisterEvents() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'body'},{'name': 'BreadCrumbComponent', 'selector': 'app-bread-crumb'},{'name': 'ControlWebDavComponent', 'selector': 'app-control-web-dav'},{'name': 'DocumentGenerationComponent', 'selector': 'app-document-generation'},{'name': 'DocumentReportViewerComponent', 'selector': 'app-document-report-viewer'},{'name': 'DossierDetailsComponent', 'selector': 'app-dossier-details'},{'name': 'DossierNavigatorComponent', 'selector': 'app-dossier-navigator'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HorizontalNavigationComponent', 'selector': 'kiss-menu-header'},{'name': 'LanguageSelectorComponent', 'selector': 'language-selector'},{'name': 'LayoutContainer', 'selector': 'app-layout'},{'name': 'LeftSidebarComponent', 'selector': 'app-left-sidebar'},{'name': 'LoginComponent', 'selector': 'login'},{'name': 'NavFiltersComponent', 'selector': 'dossier-nav-filters'},{'name': 'NotificationBoxComponent', 'selector': 'app-notification-box'},{'name': 'PageBadGatewayComponent', 'selector': 'page-gate-way'},{'name': 'PageContentComponent', 'selector': 'page-content'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PersonFormComponent', 'selector': 'app-person-form'},{'name': 'PersonListComponent', 'selector': 'app-person-list'},{'name': 'PersonsComponent', 'selector': 'app-person'},{'name': 'ProfileBarComponent', 'selector': 'profile-bar'},{'name': 'ReportViewerComponent', 'selector': 'app-report-viewer'},{'name': 'SearchBoxComponent', 'selector': 'kiss-search-box'},{'name': 'SelectedActionsComponent', 'selector': 'app-selected-actions'},{'name': 'SpinnerComponent', 'selector': 'spinner'},{'name': 'ToolbarsComponent', 'selector': 'app-toolbars'},{'name': 'TreeDetailComponent', 'selector': 'app-tree-detail'},{'name': 'TreeListComponent', 'selector': 'app-tree-list'}];\n    var DIRECTIVES = [{'name': 'AuthorizeDirective', 'selector': '[appAuthorize]'},{'name': 'DynamicTabsDirective', 'selector': '[dynamic-tabs]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_AppComponent_providers\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppSandbox\n\nAppSandbox\n\nAppComponent -->\n\nAppSandbox->AppComponent\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nHttpServiceModule\n\nHttpServiceModule\n\nAppModule -->\n\nHttpServiceModule->AppModule\n\n\n\n\n\nUtilityModule\n\nUtilityModule\n\nAppModule -->\n\nUtilityModule->AppModule\n\n\n\n\n\nAppApiClient\n\nAppApiClient\n\nAppModule -->\n\nAppApiClient->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthApiClient\n\nAuthApiClient\n\nAppModule -->\n\nAuthApiClient->AppModule\n\n\n\n\n\nAuthGuard\n\nAuthGuard\n\nAppModule -->\n\nAuthGuard->AppModule\n\n\n\n\n\nAuthSandbox\n\nAuthSandbox\n\nAppModule -->\n\nAuthSandbox->AppModule\n\n\n\n\n\nAuthorizeGuard\n\nAuthorizeGuard\n\nAppModule -->\n\nAuthorizeGuard->AppModule\n\n\n\n\n\nCanDeactivateGuard\n\nCanDeactivateGuard\n\nAppModule -->\n\nCanDeactivateGuard->AppModule\n\n\n\n\n\nConfigService\n\nConfigService\n\nAppModule -->\n\nConfigService->AppModule\n\n\n\n\n\nDossierApiClient\n\nDossierApiClient\n\nAppModule -->\n\nDossierApiClient->AppModule\n\n\n\n\n\nPersonsApiClient\n\nPersonsApiClient\n\nAppModule -->\n\nPersonsApiClient->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AppApiClient\n                            \n                            \n                                     AppService\n                            \n                            \n                                     AuthApiClient\n                            \n                            \n                                     AuthGuard\n                            \n                            \n                                     AuthSandbox\n                            \n                            \n                                     AuthorizeGuard\n                            \n                            \n                                     CanDeactivateGuard\n                            \n                            \n                                     ConfigService\n                            \n                            \n                                     DossierApiClient\n                            \n                            \n                                     PersonsApiClient\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AppRoutingModule\n                            \n                            \n                                    HttpServiceModule\n                            \n                            \n                                    UtilityModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { AuthSandbox } from './auth/auth.sandbox';\n// Angular core modules\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserModule, Title } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { CommonModule } from '@angular/common';\nimport {\n  NgModule,\n  APP_INITIALIZER\n\n} from '@angular/core';\n\nimport { FormsModule } from '@angular/forms';\nimport {\n  HttpModule,\n  RequestOptions,\n  XHRBackend,\n  Http\n\n} from '@angular/http';\n\nimport { Router } from '@angular/router';\n\n// Routes\nimport { AppRoutingModule } from './app-routing.module';\n\n// Modules\n\nimport { AppComponent } from './app.component';\nimport { AuthorizeGuard } from './shared/authorize/authorize.guard';\nimport { HttpServiceModule } from './shared/asyncServices/http/http.module';\nimport { UtilityModule } from './shared/utility';\n\n// Store\nimport { store } from './shared/store';\n// Effects\nimport { PersonsEffects } from './shared/store/effects/persons.effect';\nimport { MenusEffects } from './shared/store/effects/menus.effect';\nimport { AuthEffects } from './shared/store/effects/auth.effect';\nimport { SettingsEffects } from './shared/store/effects/settings.effect';\nimport {\n  SearchBoxDatasEffects\n} from './shared/store/effects/search-box.effect';\nimport { DossierEffects } from './shared/store/effects/dossier.effect';\n\n// Guards\nimport { AuthGuard } from './shared/guards/auth.guard';\nimport { CanDeactivateGuard } from './shared/guards/canDeactivate.guard';\n\n// Services\nimport { ConfigService } from './app-config.service';\nimport { AuthApiClient } from './auth/authApiClient.service';\nimport { AppApiClient } from './appApiClient.service';\nimport { AppService } from './app.service';\nimport { PersonsApiClient } from './persons/personsApiClient.service';\nimport { DossierApiClient } from './dossier-navigator/dossierApiClient.service';\n\n// Third party libraries\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport {\n  TranslateModule,\n  TranslateLoader,\n  TranslateStaticLoader\n\n} from 'ng2-translate';\n\nimport { TranslateService } from 'ng2-translate';\nimport {\n  SimpleNotificationsModule,\n  NotificationsService\n\n} from 'angular2-notifications';\n\n/**\n * Calling functions or calling new is not supported in metadata when using AoT.\n * The work-around is to introduce an exported function.\n *\n * The reason for this limitation is that the AoT compiler needs to generate the code that calls the factory\n * and there is no way to import a lambda from a module, you can only import an exported symbol.\n */\n\nexport function configServiceFactory(config: ConfigService) {\n  return () => config.load();\n}\n\nexport const SERVICES = [\n  DossierApiClient,\n  PersonsApiClient,\n  AppService,\n  AppApiClient,\n  AuthApiClient,\n  AuthSandbox\n];\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    // Angular core dependencies\n    CommonModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    HttpModule,\n    HttpClientModule,\n    // Third party modules\n    TranslateModule.forRoot(),\n    SimpleNotificationsModule.forRoot(),\n    // App custom dependencies\n    HttpServiceModule.forRoot(),\n    UtilityModule.forRoot(),\n    AppRoutingModule,\n\n    /**\n     * StoreModule.provideStore is imported once in the root module, accepting a reducer\n     * function or object map of reducer functions. If passed an object of\n     * store, combineReducers will be run creating your application\n     * meta-reducer. This returns all providers for an @ngrx/store\n     * based application.\n     */\n    StoreModule.provideStore(store),\n\n    /**\n     * Store devtools instrument the store retaining past versions of state\n     * and recalculating new states. This enables powerful time-travel\n     * debugging.\n     *\n     * To use the debugger, install the Redux Devtools extension for either\n     * Chrome or Firefox\n     *\n     * See: https://github.com/zalmoxisus/redux-devtools-extension\n     */\n    StoreDevtoolsModule.instrumentOnlyWithExtension(),\n\n    /**\n     * EffectsModule.run() sets up the effects class to be initialized\n     * immediately when the application starts.\n     *\n     * See: https://github.com/ngrx/effects/blob/master/docs/api.md#run\n     */\n    EffectsModule.run(AuthEffects),\n    EffectsModule.run(SettingsEffects),\n    EffectsModule.run(MenusEffects),\n    EffectsModule.run(SearchBoxDatasEffects),\n    EffectsModule.run(DossierEffects),\n    EffectsModule.run(PersonsEffects),\n  ],\n  providers: [\n    Title,\n    AuthGuard,\n    AuthorizeGuard,\n    CanDeactivateGuard,\n    ConfigService,\n    {\n      provide: APP_INITIALIZER,\n      useFactory: configServiceFactory,\n      deps: [ConfigService],\n      multi: true\n    },\n    SERVICES\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AppRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst appRoutes: Routes = [\n  { path: '', redirectTo: '/persons', pathMatch: 'full' },\n  { path: 'login', loadChildren: './auth/auth.module#AuthModule' },\n  { path: 'dossier', loadChildren: './dossier-navigator/dossier-navigator.module#DossierNavigatorModule' },\n  { path: 'persons', loadChildren: './persons/persons.module#PersonsModule' },\n  { path: 'exception', loadChildren: './exceptions/exceptions.module#ExceptionsModule' },\n  { path: '**', redirectTo: '/exception/404' }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(appRoutes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppSandbox.html":{"url":"injectables/AppSandbox.html","title":"injectable - AppSandbox","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AppSandbox\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.sandbox.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                xDocument$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getNotificationOptions\n                            \n                            \n                                    Public\n                                postDocumentCreate\n                            \n                            \n                                    Public\n                                setupLanguage\n                            \n                            \n                                    Public\n                                setupRoles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(appState$: Store, translate: TranslateService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.sandbox.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        appState$\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getNotificationOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getNotificationOptions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.sandbox.ts:51\n                            \n                        \n\n\n                \n                    \n                            Returns global notification options\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            postDocumentCreate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        postDocumentCreate(payload: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.sandbox.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setupLanguage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setupLanguage()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.sandbox.ts:24\n                            \n                        \n\n\n                \n                    \n                            Sets up default language for the application. Uses browser default language.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setupRoles\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setupRoles()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.sandbox.ts:40\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            xDocument$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        xDocument$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.appState$.select(store.getXDocumentCreate)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.sandbox.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Sandbox } from './shared/sandbox/base.sandbox';\nimport { Store } from '@ngrx/store';\nimport * as store from './shared/store';\nimport * as settingsActions from './shared/store/actions/settings.action';\nimport { TranslateService } from 'ng2-translate';\nimport { ConfigService } from './app-config.service';\nimport { User } from './shared/models';\n\n@Injectable()\nexport class AppSandbox extends Sandbox {\n  public xDocument$ = this.appState$.select(store.getXDocumentCreate);\n  constructor(\n    protected appState$: Store,\n    private translate: TranslateService,\n    private configService: ConfigService\n  ) {\n    super(appState$);\n  }\n\n  /**\n   * Sets up default language for the application. Uses browser default language.\n   */\n  public setupLanguage(): void {\n    const localization: any = this.configService.get('localization');\n    const languages: Array = localization.languages.map(lang => lang.code);\n    const browserLang: string = this.translate.getBrowserLang();\n\n    this.translate.addLangs(languages);\n    this.translate.setDefaultLang(localization.defaultLanguage);\n\n    const selectedLang = browserLang.match(/en|de|fr|it/) ? browserLang : localization.defaultLanguage;\n    const selectedCulture = localization.languages.filter(lang => lang.code === selectedLang)[0].culture;\n\n    this.translate.use(selectedLang);\n    this.appState$.dispatch(new settingsActions.SetLanguageAction(selectedLang));\n    this.appState$.dispatch(new settingsActions.SetCultureAction(selectedCulture));\n  }\n\n  public setupRoles(): void {\n    this.appState$.dispatch(new settingsActions.LoadApiRolesAction());\n  }\n\n  public postDocumentCreate(payload: any) {\n   this.appState$.dispatch(new settingsActions.DocumentCreate(payload));\n  }\n\n  /**\n   * Returns global notification options\n   */\n  public getNotificationOptions(): any {\n    return this.configService.get('notifications').options;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getDocumentCreate\n                            \n                            \n                                    Static\n                                getLangsAdapter\n                            \n                            \n                                    Static\n                                getRolesAdapter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getDocumentCreate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getDocumentCreate(xDocument: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.service.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        xDocument\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getLangsAdapter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getLangsAdapter(langs: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.service.ts:25\n                            \n                        \n\n\n                \n                    \n                            Transforms grid data langs recieved from the API api/translations into array of 'lagnuages' instances\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        langs\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Array\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getRolesAdapter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getRolesAdapter(roles: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.service.ts:16\n                            \n                        \n\n\n                \n                    \n                            Transforms grid data trees recieved from the API into array of 'DossierNavigatorTreeModel' instances\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roles\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Array\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {\n  Injectable,\n  Inject,\n  forwardRef\n} from '@angular/core';\n\nimport { Observable } from 'rxjs/Observable';\n\n@Injectable()\nexport class AppService {\n  /**\n   * Transforms grid data trees recieved from the API into array of 'DossierNavigatorTreeModel' instances\n   *\n   * @param trees\n   */\n  static getRolesAdapter(roles: any): Array {\n    return roles;\n  }\n\n  /**\n   *\n   * Transforms grid data langs recieved from the API api/translations into array of 'lagnuages' instances\n   * @param langs\n   */\n  static getLangsAdapter(langs: any): Array {\n    return langs.map(lang => new lang());\n  }\n\n  static getDocumentCreate(xDocument: any): Observable {\n    return xDocument;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthApiClient.html":{"url":"injectables/AuthApiClient.html","title":"injectable - AuthApiClient","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AuthApiClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/authApiClient.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                login\n                            \n                            \n                                    Public\n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        login(searchParams: any)\n                    \n                \n\n                    \n                        \n                            Decorators : Adapter\n                        \n                    \n\n                        \n                            \n                                    Defined in src/app/auth/authApiClient.service.ts:38\n                            \n                        \n\n\n                \n                    \n                            Submits login form to the server\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        searchParams\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        logout()\n                    \n                \n\n                    \n                        \n                            Decorators : Adapter\n                        \n                    \n\n                        \n                            \n                                    Defined in src/app/auth/authApiClient.service.ts:50\n                            \n                        \n\n\n                \n                    \n                            Logs out current user\n\n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport {\n  LoginForm, User\n} from '../shared/models';\nimport {\n  HttpService,\n  POST,\n  Body,\n  DefaultHeaders,\n  Adapter,\n  Path,\n  Query\n} from '../shared/asyncServices/http';\nimport { AuthSandbox } from './auth.sandbox';\nimport { parseHttpResponse } from 'selenium-webdriver/http';\nimport { paramBuilder } from '../shared/asyncServices/http/utils.service';\nimport { HttpHeaders } from '@angular/common/http';\nimport { RequestOptionsArgs, Headers } from '@angular/http';\n\n@DefaultHeaders({\n  'Accept': 'application/json',\n  'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8' // 'application/json'\n})\n\n@Injectable()\n\nexport class AuthApiClient extends HttpService {\n\n  /**\n   * Submits login form to the server\n   *\n   * @param form\n   */\n\n  // @POST('connect/token')\n  @Adapter(AuthSandbox.authAdapter)\n  public login(searchParams: any): Observable {\n    const options: RequestOptionsArgs = {\n      headers: new Headers({ 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8' }),\n    };\n    return this.responseInterceptor(this.http.post(`${this.getConfigsApi().baseUrlToken}/connect/token`, searchParams, options));\n  }\n\n  /**\n   * Logs out current user\n   */\n  // @POST(\"auth/logout\") // call api logout\n  @Adapter(AuthSandbox.logoutAdapter)\n  public logout(): Observable { return Observable.of(new User()); };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthEffects.html":{"url":"injectables/AuthEffects.html","title":"injectable - AuthEffects","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AuthEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/store/effects/auth.effect.ts\n        \n\n            \n                Description\n            \n            \n                Effects offer a way to isolate and easily test side-effects within your\napplication. StateUpdates is an observable of the latest state and\ndispatched action. The toPayload helper function returns just\nthe payload of the currently dispatched action, useful in\ninstances where the current state is not necessary.\nIf you are unfamiliar with the operators being used in these examples, please\ncheck out the sources below:\nOfficial Docs: http://reactivex.io/rxjs/manual/overview.html#categories-of-operators\nRxJS 5 Operators By Example: https://gist.github.com/btroncone/d6cf141d6f2c00dc6b35\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                doLogin$\n                            \n                            \n                                doLogout$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, authApiClient: AuthApiClient, appState$: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/store/effects/auth.effect.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        authApiClient\n                                                  \n                                                        \n                                                                    AuthApiClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        appState$\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            doLogin$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        doLogin$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n    .ofType(actions.ActionTypes.DO_LOGIN)\n    .map((action: actions.DoLoginAction) => action.payload)\n    .switchMap((state: LoginForm) => {\n      const urlSearchParams: URLSearchParams = new URLSearchParams();\n      urlSearchParams.append('username', state.username);\n      urlSearchParams.append('password', state.password);\n      urlSearchParams.append('client_id', state.client_id);\n      urlSearchParams.append('client_secret', state.client_secret);\n      urlSearchParams.append('grant_type', state.grant_type);\n      urlSearchParams.append('scope', state.scope);\n      return this.authApiClient.login(urlSearchParams.toString())\n        .map(user => new actions.DoLoginSuccessAction(new User(user)))\n        .catch(error => Observable.of(new actions.DoLoginFailAction()));\n    })\n                        \n                    \n                    \n                        \n                            Decorators : Effect\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/effects/auth.effect.ts:41\n                            \n                        \n\n                \n                    \n                        Login effect\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            doLogout$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        doLogout$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n    .ofType(actions.ActionTypes.DO_LOGOUT)\n    .map((action: actions.DoLogoutAction) => null)\n    .switchMap(state => {\n      return this.authApiClient.logout()\n        .map(() => new actions.DoLogoutSuccessAction())\n        .catch(error => of(new actions.DoLogoutFailAction(error)));\n    })\n                        \n                    \n                    \n                        \n                            Decorators : Effect\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/effects/auth.effect.ts:61\n                            \n                        \n\n                \n                    \n                        Logout effect\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/switchMap';\nimport { Injectable } from '@angular/core';\nimport { Effect, Actions } from '@ngrx/effects';\nimport { Action } from '@ngrx/store';\nimport { Observable } from 'rxjs/Observable';\nimport { of } from 'rxjs/observable/of';\nimport { AuthApiClient } from '../../../auth/authApiClient.service';\nimport * as actions from '../actions/auth.action';\nimport { Store } from '@ngrx/store';\nimport * as store from '../index';\nimport { User, LoginForm } from '../../models';\n\n/**\n * Effects offer a way to isolate and easily test side-effects within your\n * application. StateUpdates is an observable of the latest state and\n * dispatched action. The `toPayload` helper function returns just\n * the payload of the currently dispatched action, useful in\n * instances where the current state is not necessary.\n *\n * If you are unfamiliar with the operators being used in these examples, please\n * check out the sources below:\n *\n * Official Docs: http://reactivex.io/rxjs/manual/overview.html#categories-of-operators\n * RxJS 5 Operators By Example: https://gist.github.com/btroncone/d6cf141d6f2c00dc6b35\n */\n\n@Injectable()\nexport class AuthEffects {\n\n  constructor(\n    private actions$: Actions,\n    private authApiClient: AuthApiClient,\n    private appState$: Store) { }\n\n  /**\n   * Login effect\n   */\n  @Effect()\n  doLogin$: Observable = this.actions$\n    .ofType(actions.ActionTypes.DO_LOGIN)\n    .map((action: actions.DoLoginAction) => action.payload)\n    .switchMap((state: LoginForm) => {\n      const urlSearchParams: URLSearchParams = new URLSearchParams();\n      urlSearchParams.append('username', state.username);\n      urlSearchParams.append('password', state.password);\n      urlSearchParams.append('client_id', state.client_id);\n      urlSearchParams.append('client_secret', state.client_secret);\n      urlSearchParams.append('grant_type', state.grant_type);\n      urlSearchParams.append('scope', state.scope);\n      return this.authApiClient.login(urlSearchParams.toString())\n        .map(user => new actions.DoLoginSuccessAction(new User(user)))\n        .catch(error => Observable.of(new actions.DoLoginFailAction()));\n    });\n\n  /**\n   * Logout effect\n   */\n  @Effect()\n  doLogout$: Observable = this.actions$\n    .ofType(actions.ActionTypes.DO_LOGOUT)\n    .map((action: actions.DoLogoutAction) => null)\n    .switchMap(state => {\n      return this.authApiClient.logout()\n        .map(() => new actions.DoLogoutSuccessAction())\n        .catch(error => of(new actions.DoLogoutFailAction(error)));\n    });\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthGuard.html":{"url":"injectables/AuthGuard.html","title":"injectable - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/guards/auth.guard.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                isLoggedIn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/guards/auth.guard.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/guards/auth.guard.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoggedIn\n                            \n                            \n                        \n                    \n                \n                \n                    \nisLoggedIn(url: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/guards/auth.guard.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  CanActivate, Router,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot\n} from '@angular/router';\nimport { Observable } from 'rxjs/rx';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(private router: Router) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    // check authentication\n    return this.isLoggedIn(state.url);\n  }\n\n  isLoggedIn(url: string): boolean {\n    const currentUser = JSON.parse(localStorage.getItem('currentUser'));\n    // tslint:disable-next-line:curly\n    if (currentUser) { return true; }\n\n    // Navigate to the login page with extras\n    this.router.navigate(['/login']);\n    return false;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n  Modules\n  AuthModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nLoginComponent\n\nLoginComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nAuthApiClient\n\nAuthApiClient\n\nAuthModule -->\n\nAuthApiClient->AuthModule\n\n\n\n\n\nAuthSandbox\n\nAuthSandbox\n\nAuthModule -->\n\nAuthSandbox->AuthModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                LoginComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AuthApiClient\n                            \n                            \n                                     AuthSandbox\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AuthRoutingModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {\n  FormsModule,\n  ReactiveFormsModule\n} from '@angular/forms';\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { LoginComponent } from './login/login.component';\nimport { ComponentsModule } from '../shared/components';\nimport { TranslateModule } from 'ng2-translate';\nimport { SimpleNotificationsModule } from 'angular2-notifications';\nimport { AuthSandbox } from './auth.sandbox';\nimport { AuthApiClient } from './authApiClient.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserModule } from '@angular/platform-browser';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ComponentsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TranslateModule,\n    SimpleNotificationsModule,\n    AuthRoutingModule,\n  ],\n  declarations: [\n    LoginComponent\n  ],\n  providers: [\n    AuthApiClient,\n    AuthSandbox\n  ]\n})\nexport class AuthModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthRoutingModule.html":{"url":"modules/AuthRoutingModule.html","title":"module - AuthRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AuthRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport {\n  RouterModule,\n  Routes\n} from '@angular/router';\nimport { LoginComponent } from './login/login.component';\n\nconst authRoutes: Routes = [\n  {\n    path: '',\n    component: LoginComponent\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(authRoutes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class AuthRoutingModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthSandbox.html":{"url":"injectables/AuthSandbox.html","title":"injectable - AuthSandbox","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AuthSandbox\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.sandbox.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loginLoaded$\n                            \n                            \n                                    Public\n                                loginLoading$\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                            \n                                    Public\n                                validationService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                authAdapter\n                            \n                            \n                                    Public\n                                getConfigsToken\n                            \n                            \n                                    Public\n                                login\n                            \n                            \n                                    Static\n                                logoutAdapter\n                            \n                            \n                                    Private\n                                registerAuthEvents\n                            \n                            \n                                    Public\n                                unregisterEvents\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, route: ActivatedRoute, appState$: Store, utilService: UtilService, validationService: ValidationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth.sandbox.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        appState$\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        utilService\n                                                  \n                                                        \n                                                                    UtilService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        validationService\n                                                  \n                                                        \n                                                                    ValidationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            authAdapter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        authAdapter(user: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.sandbox.ts:84\n                            \n                        \n\n\n                \n                    \n                            Uncapitalize response keys\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getConfigsToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getConfigsToken()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.sandbox.ts:93\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        login(form: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.sandbox.ts:44\n                            \n                        \n\n\n                \n                    \n                            Dispatches login action\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            logoutAdapter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        logoutAdapter(user: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.sandbox.ts:89\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            registerAuthEvents\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerAuthEvents()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.sandbox.ts:58\n                            \n                        \n\n\n                \n                    \n                            Registers events\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            unregisterEvents\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        unregisterEvents()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/auth.sandbox.ts:51\n                            \n                        \n\n\n                \n                    \n                            Unsubscribe from events\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loginLoaded$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loginLoaded$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.appState$.select(store.getAuthLoaded)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.sandbox.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loginLoading$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loginLoading$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.appState$.select(store.getAuthLoading)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.sandbox.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.sandbox.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            validationService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        validationService:     ValidationService\n\n                    \n                \n                    \n                        \n                            Type :     ValidationService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.sandbox.ts:33\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { Subscription } from 'rxjs/rx';\nimport { Sandbox } from '../shared/sandbox/base.sandbox';\nimport * as store from '../shared/store';\nimport * as authActions from '../shared/store/actions/auth.action';\nimport * as settingsActions from '../shared/store/actions/settings.action';\nimport { User } from '../shared/models';\nimport {\n  UtilService,\n  ValidationService,\n  tryParseJwt\n} from '../shared/utility';\nimport {\n  LoginForm\n} from '../shared/models';\nimport { environment } from '../../environments/environment';\n\n@Injectable()\nexport class AuthSandbox extends Sandbox {\n\n  public loginLoading$ = this.appState$.select(store.getAuthLoading);\n  public loginLoaded$ = this.appState$.select(store.getAuthLoaded);\n\n  private subscriptions: Array = [];\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    protected appState$: Store,\n    private utilService: UtilService,\n    public validationService: ValidationService\n  ) {\n    super(appState$);\n    this.registerAuthEvents();\n  }\n\n  /**\n   * Dispatches login action\n   *\n   * @param form\n   */\n  public login(form: any): void {\n    this.appState$.dispatch(new authActions.DoLoginAction(new LoginForm(form)));\n  }\n\n  /**\n   * Unsubscribe from events\n   */\n  public unregisterEvents() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  /**\n   * Registers events\n   */\n  private registerAuthEvents(): void {\n    // Subscribes to logged user data and save/remove it from the local storage\n    this.subscriptions.push(this.loggedUser$.subscribe((user: User) => {\n      if (user.isLoggedIn) {\n        user.save();\n        if (localStorage.getItem('user') === null) {\n          const userInfo: any = tryParseJwt(user.access_token);\n          localStorage.setItem('user.userId', userInfo.sub);\n          localStorage.setItem('user', userInfo.LogonName);\n        }\n        this.appState$.dispatch(new settingsActions.LoadApiRolesAction());\n        if (this.router.url === environment.page.login) { return this.router.navigate([environment.page.dossier]); }\n      } else {\n        // clear state appState\n        this.appState$.dispatch(new settingsActions.ResetState());\n        user.remove();\n      }\n    }));\n  }\n\n  /**\n   * Uncapitalize response keys\n   *\n   * @param user\n   */\n  // tslint:disable-next-line:member-ordering\n  static authAdapter(user: any): any {\n    return Object.assign({}, user, { access_token: user.access_token });\n  }\n\n  // tslint:disable-next-line:member-ordering\n  static logoutAdapter(user: any): any {\n    return Object.assign({}, user);\n  }\n\n  public getConfigsToken() {\n    return this.utilService.getConfig('tokens');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/AuthorizeDirective.html":{"url":"directives/AuthorizeDirective.html","title":"directive - AuthorizeDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  AuthorizeDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/authorize/authorize.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [appAuthorize]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                appAuthorize\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(templateRef: TemplateRef, viewContainer: ViewContainerRef, authSandbox: AuthSandbox)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/authorize/authorize.directive.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        templateRef\n                                                  \n                                                        \n                                                                    TemplateRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        viewContainer\n                                                  \n                                                        \n                                                                    ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        authSandbox\n                                                  \n                                                        \n                                                                    AuthSandbox\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        appAuthorize\n                    \n                    \n                            \n                            Type:    []\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/authorize/authorize.directive.ts:16\n                            \n                        \n            \n        \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        appAuthorize\n                    \n                \n\n\n                \n                    \n                        setappAuthorize(roles: [])\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/authorize/authorize.directive.ts:16\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            roles\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Directive, ViewContainerRef, TemplateRef, Input } from '@angular/core';\nimport { Observable } from 'rxjs/rx';\nimport { Store } from '@ngrx/store';\nimport * as store from '../store';\nimport { AuthSandbox } from '../../auth/auth.sandbox';\n@Directive({\n  selector: '[appAuthorize]'\n})\nexport class AuthorizeDirective {\n  constructor(\n    private templateRef: TemplateRef,\n    private viewContainer: ViewContainerRef,\n    private authSandbox: AuthSandbox\n  ) { }\n\n  @Input() set appAuthorize(roles: string[]) {\n    this.authSandbox.availableRoles$.subscribe(rights => {\n      let allow = false;\n      if (roles) {\n        let i = 0;\n        const length = roles.length;\n        while (i \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthorizeGuard.html":{"url":"injectables/AuthorizeGuard.html","title":"injectable - AuthorizeGuard","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AuthorizeGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/authorize/authorize.guard.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                    Private\n                                checkAuthorize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authSandbox: AuthSandbox)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/authorize/authorize.guard.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        authSandbox\n                                                  \n                                                        \n                                                                    AuthSandbox\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate(route: ActivatedRouteSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/authorize/authorize.guard.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            checkAuthorize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        checkAuthorize(roles: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/authorize/authorize.guard.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roles\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/switchMap';\n\nimport { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\nimport { AuthSandbox } from './../../auth/auth.sandbox';\n\n\n\n@Injectable()\nexport class AuthorizeGuard implements CanActivate {\n  constructor(private router: Router, private authSandbox: AuthSandbox) { }\n\n  canActivate(route: ActivatedRouteSnapshot) {\n    return this.checkAuthorize(route.data.roles);\n  }\n\n  private checkAuthorize(roles: any) {\n    return this.authSandbox.availableRoles$.switchMap((rights: Array) => {\n      let allow = false;\n      if (roles) {\n        let i = 0;\n        const length = roles.length;\n        while (i \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseComponent.html":{"url":"classes/BaseComponent.html","title":"class - BaseComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/components/base.component.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                permissions\n                            \n                            \n                                    Public\n                                titlePage\n                            \n                            \n                                    Private\n                                titleService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getTitle\n                            \n                            \n                                    Public\n                                setTitle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/base.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                    Injector\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            permissions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        permissions:     ClassRightModel\n\n                    \n                \n                    \n                        \n                            Type :     ClassRightModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/base.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            titlePage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        titlePage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/base.component.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            titleService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        titleService:     Title\n\n                    \n                \n                    \n                        \n                            Type :     Title\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/base.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getTitle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getTitle()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/components/base.component.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setTitle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setTitle(newTitle: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/components/base.component.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        newTitle\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n    Component,\n    Injector\n} from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { ClassRightModel } from '../models/auth/class-right.model';\n\nexport abstract class BaseComponent {\n    public titlePage: string;\n    protected permissions: ClassRightModel;\n\n    private titleService: Title;\n\n    public constructor(injector: Injector) {\n        this.titleService = injector.get(Title);\n    }\n\n    public setTitle(newTitle: string) {\n        this.titleService.setTitle(newTitle);\n    }\n\n    public getTitle(): string {\n        return this.titleService.getTitle();\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BreadCrumbComponent.html":{"url":"components/BreadCrumbComponent.html","title":"component - BreadCrumbComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BreadCrumbComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/layouts/contents/bread-crumb/bread-crumb.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-bread-crumb\n            \n\n            \n                styleUrls\n                bread-crumb.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./bread-crumb.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/layouts/contents/bread-crumb/bread-crumb.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/layouts/contents/bread-crumb/bread-crumb.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-bread-crumb',\n  templateUrl: './bread-crumb.component.html',\n  styleUrls: ['./bread-crumb.component.scss']\n})\nexport class BreadCrumbComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  bread-crumb works!\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  bread-crumb works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'body'},{'name': 'BreadCrumbComponent', 'selector': 'app-bread-crumb'},{'name': 'ControlWebDavComponent', 'selector': 'app-control-web-dav'},{'name': 'DocumentGenerationComponent', 'selector': 'app-document-generation'},{'name': 'DocumentReportViewerComponent', 'selector': 'app-document-report-viewer'},{'name': 'DossierDetailsComponent', 'selector': 'app-dossier-details'},{'name': 'DossierNavigatorComponent', 'selector': 'app-dossier-navigator'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HorizontalNavigationComponent', 'selector': 'kiss-menu-header'},{'name': 'LanguageSelectorComponent', 'selector': 'language-selector'},{'name': 'LayoutContainer', 'selector': 'app-layout'},{'name': 'LeftSidebarComponent', 'selector': 'app-left-sidebar'},{'name': 'LoginComponent', 'selector': 'login'},{'name': 'NavFiltersComponent', 'selector': 'dossier-nav-filters'},{'name': 'NotificationBoxComponent', 'selector': 'app-notification-box'},{'name': 'PageBadGatewayComponent', 'selector': 'page-gate-way'},{'name': 'PageContentComponent', 'selector': 'page-content'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PersonFormComponent', 'selector': 'app-person-form'},{'name': 'PersonListComponent', 'selector': 'app-person-list'},{'name': 'PersonsComponent', 'selector': 'app-person'},{'name': 'ProfileBarComponent', 'selector': 'profile-bar'},{'name': 'ReportViewerComponent', 'selector': 'app-report-viewer'},{'name': 'SearchBoxComponent', 'selector': 'kiss-search-box'},{'name': 'SelectedActionsComponent', 'selector': 'app-selected-actions'},{'name': 'SpinnerComponent', 'selector': 'spinner'},{'name': 'ToolbarsComponent', 'selector': 'app-toolbars'},{'name': 'TreeDetailComponent', 'selector': 'app-tree-detail'},{'name': 'TreeListComponent', 'selector': 'app-tree-list'}];\n    var DIRECTIVES = [{'name': 'AuthorizeDirective', 'selector': '[appAuthorize]'},{'name': 'DynamicTabsDirective', 'selector': '[dynamic-tabs]'}];\n    var ACTUAL_COMPONENT = {'name': 'BreadCrumbComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CanComponentDeactivate.html":{"url":"interfaces/CanComponentDeactivate.html","title":"interface - CanComponentDeactivate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CanComponentDeactivate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/guards/canDeactivate.guard.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        canDeactivate\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        canDeactivate\n                                    \n                                \n                                \n                                    \n                                        canDeactivate:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable }    from '@angular/core';\nimport { CanDeactivate } from '@angular/router';\nimport { Observable }    from 'rxjs/Observable';\n\nexport interface CanComponentDeactivate {\n canDeactivate: () => Observable | Promise | boolean;\n}\n\n@Injectable()\nexport class CanDeactivateGuard implements CanDeactivate {\n  canDeactivate(component: CanComponentDeactivate) {\n    return component.canDeactivate ? component.canDeactivate() : true;\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CanDeactivateGuard.html":{"url":"injectables/CanDeactivateGuard.html","title":"injectable - CanDeactivateGuard","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  CanDeactivateGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/guards/canDeactivate.guard.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canDeactivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canDeactivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanDeactivate(component: CanComponentDeactivate)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/guards/canDeactivate.guard.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        component\n                                                        \n                                                                    CanComponentDeactivate\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable }    from '@angular/core';\nimport { CanDeactivate } from '@angular/router';\nimport { Observable }    from 'rxjs/Observable';\n\nexport interface CanComponentDeactivate {\n canDeactivate: () => Observable | Promise | boolean;\n}\n\n@Injectable()\nexport class CanDeactivateGuard implements CanDeactivate {\n  canDeactivate(component: CanComponentDeactivate) {\n    return component.canDeactivate ? component.canDeactivate() : true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ClassRightModel.html":{"url":"classes/ClassRightModel.html","title":"class - ClassRightModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ClassRightModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/auth/class-right.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                className\n                            \n                            \n                                mayDelete\n                            \n                            \n                                mayInsert\n                            \n                            \n                                mayUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(className: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/models/auth/class-right.model.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        className\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            className\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        className:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/auth/class-right.model.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mayDelete\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mayDelete:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/auth/class-right.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mayInsert\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mayInsert:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/auth/class-right.model.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mayUpdate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mayUpdate:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/auth/class-right.model.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ClassRightModel {\n    className: string;\n    mayInsert: string;\n    mayUpdate: string;\n    mayDelete: string;\n    constructor(className: string) {\n        this.className = className;\n        this.mayInsert = `${className}.mayInsert`;\n        this.mayUpdate = `${className}.mayUpdate`;\n        this.mayDelete = `${className}.mayDelete`;\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ComponentsModule.html":{"url":"modules/ComponentsModule.html","title":"module - ComponentsModule","body":"\n                   \n\n\n\n\n  Modules\n  ComponentsModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ComponentsModule\n\n\n\ncluster_ComponentsModule_declarations\n\n\n\ncluster_ComponentsModule_exports\n\n\n\n\nAuthorizeDirective\n\nAuthorizeDirective\n\n\n\nComponentsModule\n\nComponentsModule\n\nComponentsModule -->\n\nAuthorizeDirective->ComponentsModule\n\n\n\n\n\nDynamicTabsDirective\n\nDynamicTabsDirective\n\nComponentsModule -->\n\nDynamicTabsDirective->ComponentsModule\n\n\n\n\n\nSpinnerComponent\n\nSpinnerComponent\n\nComponentsModule -->\n\nSpinnerComponent->ComponentsModule\n\n\n\n\n\nAuthorizeDirective \n\nAuthorizeDirective \n\nAuthorizeDirective  -->\n\nComponentsModule->AuthorizeDirective \n\n\n\n\n\nDynamicTabsDirective \n\nDynamicTabsDirective \n\nDynamicTabsDirective  -->\n\nComponentsModule->DynamicTabsDirective \n\n\n\n\n\nSpinnerComponent \n\nSpinnerComponent \n\nSpinnerComponent  -->\n\nComponentsModule->SpinnerComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/components/index.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AuthorizeDirective\n                            \n                            \n                                DynamicTabsDirective\n                            \n                            \n                                SpinnerComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    AuthorizeDirective\n                            \n                            \n                                    DynamicTabsDirective\n                            \n                            \n                                    SpinnerComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { DevExtremeModule } from 'devextreme-angular';\nimport { NgModule } from '@angular/core';\nimport {\n  FormsModule,\n  ReactiveFormsModule\n} from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\n\nimport { PipesModule } from '../pipes';\nimport { TranslateModule } from 'ng2-translate';\n\nimport { SpinnerComponent } from './spinner/spinner.component';\n\n// directives\nimport { AuthorizeDirective } from './../authorize/authorize.directive';\nimport { DynamicTabsDirective } from './../directives/dynamic-tabs.directive';\n\nexport const COMPONENTS = [\n  SpinnerComponent,\n];\n\nconst DIRECTIVES = [\n  DynamicTabsDirective,\n  AuthorizeDirective\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    DevExtremeModule,\n    RouterModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TranslateModule,\n    PipesModule\n  ],\n  declarations: [...COMPONENTS, ...DIRECTIVES],\n  exports: [...COMPONENTS, ...DIRECTIVES],\n})\nexport class ComponentsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigService.html":{"url":"injectables/ConfigService.html","title":"injectable - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app-config.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                config\n                            \n                            \n                                    Private\n                                env\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                getEnv\n                            \n                            \n                                load\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: Http)\n                    \n                \n                        \n                            \n                                Defined in src/app/app-config.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    Http\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \nget(key: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app-config.service.ts:61\n                            \n                        \n\n\n                \n                    \n                            Returns configuration value based on given key\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getEnv\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetEnv(key: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app-config.service.ts:52\n                            \n                        \n\n\n                \n                    \n                            Returns environment variable based on given key\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            load\n                            \n                            \n                        \n                    \n                \n                \n                    \nload()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app-config.service.ts:24\n                            \n                        \n\n\n                \n                    \n                            Loads the environment config file first. Reads the environment variable from the file\nand based on that loads the appropriate configuration file - development or production\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            config\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        config:     Object\n\n                    \n                \n                    \n                        \n                            Type :     Object\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app-config.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            env\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        env:     Object\n\n                    \n                \n                    \n                        \n                            Type :     Object\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app-config.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/rx';\nimport 'rxjs/add/operator/map';\n\nimport {\n  Http,\n  Headers,\n  RequestOptions\n} from '@angular/http';\n\n@Injectable()\nexport class ConfigService {\n\n  private config: Object;\n  private env: Object;\n\n  constructor(private http: Http) { }\n\n  /**\n   * Loads the environment config file first. Reads the environment variable from the file\n   * and based on that loads the appropriate configuration file - development or production\n   */\n  load() {\n    return new Promise((resolve, reject) => {\n      const headers = new Headers({ 'Accept': 'application/json', 'Content-Type': 'application/json', 'DataType': 'application/json' });\n      const options = new RequestOptions({ headers: headers });\n\n      this.http.get('/config/env.json')\n        .map(res => res.json())\n        .subscribe((env_data) => {\n          this.env = env_data;\n          this.http.get('/config/' + env_data.env + '.json')\n            .map(res => res.json())\n            .catch((error: any) => {\n              return Observable.throw(error.json().error || 'Server error');\n            })\n            .subscribe((data) => {\n              this.config = data;\n              resolve(true);\n            });\n        });\n\n    });\n  }\n\n  /**\n   * Returns environment variable based on given key\n   *\n   * @param key\n   */\n  getEnv(key: any) {\n    return this.env[key];\n  }\n\n  /**\n   * Returns configuration value based on given key\n   *\n   * @param key\n   */\n  get(key: any) {\n    return this.config[key];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ControlWebDavComponent.html":{"url":"components/ControlWebDavComponent.html","title":"component - ControlWebDavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ControlWebDavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/control-web-dav/control-web-dav.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-control-web-dav\n            \n\n            \n                styleUrls\n                control-web-dav.component.css\n            \n\n\n\n            \n                templateUrl\n                ./control-web-dav.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                action\n                            \n                            \n                                    Protected\n                                config\n                            \n                            \n                                fileName\n                            \n                            \n                                handlerText\n                            \n                            \n                                    Protected\n                                header\n                            \n                            \n                                isToggle\n                            \n                            \n                                    Private\n                                pathDocs\n                            \n                            \n                                    Private\n                                pathPlugins\n                            \n                            \n                                    Private\n                                pathTemp\n                            \n                            \n                                    Private\n                                pathUser\n                            \n                            \n                                    Private\n                                sFileAbsolutePath\n                            \n                            \n                                templates\n                            \n                            \n                                    Protected\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                btnToogle\n                            \n                            \n                                handlerButton\n                            \n                            \n                                newTemplate\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openFile\n                            \n                            \n                                protocolInstallCallback\n                            \n                            \n                                    Private\n                                updateControl\n                            \n                            \n                                    Private\n                                webDavDelete\n                            \n                            \n                                    Private\n                                webDavGetFolders\n                            \n                            \n                                    Private\n                                webDavNew\n                            \n                            \n                                    Private\n                                webDavOpenFile\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                configFolder\n                            \n                            \n                                userFolder\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/control-web-dav/control-web-dav.component.ts:52\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        configFolder\n                    \n                    \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/control-web-dav/control-web-dav.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        userFolder\n                    \n                    \n                        \n                            Default value: ''\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/control-web-dav/control-web-dav.component.ts:41\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            btnToogle\n                            \n                            \n                        \n                    \n                \n                \n                    \nbtnToogle()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/components/control-web-dav/control-web-dav.component.ts:73\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handlerButton\n                            \n                            \n                        \n                    \n                \n                \n                    \nhandlerButton(action: typeAction)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/components/control-web-dav/control-web-dav.component.ts:81\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        action\n                                                        \n                                                                    typeAction\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newTemplate\n                            \n                            \n                        \n                    \n                \n                \n                    \nnewTemplate(item: TemplateModel)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/components/control-web-dav/control-web-dav.component.ts:94\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    TemplateModel\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/components/control-web-dav/control-web-dav.component.ts:69\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/components/control-web-dav/control-web-dav.component.ts:57\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openFile\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenFile()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/components/control-web-dav/control-web-dav.component.ts:77\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            protocolInstallCallback\n                            \n                            \n                        \n                    \n                \n                \n                    \nprotocolInstallCallback(message: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/components/control-web-dav/control-web-dav.component.ts:263\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            updateControl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        updateControl(fName: , displayText: , action: , isToggle?: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/components/control-web-dav/control-web-dav.component.ts:140\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fName\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        displayText\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        isToggle\n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            webDavDelete\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        webDavDelete()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/components/control-web-dav/control-web-dav.component.ts:203\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            webDavGetFolders\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        webDavGetFolders()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/components/control-web-dav/control-web-dav.component.ts:243\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            webDavNew\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        webDavNew()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/components/control-web-dav/control-web-dav.component.ts:147\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            webDavOpenFile\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        webDavOpenFile(file: String)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/components/control-web-dav/control-web-dav.component.ts:193\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        file\n                                                        \n                                                                    String\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            action\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        action:     \n\n                    \n                \n                    \n                        \n                            Default value : typeAction.new\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/control-web-dav/control-web-dav.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            config\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        config:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/control-web-dav/control-web-dav.component.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fileName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fileName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/control-web-dav/control-web-dav.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handlerText\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        handlerText:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'New'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/control-web-dav/control-web-dav.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            header\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        header:     Headers\n\n                    \n                \n                    \n                        \n                            Type :     Headers\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/control-web-dav/control-web-dav.component.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isToggle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isToggle:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/control-web-dav/control-web-dav.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            pathDocs\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pathDocs:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/control-web-dav/control-web-dav.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            pathPlugins\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pathPlugins:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/control-web-dav/control-web-dav.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            pathTemp\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pathTemp:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/control-web-dav/control-web-dav.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            pathUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pathUser:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/control-web-dav/control-web-dav.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sFileAbsolutePath\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sFileAbsolutePath:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/control-web-dav/control-web-dav.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            templates\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        templates:     TemplateModel[]\n\n                    \n                \n                    \n                        \n                            Type :     TemplateModel[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/control-web-dav/control-web-dav.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/control-web-dav/control-web-dav.component.ts:52\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  OnInit,\n  Input,\n  AfterViewInit,\n  Renderer2,\n  ViewChild,\n  ElementRef\n} from '@angular/core';\nimport { TemplateModel } from './template.model';\n\ndeclare var ITHit: any;\n\nexport enum typeAction {\n  new,\n  delete\n}\n\nexport const DEFAULT = {\n  HOST: '',\n  FOLDER_DOC: '',\n  FOLDER_TEMP: '',\n  FOLDER_PLUGIN: 'assets/webdav/Plugins',\n};\n\n@Component({\n  selector: 'app-control-web-dav',\n  templateUrl: './control-web-dav.component.html',\n  styleUrls: ['./control-web-dav.component.css']\n})\n\nexport class ControlWebDavComponent implements OnInit, AfterViewInit {\n\n  private pathUser: string;\n  private pathTemp: string;\n  private pathDocs: string;\n  private pathPlugins: string;\n  private sFileAbsolutePath: string;\n\n  @Input() configFolder;\n  @Input() userFolder = '';\n\n  fileName = '';\n  handlerText = 'New';\n  action = typeAction.new;\n\n  isToggle: boolean;\n  templates: TemplateModel[] = [];\n\n  protected header: Headers;\n  protected config;\n  protected user;\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n    this.header = new Headers();\n    this.header.append('Content-Type', 'application/json');\n    this.config = this.configFolder || DEFAULT;\n    this.user = this.userFolder;\n    this.pathUser = `${this.config.HOST}/${this.userFolder}`;\n    this.pathTemp = `${this.pathUser}/${this.config.FOLDER_TEMP}`;\n    this.pathDocs = `${this.pathUser}/${this.config.FOLDER_DOC}`;\n    this.pathPlugins = `/${this.config.FOLDER_PLUGIN}`;\n    this.sFileAbsolutePath = `${this.pathUser}/${this.config.FOLDER_TEMP}/_blank.docx`;\n  }\n\n  ngAfterViewInit(): void {\n    this.webDavGetFolders();\n  }\n\n  btnToogle() {\n    this.isToggle = !this.isToggle;\n  }\n\n  openFile(): void {\n    this.webDavOpenFile(this.fileName);\n  }\n\n  handlerButton(action: typeAction): void {\n    switch (action) {\n      case typeAction.new:\n        this.webDavNew();\n        break;\n      case typeAction.delete:\n        this.webDavDelete();\n        break;\n      default:\n        break;\n    }\n  }\n\n  newTemplate(item: TemplateModel) {\n    const webDavSession = new ITHit.WebDAV.Client.WebDavSession();\n    const fName = `${item.DisplayName}_${new Date().getTime()}.docx`;\n    const sFolderPath = `${this.pathUser}/${this.pathDocs}`;\n    const fCallback = function (e) {\n      console.log('fCallback', e);\n    };\n    // const webDavSession = new ITHit.WebDAV.Client.WebDavSession();\n    webDavSession.OpenFileAsync(this.sFileAbsolutePath, null, function (oFileAsyncResult) {\n      /** @typedef {ITHit.WebDAV.Client.File} oFile */\n      const oFile = oFileAsyncResult.Result;\n\n      webDavSession.OpenFolderAsync(sFolderPath, null, function (oFolderAsyncResult) {\n        /** @typedef {ITHit.WebDAV.Client.Folder} oFolder */\n        const oFolder = oFolderAsyncResult.Result;\n\n        oFile.CopyToAsync(oFolder, fName, true, null, null, function (oAsyncResult) {\n\n          if (oAsyncResult.IsSuccess) {\n            console.log('Copy successfully completed.');\n          } else if (oAsyncResult.Error instanceof ITHit.WebDAV.Client.Exceptions.PreconditionFailedException) {\n            console.log('The item with such name exists and `overwrite` was `false`.');\n          } else if (oAsyncResult.Error instanceof ITHit.WebDAV.Client.Exceptions.WebDavHttpException) {\n            let sErrorText = oAsyncResult.Error.Message + ' ' + oAsyncResult.Error.Status.Code + ' ' +\n              oAsyncResult.Error.Status.Description;\n\n            // Find which items failed to copy.\n            for (let i = 0, l = oAsyncResult.Error.Multistatus.Responses.length; i  {\n      this.templates = e;\n    };\n\n    webDavSession.OpenFolderAsync(sFolderAbsolutePath, null, function (oFolderAsyncResult) {\n      /** @typedef {ITHit.WebDAV.Client.Folder} oFolder */\n      const oFolder = oFolderAsyncResult.Result;\n      oFolder.GetChildrenAsync(null, null, function (oItemsAsyncResult) {\n        /** @typedef {ITHit.WebDAV.Client.HierarchyItems[]} aItems */\n        const aItems = oItemsAsyncResult.Result;\n        const listFiles = aItems.map(item => new TemplateModel(item));\n        fCallBack(listFiles);\n      });\n    });\n  }\n\n  protocolInstallCallback(message) {\n    const pathPlugins: String = `/${this.config.FOLDER_PLUGIN}`;\n    const installerFilePath = `${pathPlugins}` +\n      ITHit.WebDAV.Client.DocManager.GetInstallFileName();\n\n    if (confirm('This action requires a protocol installation. Select OK to download the protocol installer.')) {\n      window.open(installerFilePath);\n    }\n  }\n}\n\n    \n\n    \n        \n\n  \n  \n    {{ handlerText }}\n    \n      \n      Toggle Dropdown\n    \n    \n      \n        {{ item.DisplayName }}\n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{ handlerText }}                Toggle Dropdown                      {{ item.DisplayName }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'body'},{'name': 'BreadCrumbComponent', 'selector': 'app-bread-crumb'},{'name': 'ControlWebDavComponent', 'selector': 'app-control-web-dav'},{'name': 'DocumentGenerationComponent', 'selector': 'app-document-generation'},{'name': 'DocumentReportViewerComponent', 'selector': 'app-document-report-viewer'},{'name': 'DossierDetailsComponent', 'selector': 'app-dossier-details'},{'name': 'DossierNavigatorComponent', 'selector': 'app-dossier-navigator'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HorizontalNavigationComponent', 'selector': 'kiss-menu-header'},{'name': 'LanguageSelectorComponent', 'selector': 'language-selector'},{'name': 'LayoutContainer', 'selector': 'app-layout'},{'name': 'LeftSidebarComponent', 'selector': 'app-left-sidebar'},{'name': 'LoginComponent', 'selector': 'login'},{'name': 'NavFiltersComponent', 'selector': 'dossier-nav-filters'},{'name': 'NotificationBoxComponent', 'selector': 'app-notification-box'},{'name': 'PageBadGatewayComponent', 'selector': 'page-gate-way'},{'name': 'PageContentComponent', 'selector': 'page-content'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PersonFormComponent', 'selector': 'app-person-form'},{'name': 'PersonListComponent', 'selector': 'app-person-list'},{'name': 'PersonsComponent', 'selector': 'app-person'},{'name': 'ProfileBarComponent', 'selector': 'profile-bar'},{'name': 'ReportViewerComponent', 'selector': 'app-report-viewer'},{'name': 'SearchBoxComponent', 'selector': 'kiss-search-box'},{'name': 'SelectedActionsComponent', 'selector': 'app-selected-actions'},{'name': 'SpinnerComponent', 'selector': 'spinner'},{'name': 'ToolbarsComponent', 'selector': 'app-toolbars'},{'name': 'TreeDetailComponent', 'selector': 'app-tree-detail'},{'name': 'TreeListComponent', 'selector': 'app-tree-list'}];\n    var DIRECTIVES = [{'name': 'AuthorizeDirective', 'selector': '[appAuthorize]'},{'name': 'DynamicTabsDirective', 'selector': '[dynamic-tabs]'}];\n    var ACTUAL_COMPONENT = {'name': 'ControlWebDavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ControlWebDavModule.html":{"url":"modules/ControlWebDavModule.html","title":"module - ControlWebDavModule","body":"\n                   \n\n\n\n\n  Modules\n  ControlWebDavModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ControlWebDavModule\n\n\n\ncluster_ControlWebDavModule_declarations\n\n\n\ncluster_ControlWebDavModule_exports\n\n\n\n\nControlWebDavComponent\n\nControlWebDavComponent\n\n\n\nControlWebDavModule\n\nControlWebDavModule\n\nControlWebDavModule -->\n\nControlWebDavComponent->ControlWebDavModule\n\n\n\n\n\nControlWebDavComponent \n\nControlWebDavComponent \n\nControlWebDavComponent  -->\n\nControlWebDavModule->ControlWebDavComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/components/control-web-dav/control-web-dav.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ControlWebDavComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    ControlWebDavComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ControlWebDavComponent } from './control-web-dav.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    ControlWebDavComponent\n  ],\n  exports: [\n    ControlWebDavComponent\n  ],\n})\n\nexport class ControlWebDavModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteAction.html":{"url":"classes/DeleteAction.html","title":"class - DeleteAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/store/actions/persons.action.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/store/actions/persons.action.ts:86\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/actions/persons.action.ts:87\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : ActionTypes.DELETE\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/actions/persons.action.ts:86\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { DELETE } from './../../asyncServices/http/http.decorator';\nimport { Account } from './../../models/account.model';\nimport { Action }   from '@ngrx/store';\nimport { Person }  from '../../models';\nimport { type }     from '../../utility';\n\nexport const ActionTypes = {\n  // Actions Load data\n  LOAD:               type('[Persons] Load'),\n  LOAD_SUCCESS:       type('[Persons] Load Success'),\n  LOAD_FAIL:          type('[Persons] Load Fail'),\n  // Actions Add New person\n  ADD_NEW:            type('[Person] User Add new'),\n  ADDING:             type('[Person] Adding'),\n  ADD_SUCCESS:        type('[Person] Add new person success'),\n  Add_FAIL:           type('[Person] Add new person Fail'),\n  // Action Update\n  UPDATE:             type('[Person] Update'),\n  UPDATING:           type('[Person] Updating'),\n  UPDATE_SUCCESS:     type('[Person] Update success'),\n  UPDATE_FAIL:        type('[Person] Update fail'),\n  // Action Delete\n  DELETE:             type('[Person] Delete person'),\n  DELETING:           type('[Person] Deleting'),\n  DELETE_SUCCESS:     type('[Person] Delete success'),\n  DELETE_FAIL:        type('[Person] Delete fail'),\n  \n  // page details\n  LOAD_DETAIL:        type('Person Load detail')\n};\n\n/**\n * Person Action\n */\n\n export class LoadAction implements Action {\n    type = ActionTypes.LOAD;\n\n    constructor(public payload: any = null) {}\n }\n\n export class LoadSuccessAction implements Action {\n    type = ActionTypes.LOAD_SUCCESS;\n  \n    constructor(public payload: Array) { }\n  }\n  \n  export class LoadFailAction implements Action {\n    type = ActionTypes.LOAD_FAIL;\n  \n    constructor(public payload: any = null) { }\n  }\n\n  export class AddNewAction implements Action {\n    type = ActionTypes.ADD_NEW;\n\n    constructor(public payload: Person) {}\n  }\n\n  export class AddSuccessAction implements Action {\n    type = ActionTypes.ADD_SUCCESS;\n    constructor(public payload: Person){}\n  }\n\n  export class AddFailAction implements Action {\n    type = ActionTypes.Add_FAIL;\n    constructor(public payload: any = null){}\n  }\n\n  export class UpdateAction implements Action {\n    type = ActionTypes.UPDATE;\n    constructor(id: any, public payload: any = null) {}\n  }\n\n  export class UpdateSuccessAction implements Action {\n    type = ActionTypes.UPDATE_SUCCESS;\n    constructor(public payload: any = null){}\n  }\n\n  export class UpdateFailAction implements Action {\n    type = ActionTypes.UPDATE_FAIL;\n    constructor(public payload: any = null){}\n  }\n\n  export class DeleteAction implements Action {\n    type = ActionTypes.DELETE;\n    constructor(public payload: any){}\n  }\n\n  export class DeleteSuccessAction implements Action {\n    type = ActionTypes.DELETE_SUCCESS;\n    constructor(public payload: any = null){}\n  }\n\n  export class DeleteFailAction implements Action {\n    type = ActionTypes.DELETE_FAIL;\n    constructor(public payload: any = null){}\n  }\n  \n  export type Actions\n    = LoadAction\n    | LoadSuccessAction\n    | LoadFailAction\n    | AddNewAction\n    | AddSuccessAction\n    | AddFailAction\n    | UpdateAction\n    | UpdateSuccessAction\n    | UpdateFailAction\n    | DeleteAction\n    | DeleteSuccessAction\n    | DeleteFailAction\n \n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteFailAction.html":{"url":"classes/DeleteFailAction.html","title":"class - DeleteFailAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteFailAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/store/actions/persons.action.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/store/actions/persons.action.ts:96\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/actions/persons.action.ts:97\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : ActionTypes.DELETE_FAIL\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/actions/persons.action.ts:96\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { DELETE } from './../../asyncServices/http/http.decorator';\nimport { Account } from './../../models/account.model';\nimport { Action }   from '@ngrx/store';\nimport { Person }  from '../../models';\nimport { type }     from '../../utility';\n\nexport const ActionTypes = {\n  // Actions Load data\n  LOAD:               type('[Persons] Load'),\n  LOAD_SUCCESS:       type('[Persons] Load Success'),\n  LOAD_FAIL:          type('[Persons] Load Fail'),\n  // Actions Add New person\n  ADD_NEW:            type('[Person] User Add new'),\n  ADDING:             type('[Person] Adding'),\n  ADD_SUCCESS:        type('[Person] Add new person success'),\n  Add_FAIL:           type('[Person] Add new person Fail'),\n  // Action Update\n  UPDATE:             type('[Person] Update'),\n  UPDATING:           type('[Person] Updating'),\n  UPDATE_SUCCESS:     type('[Person] Update success'),\n  UPDATE_FAIL:        type('[Person] Update fail'),\n  // Action Delete\n  DELETE:             type('[Person] Delete person'),\n  DELETING:           type('[Person] Deleting'),\n  DELETE_SUCCESS:     type('[Person] Delete success'),\n  DELETE_FAIL:        type('[Person] Delete fail'),\n  \n  // page details\n  LOAD_DETAIL:        type('Person Load detail')\n};\n\n/**\n * Person Action\n */\n\n export class LoadAction implements Action {\n    type = ActionTypes.LOAD;\n\n    constructor(public payload: any = null) {}\n }\n\n export class LoadSuccessAction implements Action {\n    type = ActionTypes.LOAD_SUCCESS;\n  \n    constructor(public payload: Array) { }\n  }\n  \n  export class LoadFailAction implements Action {\n    type = ActionTypes.LOAD_FAIL;\n  \n    constructor(public payload: any = null) { }\n  }\n\n  export class AddNewAction implements Action {\n    type = ActionTypes.ADD_NEW;\n\n    constructor(public payload: Person) {}\n  }\n\n  export class AddSuccessAction implements Action {\n    type = ActionTypes.ADD_SUCCESS;\n    constructor(public payload: Person){}\n  }\n\n  export class AddFailAction implements Action {\n    type = ActionTypes.Add_FAIL;\n    constructor(public payload: any = null){}\n  }\n\n  export class UpdateAction implements Action {\n    type = ActionTypes.UPDATE;\n    constructor(id: any, public payload: any = null) {}\n  }\n\n  export class UpdateSuccessAction implements Action {\n    type = ActionTypes.UPDATE_SUCCESS;\n    constructor(public payload: any = null){}\n  }\n\n  export class UpdateFailAction implements Action {\n    type = ActionTypes.UPDATE_FAIL;\n    constructor(public payload: any = null){}\n  }\n\n  export class DeleteAction implements Action {\n    type = ActionTypes.DELETE;\n    constructor(public payload: any){}\n  }\n\n  export class DeleteSuccessAction implements Action {\n    type = ActionTypes.DELETE_SUCCESS;\n    constructor(public payload: any = null){}\n  }\n\n  export class DeleteFailAction implements Action {\n    type = ActionTypes.DELETE_FAIL;\n    constructor(public payload: any = null){}\n  }\n  \n  export type Actions\n    = LoadAction\n    | LoadSuccessAction\n    | LoadFailAction\n    | AddNewAction\n    | AddSuccessAction\n    | AddFailAction\n    | UpdateAction\n    | UpdateSuccessAction\n    | UpdateFailAction\n    | DeleteAction\n    | DeleteSuccessAction\n    | DeleteFailAction\n \n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteItemSelectedAction.html":{"url":"classes/DeleteItemSelectedAction.html","title":"class - DeleteItemSelectedAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteItemSelectedAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/store/actions/settings.action.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/store/actions/settings.action.ts:72\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/actions/settings.action.ts:73\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : ActionTypes.DELETE_ITEM_SELECT_ACTION\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/actions/settings.action.ts:72\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { type } from '../../utility';\n\nexport const ActionTypes = {\n  SET_LANGUAGE: type('[Settings] SetLanguage'),\n  SET_CULTURE: type('[Settings] SetCulture'),\n  LOAD_API_ROLES: type('[LOAD_API_ROLES] call api'),\n  SET_AVAIBLE_ROLES: type('[SET_AVAIBLE_ROLES] Get data'),\n  LOAD_FAIL: type('[LOAD_FAIL] Load Fail'),\n  LOAD_API_LANGUAGE: type('[LOAD_API_LANGUAGE] call api translations'),\n  SET_AVAIBLE_LANGUAGE: type('[SET_AVAIBLE_LANGUAGE] Get data'),\n  UPDATE_SELECT_ACTION: type('[UPDATE_SELECT_ACTION] Set'),\n  DELETE_ITEM_SELECT_ACTION: type('[DELETE_ITEM_SELECT_ACTION] update'),\n  RESET_STATE: type('[RESET_STATE] reset state for setting'),\n  DOCUMENT_CREATE: type('[Document create action] call'),\n  DOCUMENT_CREATE_SUCCESS: type('[Document create action] Success'),\n  DOCUMENT_CREATE_ERROR: type('[Document create action] Error')\n};\n\n/**\n * Settings Actions\n */\nexport class SetLanguageAction implements Action {\n  type = ActionTypes.SET_LANGUAGE;\n\n  constructor(public payload: string) { }\n}\n\nexport class SetCultureAction implements Action {\n  type = ActionTypes.SET_CULTURE;\n\n  constructor(public payload: string) { }\n}\n\nexport class LoadApiRolesAction implements Action {\n  type = ActionTypes.LOAD_API_ROLES;\n\n  constructor(public payload: any = null) { };\n}\n\nexport class SetAvailableRolesAction implements Action {\n  type = ActionTypes.SET_AVAIBLE_ROLES;\n\n  constructor(public payload: any) { };\n}\n\nexport class LoadFailAction implements Action {\n  type = ActionTypes.LOAD_FAIL;\n\n  constructor(public payload: any = null) { };\n}\n\n// language\nexport class LoadApiLangsAction implements Action {\n  type = ActionTypes.LOAD_API_LANGUAGE;\n\n  constructor(public payload: any = null) { };\n}\n\nexport class SetAvailableLanguagesAction implements Action {\n  type = ActionTypes.SET_AVAIBLE_LANGUAGE;\n\n  constructor(public payload: any) { };\n}\n\nexport class UpdateSelectedAction implements Action {\n  type = ActionTypes.UPDATE_SELECT_ACTION;\n  constructor(public payload: any) { }\n}\n\nexport class DeleteItemSelectedAction implements Action {\n  type = ActionTypes.DELETE_ITEM_SELECT_ACTION;\n  constructor(public payload: any) { }\n}\n\nexport class ResetState implements Action {\n  type = ActionTypes.RESET_STATE;\n  constructor(public payload: any = null) { }\n}\n\n// DOCUMENT CREATE FEATURE\nexport class DocumentCreate implements Action {\n  type = ActionTypes.DOCUMENT_CREATE;\n  constructor(public payload: any = null) { };\n}\n\nexport class DocumentCreateSuccess implements Action {\n  type = ActionTypes.DOCUMENT_CREATE_SUCCESS;\n  constructor(public payload: any = null) { };\n}\n\nexport class DocumentCreateError implements Action {\n  type = ActionTypes.DOCUMENT_CREATE;\n  constructor(public payload: any = null) { };\n}\n// DOCUMENT CREATE FEATURE\n\nexport type Actions\n  = SetLanguageAction\n  | SetCultureAction\n  | LoadApiRolesAction\n  | SetAvailableRolesAction\n  | LoadFailAction\n  | LoadApiLangsAction\n  | SetAvailableLanguagesAction\n  | UpdateSelectedAction\n  | DeleteItemSelectedAction\n  | ResetState\n  | DocumentCreate\n  | DocumentCreateSuccess\n  | DocumentCreateError;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteSuccessAction.html":{"url":"classes/DeleteSuccessAction.html","title":"class - DeleteSuccessAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteSuccessAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/store/actions/persons.action.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/store/actions/persons.action.ts:91\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/actions/persons.action.ts:92\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : ActionTypes.DELETE_SUCCESS\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/actions/persons.action.ts:91\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { DELETE } from './../../asyncServices/http/http.decorator';\nimport { Account } from './../../models/account.model';\nimport { Action }   from '@ngrx/store';\nimport { Person }  from '../../models';\nimport { type }     from '../../utility';\n\nexport const ActionTypes = {\n  // Actions Load data\n  LOAD:               type('[Persons] Load'),\n  LOAD_SUCCESS:       type('[Persons] Load Success'),\n  LOAD_FAIL:          type('[Persons] Load Fail'),\n  // Actions Add New person\n  ADD_NEW:            type('[Person] User Add new'),\n  ADDING:             type('[Person] Adding'),\n  ADD_SUCCESS:        type('[Person] Add new person success'),\n  Add_FAIL:           type('[Person] Add new person Fail'),\n  // Action Update\n  UPDATE:             type('[Person] Update'),\n  UPDATING:           type('[Person] Updating'),\n  UPDATE_SUCCESS:     type('[Person] Update success'),\n  UPDATE_FAIL:        type('[Person] Update fail'),\n  // Action Delete\n  DELETE:             type('[Person] Delete person'),\n  DELETING:           type('[Person] Deleting'),\n  DELETE_SUCCESS:     type('[Person] Delete success'),\n  DELETE_FAIL:        type('[Person] Delete fail'),\n  \n  // page details\n  LOAD_DETAIL:        type('Person Load detail')\n};\n\n/**\n * Person Action\n */\n\n export class LoadAction implements Action {\n    type = ActionTypes.LOAD;\n\n    constructor(public payload: any = null) {}\n }\n\n export class LoadSuccessAction implements Action {\n    type = ActionTypes.LOAD_SUCCESS;\n  \n    constructor(public payload: Array) { }\n  }\n  \n  export class LoadFailAction implements Action {\n    type = ActionTypes.LOAD_FAIL;\n  \n    constructor(public payload: any = null) { }\n  }\n\n  export class AddNewAction implements Action {\n    type = ActionTypes.ADD_NEW;\n\n    constructor(public payload: Person) {}\n  }\n\n  export class AddSuccessAction implements Action {\n    type = ActionTypes.ADD_SUCCESS;\n    constructor(public payload: Person){}\n  }\n\n  export class AddFailAction implements Action {\n    type = ActionTypes.Add_FAIL;\n    constructor(public payload: any = null){}\n  }\n\n  export class UpdateAction implements Action {\n    type = ActionTypes.UPDATE;\n    constructor(id: any, public payload: any = null) {}\n  }\n\n  export class UpdateSuccessAction implements Action {\n    type = ActionTypes.UPDATE_SUCCESS;\n    constructor(public payload: any = null){}\n  }\n\n  export class UpdateFailAction implements Action {\n    type = ActionTypes.UPDATE_FAIL;\n    constructor(public payload: any = null){}\n  }\n\n  export class DeleteAction implements Action {\n    type = ActionTypes.DELETE;\n    constructor(public payload: any){}\n  }\n\n  export class DeleteSuccessAction implements Action {\n    type = ActionTypes.DELETE_SUCCESS;\n    constructor(public payload: any = null){}\n  }\n\n  export class DeleteFailAction implements Action {\n    type = ActionTypes.DELETE_FAIL;\n    constructor(public payload: any = null){}\n  }\n  \n  export type Actions\n    = LoadAction\n    | LoadSuccessAction\n    | LoadFailAction\n    | AddNewAction\n    | AddSuccessAction\n    | AddFailAction\n    | UpdateAction\n    | UpdateSuccessAction\n    | UpdateFailAction\n    | DeleteAction\n    | DeleteSuccessAction\n    | DeleteFailAction\n \n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DoLoginAction.html":{"url":"classes/DoLoginAction.html","title":"class - DoLoginAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  DoLoginAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/store/actions/auth.action.ts\n        \n\n            \n                Description\n            \n            \n                Login Actions\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: LoginForm)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/store/actions/auth.action.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    LoginForm\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     LoginForm\n\n                    \n                \n                    \n                        \n                            Type :     LoginForm\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/actions/auth.action.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : ActionTypes.DO_LOGIN\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/actions/auth.action.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport {\n  LoginForm\n}                 from '../../models';\nimport { type }   from '../../utility';\n\nexport const ActionTypes = {\n  DO_LOGIN:                  type('[Auth] Do Login'),\n  DO_LOGIN_SUCCESS:          type('[Auth] Do Login Success'),\n  DO_LOGIN_FAIL:             type('[Auth] Do Login Fail'),\n  DO_LOGOUT:                 type('[Auth] Do Logout'),\n  DO_LOGOUT_SUCCESS:         type('[Auth] Do Logout Success'),\n  DO_LOGOUT_FAIL:            type('[Auth] Do Logout Fail'),\n  ADD_USER:                  type('[Auth] Add user'),\n  REMOVE_USER:               type('[Auth] Remove user')\n};\n\n/**\n * Login Actions\n */\nexport class DoLoginAction implements Action {\n  type = ActionTypes.DO_LOGIN;\n\n  constructor(public payload: LoginForm) { }\n}\n\nexport class DoLoginSuccessAction implements Action {\n  type = ActionTypes.DO_LOGIN_SUCCESS;\n\n  constructor(public payload: any) { }\n}\n\nexport class DoLoginFailAction implements Action {\n  type = ActionTypes.DO_LOGIN_FAIL;\n\n  constructor(public payload: any = null) { }\n}\n\n/**\n * Logout Actions\n */\nexport class DoLogoutAction implements Action {\n  type = ActionTypes.DO_LOGOUT;\n\n  constructor(public payload: any = null) { }\n}\n\nexport class DoLogoutSuccessAction implements Action {\n  type = ActionTypes.DO_LOGOUT_SUCCESS;\n\n  constructor(public payload: any = null) { }\n}\n\nexport class DoLogoutFailAction implements Action {\n  type = ActionTypes.DO_LOGOUT_FAIL;\n\n  constructor(public payload: any = null) { }\n}\n\n\n/**\n * User Actions\n */\nexport class AddUserAction implements Action {\n  type = ActionTypes.ADD_USER;\n\n  constructor(public payload: any) { }\n}\n\nexport class RemoveUserAction implements Action {\n  type = ActionTypes.REMOVE_USER;\n\n  constructor(public payload: any) { }\n}\n\nexport type Actions\n  = DoLoginAction\n  | DoLoginSuccessAction\n  | DoLoginFailAction\n  | DoLogoutAction\n  | DoLogoutSuccessAction\n  | DoLogoutFailAction\n  | AddUserAction\n  | RemoveUserAction;\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DoLoginFailAction.html":{"url":"classes/DoLoginFailAction.html","title":"class - DoLoginFailAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  DoLoginFailAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/store/actions/auth.action.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/store/actions/auth.action.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/actions/auth.action.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : ActionTypes.DO_LOGIN_FAIL\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/actions/auth.action.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport {\n  LoginForm\n}                 from '../../models';\nimport { type }   from '../../utility';\n\nexport const ActionTypes = {\n  DO_LOGIN:                  type('[Auth] Do Login'),\n  DO_LOGIN_SUCCESS:          type('[Auth] Do Login Success'),\n  DO_LOGIN_FAIL:             type('[Auth] Do Login Fail'),\n  DO_LOGOUT:                 type('[Auth] Do Logout'),\n  DO_LOGOUT_SUCCESS:         type('[Auth] Do Logout Success'),\n  DO_LOGOUT_FAIL:            type('[Auth] Do Logout Fail'),\n  ADD_USER:                  type('[Auth] Add user'),\n  REMOVE_USER:               type('[Auth] Remove user')\n};\n\n/**\n * Login Actions\n */\nexport class DoLoginAction implements Action {\n  type = ActionTypes.DO_LOGIN;\n\n  constructor(public payload: LoginForm) { }\n}\n\nexport class DoLoginSuccessAction implements Action {\n  type = ActionTypes.DO_LOGIN_SUCCESS;\n\n  constructor(public payload: any) { }\n}\n\nexport class DoLoginFailAction implements Action {\n  type = ActionTypes.DO_LOGIN_FAIL;\n\n  constructor(public payload: any = null) { }\n}\n\n/**\n * Logout Actions\n */\nexport class DoLogoutAction implements Action {\n  type = ActionTypes.DO_LOGOUT;\n\n  constructor(public payload: any = null) { }\n}\n\nexport class DoLogoutSuccessAction implements Action {\n  type = ActionTypes.DO_LOGOUT_SUCCESS;\n\n  constructor(public payload: any = null) { }\n}\n\nexport class DoLogoutFailAction implements Action {\n  type = ActionTypes.DO_LOGOUT_FAIL;\n\n  constructor(public payload: any = null) { }\n}\n\n\n/**\n * User Actions\n */\nexport class AddUserAction implements Action {\n  type = ActionTypes.ADD_USER;\n\n  constructor(public payload: any) { }\n}\n\nexport class RemoveUserAction implements Action {\n  type = ActionTypes.REMOVE_USER;\n\n  constructor(public payload: any) { }\n}\n\nexport type Actions\n  = DoLoginAction\n  | DoLoginSuccessAction\n  | DoLoginFailAction\n  | DoLogoutAction\n  | DoLogoutSuccessAction\n  | DoLogoutFailAction\n  | AddUserAction\n  | RemoveUserAction;\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DoLoginSuccessAction.html":{"url":"classes/DoLoginSuccessAction.html","title":"class - DoLoginSuccessAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  DoLoginSuccessAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/store/actions/auth.action.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/store/actions/auth.action.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/actions/auth.action.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : ActionTypes.DO_LOGIN_SUCCESS\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/actions/auth.action.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport {\n  LoginForm\n}                 from '../../models';\nimport { type }   from '../../utility';\n\nexport const ActionTypes = {\n  DO_LOGIN:                  type('[Auth] Do Login'),\n  DO_LOGIN_SUCCESS:          type('[Auth] Do Login Success'),\n  DO_LOGIN_FAIL:             type('[Auth] Do Login Fail'),\n  DO_LOGOUT:                 type('[Auth] Do Logout'),\n  DO_LOGOUT_SUCCESS:         type('[Auth] Do Logout Success'),\n  DO_LOGOUT_FAIL:            type('[Auth] Do Logout Fail'),\n  ADD_USER:                  type('[Auth] Add user'),\n  REMOVE_USER:               type('[Auth] Remove user')\n};\n\n/**\n * Login Actions\n */\nexport class DoLoginAction implements Action {\n  type = ActionTypes.DO_LOGIN;\n\n  constructor(public payload: LoginForm) { }\n}\n\nexport class DoLoginSuccessAction implements Action {\n  type = ActionTypes.DO_LOGIN_SUCCESS;\n\n  constructor(public payload: any) { }\n}\n\nexport class DoLoginFailAction implements Action {\n  type = ActionTypes.DO_LOGIN_FAIL;\n\n  constructor(public payload: any = null) { }\n}\n\n/**\n * Logout Actions\n */\nexport class DoLogoutAction implements Action {\n  type = ActionTypes.DO_LOGOUT;\n\n  constructor(public payload: any = null) { }\n}\n\nexport class DoLogoutSuccessAction implements Action {\n  type = ActionTypes.DO_LOGOUT_SUCCESS;\n\n  constructor(public payload: any = null) { }\n}\n\nexport class DoLogoutFailAction implements Action {\n  type = ActionTypes.DO_LOGOUT_FAIL;\n\n  constructor(public payload: any = null) { }\n}\n\n\n/**\n * User Actions\n */\nexport class AddUserAction implements Action {\n  type = ActionTypes.ADD_USER;\n\n  constructor(public payload: any) { }\n}\n\nexport class RemoveUserAction implements Action {\n  type = ActionTypes.REMOVE_USER;\n\n  constructor(public payload: any) { }\n}\n\nexport type Actions\n  = DoLoginAction\n  | DoLoginSuccessAction\n  | DoLoginFailAction\n  | DoLogoutAction\n  | DoLogoutSuccessAction\n  | DoLogoutFailAction\n  | AddUserAction\n  | RemoveUserAction;\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DoLogoutAction.html":{"url":"classes/DoLogoutAction.html","title":"class - DoLogoutAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  DoLogoutAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/store/actions/auth.action.ts\n        \n\n            \n                Description\n            \n            \n                Logout Actions\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/store/actions/auth.action.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/actions/auth.action.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : ActionTypes.DO_LOGOUT\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/actions/auth.action.ts:43\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport {\n  LoginForm\n}                 from '../../models';\nimport { type }   from '../../utility';\n\nexport const ActionTypes = {\n  DO_LOGIN:                  type('[Auth] Do Login'),\n  DO_LOGIN_SUCCESS:          type('[Auth] Do Login Success'),\n  DO_LOGIN_FAIL:             type('[Auth] Do Login Fail'),\n  DO_LOGOUT:                 type('[Auth] Do Logout'),\n  DO_LOGOUT_SUCCESS:         type('[Auth] Do Logout Success'),\n  DO_LOGOUT_FAIL:            type('[Auth] Do Logout Fail'),\n  ADD_USER:                  type('[Auth] Add user'),\n  REMOVE_USER:               type('[Auth] Remove user')\n};\n\n/**\n * Login Actions\n */\nexport class DoLoginAction implements Action {\n  type = ActionTypes.DO_LOGIN;\n\n  constructor(public payload: LoginForm) { }\n}\n\nexport class DoLoginSuccessAction implements Action {\n  type = ActionTypes.DO_LOGIN_SUCCESS;\n\n  constructor(public payload: any) { }\n}\n\nexport class DoLoginFailAction implements Action {\n  type = ActionTypes.DO_LOGIN_FAIL;\n\n  constructor(public payload: any = null) { }\n}\n\n/**\n * Logout Actions\n */\nexport class DoLogoutAction implements Action {\n  type = ActionTypes.DO_LOGOUT;\n\n  constructor(public payload: any = null) { }\n}\n\nexport class DoLogoutSuccessAction implements Action {\n  type = ActionTypes.DO_LOGOUT_SUCCESS;\n\n  constructor(public payload: any = null) { }\n}\n\nexport class DoLogoutFailAction implements Action {\n  type = ActionTypes.DO_LOGOUT_FAIL;\n\n  constructor(public payload: any = null) { }\n}\n\n\n/**\n * User Actions\n */\nexport class AddUserAction implements Action {\n  type = ActionTypes.ADD_USER;\n\n  constructor(public payload: any) { }\n}\n\nexport class RemoveUserAction implements Action {\n  type = ActionTypes.REMOVE_USER;\n\n  constructor(public payload: any) { }\n}\n\nexport type Actions\n  = DoLoginAction\n  | DoLoginSuccessAction\n  | DoLoginFailAction\n  | DoLogoutAction\n  | DoLogoutSuccessAction\n  | DoLogoutFailAction\n  | AddUserAction\n  | RemoveUserAction;\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DoLogoutFailAction.html":{"url":"classes/DoLogoutFailAction.html","title":"class - DoLogoutFailAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  DoLogoutFailAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/store/actions/auth.action.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/store/actions/auth.action.ts:55\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/actions/auth.action.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : ActionTypes.DO_LOGOUT_FAIL\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/actions/auth.action.ts:55\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport {\n  LoginForm\n}                 from '../../models';\nimport { type }   from '../../utility';\n\nexport const ActionTypes = {\n  DO_LOGIN:                  type('[Auth] Do Login'),\n  DO_LOGIN_SUCCESS:          type('[Auth] Do Login Success'),\n  DO_LOGIN_FAIL:             type('[Auth] Do Login Fail'),\n  DO_LOGOUT:                 type('[Auth] Do Logout'),\n  DO_LOGOUT_SUCCESS:         type('[Auth] Do Logout Success'),\n  DO_LOGOUT_FAIL:            type('[Auth] Do Logout Fail'),\n  ADD_USER:                  type('[Auth] Add user'),\n  REMOVE_USER:               type('[Auth] Remove user')\n};\n\n/**\n * Login Actions\n */\nexport class DoLoginAction implements Action {\n  type = ActionTypes.DO_LOGIN;\n\n  constructor(public payload: LoginForm) { }\n}\n\nexport class DoLoginSuccessAction implements Action {\n  type = ActionTypes.DO_LOGIN_SUCCESS;\n\n  constructor(public payload: any) { }\n}\n\nexport class DoLoginFailAction implements Action {\n  type = ActionTypes.DO_LOGIN_FAIL;\n\n  constructor(public payload: any = null) { }\n}\n\n/**\n * Logout Actions\n */\nexport class DoLogoutAction implements Action {\n  type = ActionTypes.DO_LOGOUT;\n\n  constructor(public payload: any = null) { }\n}\n\nexport class DoLogoutSuccessAction implements Action {\n  type = ActionTypes.DO_LOGOUT_SUCCESS;\n\n  constructor(public payload: any = null) { }\n}\n\nexport class DoLogoutFailAction implements Action {\n  type = ActionTypes.DO_LOGOUT_FAIL;\n\n  constructor(public payload: any = null) { }\n}\n\n\n/**\n * User Actions\n */\nexport class AddUserAction implements Action {\n  type = ActionTypes.ADD_USER;\n\n  constructor(public payload: any) { }\n}\n\nexport class RemoveUserAction implements Action {\n  type = ActionTypes.REMOVE_USER;\n\n  constructor(public payload: any) { }\n}\n\nexport type Actions\n  = DoLoginAction\n  | DoLoginSuccessAction\n  | DoLoginFailAction\n  | DoLogoutAction\n  | DoLogoutSuccessAction\n  | DoLogoutFailAction\n  | AddUserAction\n  | RemoveUserAction;\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DoLogoutSuccessAction.html":{"url":"classes/DoLogoutSuccessAction.html","title":"class - DoLogoutSuccessAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  DoLogoutSuccessAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/store/actions/auth.action.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/store/actions/auth.action.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/actions/auth.action.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : ActionTypes.DO_LOGOUT_SUCCESS\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/actions/auth.action.ts:49\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport {\n  LoginForm\n}                 from '../../models';\nimport { type }   from '../../utility';\n\nexport const ActionTypes = {\n  DO_LOGIN:                  type('[Auth] Do Login'),\n  DO_LOGIN_SUCCESS:          type('[Auth] Do Login Success'),\n  DO_LOGIN_FAIL:             type('[Auth] Do Login Fail'),\n  DO_LOGOUT:                 type('[Auth] Do Logout'),\n  DO_LOGOUT_SUCCESS:         type('[Auth] Do Logout Success'),\n  DO_LOGOUT_FAIL:            type('[Auth] Do Logout Fail'),\n  ADD_USER:                  type('[Auth] Add user'),\n  REMOVE_USER:               type('[Auth] Remove user')\n};\n\n/**\n * Login Actions\n */\nexport class DoLoginAction implements Action {\n  type = ActionTypes.DO_LOGIN;\n\n  constructor(public payload: LoginForm) { }\n}\n\nexport class DoLoginSuccessAction implements Action {\n  type = ActionTypes.DO_LOGIN_SUCCESS;\n\n  constructor(public payload: any) { }\n}\n\nexport class DoLoginFailAction implements Action {\n  type = ActionTypes.DO_LOGIN_FAIL;\n\n  constructor(public payload: any = null) { }\n}\n\n/**\n * Logout Actions\n */\nexport class DoLogoutAction implements Action {\n  type = ActionTypes.DO_LOGOUT;\n\n  constructor(public payload: any = null) { }\n}\n\nexport class DoLogoutSuccessAction implements Action {\n  type = ActionTypes.DO_LOGOUT_SUCCESS;\n\n  constructor(public payload: any = null) { }\n}\n\nexport class DoLogoutFailAction implements Action {\n  type = ActionTypes.DO_LOGOUT_FAIL;\n\n  constructor(public payload: any = null) { }\n}\n\n\n/**\n * User Actions\n */\nexport class AddUserAction implements Action {\n  type = ActionTypes.ADD_USER;\n\n  constructor(public payload: any) { }\n}\n\nexport class RemoveUserAction implements Action {\n  type = ActionTypes.REMOVE_USER;\n\n  constructor(public payload: any) { }\n}\n\nexport type Actions\n  = DoLoginAction\n  | DoLoginSuccessAction\n  | DoLoginFailAction\n  | DoLogoutAction\n  | DoLogoutSuccessAction\n  | DoLogoutFailAction\n  | AddUserAction\n  | RemoveUserAction;\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DocumentCreate.html":{"url":"classes/DocumentCreate.html","title":"class - DocumentCreate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  DocumentCreate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/store/actions/settings.action.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/store/actions/settings.action.ts:83\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/actions/settings.action.ts:84\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : ActionTypes.DOCUMENT_CREATE\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/actions/settings.action.ts:83\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { type } from '../../utility';\n\nexport const ActionTypes = {\n  SET_LANGUAGE: type('[Settings] SetLanguage'),\n  SET_CULTURE: type('[Settings] SetCulture'),\n  LOAD_API_ROLES: type('[LOAD_API_ROLES] call api'),\n  SET_AVAIBLE_ROLES: type('[SET_AVAIBLE_ROLES] Get data'),\n  LOAD_FAIL: type('[LOAD_FAIL] Load Fail'),\n  LOAD_API_LANGUAGE: type('[LOAD_API_LANGUAGE] call api translations'),\n  SET_AVAIBLE_LANGUAGE: type('[SET_AVAIBLE_LANGUAGE] Get data'),\n  UPDATE_SELECT_ACTION: type('[UPDATE_SELECT_ACTION] Set'),\n  DELETE_ITEM_SELECT_ACTION: type('[DELETE_ITEM_SELECT_ACTION] update'),\n  RESET_STATE: type('[RESET_STATE] reset state for setting'),\n  DOCUMENT_CREATE: type('[Document create action] call'),\n  DOCUMENT_CREATE_SUCCESS: type('[Document create action] Success'),\n  DOCUMENT_CREATE_ERROR: type('[Document create action] Error')\n};\n\n/**\n * Settings Actions\n */\nexport class SetLanguageAction implements Action {\n  type = ActionTypes.SET_LANGUAGE;\n\n  constructor(public payload: string) { }\n}\n\nexport class SetCultureAction implements Action {\n  type = ActionTypes.SET_CULTURE;\n\n  constructor(public payload: string) { }\n}\n\nexport class LoadApiRolesAction implements Action {\n  type = ActionTypes.LOAD_API_ROLES;\n\n  constructor(public payload: any = null) { };\n}\n\nexport class SetAvailableRolesAction implements Action {\n  type = ActionTypes.SET_AVAIBLE_ROLES;\n\n  constructor(public payload: any) { };\n}\n\nexport class LoadFailAction implements Action {\n  type = ActionTypes.LOAD_FAIL;\n\n  constructor(public payload: any = null) { };\n}\n\n// language\nexport class LoadApiLangsAction implements Action {\n  type = ActionTypes.LOAD_API_LANGUAGE;\n\n  constructor(public payload: any = null) { };\n}\n\nexport class SetAvailableLanguagesAction implements Action {\n  type = ActionTypes.SET_AVAIBLE_LANGUAGE;\n\n  constructor(public payload: any) { };\n}\n\nexport class UpdateSelectedAction implements Action {\n  type = ActionTypes.UPDATE_SELECT_ACTION;\n  constructor(public payload: any) { }\n}\n\nexport class DeleteItemSelectedAction implements Action {\n  type = ActionTypes.DELETE_ITEM_SELECT_ACTION;\n  constructor(public payload: any) { }\n}\n\nexport class ResetState implements Action {\n  type = ActionTypes.RESET_STATE;\n  constructor(public payload: any = null) { }\n}\n\n// DOCUMENT CREATE FEATURE\nexport class DocumentCreate implements Action {\n  type = ActionTypes.DOCUMENT_CREATE;\n  constructor(public payload: any = null) { };\n}\n\nexport class DocumentCreateSuccess implements Action {\n  type = ActionTypes.DOCUMENT_CREATE_SUCCESS;\n  constructor(public payload: any = null) { };\n}\n\nexport class DocumentCreateError implements Action {\n  type = ActionTypes.DOCUMENT_CREATE;\n  constructor(public payload: any = null) { };\n}\n// DOCUMENT CREATE FEATURE\n\nexport type Actions\n  = SetLanguageAction\n  | SetCultureAction\n  | LoadApiRolesAction\n  | SetAvailableRolesAction\n  | LoadFailAction\n  | LoadApiLangsAction\n  | SetAvailableLanguagesAction\n  | UpdateSelectedAction\n  | DeleteItemSelectedAction\n  | ResetState\n  | DocumentCreate\n  | DocumentCreateSuccess\n  | DocumentCreateError;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DocumentCreateError.html":{"url":"classes/DocumentCreateError.html","title":"class - DocumentCreateError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  DocumentCreateError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/store/actions/settings.action.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/store/actions/settings.action.ts:93\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/actions/settings.action.ts:94\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : ActionTypes.DOCUMENT_CREATE\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/actions/settings.action.ts:93\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { type } from '../../utility';\n\nexport const ActionTypes = {\n  SET_LANGUAGE: type('[Settings] SetLanguage'),\n  SET_CULTURE: type('[Settings] SetCulture'),\n  LOAD_API_ROLES: type('[LOAD_API_ROLES] call api'),\n  SET_AVAIBLE_ROLES: type('[SET_AVAIBLE_ROLES] Get data'),\n  LOAD_FAIL: type('[LOAD_FAIL] Load Fail'),\n  LOAD_API_LANGUAGE: type('[LOAD_API_LANGUAGE] call api translations'),\n  SET_AVAIBLE_LANGUAGE: type('[SET_AVAIBLE_LANGUAGE] Get data'),\n  UPDATE_SELECT_ACTION: type('[UPDATE_SELECT_ACTION] Set'),\n  DELETE_ITEM_SELECT_ACTION: type('[DELETE_ITEM_SELECT_ACTION] update'),\n  RESET_STATE: type('[RESET_STATE] reset state for setting'),\n  DOCUMENT_CREATE: type('[Document create action] call'),\n  DOCUMENT_CREATE_SUCCESS: type('[Document create action] Success'),\n  DOCUMENT_CREATE_ERROR: type('[Document create action] Error')\n};\n\n/**\n * Settings Actions\n */\nexport class SetLanguageAction implements Action {\n  type = ActionTypes.SET_LANGUAGE;\n\n  constructor(public payload: string) { }\n}\n\nexport class SetCultureAction implements Action {\n  type = ActionTypes.SET_CULTURE;\n\n  constructor(public payload: string) { }\n}\n\nexport class LoadApiRolesAction implements Action {\n  type = ActionTypes.LOAD_API_ROLES;\n\n  constructor(public payload: any = null) { };\n}\n\nexport class SetAvailableRolesAction implements Action {\n  type = ActionTypes.SET_AVAIBLE_ROLES;\n\n  constructor(public payload: any) { };\n}\n\nexport class LoadFailAction implements Action {\n  type = ActionTypes.LOAD_FAIL;\n\n  constructor(public payload: any = null) { };\n}\n\n// language\nexport class LoadApiLangsAction implements Action {\n  type = ActionTypes.LOAD_API_LANGUAGE;\n\n  constructor(public payload: any = null) { };\n}\n\nexport class SetAvailableLanguagesAction implements Action {\n  type = ActionTypes.SET_AVAIBLE_LANGUAGE;\n\n  constructor(public payload: any) { };\n}\n\nexport class UpdateSelectedAction implements Action {\n  type = ActionTypes.UPDATE_SELECT_ACTION;\n  constructor(public payload: any) { }\n}\n\nexport class DeleteItemSelectedAction implements Action {\n  type = ActionTypes.DELETE_ITEM_SELECT_ACTION;\n  constructor(public payload: any) { }\n}\n\nexport class ResetState implements Action {\n  type = ActionTypes.RESET_STATE;\n  constructor(public payload: any = null) { }\n}\n\n// DOCUMENT CREATE FEATURE\nexport class DocumentCreate implements Action {\n  type = ActionTypes.DOCUMENT_CREATE;\n  constructor(public payload: any = null) { };\n}\n\nexport class DocumentCreateSuccess implements Action {\n  type = ActionTypes.DOCUMENT_CREATE_SUCCESS;\n  constructor(public payload: any = null) { };\n}\n\nexport class DocumentCreateError implements Action {\n  type = ActionTypes.DOCUMENT_CREATE;\n  constructor(public payload: any = null) { };\n}\n// DOCUMENT CREATE FEATURE\n\nexport type Actions\n  = SetLanguageAction\n  | SetCultureAction\n  | LoadApiRolesAction\n  | SetAvailableRolesAction\n  | LoadFailAction\n  | LoadApiLangsAction\n  | SetAvailableLanguagesAction\n  | UpdateSelectedAction\n  | DeleteItemSelectedAction\n  | ResetState\n  | DocumentCreate\n  | DocumentCreateSuccess\n  | DocumentCreateError;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DocumentCreateSuccess.html":{"url":"classes/DocumentCreateSuccess.html","title":"class - DocumentCreateSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  DocumentCreateSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/store/actions/settings.action.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/store/actions/settings.action.ts:88\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/actions/settings.action.ts:89\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : ActionTypes.DOCUMENT_CREATE_SUCCESS\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/actions/settings.action.ts:88\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { type } from '../../utility';\n\nexport const ActionTypes = {\n  SET_LANGUAGE: type('[Settings] SetLanguage'),\n  SET_CULTURE: type('[Settings] SetCulture'),\n  LOAD_API_ROLES: type('[LOAD_API_ROLES] call api'),\n  SET_AVAIBLE_ROLES: type('[SET_AVAIBLE_ROLES] Get data'),\n  LOAD_FAIL: type('[LOAD_FAIL] Load Fail'),\n  LOAD_API_LANGUAGE: type('[LOAD_API_LANGUAGE] call api translations'),\n  SET_AVAIBLE_LANGUAGE: type('[SET_AVAIBLE_LANGUAGE] Get data'),\n  UPDATE_SELECT_ACTION: type('[UPDATE_SELECT_ACTION] Set'),\n  DELETE_ITEM_SELECT_ACTION: type('[DELETE_ITEM_SELECT_ACTION] update'),\n  RESET_STATE: type('[RESET_STATE] reset state for setting'),\n  DOCUMENT_CREATE: type('[Document create action] call'),\n  DOCUMENT_CREATE_SUCCESS: type('[Document create action] Success'),\n  DOCUMENT_CREATE_ERROR: type('[Document create action] Error')\n};\n\n/**\n * Settings Actions\n */\nexport class SetLanguageAction implements Action {\n  type = ActionTypes.SET_LANGUAGE;\n\n  constructor(public payload: string) { }\n}\n\nexport class SetCultureAction implements Action {\n  type = ActionTypes.SET_CULTURE;\n\n  constructor(public payload: string) { }\n}\n\nexport class LoadApiRolesAction implements Action {\n  type = ActionTypes.LOAD_API_ROLES;\n\n  constructor(public payload: any = null) { };\n}\n\nexport class SetAvailableRolesAction implements Action {\n  type = ActionTypes.SET_AVAIBLE_ROLES;\n\n  constructor(public payload: any) { };\n}\n\nexport class LoadFailAction implements Action {\n  type = ActionTypes.LOAD_FAIL;\n\n  constructor(public payload: any = null) { };\n}\n\n// language\nexport class LoadApiLangsAction implements Action {\n  type = ActionTypes.LOAD_API_LANGUAGE;\n\n  constructor(public payload: any = null) { };\n}\n\nexport class SetAvailableLanguagesAction implements Action {\n  type = ActionTypes.SET_AVAIBLE_LANGUAGE;\n\n  constructor(public payload: any) { };\n}\n\nexport class UpdateSelectedAction implements Action {\n  type = ActionTypes.UPDATE_SELECT_ACTION;\n  constructor(public payload: any) { }\n}\n\nexport class DeleteItemSelectedAction implements Action {\n  type = ActionTypes.DELETE_ITEM_SELECT_ACTION;\n  constructor(public payload: any) { }\n}\n\nexport class ResetState implements Action {\n  type = ActionTypes.RESET_STATE;\n  constructor(public payload: any = null) { }\n}\n\n// DOCUMENT CREATE FEATURE\nexport class DocumentCreate implements Action {\n  type = ActionTypes.DOCUMENT_CREATE;\n  constructor(public payload: any = null) { };\n}\n\nexport class DocumentCreateSuccess implements Action {\n  type = ActionTypes.DOCUMENT_CREATE_SUCCESS;\n  constructor(public payload: any = null) { };\n}\n\nexport class DocumentCreateError implements Action {\n  type = ActionTypes.DOCUMENT_CREATE;\n  constructor(public payload: any = null) { };\n}\n// DOCUMENT CREATE FEATURE\n\nexport type Actions\n  = SetLanguageAction\n  | SetCultureAction\n  | LoadApiRolesAction\n  | SetAvailableRolesAction\n  | LoadFailAction\n  | LoadApiLangsAction\n  | SetAvailableLanguagesAction\n  | UpdateSelectedAction\n  | DeleteItemSelectedAction\n  | ResetState\n  | DocumentCreate\n  | DocumentCreateSuccess\n  | DocumentCreateError;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DocumentGenerationComponent.html":{"url":"components/DocumentGenerationComponent.html","title":"component - DocumentGenerationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DocumentGenerationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/document-generation/document-generation.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-document-generation\n            \n\n            \n                styleUrls\n                document-generation.component.css\n            \n\n\n\n            \n                templateUrl\n                ./document-generation.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onDocClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                contextValues\n                            \n                            \n                                displayStyle\n                            \n                            \n                                displayText\n                            \n                            \n                                templateId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onClickEvent\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/document-generation/document-generation.component.ts:15\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        contextValues\n                    \n                    \n                            \n                            Type:    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/document-generation/document-generation.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        displayStyle\n                    \n                    \n                            \n                            Type:    any\n\n                            \n                        \n                            Default value: 'btn btn-default'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/document-generation/document-generation.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        displayText\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/document-generation/document-generation.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        templateId\n                    \n                    \n                            \n                            Type:    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/document-generation/document-generation.component.ts:14\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onClickEvent\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/document-generation/document-generation.component.ts:15\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/components/document-generation/document-generation.component.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onDocClick\n                            \n                            \n                        \n                    \n                \n                \n                    \nonDocClick(documents: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/components/document-generation/document-generation.component.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        documents\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { DocumentsHelper } from './doc-helper';\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-document-generation',\n  templateUrl: './document-generation.component.html',\n  styleUrls: ['./document-generation.component.css']\n})\nexport class DocumentGenerationComponent implements OnInit {\n\n  @Input() contextValues: any;\n  @Input() displayText: string;\n  @Input() displayStyle: any = 'btn btn-default';\n  @Input() templateId: any;\n  @Output() onClickEvent: EventEmitter = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  onDocClick(documents) {\n    if (documents === undefined || !documents) { return; }\n    // console.log('documents log: ', documents);\n    this.onClickEvent.emit(documents);\n  }\n}\n\n    \n\n    \n        {{ displayText }}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ displayText }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'body'},{'name': 'BreadCrumbComponent', 'selector': 'app-bread-crumb'},{'name': 'ControlWebDavComponent', 'selector': 'app-control-web-dav'},{'name': 'DocumentGenerationComponent', 'selector': 'app-document-generation'},{'name': 'DocumentReportViewerComponent', 'selector': 'app-document-report-viewer'},{'name': 'DossierDetailsComponent', 'selector': 'app-dossier-details'},{'name': 'DossierNavigatorComponent', 'selector': 'app-dossier-navigator'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HorizontalNavigationComponent', 'selector': 'kiss-menu-header'},{'name': 'LanguageSelectorComponent', 'selector': 'language-selector'},{'name': 'LayoutContainer', 'selector': 'app-layout'},{'name': 'LeftSidebarComponent', 'selector': 'app-left-sidebar'},{'name': 'LoginComponent', 'selector': 'login'},{'name': 'NavFiltersComponent', 'selector': 'dossier-nav-filters'},{'name': 'NotificationBoxComponent', 'selector': 'app-notification-box'},{'name': 'PageBadGatewayComponent', 'selector': 'page-gate-way'},{'name': 'PageContentComponent', 'selector': 'page-content'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PersonFormComponent', 'selector': 'app-person-form'},{'name': 'PersonListComponent', 'selector': 'app-person-list'},{'name': 'PersonsComponent', 'selector': 'app-person'},{'name': 'ProfileBarComponent', 'selector': 'profile-bar'},{'name': 'ReportViewerComponent', 'selector': 'app-report-viewer'},{'name': 'SearchBoxComponent', 'selector': 'kiss-search-box'},{'name': 'SelectedActionsComponent', 'selector': 'app-selected-actions'},{'name': 'SpinnerComponent', 'selector': 'spinner'},{'name': 'ToolbarsComponent', 'selector': 'app-toolbars'},{'name': 'TreeDetailComponent', 'selector': 'app-tree-detail'},{'name': 'TreeListComponent', 'selector': 'app-tree-list'}];\n    var DIRECTIVES = [{'name': 'AuthorizeDirective', 'selector': '[appAuthorize]'},{'name': 'DynamicTabsDirective', 'selector': '[dynamic-tabs]'}];\n    var ACTUAL_COMPONENT = {'name': 'DocumentGenerationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DocumentGenerationModule.html":{"url":"modules/DocumentGenerationModule.html","title":"module - DocumentGenerationModule","body":"\n                   \n\n\n\n\n  Modules\n  DocumentGenerationModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DocumentGenerationModule\n\n\n\ncluster_DocumentGenerationModule_declarations\n\n\n\ncluster_DocumentGenerationModule_exports\n\n\n\ncluster_DocumentGenerationModule_providers\n\n\n\n\nDocumentGenerationComponent\n\nDocumentGenerationComponent\n\n\n\nDocumentGenerationModule\n\nDocumentGenerationModule\n\nDocumentGenerationModule -->\n\nDocumentGenerationComponent->DocumentGenerationModule\n\n\n\n\n\nDocumentGenerationComponent \n\nDocumentGenerationComponent \n\nDocumentGenerationComponent  -->\n\nDocumentGenerationModule->DocumentGenerationComponent \n\n\n\n\n\nDocumentsHelper\n\nDocumentsHelper\n\nDocumentGenerationModule -->\n\nDocumentsHelper->DocumentGenerationModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/components/document-generation/document-generation.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                DocumentGenerationComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     DocumentsHelper\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    DocumentGenerationComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        /**\n * How use\n * app-document-generation\n *\n *  \n     \n      \n\n onDocumentCreate(e) {\n    this.appSandbox.postDocumentCreate(e);\n    this.appSandbox.xDocument$.subscribe(document => {\n      if (!document) return;\n      this._document.downloadFile(document.fileBinary, document.docFormatCode, document.docTemplateName);\n    });\n  }\n**/\n\nimport { DocumentsHelper } from './doc-helper';\nimport { DocumentGenerationComponent } from './document-generation.component';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    DocumentGenerationComponent\n  ],\n  exports: [\n    DocumentGenerationComponent\n  ],\n  providers: [DocumentsHelper]\n})\nexport class DocumentGenerationModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DocumentReportViewerComponent.html":{"url":"components/DocumentReportViewerComponent.html","title":"component - DocumentReportViewerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DocumentReportViewerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/document-report-viewer/document-report-viewer.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-document-report-viewer\n            \n\n            \n                styleUrls\n                document-report-viewer.component.css\n            \n\n\n\n            \n                templateUrl\n                ./document-report-viewer.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _viewerModel\n                            \n                            \n                                control\n                            \n                            \n                                scripts\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                viewerModel\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(renderer: Renderer2)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/document-report-viewer/document-report-viewer.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        viewerModel\n                    \n                    \n                            \n                            Type:    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/document-report-viewer/document-report-viewer.component.ts:38\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/components/document-report-viewer/document-report-viewer.component.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _viewerModel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _viewerModel:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/document-report-viewer/document-report-viewer.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            control\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        control:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/document-report-viewer/document-report-viewer.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scripts\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        scripts:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/document-report-viewer/document-report-viewer.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        viewerModel\n                    \n                \n\n                \n                    \n                        getviewerModel()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/document-report-viewer/document-report-viewer.component.ts:41\n                                \n                            \n\n                \n                    \n                        setviewerModel(viewerModel: any)\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/document-report-viewer/document-report-viewer.component.ts:38\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            viewerModel\n                                                    \n                                                            \n                                                                        any\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, ViewChild, AfterViewInit, Renderer2, Input, ElementRef } from '@angular/core';\nimport * as ko from 'knockout';\nimport { Html } from 'devexpress-reporting/dx-web-document-viewer';\nimport { Observable } from 'rxjs/Observable';\n\n@Component({\n  selector: 'app-document-report-viewer',\n  templateUrl: './document-report-viewer.component.html',\n  styleUrls: ['./document-report-viewer.component.css']\n})\nexport class DocumentReportViewerComponent implements AfterViewInit {\n\n  _viewerModel;\n\n  @ViewChild('scripts')\n  scripts: ElementRef;\n\n  @ViewChild('control')\n  control: ElementRef;\n\n  constructor(private renderer: Renderer2) { }\n\n  ngAfterViewInit() {\n    const container = this.renderer.createElement('div');\n    container.innerHTML = Html;\n\n    this.renderer.appendChild(this.scripts.nativeElement, container);\n    if (this._viewerModel) {\n      const modelJson = ko.observable(JSON.stringify(this._viewerModel)),\n        viewerModel = ko.observable(null);\n      ko.applyBindings({\n        report: this._viewerModel\n      }, this.control.nativeElement);\n    }\n  }\n\n  @Input()\n  set viewerModel(viewerModel: any) {\n    this._viewerModel = viewerModel;\n  }\n  get viewerModel() {\n    return this._viewerModel;\n  }\n}\n\n    \n\n    \n        \n\n   -->\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   -->  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'body'},{'name': 'BreadCrumbComponent', 'selector': 'app-bread-crumb'},{'name': 'ControlWebDavComponent', 'selector': 'app-control-web-dav'},{'name': 'DocumentGenerationComponent', 'selector': 'app-document-generation'},{'name': 'DocumentReportViewerComponent', 'selector': 'app-document-report-viewer'},{'name': 'DossierDetailsComponent', 'selector': 'app-dossier-details'},{'name': 'DossierNavigatorComponent', 'selector': 'app-dossier-navigator'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HorizontalNavigationComponent', 'selector': 'kiss-menu-header'},{'name': 'LanguageSelectorComponent', 'selector': 'language-selector'},{'name': 'LayoutContainer', 'selector': 'app-layout'},{'name': 'LeftSidebarComponent', 'selector': 'app-left-sidebar'},{'name': 'LoginComponent', 'selector': 'login'},{'name': 'NavFiltersComponent', 'selector': 'dossier-nav-filters'},{'name': 'NotificationBoxComponent', 'selector': 'app-notification-box'},{'name': 'PageBadGatewayComponent', 'selector': 'page-gate-way'},{'name': 'PageContentComponent', 'selector': 'page-content'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PersonFormComponent', 'selector': 'app-person-form'},{'name': 'PersonListComponent', 'selector': 'app-person-list'},{'name': 'PersonsComponent', 'selector': 'app-person'},{'name': 'ProfileBarComponent', 'selector': 'profile-bar'},{'name': 'ReportViewerComponent', 'selector': 'app-report-viewer'},{'name': 'SearchBoxComponent', 'selector': 'kiss-search-box'},{'name': 'SelectedActionsComponent', 'selector': 'app-selected-actions'},{'name': 'SpinnerComponent', 'selector': 'spinner'},{'name': 'ToolbarsComponent', 'selector': 'app-toolbars'},{'name': 'TreeDetailComponent', 'selector': 'app-tree-detail'},{'name': 'TreeListComponent', 'selector': 'app-tree-list'}];\n    var DIRECTIVES = [{'name': 'AuthorizeDirective', 'selector': '[appAuthorize]'},{'name': 'DynamicTabsDirective', 'selector': '[dynamic-tabs]'}];\n    var ACTUAL_COMPONENT = {'name': 'DocumentReportViewerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DocumentReportViewerModule.html":{"url":"modules/DocumentReportViewerModule.html","title":"module - DocumentReportViewerModule","body":"\n                   \n\n\n\n\n  Modules\n  DocumentReportViewerModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DocumentReportViewerModule\n\n\n\ncluster_DocumentReportViewerModule_declarations\n\n\n\ncluster_DocumentReportViewerModule_exports\n\n\n\ncluster_DocumentReportViewerModule_providers\n\n\n\n\nDocumentReportViewerComponent\n\nDocumentReportViewerComponent\n\n\n\nDocumentReportViewerModule\n\nDocumentReportViewerModule\n\nDocumentReportViewerModule -->\n\nDocumentReportViewerComponent->DocumentReportViewerModule\n\n\n\n\n\nReportViewerComponent\n\nReportViewerComponent\n\nDocumentReportViewerModule -->\n\nReportViewerComponent->DocumentReportViewerModule\n\n\n\n\n\nDocumentReportViewerComponent \n\nDocumentReportViewerComponent \n\nDocumentReportViewerComponent  -->\n\nDocumentReportViewerModule->DocumentReportViewerComponent \n\n\n\n\n\nReportViewerComponent \n\nReportViewerComponent \n\nReportViewerComponent  -->\n\nDocumentReportViewerModule->ReportViewerComponent \n\n\n\n\n\nReportService\n\nReportService\n\nDocumentReportViewerModule -->\n\nReportService->DocumentReportViewerModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/components/document-report-viewer/document-report-viewer.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                DocumentReportViewerComponent\n                            \n                            \n                                ReportViewerComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     ReportService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    DocumentReportViewerComponent\n                            \n                            \n                                    ReportViewerComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReportService } from './report.service';\n\nimport { DocumentReportViewerComponent } from './document-report-viewer.component';\nimport { ReportViewerComponent } from './report-viewer/report-viewer.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    DocumentReportViewerComponent,\n    ReportViewerComponent,\n  ],\n  exports: [\n    DocumentReportViewerComponent,\n    ReportViewerComponent\n  ],\n  providers: [ReportService]\n})\nexport class DocumentReportViewerModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DocumentsHelper.html":{"url":"injectables/DocumentsHelper.html","title":"injectable - DocumentsHelper","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  DocumentsHelper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/components/document-generation/doc-helper.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                downloadFile\n                            \n                            \n                                    Private\n                                getType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            downloadFile\n                            \n                            \n                        \n                    \n                \n                \n                    \ndownloadFile(data: Response, type?: any, fileName?: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/components/document-generation/doc-helper.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    Response\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        type\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        fileName\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getType(type: DocFormat)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/components/document-generation/doc-helper.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    DocFormat\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport 'rxjs/rx';\nimport { DocFormat } from './doc-format.enum';\n\n@Injectable()\nexport class DocumentsHelper {\n    downloadFile(data: Response, type?: any, fileName?: any) {\n        const a = document.createElement('a');\n        document.body.appendChild(a);\n        const typeFile = this.getType(type);\n        const blob = new Blob([data], { type: typeFile.type || 'octet/stream' });\n        const url = window.URL.createObjectURL(blob);\n        a.href = url;\n        a.download = `${fileName}.${typeFile.ext}` || 'download.doc';\n        a.click();\n        window.URL.revokeObjectURL(url);\n    }\n\n    private getType(type: DocFormat): any {\n        let typeFile = {\n            ext: 'doc',\n            type: 'octet/stream'\n        };\n        switch (type) {\n            case DocFormat.Word:\n                typeFile = {\n                    ext: 'doc',\n                    type: 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\n                };\n                break;\n            case DocFormat.Excel:\n                typeFile = {\n                    ext: 'xls',\n                    type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n                };\n                break;\n            case DocFormat.Pdf:\n                typeFile = {\n                    ext: 'pdf',\n                    type: 'application/pdf'\n                };\n                break;\n            default:\n                break;\n        }\n        return typeFile;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DossierApiClient.html":{"url":"injectables/DossierApiClient.html","title":"injectable - DossierApiClient","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  DossierApiClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dossier-navigator/dossierApiClient.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getTrees\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getTrees\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getTrees(query: any)\n                    \n                \n\n                    \n                        \n                            Decorators : GETAdapter\n                        \n                    \n\n                        \n                            \n                                    Defined in src/app/dossier-navigator/dossierApiClient.service.ts:33\n                            \n                        \n\n\n                \n                    \n                            Retrieves all TreesModel\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        query\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {\n  Injectable, QueryList\n} from '@angular/core';\nimport {\n  HttpService,\n  GET,\n  Body,\n  Path,\n  Adapter,\n  DefaultHeaders,\n  Query\n} from '../shared/asyncServices/http';\nimport { Observable } from 'rxjs/Observable';\nimport { DossierService } from './dossier.service';\nimport { HttpHeaders, HttpParams } from '@angular/common/http';\n\nimport { DossierFilterModel } from '../shared/models';\nimport { tryMapPathApi } from '../shared/utility';\n\n@Injectable()\n@DefaultHeaders({\n  'Accept': 'application/json',\n  'Content-Type': 'application/json',\n})\n\nexport class DossierApiClient extends HttpService {\n\n  /**\n   * Retrieves all TreesModel\n   */\n  @GET('api/fall-navigator/trees{query}')\n  @Adapter(DossierService.gridAdapter)\n  public getTrees(@Path('query') query: any): Observable {\n    // let trees = this.getConfigsApi()['dossier'];\n    // if(trees) trees[0].parentId = '0';\n    // return Observable.of(trees);\n    return null;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DossierDetailsComponent.html":{"url":"components/DossierDetailsComponent.html","title":"component - DossierDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DossierDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/layouts/left-sidebars/dossier-details/dossier-details.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dossier-details\n            \n\n            \n                styleUrls\n                dossier-details.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dossier-details.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                itemData\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/layouts/left-sidebars/dossier-details/dossier-details.component.ts:11\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        itemData\n                    \n                    \n                            \n                            Type:    TreeModel\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/layouts/left-sidebars/dossier-details/dossier-details.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { DossierNavigatorTreeModel as TreeModel } from './../../../models';\nimport { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n    selector: 'app-dossier-details',\n    styleUrls: [`./dossier-details.component.scss`],\n    templateUrl: './dossier-details.component.html'\n})\n\nexport class DossierDetailsComponent {\n    @Input() itemData: TreeModel;\n\n    constructor() {\n    }\n}\n\n    \n\n    \n        \n  Dossier Detail: \n   {{ itemData.name }} \n   {{ itemData.b}} \n   {{ itemData.k }} \n   {{ itemData.userId }} \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Dossier Detail:    {{ itemData.name }}    {{ itemData.b}}    {{ itemData.k }}    {{ itemData.userId }} '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'body'},{'name': 'BreadCrumbComponent', 'selector': 'app-bread-crumb'},{'name': 'ControlWebDavComponent', 'selector': 'app-control-web-dav'},{'name': 'DocumentGenerationComponent', 'selector': 'app-document-generation'},{'name': 'DocumentReportViewerComponent', 'selector': 'app-document-report-viewer'},{'name': 'DossierDetailsComponent', 'selector': 'app-dossier-details'},{'name': 'DossierNavigatorComponent', 'selector': 'app-dossier-navigator'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HorizontalNavigationComponent', 'selector': 'kiss-menu-header'},{'name': 'LanguageSelectorComponent', 'selector': 'language-selector'},{'name': 'LayoutContainer', 'selector': 'app-layout'},{'name': 'LeftSidebarComponent', 'selector': 'app-left-sidebar'},{'name': 'LoginComponent', 'selector': 'login'},{'name': 'NavFiltersComponent', 'selector': 'dossier-nav-filters'},{'name': 'NotificationBoxComponent', 'selector': 'app-notification-box'},{'name': 'PageBadGatewayComponent', 'selector': 'page-gate-way'},{'name': 'PageContentComponent', 'selector': 'page-content'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PersonFormComponent', 'selector': 'app-person-form'},{'name': 'PersonListComponent', 'selector': 'app-person-list'},{'name': 'PersonsComponent', 'selector': 'app-person'},{'name': 'ProfileBarComponent', 'selector': 'profile-bar'},{'name': 'ReportViewerComponent', 'selector': 'app-report-viewer'},{'name': 'SearchBoxComponent', 'selector': 'kiss-search-box'},{'name': 'SelectedActionsComponent', 'selector': 'app-selected-actions'},{'name': 'SpinnerComponent', 'selector': 'spinner'},{'name': 'ToolbarsComponent', 'selector': 'app-toolbars'},{'name': 'TreeDetailComponent', 'selector': 'app-tree-detail'},{'name': 'TreeListComponent', 'selector': 'app-tree-list'}];\n    var DIRECTIVES = [{'name': 'AuthorizeDirective', 'selector': '[appAuthorize]'},{'name': 'DynamicTabsDirective', 'selector': '[dynamic-tabs]'}];\n    var ACTUAL_COMPONENT = {'name': 'DossierDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DossierEffects.html":{"url":"injectables/DossierEffects.html","title":"injectable - DossierEffects","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  DossierEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/store/effects/dossier.effect.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getTrees$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, dossierApiClient: DossierApiClient, appState$: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/store/effects/dossier.effect.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        dossierApiClient\n                                                  \n                                                        \n                                                                    DossierApiClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        appState$\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTrees$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getTrees$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n    .ofType(dossierAction.ActionTypes.LOAD)\n    .map((action: dossierAction.LoadAction) => action.payload)\n    .switchMap((state: DossierFilterModel) => {\n      const query = tryMapPathApi(state);\n      return this.dossierApiClient.getTrees(query)\n        .map(trees => new dossierAction.LoadSuccessAction(trees))\n        .catch(error  => Observable.of(new dossierAction.LoadFailAction()));\n    })\n                        \n                    \n                    \n                        \n                            Decorators : Effect\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/effects/dossier.effect.ts:30\n                            \n                        \n\n                \n                    \n                        Trees list\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/switchMap';\nimport { Injectable }             from '@angular/core';\nimport { Effect, Actions }        from '@ngrx/effects';\nimport { Action }                 from '@ngrx/store';\nimport { Observable }             from 'rxjs/Observable';\nimport { of }                     from 'rxjs/observable/of';\nimport { DossierApiClient }      from '../../../dossier-navigator/dossierApiClient.service';\nimport * as dossierAction       from '../actions/dossier.action';\nimport { Store }                  from '@ngrx/store';\nimport * as store                 from '../index';\nimport { \n    DossierNavigatorTreeModel \n    as TreeModel, DossierFilterModel }                from '../../models';\nimport { tryMapPathApi } from '../../utility';\n\n@Injectable()\nexport class DossierEffects {\n\n  constructor(\n    private actions$: Actions,\n    private dossierApiClient: DossierApiClient,\n    private appState$: Store) {}\n\n  /**\n   * Trees list\n   */\n  @Effect()\n  getTrees$: Observable = this.actions$\n    .ofType(dossierAction.ActionTypes.LOAD)\n    .map((action: dossierAction.LoadAction) => action.payload)\n    .switchMap((state: DossierFilterModel) => {\n      const query = tryMapPathApi(state);\n      return this.dossierApiClient.getTrees(query)\n        .map(trees => new dossierAction.LoadSuccessAction(trees))\n        .catch(error  => Observable.of(new dossierAction.LoadFailAction()));\n    });\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DossierFilterModel.html":{"url":"classes/DossierFilterModel.html","title":"class - DossierFilterModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  DossierFilterModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/dossier/dossier-filters.model.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        IDossierFilterModel\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                Active\n                            \n                            \n                                    Optional\n                                Archived\n                            \n                            \n                                    Optional\n                                Closed\n                            \n                            \n                                    Optional\n                                IncludeGroup\n                            \n                            \n                                    Optional\n                                IncludeGuest\n                            \n                            \n                                    Optional\n                                IncludeTasks\n                            \n                            \n                                    Optional\n                                UserId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data?: IDossierFilterModel)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/models/dossier/dossier-filters.model.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    IDossierFilterModel\n                                                        \n                                                  \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            Active\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        Active:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/dossier/dossier-filters.model.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            Archived\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        Archived:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/dossier/dossier-filters.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            Closed\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        Closed:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/dossier/dossier-filters.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            IncludeGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        IncludeGroup:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/dossier/dossier-filters.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            IncludeGuest\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        IncludeGuest:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/dossier/dossier-filters.model.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            IncludeTasks\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        IncludeTasks:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/dossier/dossier-filters.model.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            UserId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        UserId:     any | null\n\n                    \n                \n                    \n                        \n                            Type :     any | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/dossier/dossier-filters.model.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DossierFilterModel implements IDossierFilterModel {\n    UserId?: any | null;\n    Active?: boolean;\n    Closed?: boolean;\n    Archived?: boolean;\n    IncludeGroup?: boolean;\n    IncludeGuest?: boolean;\n    IncludeTasks?: boolean;\n\n    constructor(data?: IDossierFilterModel) {\n        if (data) {\n            for (const property in data) {\n                if (data.hasOwnProperty(property)) { (this)[property] = (data)[property]; }\n            }\n        }\n    }\n}\n\nexport interface IDossierFilterModel {\n    UserId?: any | null;\n    Active?: boolean;\n    Closed?: boolean;\n    Archived?: boolean;\n    IncludeGroup?: boolean;\n    IncludeGuest?: boolean;\n    IncludeTasks?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DossierNavigatorComponent.html":{"url":"components/DossierNavigatorComponent.html","title":"component - DossierNavigatorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DossierNavigatorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dossier-navigator/dossiers/dossier-navigator.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dossier-navigator\n            \n\n            \n                styleUrls\n                dossier-navigator.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dossier-navigator.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dossierDetail\n                            \n                            \n                                    Public\n                                dossierSandbox\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                            \n                                    Protected\n                                permissions\n                            \n                            \n                                    Public\n                                titlePage\n                            \n                            \n                                    Private\n                                titleService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loadTrees\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onClickSelectAction\n                            \n                            \n                                onDeleteSelectAction\n                            \n                            \n                                    Private\n                                registerEvents\n                            \n                            \n                                    Public\n                                unregisterEvents\n                            \n                            \n                                    Public\n                                getTitle\n                            \n                            \n                                    Public\n                                setTitle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(injector: Injector, dossierSandbox: DossierSandbox, route: ActivatedRoute, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/dossier-navigator/dossiers/dossier-navigator.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                    Injector\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        dossierSandbox\n                                                  \n                                                        \n                                                                    DossierSandbox\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadTrees\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loadTrees(filters: DossierFilterModel)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dossier-navigator/dossiers/dossier-navigator.component.ts:75\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filters\n                                                        \n                                                                    DossierFilterModel\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dossier-navigator/dossiers/dossier-navigator.component.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dossier-navigator/dossiers/dossier-navigator.component.ts:40\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClickSelectAction\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClickSelectAction(itemData: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dossier-navigator/dossiers/dossier-navigator.component.ts:81\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        itemData\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onDeleteSelectAction\n                            \n                            \n                        \n                    \n                \n                \n                    \nonDeleteSelectAction(itemData: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dossier-navigator/dossiers/dossier-navigator.component.ts:86\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        itemData\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            registerEvents\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerEvents()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dossier-navigator/dossiers/dossier-navigator.component.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            unregisterEvents\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        unregisterEvents()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dossier-navigator/dossiers/dossier-navigator.component.ts:52\n                            \n                        \n\n\n                \n                    \n                            Unsubscribes from events\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getTitle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getTitle()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setTitle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setTitle(newTitle: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        newTitle\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dossierDetail\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dossierDetail:     TreeModel\n\n                    \n                \n                    \n                        \n                            Type :     TreeModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dossier-navigator/dossiers/dossier-navigator.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dossierSandbox\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dossierSandbox:     DossierSandbox\n\n                    \n                \n                    \n                        \n                            Type :     DossierSandbox\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dossier-navigator/dossiers/dossier-navigator.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dossier-navigator/dossiers/dossier-navigator.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            permissions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        permissions:     ClassRightModel\n\n                    \n                \n                    \n                        \n                            Type :     ClassRightModel\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            titlePage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        titlePage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            titleService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        titleService:     Title\n\n                    \n                \n                    \n                        \n                            Type :     Title\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { treeNavModels } from './../../shared/mocks';\nimport {\n  Injector,\n  OnInit,\n  Component,\n  ChangeDetectionStrategy,\n  OnDestroy,\n  ViewChild,\n  EventEmitter\n} from '@angular/core';\nimport { DossierSandbox } from '../dossier.sandbox';\nimport {\n  DossierNavigatorTreeModel as TreeModel, User, DossierFilterModel\n} from '../../shared/models';\nimport { BaseComponent } from '../../shared/components/base.component';\nimport { Subscription } from 'rxjs/rx';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-dossier-navigator',\n  templateUrl: `./dossier-navigator.component.html`,\n  styleUrls: ['./dossier-navigator.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class DossierNavigatorComponent extends BaseComponent implements OnInit, OnDestroy {\n\n  dossierDetail: TreeModel;\n  private subscriptions: Array = [];\n\n  constructor(\n    injector: Injector,\n    public dossierSandbox: DossierSandbox,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {\n    super(injector);\n  }\n\n  ngOnInit() {\n    this.dossierSandbox.resetState();\n    this.registerEvents();\n  }\n\n  ngOnDestroy() {\n    this.unregisterEvents();\n  }\n\n  /**\n   * Unsubscribes from events\n   */\n  public unregisterEvents() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  /*\n  * Registers events\n  */\n  private registerEvents(): void {\n    const filters = new DossierFilterModel();\n    // get parrams:\n    this.route.queryParams.subscribe(parrams => {\n      filters.UserId = +parrams['UserId'] || localStorage.getItem('user.userId');\n      filters.Active = parrams.hasOwnProperty('Active') ? parrams['Active'] === 'true' : true;\n      filters.Closed = parrams.hasOwnProperty('Closed') ? parrams['Closed'] === 'true' : false;\n      filters.Archived = parrams.hasOwnProperty('Archived') ? parrams['Archived'] === 'true' : false;\n      filters.IncludeGroup = parrams.hasOwnProperty('IncludeGroup') ? parrams['IncludeGroup'] === 'true' : false;\n      filters.IncludeGuest = parrams.hasOwnProperty('IncludeGuest') ? parrams['IncludeGuest'] === 'true' : false;\n      filters.IncludeTasks = parrams.hasOwnProperty('IncludeTasks') ? parrams['IncludeTasks'] === 'true' : false;\n\n      this.loadTrees(filters);\n    });\n  }\n\n  private loadTrees(filters: DossierFilterModel): void {\n    this.subscriptions.push(this.dossierSandbox.loggedUser$.subscribe((user: User) => {\n      if (user.isLoggedIn) { this.dossierSandbox.loadDossierTrees(filters); }\n    }));\n  }\n\n  onClickSelectAction(itemData) {\n    this.dossierSandbox.selectDossier(itemData.data);\n    this.router.navigate([itemData.url]);\n  }\n\n  onDeleteSelectAction(itemData) {\n    this.dossierSandbox.deleteDossierItem(itemData);\n  }\n}\n\n    \n\n    \n        \n    \n        \n            \n            \n            \n                        \n        \n\n        \n            \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'body'},{'name': 'BreadCrumbComponent', 'selector': 'app-bread-crumb'},{'name': 'ControlWebDavComponent', 'selector': 'app-control-web-dav'},{'name': 'DocumentGenerationComponent', 'selector': 'app-document-generation'},{'name': 'DocumentReportViewerComponent', 'selector': 'app-document-report-viewer'},{'name': 'DossierDetailsComponent', 'selector': 'app-dossier-details'},{'name': 'DossierNavigatorComponent', 'selector': 'app-dossier-navigator'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HorizontalNavigationComponent', 'selector': 'kiss-menu-header'},{'name': 'LanguageSelectorComponent', 'selector': 'language-selector'},{'name': 'LayoutContainer', 'selector': 'app-layout'},{'name': 'LeftSidebarComponent', 'selector': 'app-left-sidebar'},{'name': 'LoginComponent', 'selector': 'login'},{'name': 'NavFiltersComponent', 'selector': 'dossier-nav-filters'},{'name': 'NotificationBoxComponent', 'selector': 'app-notification-box'},{'name': 'PageBadGatewayComponent', 'selector': 'page-gate-way'},{'name': 'PageContentComponent', 'selector': 'page-content'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PersonFormComponent', 'selector': 'app-person-form'},{'name': 'PersonListComponent', 'selector': 'app-person-list'},{'name': 'PersonsComponent', 'selector': 'app-person'},{'name': 'ProfileBarComponent', 'selector': 'profile-bar'},{'name': 'ReportViewerComponent', 'selector': 'app-report-viewer'},{'name': 'SearchBoxComponent', 'selector': 'kiss-search-box'},{'name': 'SelectedActionsComponent', 'selector': 'app-selected-actions'},{'name': 'SpinnerComponent', 'selector': 'spinner'},{'name': 'ToolbarsComponent', 'selector': 'app-toolbars'},{'name': 'TreeDetailComponent', 'selector': 'app-tree-detail'},{'name': 'TreeListComponent', 'selector': 'app-tree-list'}];\n    var DIRECTIVES = [{'name': 'AuthorizeDirective', 'selector': '[appAuthorize]'},{'name': 'DynamicTabsDirective', 'selector': '[dynamic-tabs]'}];\n    var ACTUAL_COMPONENT = {'name': 'DossierNavigatorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DossierNavigatorModule.html":{"url":"modules/DossierNavigatorModule.html","title":"module - DossierNavigatorModule","body":"\n                   \n\n\n\n\n  Modules\n  DossierNavigatorModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DossierNavigatorModule\n\n\n\ncluster_DossierNavigatorModule_declarations\n\n\n\ncluster_DossierNavigatorModule_imports\n\n\n\ncluster_DossierNavigatorModule_providers\n\n\n\n\nDossierNavigatorComponent\n\nDossierNavigatorComponent\n\n\n\nDossierNavigatorModule\n\nDossierNavigatorModule\n\nDossierNavigatorModule -->\n\nDossierNavigatorComponent->DossierNavigatorModule\n\n\n\n\n\nNavFiltersComponent\n\nNavFiltersComponent\n\nDossierNavigatorModule -->\n\nNavFiltersComponent->DossierNavigatorModule\n\n\n\n\n\nTreeDetailComponent\n\nTreeDetailComponent\n\nDossierNavigatorModule -->\n\nTreeDetailComponent->DossierNavigatorModule\n\n\n\n\n\nTreeListComponent\n\nTreeListComponent\n\nDossierNavigatorModule -->\n\nTreeListComponent->DossierNavigatorModule\n\n\n\n\n\nDossierRoutingModule\n\nDossierRoutingModule\n\nDossierNavigatorModule -->\n\nDossierRoutingModule->DossierNavigatorModule\n\n\n\n\n\nLayoutContainersModule\n\nLayoutContainersModule\n\nDossierNavigatorModule -->\n\nLayoutContainersModule->DossierNavigatorModule\n\n\n\n\n\nDossierApiClient\n\nDossierApiClient\n\nDossierNavigatorModule -->\n\nDossierApiClient->DossierNavigatorModule\n\n\n\n\n\nDossierSandbox\n\nDossierSandbox\n\nDossierNavigatorModule -->\n\nDossierSandbox->DossierNavigatorModule\n\n\n\n\n\nDossierService\n\nDossierService\n\nDossierNavigatorModule -->\n\nDossierService->DossierNavigatorModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/dossier-navigator/dossier-navigator.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                DossierNavigatorComponent\n                            \n                            \n                                NavFiltersComponent\n                            \n                            \n                                TreeDetailComponent\n                            \n                            \n                                TreeListComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     DossierApiClient\n                            \n                            \n                                     DossierSandbox\n                            \n                            \n                                     DossierService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    DossierRoutingModule\n                            \n                            \n                                    LayoutContainersModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {\n  ReactiveFormsModule,\n  NG_VALIDATORS,\n  FormControl\n} from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { DossierRoutingModule } from './dossier-routing.module';\nimport { DossierSandbox } from './dossier.sandbox';\nimport { DossierApiClient } from './dossierApiClient.service';\nimport { DossierService } from './dossier.service';\n\nimport { TranslateModule } from 'ng2-translate';\n\n/**\n * Components\n */\nimport { DossierNavigatorComponent } from './dossiers/dossier-navigator.component';\nimport { TreeListComponent } from './tree-list/tree-list.component';\nimport { NavFiltersComponent } from './nav-filters/nav-filters.component';\n\n/**\n * Dossier Modules\n */\nimport { ComponentsModule } from '../shared/components';\nimport { LayoutContainersModule } from './../shared/layouts/layout.module';\n\n/**\n * Module devextreme\n */\nimport { DevExtremeModule } from 'devextreme-angular';\nimport { TreeDetailComponent } from './tree-detail/tree-detail.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    ComponentsModule,\n    LayoutContainersModule,\n    DevExtremeModule,\n    DossierRoutingModule,\n    TranslateModule,\n    RouterModule,\n  ],\n  declarations: [\n    TreeListComponent,\n    NavFiltersComponent,\n    DossierNavigatorComponent,\n    TreeDetailComponent,\n  ],\n  providers: [\n    DossierApiClient,\n    DossierService,\n    DossierSandbox,\n  ]\n})\nexport class DossierNavigatorModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DossierNavigatorTreeModel.html":{"url":"classes/DossierNavigatorTreeModel.html","title":"class - DossierNavigatorTreeModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  DossierNavigatorTreeModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/dossier/tree.model.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        IDossierNavigatorTreeModel\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                a\n                            \n                            \n                                    Optional\n                                b\n                            \n                            \n                                baPersonId\n                            \n                            \n                                    Optional\n                                f\n                            \n                            \n                                    Optional\n                                faLeistungId\n                            \n                            \n                                    Optional\n                                i\n                            \n                            \n                                    Optional\n                                iconId\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                k\n                            \n                            \n                                    Optional\n                                m\n                            \n                            \n                                    Optional\n                                name\n                            \n                            \n                                    Optional\n                                orgUnitId\n                            \n                            \n                                parentId\n                            \n                            \n                                    Optional\n                                personCount\n                            \n                            \n                                    Optional\n                                s\n                            \n                            \n                                    Optional\n                                type\n                            \n                            \n                                    Optional\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data?: IDossierNavigatorTreeModel)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/models/dossier/tree.model.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    IDossierNavigatorTreeModel\n                                                        \n                                                  \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            a\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        a:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/dossier/tree.model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            b\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        b:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/dossier/tree.model.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            baPersonId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        baPersonId:     any | null\n\n                    \n                \n                    \n                        \n                            Type :     any | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/dossier/tree.model.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            f\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        f:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/dossier/tree.model.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            faLeistungId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        faLeistungId:     any | null\n\n                    \n                \n                    \n                        \n                            Type :     any | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/dossier/tree.model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            i\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        i:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/dossier/tree.model.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            iconId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        iconId:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/dossier/tree.model.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     any | undefined\n\n                    \n                \n                    \n                        \n                            Type :     any | undefined\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/dossier/tree.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            k\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        k:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/dossier/tree.model.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            m\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        m:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/dossier/tree.model.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/dossier/tree.model.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            orgUnitId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        orgUnitId:     any | null\n\n                    \n                \n                    \n                        \n                            Type :     any | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/dossier/tree.model.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        parentId:     any | null\n\n                    \n                \n                    \n                        \n                            Type :     any | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/dossier/tree.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            personCount\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        personCount:     any | undefined\n\n                    \n                \n                    \n                        \n                            Type :     any | undefined\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/dossier/tree.model.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            s\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        s:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/dossier/tree.model.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/dossier/tree.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            userId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userId:     any | null\n\n                    \n                \n                    \n                        \n                            Type :     any | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/dossier/tree.model.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DossierNavigatorTreeModel implements IDossierNavigatorTreeModel {\n\n    id: any | undefined;\n    parentId: any | null;\n    type?: any;\n    iconId?: any;\n    name?: any;\n    baPersonId: any | null;\n    userId?: any | null;\n    b?: any;\n    f?: any;\n    s?: any;\n    i?: any;\n    m?: any;\n    a?: any;\n    k?: any;\n    faLeistungId?: any | null;\n    personCount?: any | undefined;\n    orgUnitId?: any | null;\n\n    constructor(data?: IDossierNavigatorTreeModel) {\n        if (data) {\n            for (const property in data) {\n                if (data.hasOwnProperty(property)) { (this)[property] = (data)[property]; }\n            }\n        }\n    }\n}\n\nexport interface IDossierNavigatorTreeModel {\n    id: any | undefined;\n    parentId: any | null;\n    type?: any;\n    iconId?: any;\n    name?: any;\n    baPersonId: any | null;\n    userId?: any | null;\n    b?: any;\n    f?: any;\n    s?: any;\n    i?: any;\n    m?: any;\n    a?: any;\n    k?: any;\n    faLeistungId?: any | null;\n    personCount?: any | undefined;\n    orgUnitId?: any | null;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DossierRoutingModule.html":{"url":"modules/DossierRoutingModule.html","title":"module - DossierRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  DossierRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/dossier-navigator/dossier-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from '../shared/guards/auth.guard';\nimport { CanDeactivateGuard } from '../shared/guards/canDeactivate.guard';\nimport { DossierNavigatorComponent } from './dossiers/dossier-navigator.component';\nimport { TreeListComponent } from './tree-list/tree-list.component';\nimport { TreeDetailComponent } from './tree-detail/tree-detail.component';\n\nconst dossierNavRoutes: Routes = [\n    {\n        path: '',\n        component: DossierNavigatorComponent,\n        canActivate: [AuthGuard],\n        children: [\n            { path: '', component: TreeListComponent },\n            { path: 'detail/:id/:faLeistungId', component: TreeDetailComponent }\n        ]\n    }\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forChild(dossierNavRoutes)\n    ],\n    exports: [\n        RouterModule\n    ]\n})\nexport class DossierRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DossierSandbox.html":{"url":"injectables/DossierSandbox.html","title":"injectable - DossierSandbox","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  DossierSandbox\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dossier-navigator/dossier.sandbox.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dossierDatas$\n                            \n                            \n                                    Public\n                                dossierDetail$\n                            \n                            \n                                    Public\n                                dossierLoading$\n                            \n                            \n                                    Public\n                                filterDossier$\n                            \n                            \n                                OnFiltersChanged\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                deleteDossierItem\n                            \n                            \n                                    Public\n                                loadDossierTrees\n                            \n                            \n                                    Private\n                                registerEvents\n                            \n                            \n                                    Public\n                                resetState\n                            \n                            \n                                    Public\n                                selectDossier\n                            \n                            \n                                    Public\n                                unregisterEvents\n                            \n                            \n                                    Public\n                                updateSelectedActions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, appState$: Store, dossierApiClient: DossierApiClient, utilService: UtilService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dossier-navigator/dossier.sandbox.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        appState$\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        dossierApiClient\n                                                  \n                                                        \n                                                                    DossierApiClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        utilService\n                                                  \n                                                        \n                                                                    UtilService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            deleteDossierItem\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        deleteDossierItem(treeModel: TreeModel)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dossier-navigator/dossier.sandbox.ts:58\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        treeModel\n                                                        \n                                                                    TreeModel\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loadDossierTrees\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loadDossierTrees(filters: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dossier-navigator/dossier.sandbox.ts:41\n                            \n                        \n\n\n                \n                    \n                            Loads dossier tree from the server\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filters\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            registerEvents\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerEvents()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dossier-navigator/dossier.sandbox.ts:136\n                            \n                        \n\n\n                \n                    \n                            Subscribes to events\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resetState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        resetState()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dossier-navigator/dossier.sandbox.ts:122\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selectDossier\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        selectDossier(treeModel: TreeModel)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dossier-navigator/dossier.sandbox.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        treeModel\n                                                        \n                                                                    TreeModel\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            unregisterEvents\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        unregisterEvents()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dossier-navigator/dossier.sandbox.ts:129\n                            \n                        \n\n\n                \n                    \n                            Unsubscribes from events\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            updateSelectedActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        updateSelectedActions(actions: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dossier-navigator/dossier.sandbox.ts:70\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dossierDatas$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dossierDatas$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.appState$.select(store.getDossierTreesData)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dossier-navigator/dossier.sandbox.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dossierDetail$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dossierDetail$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.appState$.select(store.getTreeDetail)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dossier-navigator/dossier.sandbox.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dossierLoading$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dossierLoading$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.appState$.select(store.getDossierTreesLoading)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dossier-navigator/dossier.sandbox.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filterDossier$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filterDossier$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.appState$.select(store.getFiltersDossier)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dossier-navigator/dossier.sandbox.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            OnFiltersChanged\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        OnFiltersChanged:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    onCkbActive: (e) => {\n      this.filterDossier$.subscribe(filters => {\n        filters.Active = e.value;\n        this.appState$.dispatch(new dossierActions.SetVisibilityFilterAction.SetActiveAction(filters));\n        this.appState$.dispatch(new dossierActions.LoadAction(filters));\n      });\n\n    },\n    onCkbClosed: (e) => {\n      this.filterDossier$.subscribe(filters => {\n        filters.Closed = e.value;\n        this.appState$.dispatch(new dossierActions.SetVisibilityFilterAction.SetClosedAction(filters));\n        this.appState$.dispatch(new dossierActions.LoadAction(filters));\n      });\n    },\n    onCkbArchived: (e) => {\n      this.filterDossier$.subscribe(filters => {\n        filters.Archived = e.value;\n        this.appState$.dispatch(new dossierActions.SetVisibilityFilterAction.SetClosedAction(filters));\n        this.appState$.dispatch(new dossierActions.LoadAction(filters));\n      });\n    },\n    onCkbIncludeGroup: (e) => {\n      this.filterDossier$.subscribe(filters => {\n        filters.IncludeGroup = e.value;\n        this.appState$.dispatch(new dossierActions.SetVisibilityFilterAction.SetIncludeGroupAction(filters));\n        this.appState$.dispatch(new dossierActions.LoadAction(filters));\n      });\n    },\n    onCkbIncludeGuest: (e) => {\n      this.filterDossier$.subscribe(filters => {\n        filters.IncludeGuest = e.value;\n        this.appState$.dispatch(new dossierActions.SetVisibilityFilterAction.SetIncludeGuestAction(filters));\n        this.appState$.dispatch(new dossierActions.LoadAction(filters));\n      });\n    },\n    onCkbIncludeTasks: (e) => {\n      this.filterDossier$.subscribe(filters => {\n        filters.IncludeTasks = e.value;\n        this.appState$.dispatch(new dossierActions.SetVisibilityFilterAction.SetIncludeGroupAction(filters));\n        this.appState$.dispatch(new dossierActions.LoadAction(filters));\n      });\n    },\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dossier-navigator/dossier.sandbox.ts:76\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dossier-navigator/dossier.sandbox.ts:26\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Router } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Subscription } from 'rxjs/rx';\nimport { Sandbox } from '../shared/sandbox/base.sandbox';\nimport { DossierApiClient } from './dossierApiClient.service';\n\nimport * as store from '../shared/store';\nimport * as dossierActions from '../shared/store/actions/dossier.action';\nimport * as settingsActions from '../shared/store/actions/settings.action';\nimport {\n  DossierNavigatorTreeModel as TreeModel,\n  User,\n  DossierFilterModel,\n  SelectedActionsModel\n} from '../shared/models';\nimport { UtilService, mergeArrayObject } from '../shared/utility';\n\n@Injectable()\nexport class DossierSandbox extends Sandbox {\n\n  public dossierDatas$ = this.appState$.select(store.getDossierTreesData);\n  public filterDossier$ = this.appState$.select(store.getFiltersDossier);\n  public dossierLoading$ = this.appState$.select(store.getDossierTreesLoading);\n  public dossierDetail$ = this.appState$.select(store.getTreeDetail);\n  private subscriptions: Array = [];\n\n  constructor(\n    private router: Router,\n    protected appState$: Store,\n    private dossierApiClient: DossierApiClient,\n    private utilService: UtilService,\n  ) {\n    super(appState$);\n    this.registerEvents();\n  }\n\n  /**\n* Loads dossier tree from the server\n*/\n  public loadDossierTrees(filters: any): void {\n    this.appState$.dispatch(new dossierActions.LoadAction(filters));\n  }\n\n  public selectDossier(treeModel: TreeModel): void {\n    this.appState$.dispatch(new dossierActions.GetTreeDetailAction(treeModel));\n    if (treeModel !== null) {\n      localStorage.setItem('select:dossier', JSON.stringify(treeModel));\n      const actions = new SelectedActionsModel();\n      actions.id = treeModel.id;\n      actions.name = `${treeModel.name}`;\n      actions.data = treeModel;\n      actions.url = `dossier/detail/${treeModel.id}/${treeModel.faLeistungId}`;\n      this.updateSelectedActions(actions);\n    }\n  }\n\n  public deleteDossierItem(treeModel: TreeModel): void {\n    this.appState$.dispatch(new settingsActions.DeleteItemSelectedAction(treeModel));\n    // Lắng nghe selectedAction thay đổi\n    this.selectedAction$.subscribe(dossiers => {\n      if (dossiers.length === 0) {\n        localStorage.setItem('select:dossier', null);\n        localStorage.setItem('select:person', null);\n        this.router.navigate(['dossier']);\n      }\n    });\n  }\n\n  public updateSelectedActions(actions: any) {\n    this.appState$.dispatch(new settingsActions.UpdateSelectedAction(actions));\n  }\n\n  // update filters\n  // tslint:disable-next-line:member-ordering\n  OnFiltersChanged = {\n    onCkbActive: (e) => {\n      this.filterDossier$.subscribe(filters => {\n        filters.Active = e.value;\n        this.appState$.dispatch(new dossierActions.SetVisibilityFilterAction.SetActiveAction(filters));\n        this.appState$.dispatch(new dossierActions.LoadAction(filters));\n      });\n\n    },\n    onCkbClosed: (e) => {\n      this.filterDossier$.subscribe(filters => {\n        filters.Closed = e.value;\n        this.appState$.dispatch(new dossierActions.SetVisibilityFilterAction.SetClosedAction(filters));\n        this.appState$.dispatch(new dossierActions.LoadAction(filters));\n      });\n    },\n    onCkbArchived: (e) => {\n      this.filterDossier$.subscribe(filters => {\n        filters.Archived = e.value;\n        this.appState$.dispatch(new dossierActions.SetVisibilityFilterAction.SetClosedAction(filters));\n        this.appState$.dispatch(new dossierActions.LoadAction(filters));\n      });\n    },\n    onCkbIncludeGroup: (e) => {\n      this.filterDossier$.subscribe(filters => {\n        filters.IncludeGroup = e.value;\n        this.appState$.dispatch(new dossierActions.SetVisibilityFilterAction.SetIncludeGroupAction(filters));\n        this.appState$.dispatch(new dossierActions.LoadAction(filters));\n      });\n    },\n    onCkbIncludeGuest: (e) => {\n      this.filterDossier$.subscribe(filters => {\n        filters.IncludeGuest = e.value;\n        this.appState$.dispatch(new dossierActions.SetVisibilityFilterAction.SetIncludeGuestAction(filters));\n        this.appState$.dispatch(new dossierActions.LoadAction(filters));\n      });\n    },\n    onCkbIncludeTasks: (e) => {\n      this.filterDossier$.subscribe(filters => {\n        filters.IncludeTasks = e.value;\n        this.appState$.dispatch(new dossierActions.SetVisibilityFilterAction.SetIncludeGroupAction(filters));\n        this.appState$.dispatch(new dossierActions.LoadAction(filters));\n      });\n    },\n  };\n\n  public resetState() {\n    this.appState$.dispatch(new dossierActions.ResetState());\n  }\n\n  /**\n   * Unsubscribes from events\n   */\n  public unregisterEvents() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  /**\n   * Subscribes to events\n   */\n  private registerEvents(): void {\n    // Subscribes to culture\n    this.subscriptions.push(this.culture$.subscribe((culture: string) => this.culture = culture));\n  }\n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DossierService.html":{"url":"injectables/DossierService.html","title":"injectable - DossierService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  DossierService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dossier-navigator/dossier.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                dossiersSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                gridAdapter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            gridAdapter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        gridAdapter(trees: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dossier-navigator/dossier.service.ts:22\n                            \n                        \n\n\n                \n                    \n                            Transforms grid data trees recieved from the API into array of 'DossierNavigatorTreeModel' instances\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        trees\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Array\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            dossiersSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dossiersSubscription:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/dossier-navigator/dossier.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  Inject,\n  forwardRef\n} from '@angular/core';\nimport {\n  DossierNavigatorTreeModel as TreesModel\n} from './../shared/models';\nimport { DossierSandbox } from './dossier.sandbox';\nimport { Observable } from 'rxjs/Observable';\n\n@Injectable()\nexport class DossierService {\n\n  private dossiersSubscription;\n\n  /**\n   * Transforms grid data trees recieved from the API into array of 'DossierNavigatorTreeModel' instances\n   *\n   * @param trees\n   */\n  static gridAdapter(trees: any): Array {\n    if (trees) { trees[0].parentId = '0'; }\n    return trees.map(tree => new TreesModel(tree));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DynamicTabsDirective.html":{"url":"directives/DynamicTabsDirective.html","title":"directive - DynamicTabsDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  DynamicTabsDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/directives/dynamic-tabs.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [dynamic-tabs]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                viewContainer\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(viewContainer: ViewContainerRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/directives/dynamic-tabs.directive.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        viewContainer\n                                                  \n                                                        \n                                                                    ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            viewContainer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        viewContainer:     ViewContainerRef\n\n                    \n                \n                    \n                        \n                            Type :     ViewContainerRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/directives/dynamic-tabs.directive.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: '[dynamic-tabs]'\n})\n\nexport class DynamicTabsDirective {\n  constructor(public viewContainer: ViewContainerRef) { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ExceptionsModule.html":{"url":"modules/ExceptionsModule.html","title":"module - ExceptionsModule","body":"\n                   \n\n\n\n\n  Modules\n  ExceptionsModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ExceptionsModule\n\n\n\ncluster_ExceptionsModule_declarations\n\n\n\ncluster_ExceptionsModule_imports\n\n\n\n\nPageBadGatewayComponent\n\nPageBadGatewayComponent\n\n\n\nExceptionsModule\n\nExceptionsModule\n\nExceptionsModule -->\n\nPageBadGatewayComponent->ExceptionsModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nExceptionsModule -->\n\nPageNotFoundComponent->ExceptionsModule\n\n\n\n\n\nExceptionsRoutingModule\n\nExceptionsRoutingModule\n\nExceptionsModule -->\n\nExceptionsRoutingModule->ExceptionsModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/exceptions/exceptions.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                PageBadGatewayComponent\n                            \n                            \n                                PageNotFoundComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    ExceptionsRoutingModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { TranslateModule } from 'ng2-translate';\nimport { PageBadGatewayComponent } from './pageBadGateway/pageBadGateway.component';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ExceptionsRoutingModule } from './exceptions-routing.module';\nimport { PageNotFoundComponent } from './pageNotFound/pageNotFound.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TranslateModule,\n    ExceptionsRoutingModule\n  ],\n  declarations: [\n    PageNotFoundComponent,\n    PageBadGatewayComponent\n  ]\n})\nexport class ExceptionsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ExceptionsRoutingModule.html":{"url":"modules/ExceptionsRoutingModule.html","title":"module - ExceptionsRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  ExceptionsRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/exceptions/exceptions-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { PageNotFoundComponent } from './pageNotFound/pageNotFound.component';\nimport { PageBadGatewayComponent } from './pageBadGateway/pageBadGateway.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  { path: '502', component: PageBadGatewayComponent },\n  { path: '404', component: PageNotFoundComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ExceptionsRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetTreeDetailAction.html":{"url":"classes/GetTreeDetailAction.html","title":"class - GetTreeDetailAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetTreeDetailAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/store/actions/dossier.action.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/store/actions/dossier.action.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/actions/dossier.action.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : ActionTypes.GET_TREE_DETAIL\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/actions/dossier.action.ts:44\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { DossierNavigatorTreeModel as TreesModel, DossierFilterModel } from '../../models';\nimport { type } from '../../utility';\n\nexport const ActionTypes = {\n  // Actions Load data\n  LOAD: type('[Dossier nav Trees] Load'),\n  LOAD_SUCCESS: type('[Dossier nav Trees] Load Success'),\n  LOAD_FAIL: type('[Dossier nav Trees] Load Fail'),\n  GET_TREE_DETAIL: type('[GET_TREE_DETAIL] load'),\n  RESET_STATE: type('[RESET_STATE] reset state for dossier')\n};\n\nexport const SetVisibilityFilter = {\n  // Action set filter\n  ACTIVE: type('[SET_VISIBILITY_FILTER] --- Aktiv'),\n  CLOSED: type('[SET_VISIBILITY_FILTER] --- Closed'),\n  ARCHIVED: type('[SET_VISIBILITY_FILTER] --- Archived'),\n  INCLUDE_GROUP: type('[SET_VISIBILITY_FILTER] --- IncludeGroup'),\n  INCLUDE_GUEST: type('[SET_VISIBILITY_FILTER] --- IncludeGuest'),\n  INCLUDE_TASKS: type('[SET_VISIBILITY_FILTER] --- IncludeTasks'),\n};\n\n/**\n * Dossier nav Trees Action\n */\n\nexport class LoadAction implements Action {\n  type = ActionTypes.LOAD;\n  constructor(public payload: DossierFilterModel) { }\n}\n\nexport class LoadSuccessAction implements Action {\n  type = ActionTypes.LOAD_SUCCESS;\n  constructor(public payload: Array) { }\n}\n\nexport class LoadFailAction implements Action {\n  type = ActionTypes.LOAD_FAIL;\n  constructor(public payload: any = null) { }\n}\n\nexport class GetTreeDetailAction implements Action {\n  type = ActionTypes.GET_TREE_DETAIL;\n\n  constructor(public payload: any) { }\n}\n\nexport class ResetState implements Action {\n  type = ActionTypes.RESET_STATE;\n  constructor(public payload: any = null) { }\n}\n\n/**\n * ------------------------------------\n * Set Visibility dossier Filter Action\n * @param payload: DossierFilterModel\n * ------------------------------------\n*/\n\nexport namespace SetVisibilityFilterAction {\n  export class SetActiveAction implements Action {\n    type = SetVisibilityFilter.ACTIVE;\n    constructor(public payload?: DossierFilterModel) { }\n  }\n  export class SetClosedAction implements Action {\n    type = SetVisibilityFilter.CLOSED;\n    constructor(public payload?: DossierFilterModel) { }\n  }\n  export class SetArchivedAction implements Action {\n    type = SetVisibilityFilter.ARCHIVED;\n    constructor(public payload?: DossierFilterModel) { }\n  }\n  export class SetIncludeGroupAction implements Action {\n    type = SetVisibilityFilter.INCLUDE_GROUP;\n    constructor(public payload?: DossierFilterModel) { }\n  }\n  export class SetIncludeGuestAction implements Action {\n    type = SetVisibilityFilter.INCLUDE_GUEST;\n    constructor(public payload?: DossierFilterModel) { }\n  }\n  export class SetIncludeTasksAction implements Action {\n    type = SetVisibilityFilter.INCLUDE_TASKS;\n    constructor(public payload?: DossierFilterModel) { }\n  }\n}\n\n\nexport type Actions\n  = LoadAction\n  | LoadSuccessAction\n  | LoadFailAction\n  | GetTreeDetailAction\n  | ResetState;\n\nexport type FiltersAction\n  = SetVisibilityFilterAction.SetActiveAction\n  | SetVisibilityFilterAction.SetClosedAction\n  | SetVisibilityFilterAction.SetArchivedAction\n  | SetVisibilityFilterAction.SetIncludeGroupAction\n  | SetVisibilityFilterAction.SetIncludeGuestAction\n  | SetVisibilityFilterAction.SetIncludeTasksAction;\n\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/layouts/headers/header.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                styleUrls\n                header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                homePage\n                            \n                            \n                                isToggleNav\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handlerToggleNav\n                            \n                            \n                                    Public\n                                onToggleNav\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                availableLanguages\n                            \n                            \n                                itemMenus\n                            \n                            \n                                searchBoxsData\n                            \n                            \n                                selectedLanguage\n                            \n                            \n                                userEmail\n                            \n                            \n                                userImage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                clickToggleNav\n                            \n                            \n                                logout\n                            \n                            \n                                selectLanguage\n                            \n                            \n                                selectMenu\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(renderer: Renderer2)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/layouts/headers/header.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        availableLanguages\n                    \n                    \n                            \n                            Type:    Array\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/layouts/headers/header.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        itemMenus\n                    \n                    \n                            \n                            Type:    Array\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/layouts/headers/header.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        searchBoxsData\n                    \n                    \n                            \n                            Type:    Array\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/layouts/headers/header.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedLanguage\n                    \n                    \n                            \n                            Type:    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/layouts/headers/header.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        userEmail\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/layouts/headers/header.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        userImage\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/layouts/headers/header.component.ts:23\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        clickToggleNav\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/layouts/headers/header.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        logout\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/layouts/headers/header.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectLanguage\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/layouts/headers/header.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectMenu\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/layouts/headers/header.component.ts:32\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            handlerToggleNav\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        handlerToggleNav(el: ElementRef)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/layouts/headers/header.component.ts:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                        \n                                                                    ElementRef\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onToggleNav\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        onToggleNav(isToggleNav: , event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/layouts/headers/header.component.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        isToggleNav\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            homePage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        homePage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/layouts/headers/header.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isToggleNav\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isToggleNav:     Boolean\n\n                    \n                \n                    \n                        \n                            Type :     Boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/layouts/headers/header.component.ts:37\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { environment } from './../../../../environments/environment.prod';\nimport {\n  Component,\n  Output,\n  Input,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  Renderer2,\n  ElementRef\n} from '@angular/core';\nimport { browserFunction } from '../../utility';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: `./header.component.html`,\n  styleUrls: ['./header.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class HeaderComponent {\n  homePage: string;\n  @Input() selectedLanguage: any;\n  @Input() availableLanguages: Array;\n  @Input() userImage: string;\n  @Input() userEmail: string;\n\n  @Output() selectLanguage: EventEmitter = new EventEmitter();\n  @Output() logout: EventEmitter = new EventEmitter();\n  @Output() clickToggleNav: EventEmitter = new EventEmitter();\n\n  // menu components\n  @Input() itemMenus: Array;\n  @Output() selectMenu: EventEmitter = new EventEmitter();\n\n  // search box\n  @Input() searchBoxsData: Array;\n\n  isToggleNav: Boolean = false;\n\n  constructor(\n    private renderer: Renderer2\n  ) {\n    this.homePage = environment.page.dossier;\n  }\n\n  public onToggleNav(isToggleNav, event) {\n    this.isToggleNav = !isToggleNav;\n    const el = browserFunction.getToggleSelector(event);\n    this.handlerToggleNav(el);\n  }\n\n  private handlerToggleNav(el: ElementRef): void {\n    if (!el || this.isToggleNav === undefined) {\n      return;\n    }\n    if (!this.isToggleNav) {\n      this.renderer.removeClass(el, 'toggle--nav');\n    } else {\n      this.renderer.addClass(el, 'toggle--nav');\n    }\n  }\n}\n\n    \n\n    \n        \n    \n        \n            \n            \n                \n                aventis\n            \n        \n\n        \n            \n        \n\n        \n            \n            \n                loading menu...\n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                loading search...\n            \n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                    aventis                                                                                                loading menu...                                                                                                                                                        loading search...                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'body'},{'name': 'BreadCrumbComponent', 'selector': 'app-bread-crumb'},{'name': 'ControlWebDavComponent', 'selector': 'app-control-web-dav'},{'name': 'DocumentGenerationComponent', 'selector': 'app-document-generation'},{'name': 'DocumentReportViewerComponent', 'selector': 'app-document-report-viewer'},{'name': 'DossierDetailsComponent', 'selector': 'app-dossier-details'},{'name': 'DossierNavigatorComponent', 'selector': 'app-dossier-navigator'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HorizontalNavigationComponent', 'selector': 'kiss-menu-header'},{'name': 'LanguageSelectorComponent', 'selector': 'language-selector'},{'name': 'LayoutContainer', 'selector': 'app-layout'},{'name': 'LeftSidebarComponent', 'selector': 'app-left-sidebar'},{'name': 'LoginComponent', 'selector': 'login'},{'name': 'NavFiltersComponent', 'selector': 'dossier-nav-filters'},{'name': 'NotificationBoxComponent', 'selector': 'app-notification-box'},{'name': 'PageBadGatewayComponent', 'selector': 'page-gate-way'},{'name': 'PageContentComponent', 'selector': 'page-content'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PersonFormComponent', 'selector': 'app-person-form'},{'name': 'PersonListComponent', 'selector': 'app-person-list'},{'name': 'PersonsComponent', 'selector': 'app-person'},{'name': 'ProfileBarComponent', 'selector': 'profile-bar'},{'name': 'ReportViewerComponent', 'selector': 'app-report-viewer'},{'name': 'SearchBoxComponent', 'selector': 'kiss-search-box'},{'name': 'SelectedActionsComponent', 'selector': 'app-selected-actions'},{'name': 'SpinnerComponent', 'selector': 'spinner'},{'name': 'ToolbarsComponent', 'selector': 'app-toolbars'},{'name': 'TreeDetailComponent', 'selector': 'app-tree-detail'},{'name': 'TreeListComponent', 'selector': 'app-tree-list'}];\n    var DIRECTIVES = [{'name': 'AuthorizeDirective', 'selector': '[appAuthorize]'},{'name': 'DynamicTabsDirective', 'selector': '[dynamic-tabs]'}];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HorizontalNavigationComponent.html":{"url":"components/HorizontalNavigationComponent.html","title":"component - HorizontalNavigationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HorizontalNavigationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/layouts/headers/horizontal-navigation/horizontal-navigation.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                kiss-menu-header\n            \n\n            \n                styleUrls\n                horizontal-navigation.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./horizontal-navigation.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                selectMenu\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                itemMenus\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                select\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        itemMenus\n                    \n                    \n                            \n                            Type:    Array\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/layouts/headers/horizontal-navigation/horizontal-navigation.component.ts:16\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        select\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/layouts/headers/horizontal-navigation/horizontal-navigation.component.ts:17\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selectMenu\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        selectMenu(e: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/layouts/headers/horizontal-navigation/horizontal-navigation.component.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import {\n  Component,\n  Output,\n  Input,\n  EventEmitter,\n  ChangeDetectionStrategy\n} from '@angular/core';\n\n@Component({\n  selector: 'kiss-menu-header',\n  templateUrl: `./horizontal-navigation.component.html`,\n  styleUrls: ['./horizontal-navigation.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class HorizontalNavigationComponent {\n  @Input() itemMenus: Array;\n  @Output() select: EventEmitter = new EventEmitter();\n\n  public selectMenu(e) {\n    this.select.emit(e);\n  }\n}\n\n    \n\n    \n        \n    \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'body'},{'name': 'BreadCrumbComponent', 'selector': 'app-bread-crumb'},{'name': 'ControlWebDavComponent', 'selector': 'app-control-web-dav'},{'name': 'DocumentGenerationComponent', 'selector': 'app-document-generation'},{'name': 'DocumentReportViewerComponent', 'selector': 'app-document-report-viewer'},{'name': 'DossierDetailsComponent', 'selector': 'app-dossier-details'},{'name': 'DossierNavigatorComponent', 'selector': 'app-dossier-navigator'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HorizontalNavigationComponent', 'selector': 'kiss-menu-header'},{'name': 'LanguageSelectorComponent', 'selector': 'language-selector'},{'name': 'LayoutContainer', 'selector': 'app-layout'},{'name': 'LeftSidebarComponent', 'selector': 'app-left-sidebar'},{'name': 'LoginComponent', 'selector': 'login'},{'name': 'NavFiltersComponent', 'selector': 'dossier-nav-filters'},{'name': 'NotificationBoxComponent', 'selector': 'app-notification-box'},{'name': 'PageBadGatewayComponent', 'selector': 'page-gate-way'},{'name': 'PageContentComponent', 'selector': 'page-content'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PersonFormComponent', 'selector': 'app-person-form'},{'name': 'PersonListComponent', 'selector': 'app-person-list'},{'name': 'PersonsComponent', 'selector': 'app-person'},{'name': 'ProfileBarComponent', 'selector': 'profile-bar'},{'name': 'ReportViewerComponent', 'selector': 'app-report-viewer'},{'name': 'SearchBoxComponent', 'selector': 'kiss-search-box'},{'name': 'SelectedActionsComponent', 'selector': 'app-selected-actions'},{'name': 'SpinnerComponent', 'selector': 'spinner'},{'name': 'ToolbarsComponent', 'selector': 'app-toolbars'},{'name': 'TreeDetailComponent', 'selector': 'app-tree-detail'},{'name': 'TreeListComponent', 'selector': 'app-tree-list'}];\n    var DIRECTIVES = [{'name': 'AuthorizeDirective', 'selector': '[appAuthorize]'},{'name': 'DynamicTabsDirective', 'selector': '[dynamic-tabs]'}];\n    var ACTUAL_COMPONENT = {'name': 'HorizontalNavigationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpAdapter.html":{"url":"classes/HttpAdapter.html","title":"class - HttpAdapter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpAdapter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/asyncServices/http/http.adapter.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                baseAdapter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            baseAdapter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        baseAdapter(res: Response, adapterFn?: Function)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/asyncServices/http/http.adapter.ts:5\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        res\n                                                        \n                                                                    Response\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        adapterFn\n                                                        \n                                                                    Function\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Response } from '@angular/http';\n\nexport class HttpAdapter {\n\n  static baseAdapter(res: Response, adapterFn?: Function): any {\n    if (res.status === 200) {\n      try {\n        const jsonRes = res.json();\n        return adapterFn ? adapterFn.call(undefined, jsonRes) : jsonRes;\n      } catch (e) {\n        return res;\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpResponseHandler.html":{"url":"injectables/HttpResponseHandler.html","title":"injectable - HttpResponseHandler","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  HttpResponseHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/asyncServices/http/httpResponseHandler.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getRelativeUrl\n                            \n                            \n                                    Private\n                                getTranslatedValue\n                            \n                            \n                                    Private\n                                handleBadGatewayError\n                            \n                            \n                                    Private\n                                handleBadRequest\n                            \n                            \n                                    Private\n                                handleErrorMessages\n                            \n                            \n                                    Private\n                                handleForbidden\n                            \n                            \n                                    Private\n                                handleNotFound\n                            \n                            \n                                    Private\n                                handleServerError\n                            \n                            \n                                    Private\n                                handleUnauthorized\n                            \n                            \n                                    Public\n                                onCatch\n                            \n                            \n                                    Private\n                                showNotificationError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, translateService: TranslateService, notificationsService: NotificationsService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/asyncServices/http/httpResponseHandler.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationsService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getRelativeUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getRelativeUrl(url: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/asyncServices/http/httpResponseHandler.service.ts:185\n                            \n                        \n\n\n                \n                    \n                            Returns relative url from the absolute path\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getTranslatedValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getTranslatedValue(value: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/asyncServices/http/httpResponseHandler.service.ts:171\n                            \n                        \n\n\n                \n                    \n                            Extracts and returns translated value from server response\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            handleBadGatewayError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        handleBadGatewayError()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/asyncServices/http/httpResponseHandler.service.ts:137\n                            \n                        \n\n\n                \n                    \n                            Shows notification errors when server response status is 502, 0\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            handleBadRequest\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        handleBadRequest(responseBody: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/asyncServices/http/httpResponseHandler.service.ts:63\n                            \n                        \n\n\n                \n                    \n                            Shows notification errors when server response status is 401\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        responseBody\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            handleErrorMessages\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        handleErrorMessages(response: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/asyncServices/http/httpResponseHandler.service.ts:150\n                            \n                        \n\n\n                \n                    \n                            Parses server response and shows notification errors with translated messages\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        response\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            handleForbidden\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        handleForbidden()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/asyncServices/http/httpResponseHandler.service.ts:101\n                            \n                        \n\n\n                \n                    \n                            Shows notification errors when server response status is 403\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            handleNotFound\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        handleNotFound(responseBody: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/asyncServices/http/httpResponseHandler.service.ts:114\n                            \n                        \n\n\n                \n                    \n                            Shows notification errors when server response status is 404\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        responseBody\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            handleServerError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        handleServerError(responseBody: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/asyncServices/http/httpResponseHandler.service.ts:130\n                            \n                        \n\n\n                \n                    \n                            Shows notification errors when server response status is 500\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        responseBody\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            handleUnauthorized\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        handleUnauthorized(responseBody: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/asyncServices/http/httpResponseHandler.service.ts:83\n                            \n                        \n\n\n                \n                    \n                            Shows notification errors when server response status is 401 and redirects user to login page\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        responseBody\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onCatch\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        onCatch(response: any, source: Observable)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/asyncServices/http/httpResponseHandler.service.ts:24\n                            \n                        \n\n\n                \n                    \n                            Global http error handler.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        response\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        source\n                                                        \n                                                                    Observable\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            showNotificationError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        showNotificationError(title: string, message: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/asyncServices/http/httpResponseHandler.service.ts:195\n                            \n                        \n\n\n                \n                    \n                            Shows error notification with given title and message\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        title\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { TranslateService } from 'ng2-translate';\nimport { NotificationsService } from 'angular2-notifications';\nimport { ConfigService } from '../../../app-config.service';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\n\n@Injectable()\nexport class HttpResponseHandler {\n  constructor(\n    private router: Router,\n    private translateService: TranslateService,\n    private notificationsService: NotificationsService,\n    private configService: ConfigService\n  ) { }\n\n  /**\n   * Global http error handler.\n   *\n   * @param error\n   * @param source\n   * @returns {ErrorObservable}\n   */\n  public onCatch(response: any, source: Observable): Observable {\n    switch (response.status) {\n      case 400:\n        this.handleBadRequest(response);\n        break;\n\n      case 401:\n        this.handleUnauthorized(response);\n        break;\n\n      case 403:\n        this.handleForbidden();\n        break;\n\n      case 404:\n        this.handleNotFound(response);\n        break;\n\n      case 500:\n        this.handleServerError(response);\n        break;\n\n      case 0:\n      case 502:\n      case 504:\n        this.handleBadGatewayError();\n        break;\n      default:\n        break;\n    }\n\n    return Observable.throw(response);\n  }\n\n  /**\n   * Shows notification errors when server response status is 401\n   *\n   * @param error\n   */\n  private handleBadRequest(responseBody: any): void {\n    if (responseBody._body) {\n      try {\n        const bodyParsed = responseBody.json();\n        this.handleErrorMessages(bodyParsed);\n      } catch (error) {\n        this.handleServerError(responseBody);\n      }\n    }\n    // tslint:disable-next-line:one-line\n    else {\n      this.handleServerError(responseBody);\n    }\n  }\n\n  /**\n   * Shows notification errors when server response status is 401 and redirects user to login page\n   *\n   * @param responseBody\n   */\n  private handleUnauthorized(responseBody: any): void {\n    // Read configuration in order to see if we need to display 401 notification message\n    let unauthorizedEndpoints: Array = this.configService.get('notifications').unauthorizedEndpoints;\n\n    unauthorizedEndpoints = unauthorizedEndpoints.filter(endpoint => this.getRelativeUrl(responseBody.url) === endpoint);\n\n    if (unauthorizedEndpoints.length) {\n      this.notificationsService.info(\n        'Info',\n        this.translateService.instant('ServerError401'),\n        this.configService.get('notifications').options);\n    }\n    this.router.navigate(['/login']);\n  }\n\n  /**\n   * Shows notification errors when server response status is 403\n   */\n  private handleForbidden(): void {\n    this.notificationsService.error(\n      'error',\n      this.translateService.instant('ServerError403'),\n      this.configService.get('notifications').options);\n    this.router.navigate(['/login']);\n  }\n\n  /**\n   * Shows notification errors when server response status is 404\n   *\n   * @param responseBody\n   */\n  private handleNotFound(responseBody: any): void {\n    // Read configuration in order to see if we need to display 401 notification message\n    let notFoundEndpoints: Array = this.configService.get('notifications').notFoundEndpoints;\n    notFoundEndpoints = notFoundEndpoints.filter(endpoint => this.getRelativeUrl(responseBody.url) === endpoint);\n\n    if (notFoundEndpoints.length) {\n      const message = this.translateService.instant('ServerError404'),\n        title = this.translateService.instant('ErrorNotificationTitle');\n\n      this.showNotificationError(title, message);\n    }\n  }\n\n  /**\n   * Shows notification errors when server response status is 500\n   */\n  private handleServerError(responseBody: any): void {\n    this.showNotificationError('Error', responseBody.statusText);\n  }\n\n  /**\n   * Shows notification errors when server response status is 502, 0\n   */\n  private handleBadGatewayError(): void {\n    const message = this.translateService.instant('ServerError502'),\n      title = this.translateService.instant('ErrorNotificationTitle');\n\n    this.showNotificationError(title, message);\n    // this.router.navigate(['/502']);\n  }\n\n  /**\n   * Parses server response and shows notification errors with translated messages\n   *\n   * @param response\n   */\n  private handleErrorMessages(response: any): void {\n    // tslint:disable-next-line:curly\n    if (!response) return;\n\n    for (const key of Object.keys(response)) {\n      if (Array.isArray(response[key])) {\n        response[key].forEach((value) => this.showNotificationError('Error', this.getTranslatedValue(value)));\n      }\n      // tslint:disable-next-line:one-line\n      else {\n        this.showNotificationError('Error', this.getTranslatedValue(response[key]));\n      }\n    }\n  }\n\n  /**\n   * Extracts and returns translated value from server response\n   *\n   * @param value\n   * @returns {string}\n   */\n  private getTranslatedValue(value: string): string {\n    if (value.indexOf('[') > -1) {\n      const key = value.substring(value.lastIndexOf('[') + 1, value.lastIndexOf(']'));\n      value = this.translateService.instant(key);\n    }\n    return value;\n  }\n\n  /**\n   * Returns relative url from the absolute path\n   *\n   * @param responseBody\n   * @returns {string}\n   */\n  private getRelativeUrl(url: string): string {\n    return url.toLowerCase().replace(/^(?:\\/\\/|[^\\/]+)*\\//, '').split('?')[0];\n  }\n\n  /**\n   * Shows error notification with given title and message\n   *\n   * @param title\n   * @param message\n   */\n  private showNotificationError(title: string, message: string): void {\n    this.notificationsService.error(title, message, this.configService.get('notifications').options);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpService.html":{"url":"injectables/HttpService.html","title":"injectable - HttpService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  HttpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/asyncServices/http/http.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                getBaseUrl\n                            \n                            \n                                    Protected\n                                getConfigsApi\n                            \n                            \n                                    Protected\n                                getDefaultHeaders\n                            \n                            \n                                    Protected\n                                getLangCulture\n                            \n                            \n                                    Protected\n                                getTokens\n                            \n                            \n                                    Protected\n                                requestInterceptor\n                            \n                            \n                                    Protected\n                                responseInterceptor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(http: Http, httpCLient: HttpClient, configService: ConfigService, responseHandler: HttpResponseHandler)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/asyncServices/http/http.service.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    Http\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpCLient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        responseHandler\n                                                  \n                                                        \n                                                                    HttpResponseHandler\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            getBaseUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getBaseUrl()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/asyncServices/http/http.service.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            getConfigsApi\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getConfigsApi()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/asyncServices/http/http.service.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            getDefaultHeaders\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getDefaultHeaders()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/asyncServices/http/http.service.ts:52\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Object\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            getLangCulture\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getLangCulture()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/asyncServices/http/http.service.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            getTokens\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getTokens()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/asyncServices/http/http.service.ts:56\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            requestInterceptor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        requestInterceptor(req: Request)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/asyncServices/http/http.service.ts:70\n                            \n                        \n\n\n                \n                    \n                            Request Interceptor\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    Request\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nrequest object\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            responseInterceptor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        responseInterceptor(observableRes: Observable, adapterFn?: Function)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/asyncServices/http/http.service.ts:82\n                            \n                        \n\n\n                \n                    \n                            Response Interceptor\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        observableRes\n                                                        \n                                                                    Observable\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                \nresponse object\n\n\n                                                        \n                                                \n                                                \n                                                        adapterFn\n                                                        \n                                                                    Function\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    res - transformed response object\n\n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { HttpClient }          from '@angular/common/http';\n// tslint:disable-next-line:import-spacing\nimport { Injectable }          from '@angular/core';\nimport {\n  Http,\n  Request,\n  RequestMethod,\n  Response\n// tslint:disable-next-line:import-spacing\n}                               from '@angular/http';\n// tslint:disable-next-line:import-spacing\nimport { Observable }           from 'rxjs/Observable';\n// tslint:disable-next-line:import-spacing\nimport { HttpResponseHandler }  from './httpResponseHandler.service';\n// tslint:disable-next-line:import-spacing\nimport { HttpAdapter }          from './http.adapter';\n// tslint:disable-next-line:import-spacing\nimport { ConfigService }        from '../../../app-config.service';\nimport {\n  methodBuilder,\n  paramBuilder\n  // tslint:disable-next-line:import-spacing\n}                               from './utils.service';\n\n/**\n * Supported @Produces media types\n */\nexport enum MediaType {\n  JSON,\n  FORM_DATA\n}\n\n@Injectable()\nexport class HttpService {\n\n  public constructor(\n    protected http: Http,\n    protected httpCLient: HttpClient,\n    protected configService: ConfigService,\n    protected responseHandler: HttpResponseHandler) {\n  }\n\n  protected getBaseUrl(): string {\n    return this.configService.get('api').baseUrl;\n  }\n\n  protected getConfigsApi(): any {\n    return this.configService.get('api');\n  }\n\n  protected getDefaultHeaders(): Object {\n    return null;\n  }\n\n  protected getTokens() {\n    return localStorage.getItem('token');\n  }\n\n  protected getLangCulture() {\n    return localStorage.getItem('currentLang.Culture') || 'de-CH';\n  }\n\n  /**\n  * Request Interceptor\n  *\n  * @method requestInterceptor\n  * @param {Request} req - request object\n  */\n  protected requestInterceptor(req: Request) {\n    req.headers.append('Authorization', `Bearer ${this.getTokens()}`);\n    req.headers.append('Accept-Language', this.getLangCulture());\n  }\n\n  /**\n  * Response Interceptor\n  *\n  * @method responseInterceptor\n  * @param {Response} observableRes - response object\n  * @returns {Response} res - transformed response object\n  */\n  protected responseInterceptor(observableRes: Observable, adapterFn?: Function): Observable {\n    return observableRes\n    .map(res => HttpAdapter.baseAdapter(res, adapterFn))\n    .catch((err, source) => this.responseHandler.onCatch(err, source));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HttpServiceModule.html":{"url":"modules/HttpServiceModule.html","title":"module - HttpServiceModule","body":"\n                   \n\n\n\n\n  Modules\n  HttpServiceModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/asyncServices/http/http.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport {\n  NgModule,\n  ModuleWithProviders\n} from '@angular/core';\nimport { HttpService } from './http.service';\nimport { HttpResponseHandler } from './httpResponseHandler.service';\n\n@NgModule({\n  imports: [CommonModule]\n})\nexport class HttpServiceModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: HttpServiceModule,\n      providers: [\n        HttpService,\n        HttpResponseHandler\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDossierFilterModel.html":{"url":"interfaces/IDossierFilterModel.html","title":"interface - IDossierFilterModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IDossierFilterModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/dossier/dossier-filters.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        Active\n                                \n                                \n                                            Optional\n                                        Archived\n                                \n                                \n                                            Optional\n                                        Closed\n                                \n                                \n                                            Optional\n                                        IncludeGroup\n                                \n                                \n                                            Optional\n                                        IncludeGuest\n                                \n                                \n                                            Optional\n                                        IncludeTasks\n                                \n                                \n                                            Optional\n                                        UserId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Active\n                                    \n                                \n                                \n                                    \n                                        Active:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Archived\n                                    \n                                \n                                \n                                    \n                                        Archived:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Closed\n                                    \n                                \n                                \n                                    \n                                        Closed:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        IncludeGroup\n                                    \n                                \n                                \n                                    \n                                        IncludeGroup:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        IncludeGuest\n                                    \n                                \n                                \n                                    \n                                        IncludeGuest:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        IncludeTasks\n                                    \n                                \n                                \n                                    \n                                        IncludeTasks:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        UserId\n                                    \n                                \n                                \n                                    \n                                        UserId:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export class DossierFilterModel implements IDossierFilterModel {\n    UserId?: any | null;\n    Active?: boolean;\n    Closed?: boolean;\n    Archived?: boolean;\n    IncludeGroup?: boolean;\n    IncludeGuest?: boolean;\n    IncludeTasks?: boolean;\n\n    constructor(data?: IDossierFilterModel) {\n        if (data) {\n            for (const property in data) {\n                if (data.hasOwnProperty(property)) { (this)[property] = (data)[property]; }\n            }\n        }\n    }\n}\n\nexport interface IDossierFilterModel {\n    UserId?: any | null;\n    Active?: boolean;\n    Closed?: boolean;\n    Archived?: boolean;\n    IncludeGroup?: boolean;\n    IncludeGuest?: boolean;\n    IncludeTasks?: boolean;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDossierNavigatorTreeModel.html":{"url":"interfaces/IDossierNavigatorTreeModel.html","title":"interface - IDossierNavigatorTreeModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IDossierNavigatorTreeModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/dossier/tree.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        a\n                                \n                                \n                                            Optional\n                                        b\n                                \n                                \n                                        baPersonId\n                                \n                                \n                                            Optional\n                                        f\n                                \n                                \n                                            Optional\n                                        faLeistungId\n                                \n                                \n                                            Optional\n                                        i\n                                \n                                \n                                            Optional\n                                        iconId\n                                \n                                \n                                        id\n                                \n                                \n                                            Optional\n                                        k\n                                \n                                \n                                            Optional\n                                        m\n                                \n                                \n                                            Optional\n                                        name\n                                \n                                \n                                            Optional\n                                        orgUnitId\n                                \n                                \n                                        parentId\n                                \n                                \n                                            Optional\n                                        personCount\n                                \n                                \n                                            Optional\n                                        s\n                                \n                                \n                                            Optional\n                                        type\n                                \n                                \n                                            Optional\n                                        userId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        a\n                                    \n                                \n                                \n                                    \n                                        a:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        b\n                                    \n                                \n                                \n                                    \n                                        b:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        baPersonId\n                                    \n                                \n                                \n                                    \n                                        baPersonId:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        f\n                                    \n                                \n                                \n                                    \n                                        f:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        faLeistungId\n                                    \n                                \n                                \n                                    \n                                        faLeistungId:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        i\n                                    \n                                \n                                \n                                    \n                                        i:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iconId\n                                    \n                                \n                                \n                                    \n                                        iconId:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     any | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        k\n                                    \n                                \n                                \n                                    \n                                        k:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        m\n                                    \n                                \n                                \n                                    \n                                        m:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        orgUnitId\n                                    \n                                \n                                \n                                    \n                                        orgUnitId:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parentId\n                                    \n                                \n                                \n                                    \n                                        parentId:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        personCount\n                                    \n                                \n                                \n                                    \n                                        personCount:     any | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | undefined\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        s\n                                    \n                                \n                                \n                                    \n                                        s:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                    \n                                \n                                \n                                    \n                                        userId:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export class DossierNavigatorTreeModel implements IDossierNavigatorTreeModel {\n\n    id: any | undefined;\n    parentId: any | null;\n    type?: any;\n    iconId?: any;\n    name?: any;\n    baPersonId: any | null;\n    userId?: any | null;\n    b?: any;\n    f?: any;\n    s?: any;\n    i?: any;\n    m?: any;\n    a?: any;\n    k?: any;\n    faLeistungId?: any | null;\n    personCount?: any | undefined;\n    orgUnitId?: any | null;\n\n    constructor(data?: IDossierNavigatorTreeModel) {\n        if (data) {\n            for (const property in data) {\n                if (data.hasOwnProperty(property)) { (this)[property] = (data)[property]; }\n            }\n        }\n    }\n}\n\nexport interface IDossierNavigatorTreeModel {\n    id: any | undefined;\n    parentId: any | null;\n    type?: any;\n    iconId?: any;\n    name?: any;\n    baPersonId: any | null;\n    userId?: any | null;\n    b?: any;\n    f?: any;\n    s?: any;\n    i?: any;\n    m?: any;\n    a?: any;\n    k?: any;\n    faLeistungId?: any | null;\n    personCount?: any | undefined;\n    orgUnitId?: any | null;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMenuModel.html":{"url":"interfaces/IMenuModel.html","title":"interface - IMenuModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IMenuModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/shared/menu.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        disabled\n                                \n                                \n                                            Optional\n                                        iconSrc\n                                \n                                \n                                        id\n                                \n                                \n                                            Optional\n                                        items\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        selected\n                                \n                                \n                                            Optional\n                                        sort\n                                \n                                \n                                            Optional\n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                    \n                                \n                                \n                                    \n                                        disabled:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iconSrc\n                                    \n                                \n                                \n                                    \n                                        iconSrc:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     any | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     IMenuModel[] | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IMenuModel[] | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selected\n                                    \n                                \n                                \n                                    \n                                        selected:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sort\n                                    \n                                \n                                \n                                    \n                                        sort:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:     string | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | undefined\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export class MenuModel implements IMenuModel {\n    \n    id: any | undefined;\n    name: string;\n    iconSrc?: string;\n    sort?: number;\n    disabled?: boolean;\n    selected?: boolean;\n    items?: IMenuModel[] | null;\n    url?: string | undefined;\n\n    constructor(data?: IMenuModel) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (this)[property] = (data)[property];\n            }\n        }\n    }\n}\n\nexport interface IMenuModel {\n    id: any | undefined;\n    name: string;\n    iconSrc?: string;\n    sort?: number;\n    disabled?: boolean;\n    selected?: boolean;\n    items?: IMenuModel[] | null;\n    url?: string | undefined;\n}\n\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPerson.html":{"url":"interfaces/IPerson.html","title":"interface - IPerson","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPerson\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/person.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        bffnummer\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        nnummer\n                                \n                                \n                                        vorname\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bffnummer\n                                    \n                                \n                                \n                                    \n                                        bffnummer:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nnummer\n                                    \n                                \n                                \n                                    \n                                        nnummer:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vorname\n                                    \n                                \n                                \n                                    \n                                        vorname:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export class Person {\n  public id: any;\n  public name: string;\n  public vorname: string;\n  public nnummer?: string;\n  public bffnummer?: any;\n  constructor(data?: IPerson) {\n    if (data) {\n      for (const property in data) {\n        if (data.hasOwnProperty(property)) { (this)[property] = (data)[property]; }\n      }\n    }\n  }\n}\n\nexport interface IPerson {\n  id: any;\n  name: string;\n  vorname: string;\n  nnummer?: string;\n  bffnummer?: any;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISearchBoxModel.html":{"url":"interfaces/ISearchBoxModel.html","title":"interface - ISearchBoxModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ISearchBoxModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/shared/search-box.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        GroupName\n                                \n                                \n                                            Optional\n                                        IconNameDX\n                                \n                                \n                                            Optional\n                                        IconSrc\n                                \n                                \n                                        ID\n                                \n                                \n                                        Name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        GroupName\n                                    \n                                \n                                \n                                    \n                                        GroupName:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        IconNameDX\n                                    \n                                \n                                \n                                    \n                                        IconNameDX:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        IconSrc\n                                    \n                                \n                                \n                                    \n                                        IconSrc:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ID\n                                    \n                                \n                                \n                                    \n                                        ID:     any | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Name\n                                    \n                                \n                                \n                                    \n                                        Name:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export class SearchBoxModel implements ISearchBoxModel {\n    ID: any | undefined;\n    Name: any;\n    GroupName: any;\n    IconNameDX?: any;\n    IconSrc?: any;\n\n    constructor(data?: ISearchBoxModel) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (this)[property] = (data)[property];\n            }\n        }\n    }\n}\n\nexport interface ISearchBoxModel {\n    ID: any | undefined;\n    Name: any;\n    GroupName: any;\n    IconNameDX?: any;\n    IconSrc?: any;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISidebarMenuModel.html":{"url":"interfaces/ISidebarMenuModel.html","title":"interface - ISidebarMenuModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ISidebarMenuModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/shared/sidebar-menu.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        disabled\n                                \n                                \n                                            Optional\n                                        expanded\n                                \n                                \n                                            Optional\n                                        iconFa\n                                \n                                \n                                            Optional\n                                        iconSrc\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        parentId\n                                \n                                \n                                            Optional\n                                        queryParams\n                                \n                                \n                                            Optional\n                                        selected\n                                \n                                \n                                            Optional\n                                        sort\n                                \n                                \n                                            Optional\n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                    \n                                \n                                \n                                    \n                                        disabled:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expanded\n                                    \n                                \n                                \n                                    \n                                        expanded:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iconFa\n                                    \n                                \n                                \n                                    \n                                        iconFa:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iconSrc\n                                    \n                                \n                                \n                                    \n                                        iconSrc:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     any | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parentId\n                                    \n                                \n                                \n                                    \n                                        parentId:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        queryParams\n                                    \n                                \n                                \n                                    \n                                        queryParams:     object | literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     object | literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selected\n                                    \n                                \n                                \n                                    \n                                        selected:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sort\n                                    \n                                \n                                \n                                    \n                                        sort:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:     string | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | undefined\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export class SidebarMenuModel implements ISidebarMenuModel {\n    id: any | undefined;\n    name: string;\n    iconFa?: string;\n    iconSrc?: string;\n    sort?: number;\n    disabled?: boolean;\n    selected?: boolean;\n    expanded?: boolean;\n    parentId?: any | null;\n    url?: string | undefined;\n    queryParams?: object | {};\n    \n    constructor(data?: ISidebarMenuModel) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (this)[property] = (data)[property];\n            }\n        }\n    }\n}\n\nexport interface ISidebarMenuModel {\n    id: any | undefined;\n    name: string;\n    iconFa?: string;\n    iconSrc?: string;\n    sort?: number;\n    disabled?: boolean;\n    selected?: boolean;\n    expanded?: boolean;\n    parentId?: any | null;\n    url?: string | undefined;\n    queryParams?: object | {};\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITemplateModel.html":{"url":"interfaces/ITemplateModel.html","title":"interface - ITemplateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ITemplateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/components/control-web-dav/template.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        DisplayName\n                                \n                                \n                                        FileName\n                                \n                                \n                                        Href\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        DisplayName\n                                    \n                                \n                                \n                                    \n                                        DisplayName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        FileName\n                                    \n                                \n                                \n                                    \n                                        FileName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Href\n                                    \n                                \n                                \n                                    \n                                        Href:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export class TemplateModel implements ITemplateModel {\n    FileName: string;\n    DisplayName: string;\n    Href: string;\n    constructor(model?: ITemplateModel) {\n        if (model) {\n            this.FileName = model.DisplayName;\n            this.DisplayName = model.DisplayName !== null ? model.DisplayName.split('.')[0] : '_blank';\n            this.Href = model.Href;\n        }\n    }\n}\n\nexport interface ITemplateModel {\n    FileName: string;\n    DisplayName: string;\n    Href: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ITreeNavModel.html":{"url":"classes/ITreeNavModel.html","title":"class - ITreeNavModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ITreeNavModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/dossier/tree-nav.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                icon\n                            \n                            \n                                id\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        content:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/dossier/tree-nav.model.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            icon\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        icon:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/dossier/tree-nav.model.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/dossier/tree-nav.model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            text\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        text:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/dossier/tree-nav.model.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class TreeNavModel implements ITreeNavModel {\n    id: number;\n    text: string;\n    icon: string;\n    content: string;\n    constructor(data?: ITreeNavModel) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (this)[property] = (data)[property];\n            }\n        }\n    }\n}\n\n\nexport class ITreeNavModel {\n    id: number;\n    text: string;\n    icon: string;\n    content: string;\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LanguageModel.html":{"url":"interfaces/LanguageModel.html","title":"interface - LanguageModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LanguageModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/shared/language.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        code\n                                \n                                \n                                            Optional\n                                        culture\n                                \n                                \n                                            Optional\n                                        flag\n                                \n                                \n                                            Optional\n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                    \n                                \n                                \n                                    \n                                        code:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        culture\n                                    \n                                \n                                \n                                    \n                                        culture:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        flag\n                                    \n                                \n                                \n                                    \n                                        flag:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface LanguageModel {\n    code?: string;\n    name?: string;\n    culture?: string;\n    flag?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LanguageSelectorComponent.html":{"url":"components/LanguageSelectorComponent.html","title":"component - LanguageSelectorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LanguageSelectorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/layouts/headers/languages/languageSelector.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                language-selector\n            \n\n            \n                styleUrls\n                languageSelector.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./languageSelector.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                selectedLangFlag\n                            \n                            \n                                    Public\n                                show\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                onDocumentClick\n                            \n                            \n                                    Public\n                                onToggle\n                            \n                            \n                                    Public\n                                selectLanguage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                availableLanguages\n                            \n                            \n                                selectedLanguage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                select\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/layouts/headers/languages/languageSelector.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        availableLanguages\n                    \n                    \n                            \n                            Type:    Array\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/layouts/headers/languages/languageSelector.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedLanguage\n                    \n                    \n                            \n                            Type:    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/layouts/headers/languages/languageSelector.component.ts:22\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        select\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/layouts/headers/languages/languageSelector.component.ts:24\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/layouts/headers/languages/languageSelector.component.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onDocumentClick\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        onDocumentClick(event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/layouts/headers/languages/languageSelector.component.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onToggle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        onToggle()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/layouts/headers/languages/languageSelector.component.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selectLanguage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        selectLanguage(lang: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/layouts/headers/languages/languageSelector.component.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        lang\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedLangFlag\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedLangFlag:     String\n\n                    \n                \n                    \n                        \n                            Type :     String\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/layouts/headers/languages/languageSelector.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            show\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        show:     Boolean\n\n                    \n                \n                    \n                        \n                            Type :     Boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/layouts/headers/languages/languageSelector.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  Output,\n  Input,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  ElementRef,\n  OnInit\n} from '@angular/core';\n\n@Component({\n  selector: 'language-selector',\n  templateUrl: './languageSelector.component.html',\n  styleUrls: ['./languageSelector.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    '(document:click)': 'onDocumentClick($event)'\n  }\n})\nexport class LanguageSelectorComponent implements OnInit {\n  selectedLangFlag: String = '';\n  @Input() selectedLanguage: any;\n  @Input() availableLanguages: Array;\n  @Output() select: EventEmitter = new EventEmitter();\n\n  public show: Boolean = false;\n\n  constructor(private elementRef: ElementRef) {\n  }\n\n  ngOnInit() {\n   const currentLang = this.availableLanguages.find(lang => lang.code === this.selectedLanguage);\n   this.selectedLangFlag = currentLang !== null ? currentLang.flag : '';\n  }\n\n  public onDocumentClick(event): void {\n    if (!this.elementRef.nativeElement.contains(event.target)) {\n      this.show = false;\n    }\n  }\n\n  public onToggle(): void {\n    this.show = !this.show;\n  }\n\n  public selectLanguage(lang: any) {\n    this.show = false;\n    this.selectedLangFlag = lang.flag;\n    this.select.emit({ code: lang.code, culture: lang.culture });\n  }\n}\n\n    \n\n    \n        \n    \n         {{selectedLanguage}}\n    \n\n    \n        \n             {{ lang.name }}\n        \n    \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '             {{selectedLanguage}}                             {{ lang.name }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'body'},{'name': 'BreadCrumbComponent', 'selector': 'app-bread-crumb'},{'name': 'ControlWebDavComponent', 'selector': 'app-control-web-dav'},{'name': 'DocumentGenerationComponent', 'selector': 'app-document-generation'},{'name': 'DocumentReportViewerComponent', 'selector': 'app-document-report-viewer'},{'name': 'DossierDetailsComponent', 'selector': 'app-dossier-details'},{'name': 'DossierNavigatorComponent', 'selector': 'app-dossier-navigator'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HorizontalNavigationComponent', 'selector': 'kiss-menu-header'},{'name': 'LanguageSelectorComponent', 'selector': 'language-selector'},{'name': 'LayoutContainer', 'selector': 'app-layout'},{'name': 'LeftSidebarComponent', 'selector': 'app-left-sidebar'},{'name': 'LoginComponent', 'selector': 'login'},{'name': 'NavFiltersComponent', 'selector': 'dossier-nav-filters'},{'name': 'NotificationBoxComponent', 'selector': 'app-notification-box'},{'name': 'PageBadGatewayComponent', 'selector': 'page-gate-way'},{'name': 'PageContentComponent', 'selector': 'page-content'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PersonFormComponent', 'selector': 'app-person-form'},{'name': 'PersonListComponent', 'selector': 'app-person-list'},{'name': 'PersonsComponent', 'selector': 'app-person'},{'name': 'ProfileBarComponent', 'selector': 'profile-bar'},{'name': 'ReportViewerComponent', 'selector': 'app-report-viewer'},{'name': 'SearchBoxComponent', 'selector': 'kiss-search-box'},{'name': 'SelectedActionsComponent', 'selector': 'app-selected-actions'},{'name': 'SpinnerComponent', 'selector': 'spinner'},{'name': 'ToolbarsComponent', 'selector': 'app-toolbars'},{'name': 'TreeDetailComponent', 'selector': 'app-tree-detail'},{'name': 'TreeListComponent', 'selector': 'app-tree-list'}];\n    var DIRECTIVES = [{'name': 'AuthorizeDirective', 'selector': '[appAuthorize]'},{'name': 'DynamicTabsDirective', 'selector': '[dynamic-tabs]'}];\n    var ACTUAL_COMPONENT = {'name': 'LanguageSelectorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LayoutContainer.html":{"url":"components/LayoutContainer.html","title":"component - LayoutContainer","body":"\n                   \n\n\n\n\n\n  Components\n  LayoutContainer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/layouts/layout.container.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-layout\n            \n\n\n\n\n            \n                templateUrl\n                ./layout.container.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                assetsFolder\n                            \n                            \n                                    Public\n                                layoutSandbox\n                            \n                            \n                                mainWrapperContainer\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                            \n                                    Public\n                                userEmail\n                            \n                            \n                                    Public\n                                userImage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                registerEvents\n                            \n                            \n                                selectMenu\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                isNavbar\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, layoutSandbox: LayoutSandbox)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/layouts/layout.container.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        layoutSandbox\n                                                  \n                                                        \n                                                                    LayoutSandbox\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        isNavbar\n                    \n                    \n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/layouts/layout.container.ts:32\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/layouts/layout.container.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/layouts/layout.container.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            registerEvents\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerEvents()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/layouts/layout.container.ts:53\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectMenu\n                            \n                            \n                        \n                    \n                \n                \n                    \nselectMenu(menu: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/layouts/layout.container.ts:63\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        menu\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            assetsFolder\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        assetsFolder:     String\n\n                    \n                \n                    \n                        \n                            Type :     String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/layouts/layout.container.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            layoutSandbox\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        layoutSandbox:     LayoutSandbox\n\n                    \n                \n                    \n                        \n                            Type :     LayoutSandbox\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/layouts/layout.container.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mainWrapperContainer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mainWrapperContainer:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/layouts/layout.container.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/layouts/layout.container.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userEmail\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userEmail:     String\n\n                    \n                \n                    \n                        \n                            Type :     String\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/layouts/layout.container.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userImage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userImage:     String\n\n                    \n                \n                    \n                        \n                            Type :     String\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/layouts/layout.container.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { User } from './../models/auth/user.model';\nimport {\n  Component,\n  Input,\n  ViewChild,\n  ElementRef,\n  OnInit,\n  OnDestroy\n  // tslint:disable-next-line:import-spacing\n} from '@angular/core';\n// tslint:disable-next-line:import-spacing\nimport { Observable } from 'rxjs/Observable';\n// tslint:disable-next-line:import-spacing\nimport { Subscription } from 'rxjs/rx';\n// tslint:disable-next-line:import-spacing\nimport { LayoutSandbox } from './layout.sandbox';\n// tslint:disable-next-line:import-spacing\n// tslint:disable-next-line:import-spacing\nimport { ConfigService } from '../../app-config.service';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: `./layout.container.html`\n})\n\n// tslint:disable-next-line:component-class-suffix\nexport class LayoutContainer implements OnInit, OnDestroy {\n\n  public userImage: String = '';\n  public userEmail: String = '';\n  private assetsFolder: String;\n  @Input() isNavbar: boolean;\n\n  @ViewChild('wrapperContainer', { read: ElementRef }) mainWrapperContainer: ElementRef;\n\n  private subscriptions: Array = [];\n\n  constructor(\n    private configService: ConfigService,\n    public layoutSandbox: LayoutSandbox\n  ) {\n    this.assetsFolder = this.configService.get('paths').userImageFolder;\n  }\n\n  ngOnInit() {\n    this.registerEvents();\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  private registerEvents() {\n    // Subscribes to user changes\n    this.subscriptions.push(this.layoutSandbox.loggedUser$.subscribe((user: User) => {\n      if (user.isLoggedIn) {\n        this.userImage = this.assetsFolder + 'user.jpg';\n        this.userEmail = localStorage.getItem('user');\n      }\n    }));\n  }\n\n  selectMenu(menu): void {\n    // tslint:disable-next-line:curly\n    if (!menu || menu.url === '' || menu.url === undefined) return;\n    this.layoutSandbox.selectMenu(menu);\n  }\n}\n\n    \n\n    \n        \n    \n    \n        \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'body'},{'name': 'BreadCrumbComponent', 'selector': 'app-bread-crumb'},{'name': 'ControlWebDavComponent', 'selector': 'app-control-web-dav'},{'name': 'DocumentGenerationComponent', 'selector': 'app-document-generation'},{'name': 'DocumentReportViewerComponent', 'selector': 'app-document-report-viewer'},{'name': 'DossierDetailsComponent', 'selector': 'app-dossier-details'},{'name': 'DossierNavigatorComponent', 'selector': 'app-dossier-navigator'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HorizontalNavigationComponent', 'selector': 'kiss-menu-header'},{'name': 'LanguageSelectorComponent', 'selector': 'language-selector'},{'name': 'LayoutContainer', 'selector': 'app-layout'},{'name': 'LeftSidebarComponent', 'selector': 'app-left-sidebar'},{'name': 'LoginComponent', 'selector': 'login'},{'name': 'NavFiltersComponent', 'selector': 'dossier-nav-filters'},{'name': 'NotificationBoxComponent', 'selector': 'app-notification-box'},{'name': 'PageBadGatewayComponent', 'selector': 'page-gate-way'},{'name': 'PageContentComponent', 'selector': 'page-content'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PersonFormComponent', 'selector': 'app-person-form'},{'name': 'PersonListComponent', 'selector': 'app-person-list'},{'name': 'PersonsComponent', 'selector': 'app-person'},{'name': 'ProfileBarComponent', 'selector': 'profile-bar'},{'name': 'ReportViewerComponent', 'selector': 'app-report-viewer'},{'name': 'SearchBoxComponent', 'selector': 'kiss-search-box'},{'name': 'SelectedActionsComponent', 'selector': 'app-selected-actions'},{'name': 'SpinnerComponent', 'selector': 'spinner'},{'name': 'ToolbarsComponent', 'selector': 'app-toolbars'},{'name': 'TreeDetailComponent', 'selector': 'app-tree-detail'},{'name': 'TreeListComponent', 'selector': 'app-tree-list'}];\n    var DIRECTIVES = [{'name': 'AuthorizeDirective', 'selector': '[appAuthorize]'},{'name': 'DynamicTabsDirective', 'selector': '[dynamic-tabs]'}];\n    var ACTUAL_COMPONENT = {'name': 'LayoutContainer'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LayoutContainersModule.html":{"url":"modules/LayoutContainersModule.html","title":"module - LayoutContainersModule","body":"\n                   \n\n\n\n\n  Modules\n  LayoutContainersModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LayoutContainersModule\n\n\n\ncluster_LayoutContainersModule_declarations\n\n\n\ncluster_LayoutContainersModule_exports\n\n\n\ncluster_LayoutContainersModule_providers\n\n\n\n\nBreadCrumbComponent\n\nBreadCrumbComponent\n\n\n\nLayoutContainersModule\n\nLayoutContainersModule\n\nLayoutContainersModule -->\n\nBreadCrumbComponent->LayoutContainersModule\n\n\n\n\n\nDossierDetailsComponent\n\nDossierDetailsComponent\n\nLayoutContainersModule -->\n\nDossierDetailsComponent->LayoutContainersModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nLayoutContainersModule -->\n\nHeaderComponent->LayoutContainersModule\n\n\n\n\n\nHorizontalNavigationComponent\n\nHorizontalNavigationComponent\n\nLayoutContainersModule -->\n\nHorizontalNavigationComponent->LayoutContainersModule\n\n\n\n\n\nLanguageSelectorComponent\n\nLanguageSelectorComponent\n\nLayoutContainersModule -->\n\nLanguageSelectorComponent->LayoutContainersModule\n\n\n\n\n\nLayoutContainer\n\nLayoutContainer\n\nLayoutContainersModule -->\n\nLayoutContainer->LayoutContainersModule\n\n\n\n\n\nLeftSidebarComponent\n\nLeftSidebarComponent\n\nLayoutContainersModule -->\n\nLeftSidebarComponent->LayoutContainersModule\n\n\n\n\n\nNotificationBoxComponent\n\nNotificationBoxComponent\n\nLayoutContainersModule -->\n\nNotificationBoxComponent->LayoutContainersModule\n\n\n\n\n\nPageContentComponent\n\nPageContentComponent\n\nLayoutContainersModule -->\n\nPageContentComponent->LayoutContainersModule\n\n\n\n\n\nProfileBarComponent\n\nProfileBarComponent\n\nLayoutContainersModule -->\n\nProfileBarComponent->LayoutContainersModule\n\n\n\n\n\nSearchBoxComponent\n\nSearchBoxComponent\n\nLayoutContainersModule -->\n\nSearchBoxComponent->LayoutContainersModule\n\n\n\n\n\nSelectedActionsComponent\n\nSelectedActionsComponent\n\nLayoutContainersModule -->\n\nSelectedActionsComponent->LayoutContainersModule\n\n\n\n\n\nToolbarsComponent\n\nToolbarsComponent\n\nLayoutContainersModule -->\n\nToolbarsComponent->LayoutContainersModule\n\n\n\n\n\nBreadCrumbComponent \n\nBreadCrumbComponent \n\nBreadCrumbComponent  -->\n\nLayoutContainersModule->BreadCrumbComponent \n\n\n\n\n\nDossierDetailsComponent \n\nDossierDetailsComponent \n\nDossierDetailsComponent  -->\n\nLayoutContainersModule->DossierDetailsComponent \n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nLayoutContainersModule->HeaderComponent \n\n\n\n\n\nHorizontalNavigationComponent \n\nHorizontalNavigationComponent \n\nHorizontalNavigationComponent  -->\n\nLayoutContainersModule->HorizontalNavigationComponent \n\n\n\n\n\nLanguageSelectorComponent \n\nLanguageSelectorComponent \n\nLanguageSelectorComponent  -->\n\nLayoutContainersModule->LanguageSelectorComponent \n\n\n\n\n\nLayoutContainer \n\nLayoutContainer \n\nLayoutContainer  -->\n\nLayoutContainersModule->LayoutContainer \n\n\n\n\n\nLeftSidebarComponent \n\nLeftSidebarComponent \n\nLeftSidebarComponent  -->\n\nLayoutContainersModule->LeftSidebarComponent \n\n\n\n\n\nNotificationBoxComponent \n\nNotificationBoxComponent \n\nNotificationBoxComponent  -->\n\nLayoutContainersModule->NotificationBoxComponent \n\n\n\n\n\nPageContentComponent \n\nPageContentComponent \n\nPageContentComponent  -->\n\nLayoutContainersModule->PageContentComponent \n\n\n\n\n\nProfileBarComponent \n\nProfileBarComponent \n\nProfileBarComponent  -->\n\nLayoutContainersModule->ProfileBarComponent \n\n\n\n\n\nSearchBoxComponent \n\nSearchBoxComponent \n\nSearchBoxComponent  -->\n\nLayoutContainersModule->SearchBoxComponent \n\n\n\n\n\nSelectedActionsComponent \n\nSelectedActionsComponent \n\nSelectedActionsComponent  -->\n\nLayoutContainersModule->SelectedActionsComponent \n\n\n\n\n\nToolbarsComponent \n\nToolbarsComponent \n\nToolbarsComponent  -->\n\nLayoutContainersModule->ToolbarsComponent \n\n\n\n\n\nLayoutSandbox\n\nLayoutSandbox\n\nLayoutContainersModule -->\n\nLayoutSandbox->LayoutContainersModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/layouts/layout.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                BreadCrumbComponent\n                            \n                            \n                                DossierDetailsComponent\n                            \n                            \n                                HeaderComponent\n                            \n                            \n                                HorizontalNavigationComponent\n                            \n                            \n                                LanguageSelectorComponent\n                            \n                            \n                                LayoutContainer\n                            \n                            \n                                LeftSidebarComponent\n                            \n                            \n                                NotificationBoxComponent\n                            \n                            \n                                PageContentComponent\n                            \n                            \n                                ProfileBarComponent\n                            \n                            \n                                SearchBoxComponent\n                            \n                            \n                                SelectedActionsComponent\n                            \n                            \n                                ToolbarsComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     LayoutSandbox\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    BreadCrumbComponent\n                            \n                            \n                                    DossierDetailsComponent\n                            \n                            \n                                    HeaderComponent\n                            \n                            \n                                    HorizontalNavigationComponent\n                            \n                            \n                                    LanguageSelectorComponent\n                            \n                            \n                                    LayoutContainer\n                            \n                            \n                                    LeftSidebarComponent\n                            \n                            \n                                    NotificationBoxComponent\n                            \n                            \n                                    PageContentComponent\n                            \n                            \n                                    ProfileBarComponent\n                            \n                            \n                                    SearchBoxComponent\n                            \n                            \n                                    SelectedActionsComponent\n                            \n                            \n                                    ToolbarsComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { RouterModule } from '@angular/router';\nimport {\n  NgModule,\n  Renderer2\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ComponentsModule } from '../components';\nimport { LayoutContainer } from './layout.container';\nimport { LayoutSandbox } from './layout.sandbox';\nimport { TranslateModule } from 'ng2-translate';\n\nimport {\n  DevExtremeModule\n} from 'devextreme-angular';\n\nimport { HeaderComponent } from './headers/header.component';\nimport { HorizontalNavigationComponent } from './headers/horizontal-navigation/horizontal-navigation.component';\nimport { SearchBoxComponent } from './headers/search-box/search-box.component';\nimport { ProfileBarComponent } from './headers/profile-bar/profile-bar.component';\nimport { LanguageSelectorComponent } from './headers/languages/languageSelector.component';\nimport { NotificationBoxComponent } from './headers/notification-box/notification-box.component';\nimport { SelectedActionsComponent } from './left-sidebars/selected-actions/selected-actions.component';\nimport { BreadCrumbComponent } from './contents/bread-crumb/bread-crumb.component';\nimport { LeftSidebarComponent } from './left-sidebars/left-sidebars.component';\nimport { DossierDetailsComponent } from './left-sidebars/dossier-details/dossier-details.component';\nimport { PageContentComponent } from './contents/page-content/page.content.component';\nimport { ToolbarsComponent } from './contents/toolbars/toolbars.component';\n\nexport const CONTAINERS = [\n  LayoutContainer,\n  HeaderComponent,\n  PageContentComponent,\n  ToolbarsComponent,\n  HorizontalNavigationComponent,\n  SearchBoxComponent,\n  ProfileBarComponent,\n  LanguageSelectorComponent,\n  NotificationBoxComponent,\n  SelectedActionsComponent,\n  BreadCrumbComponent,\n  LeftSidebarComponent,\n  DossierDetailsComponent\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    ComponentsModule,\n    DevExtremeModule,\n    TranslateModule\n  ],\n  declarations: CONTAINERS,\n  exports: CONTAINERS,\n  providers: [LayoutSandbox]\n})\n\nexport class LayoutContainersModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LayoutSandbox.html":{"url":"injectables/LayoutSandbox.html","title":"injectable - LayoutSandbox","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  LayoutSandbox\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/layouts/layout.sandbox.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                availableLanguages$\n                            \n                            \n                                    Public\n                                availableMenus$\n                            \n                            \n                                    Public\n                                itemMenus$\n                            \n                            \n                                    Private\n                                loginLoaded$\n                            \n                            \n                                    Public\n                                searchBoxsData$\n                            \n                            \n                                    Public\n                                selectedLang$\n                            \n                            \n                                    Public\n                                selectedMenu$\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clickItemSideBar\n                            \n                            \n                                    Public\n                                deleteItemSideBar\n                            \n                            \n                                    Public\n                                loadMenus\n                            \n                            \n                                    Public\n                                loadSearchBoxDatas\n                            \n                            \n                                    Public\n                                logout\n                            \n                            \n                                    Private\n                                registerEvents\n                            \n                            \n                                    Public\n                                selectLanguage\n                            \n                            \n                                    Public\n                                selectMenu\n                            \n                            \n                                    Private\n                                subscribeToLoginChanges\n                            \n                            \n                                    Public\n                                unregisterEvents\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(appState$: Store, translateService: TranslateService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/layouts/layout.sandbox.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        appState$\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            clickItemSideBar\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        clickItemSideBar(e: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/layouts/layout.sandbox.ts:78\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            deleteItemSideBar\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        deleteItemSideBar(e: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/layouts/layout.sandbox.ts:88\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loadMenus\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loadMenus()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/layouts/layout.sandbox.ts:63\n                            \n                        \n\n\n                \n                    \n                            Loads Menus from the server\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loadSearchBoxDatas\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loadSearchBoxDatas()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/layouts/layout.sandbox.ts:101\n                            \n                        \n\n\n                \n                    \n                            Loads SearchBoxDatas from the server\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        logout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/layouts/layout.sandbox.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            registerEvents\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerEvents()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/layouts/layout.sandbox.ts:115\n                            \n                        \n\n\n                \n                    \n                            Subscribes to events\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selectLanguage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        selectLanguage(lang: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/layouts/layout.sandbox.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        lang\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selectMenu\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        selectMenu(menu: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/layouts/layout.sandbox.ts:71\n                            \n                        \n\n\n                \n                    \n                            Select menu header\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        menu\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscribeToLoginChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        subscribeToLoginChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/layouts/layout.sandbox.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            unregisterEvents\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        unregisterEvents()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/layouts/layout.sandbox.ts:108\n                            \n                        \n\n\n                \n                    \n                            Unsubscribes from events\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            availableLanguages$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        availableLanguages$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.appState$.select(store.getAvailableLanguages)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/layouts/layout.sandbox.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            availableMenus$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        availableMenus$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.appState$.select(store.getAvaiableMenus)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/layouts/layout.sandbox.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            itemMenus$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        itemMenus$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.appState$.select(store.getMenusData)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/layouts/layout.sandbox.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loginLoaded$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loginLoaded$:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/layouts/layout.sandbox.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            searchBoxsData$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        searchBoxsData$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.appState$.select(store.getSearchBoxDatasData)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/layouts/layout.sandbox.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selectedLang$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedLang$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.appState$.select(store.getSelectedLanguage)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/layouts/layout.sandbox.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selectedMenu$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedMenu$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.appState$.select(store.getSelectMenu)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/layouts/layout.sandbox.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/layouts/layout.sandbox.ts:27\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {\n  Injectable, ViewChild\n} from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Sandbox } from '../sandbox/base.sandbox';\nimport { Store } from '@ngrx/store';\nimport * as store from '../store';\nimport * as authActions from '../store/actions/auth.action';\nimport * as settingsActions from '../store/actions/settings.action';\nimport * as menusActions from '../store/actions/menus.action';\nimport * as sbDataActions from '../store/actions/search-box.action';\nimport { TranslateService } from 'ng2-translate';\nimport { Subscription } from 'rxjs/rx';\nimport { mergeArrayObject } from '../utility';\n\n@Injectable()\nexport class LayoutSandbox extends Sandbox {\n\n  public selectedLang$ = this.appState$.select(store.getSelectedLanguage);\n  public availableLanguages$ = this.appState$.select(store.getAvailableLanguages);\n  public itemMenus$ = this.appState$.select(store.getMenusData);\n  public searchBoxsData$ = this.appState$.select(store.getSearchBoxDatasData);\n  public selectedMenu$ = this.appState$.select(store.getSelectMenu);\n  public availableMenus$ = this.appState$.select(store.getAvaiableMenus);\n  private loginLoaded$;\n\n  private subscriptions: Array = [];\n\n  constructor(\n    protected appState$: Store,\n    private translateService: TranslateService,\n    private router: Router\n  ) {\n    super(appState$);\n    this.registerEvents();\n  }\n\n  public selectLanguage(lang: any): void {\n    this.appState$.dispatch(new settingsActions.SetLanguageAction(lang.code));\n    this.appState$.dispatch(new settingsActions.SetCultureAction(lang.culture));\n    this.translateService.use(lang.code);\n  }\n\n  public logout() {\n    this.appState$.dispatch(new authActions.DoLogoutAction());\n    this.subscribeToLoginChanges();\n  }\n\n  private subscribeToLoginChanges() {\n    // tslint:disable-next-line:curly\n    if (this.loginLoaded$) return;\n\n    this.loginLoaded$ = this.appState$.select(store.getAuthLoaded)\n      .subscribe(loaded => {\n        // tslint:disable-next-line:curly\n        if (!loaded) { this.router.navigate(['/login']); };\n      });\n  }\n\n  /**\n  * Loads Menus from the server\n  */\n  public loadMenus(): void {\n    this.appState$.dispatch(new menusActions.LoadAction())\n  }\n\n  /**\n   * Select menu header\n   * @param e item menu clicked\n   */\n  public selectMenu(menu: any): void {\n    // tslint:disable-next-line:curly\n    if (!menu || menu.url === '' || menu.url === undefined) return;\n    this.appState$.dispatch(new menusActions.SelectAction(menu));\n    this.router.navigate([menu.url]);\n  }\n\n  public clickItemSideBar(e: any): void {\n    if (e) {\n      const menu = e.itemData || {};\n      if (menu && menu.url !== '' && menu.url !== undefined) {\n        this.appState$.dispatch(new menusActions.SelectAction(menu));\n        this.router.navigate([menu.url]);\n      }\n    }\n  }\n\n  public deleteItemSideBar(e: any): void {\n    if (e) {\n      let menu = e.itemData || {};\n      if (menu && menu.url !== '' && menu.url !== undefined) {\n        this.appState$.dispatch(new menusActions.SetAvaiableMenu(menu));\n      }\n    }\n\n  }\n\n  /**\n* Loads SearchBoxDatas from the server\n*/\n  public loadSearchBoxDatas(): void {\n    this.appState$.dispatch(new sbDataActions.LoadAction())\n  }\n\n  /**\n   * Unsubscribes from events\n   */\n  public unregisterEvents() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  /**\n   * Subscribes to events\n   */\n  private registerEvents(): void {\n    this.loadMenus();\n    this.loadSearchBoxDatas();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LeftSidebarComponent.html":{"url":"components/LeftSidebarComponent.html","title":"component - LeftSidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LeftSidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/layouts/left-sidebars/left-sidebars.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-left-sidebar\n            \n\n            \n                styleUrls\n                left-sidebars.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./left-sidebars.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _wrapperContainer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                    Private\n                                setEfToggleNav\n                            \n                            \n                                toggleNavigator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                isNavbar\n                            \n                            \n                                wrapperContainer\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(changeDetector: ChangeDetectorRef, translate: TranslateService, elementRef: ElementRef, renderer: Renderer2)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/layouts/left-sidebars/left-sidebars.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changeDetector\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        isNavbar\n                    \n                    \n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/layouts/left-sidebars/left-sidebars.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        wrapperContainer\n                    \n                    \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/layouts/left-sidebars/left-sidebars.component.ts:28\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/layouts/left-sidebars/left-sidebars.component.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            setEfToggleNav\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setEfToggleNav(el: ElementRef)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/layouts/left-sidebars/left-sidebars.component.ts:62\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                        \n                                                                    ElementRef\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleNavigator\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleNavigator(isNavbar: boolean, el: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/layouts/left-sidebars/left-sidebars.component.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        isNavbar\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        el\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _wrapperContainer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _wrapperContainer:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/layouts/left-sidebars/left-sidebars.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        wrapperContainer\n                    \n                \n\n\n                \n                    \n                        setwrapperContainer(value: )\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/layouts/left-sidebars/left-sidebars.component.ts:28\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {\n  Component,\n  ChangeDetectorRef,\n  ChangeDetectionStrategy,\n  Input,\n  Output,\n  Renderer2,\n  ElementRef,\n  AfterViewInit,\n  EventEmitter,\n  ViewChild\n} from '@angular/core';\nimport { TranslateService } from 'ng2-translate';\n\n@Component({\n  selector: 'app-left-sidebar',\n  templateUrl: './left-sidebars.component.html',\n  styleUrls: ['./left-sidebars.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LeftSidebarComponent implements AfterViewInit {\n\n  @Input() isNavbar: boolean;\n\n  private _wrapperContainer: ElementRef;\n\n  @Input()\n  set wrapperContainer(value: ElementRef) {\n    this._wrapperContainer = value;\n  }\n\n  constructor(\n    private changeDetector: ChangeDetectorRef,\n    private translate: TranslateService,\n    private elementRef: ElementRef,\n    private renderer: Renderer2) {\n  }\n\n  ngAfterViewInit(): void {\n    /** \n     * Detaches the change detector from the change detector tree.\n     */\n    if (!this.isNavbar) {\n      this.setEfToggleNav(this._wrapperContainer);\n    }\n  }\n\n  toggleNavigator(isNavbar: boolean, el: any): void {\n    this.isNavbar = !isNavbar;\n    const path = el.path;\n    let elWrapper: ElementRef;\n    if (path !== undefined) {\n      // for chorme\n      elWrapper = path.find(item => item.classList.contains('wrapper-main'));\n    } else {\n      // fix for firefox\n      elWrapper = this.renderer.parentNode(el.target.offsetParent);\n    }\n    this.setEfToggleNav(elWrapper);\n  }\n\n  private setEfToggleNav(el: ElementRef): void {\n    if (el && this.isNavbar !== undefined) {\n      if (this.isNavbar) {\n        this.renderer.removeClass(el, 'toggle--sidebar');\n      } else {\n        this.renderer.addClass(el, 'toggle--sidebar');\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n        {{ 'Navigator.Title' | translate}}\n    \n    \n      \n    \n  \n  \n    \n      \n    \n    \n      \n        {{ 'Navigator.Title' | translate}}\n      \n    \n  \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              {{ \\'Navigator.Title\\' | translate}}                                                      {{ \\'Navigator.Title\\' | translate}}              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'body'},{'name': 'BreadCrumbComponent', 'selector': 'app-bread-crumb'},{'name': 'ControlWebDavComponent', 'selector': 'app-control-web-dav'},{'name': 'DocumentGenerationComponent', 'selector': 'app-document-generation'},{'name': 'DocumentReportViewerComponent', 'selector': 'app-document-report-viewer'},{'name': 'DossierDetailsComponent', 'selector': 'app-dossier-details'},{'name': 'DossierNavigatorComponent', 'selector': 'app-dossier-navigator'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HorizontalNavigationComponent', 'selector': 'kiss-menu-header'},{'name': 'LanguageSelectorComponent', 'selector': 'language-selector'},{'name': 'LayoutContainer', 'selector': 'app-layout'},{'name': 'LeftSidebarComponent', 'selector': 'app-left-sidebar'},{'name': 'LoginComponent', 'selector': 'login'},{'name': 'NavFiltersComponent', 'selector': 'dossier-nav-filters'},{'name': 'NotificationBoxComponent', 'selector': 'app-notification-box'},{'name': 'PageBadGatewayComponent', 'selector': 'page-gate-way'},{'name': 'PageContentComponent', 'selector': 'page-content'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PersonFormComponent', 'selector': 'app-person-form'},{'name': 'PersonListComponent', 'selector': 'app-person-list'},{'name': 'PersonsComponent', 'selector': 'app-person'},{'name': 'ProfileBarComponent', 'selector': 'profile-bar'},{'name': 'ReportViewerComponent', 'selector': 'app-report-viewer'},{'name': 'SearchBoxComponent', 'selector': 'kiss-search-box'},{'name': 'SelectedActionsComponent', 'selector': 'app-selected-actions'},{'name': 'SpinnerComponent', 'selector': 'spinner'},{'name': 'ToolbarsComponent', 'selector': 'app-toolbars'},{'name': 'TreeDetailComponent', 'selector': 'app-tree-detail'},{'name': 'TreeListComponent', 'selector': 'app-tree-list'}];\n    var DIRECTIVES = [{'name': 'AuthorizeDirective', 'selector': '[appAuthorize]'},{'name': 'DynamicTabsDirective', 'selector': '[dynamic-tabs]'}];\n    var ACTUAL_COMPONENT = {'name': 'LeftSidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadAction.html":{"url":"classes/LoadAction.html","title":"class - LoadAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/store/actions/dossier.action.ts\n        \n\n            \n                Description\n            \n            \n                Dossier nav Trees Action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: DossierFilterModel)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/store/actions/dossier.action.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    DossierFilterModel\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     DossierFilterModel\n\n                    \n                \n                    \n                        \n                            Type :     DossierFilterModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/actions/dossier.action.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : ActionTypes.LOAD\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/actions/dossier.action.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { DossierNavigatorTreeModel as TreesModel, DossierFilterModel } from '../../models';\nimport { type } from '../../utility';\n\nexport const ActionTypes = {\n  // Actions Load data\n  LOAD: type('[Dossier nav Trees] Load'),\n  LOAD_SUCCESS: type('[Dossier nav Trees] Load Success'),\n  LOAD_FAIL: type('[Dossier nav Trees] Load Fail'),\n  GET_TREE_DETAIL: type('[GET_TREE_DETAIL] load'),\n  RESET_STATE: type('[RESET_STATE] reset state for dossier')\n};\n\nexport const SetVisibilityFilter = {\n  // Action set filter\n  ACTIVE: type('[SET_VISIBILITY_FILTER] --- Aktiv'),\n  CLOSED: type('[SET_VISIBILITY_FILTER] --- Closed'),\n  ARCHIVED: type('[SET_VISIBILITY_FILTER] --- Archived'),\n  INCLUDE_GROUP: type('[SET_VISIBILITY_FILTER] --- IncludeGroup'),\n  INCLUDE_GUEST: type('[SET_VISIBILITY_FILTER] --- IncludeGuest'),\n  INCLUDE_TASKS: type('[SET_VISIBILITY_FILTER] --- IncludeTasks'),\n};\n\n/**\n * Dossier nav Trees Action\n */\n\nexport class LoadAction implements Action {\n  type = ActionTypes.LOAD;\n  constructor(public payload: DossierFilterModel) { }\n}\n\nexport class LoadSuccessAction implements Action {\n  type = ActionTypes.LOAD_SUCCESS;\n  constructor(public payload: Array) { }\n}\n\nexport class LoadFailAction implements Action {\n  type = ActionTypes.LOAD_FAIL;\n  constructor(public payload: any = null) { }\n}\n\nexport class GetTreeDetailAction implements Action {\n  type = ActionTypes.GET_TREE_DETAIL;\n\n  constructor(public payload: any) { }\n}\n\nexport class ResetState implements Action {\n  type = ActionTypes.RESET_STATE;\n  constructor(public payload: any = null) { }\n}\n\n/**\n * ------------------------------------\n * Set Visibility dossier Filter Action\n * @param payload: DossierFilterModel\n * ------------------------------------\n*/\n\nexport namespace SetVisibilityFilterAction {\n  export class SetActiveAction implements Action {\n    type = SetVisibilityFilter.ACTIVE;\n    constructor(public payload?: DossierFilterModel) { }\n  }\n  export class SetClosedAction implements Action {\n    type = SetVisibilityFilter.CLOSED;\n    constructor(public payload?: DossierFilterModel) { }\n  }\n  export class SetArchivedAction implements Action {\n    type = SetVisibilityFilter.ARCHIVED;\n    constructor(public payload?: DossierFilterModel) { }\n  }\n  export class SetIncludeGroupAction implements Action {\n    type = SetVisibilityFilter.INCLUDE_GROUP;\n    constructor(public payload?: DossierFilterModel) { }\n  }\n  export class SetIncludeGuestAction implements Action {\n    type = SetVisibilityFilter.INCLUDE_GUEST;\n    constructor(public payload?: DossierFilterModel) { }\n  }\n  export class SetIncludeTasksAction implements Action {\n    type = SetVisibilityFilter.INCLUDE_TASKS;\n    constructor(public payload?: DossierFilterModel) { }\n  }\n}\n\n\nexport type Actions\n  = LoadAction\n  | LoadSuccessAction\n  | LoadFailAction\n  | GetTreeDetailAction\n  | ResetState;\n\nexport type FiltersAction\n  = SetVisibilityFilterAction.SetActiveAction\n  | SetVisibilityFilterAction.SetClosedAction\n  | SetVisibilityFilterAction.SetArchivedAction\n  | SetVisibilityFilterAction.SetIncludeGroupAction\n  | SetVisibilityFilterAction.SetIncludeGuestAction\n  | SetVisibilityFilterAction.SetIncludeTasksAction;\n\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadApiLangsAction.html":{"url":"classes/LoadApiLangsAction.html","title":"class - LoadApiLangsAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadApiLangsAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/store/actions/settings.action.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/store/actions/settings.action.ts:55\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/actions/settings.action.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : ActionTypes.LOAD_API_LANGUAGE\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/actions/settings.action.ts:55\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { type } from '../../utility';\n\nexport const ActionTypes = {\n  SET_LANGUAGE: type('[Settings] SetLanguage'),\n  SET_CULTURE: type('[Settings] SetCulture'),\n  LOAD_API_ROLES: type('[LOAD_API_ROLES] call api'),\n  SET_AVAIBLE_ROLES: type('[SET_AVAIBLE_ROLES] Get data'),\n  LOAD_FAIL: type('[LOAD_FAIL] Load Fail'),\n  LOAD_API_LANGUAGE: type('[LOAD_API_LANGUAGE] call api translations'),\n  SET_AVAIBLE_LANGUAGE: type('[SET_AVAIBLE_LANGUAGE] Get data'),\n  UPDATE_SELECT_ACTION: type('[UPDATE_SELECT_ACTION] Set'),\n  DELETE_ITEM_SELECT_ACTION: type('[DELETE_ITEM_SELECT_ACTION] update'),\n  RESET_STATE: type('[RESET_STATE] reset state for setting'),\n  DOCUMENT_CREATE: type('[Document create action] call'),\n  DOCUMENT_CREATE_SUCCESS: type('[Document create action] Success'),\n  DOCUMENT_CREATE_ERROR: type('[Document create action] Error')\n};\n\n/**\n * Settings Actions\n */\nexport class SetLanguageAction implements Action {\n  type = ActionTypes.SET_LANGUAGE;\n\n  constructor(public payload: string) { }\n}\n\nexport class SetCultureAction implements Action {\n  type = ActionTypes.SET_CULTURE;\n\n  constructor(public payload: string) { }\n}\n\nexport class LoadApiRolesAction implements Action {\n  type = ActionTypes.LOAD_API_ROLES;\n\n  constructor(public payload: any = null) { };\n}\n\nexport class SetAvailableRolesAction implements Action {\n  type = ActionTypes.SET_AVAIBLE_ROLES;\n\n  constructor(public payload: any) { };\n}\n\nexport class LoadFailAction implements Action {\n  type = ActionTypes.LOAD_FAIL;\n\n  constructor(public payload: any = null) { };\n}\n\n// language\nexport class LoadApiLangsAction implements Action {\n  type = ActionTypes.LOAD_API_LANGUAGE;\n\n  constructor(public payload: any = null) { };\n}\n\nexport class SetAvailableLanguagesAction implements Action {\n  type = ActionTypes.SET_AVAIBLE_LANGUAGE;\n\n  constructor(public payload: any) { };\n}\n\nexport class UpdateSelectedAction implements Action {\n  type = ActionTypes.UPDATE_SELECT_ACTION;\n  constructor(public payload: any) { }\n}\n\nexport class DeleteItemSelectedAction implements Action {\n  type = ActionTypes.DELETE_ITEM_SELECT_ACTION;\n  constructor(public payload: any) { }\n}\n\nexport class ResetState implements Action {\n  type = ActionTypes.RESET_STATE;\n  constructor(public payload: any = null) { }\n}\n\n// DOCUMENT CREATE FEATURE\nexport class DocumentCreate implements Action {\n  type = ActionTypes.DOCUMENT_CREATE;\n  constructor(public payload: any = null) { };\n}\n\nexport class DocumentCreateSuccess implements Action {\n  type = ActionTypes.DOCUMENT_CREATE_SUCCESS;\n  constructor(public payload: any = null) { };\n}\n\nexport class DocumentCreateError implements Action {\n  type = ActionTypes.DOCUMENT_CREATE;\n  constructor(public payload: any = null) { };\n}\n// DOCUMENT CREATE FEATURE\n\nexport type Actions\n  = SetLanguageAction\n  | SetCultureAction\n  | LoadApiRolesAction\n  | SetAvailableRolesAction\n  | LoadFailAction\n  | LoadApiLangsAction\n  | SetAvailableLanguagesAction\n  | UpdateSelectedAction\n  | DeleteItemSelectedAction\n  | ResetState\n  | DocumentCreate\n  | DocumentCreateSuccess\n  | DocumentCreateError;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadApiRolesAction.html":{"url":"classes/LoadApiRolesAction.html","title":"class - LoadApiRolesAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadApiRolesAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/store/actions/settings.action.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/store/actions/settings.action.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/actions/settings.action.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : ActionTypes.LOAD_API_ROLES\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/actions/settings.action.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { type } from '../../utility';\n\nexport const ActionTypes = {\n  SET_LANGUAGE: type('[Settings] SetLanguage'),\n  SET_CULTURE: type('[Settings] SetCulture'),\n  LOAD_API_ROLES: type('[LOAD_API_ROLES] call api'),\n  SET_AVAIBLE_ROLES: type('[SET_AVAIBLE_ROLES] Get data'),\n  LOAD_FAIL: type('[LOAD_FAIL] Load Fail'),\n  LOAD_API_LANGUAGE: type('[LOAD_API_LANGUAGE] call api translations'),\n  SET_AVAIBLE_LANGUAGE: type('[SET_AVAIBLE_LANGUAGE] Get data'),\n  UPDATE_SELECT_ACTION: type('[UPDATE_SELECT_ACTION] Set'),\n  DELETE_ITEM_SELECT_ACTION: type('[DELETE_ITEM_SELECT_ACTION] update'),\n  RESET_STATE: type('[RESET_STATE] reset state for setting'),\n  DOCUMENT_CREATE: type('[Document create action] call'),\n  DOCUMENT_CREATE_SUCCESS: type('[Document create action] Success'),\n  DOCUMENT_CREATE_ERROR: type('[Document create action] Error')\n};\n\n/**\n * Settings Actions\n */\nexport class SetLanguageAction implements Action {\n  type = ActionTypes.SET_LANGUAGE;\n\n  constructor(public payload: string) { }\n}\n\nexport class SetCultureAction implements Action {\n  type = ActionTypes.SET_CULTURE;\n\n  constructor(public payload: string) { }\n}\n\nexport class LoadApiRolesAction implements Action {\n  type = ActionTypes.LOAD_API_ROLES;\n\n  constructor(public payload: any = null) { };\n}\n\nexport class SetAvailableRolesAction implements Action {\n  type = ActionTypes.SET_AVAIBLE_ROLES;\n\n  constructor(public payload: any) { };\n}\n\nexport class LoadFailAction implements Action {\n  type = ActionTypes.LOAD_FAIL;\n\n  constructor(public payload: any = null) { };\n}\n\n// language\nexport class LoadApiLangsAction implements Action {\n  type = ActionTypes.LOAD_API_LANGUAGE;\n\n  constructor(public payload: any = null) { };\n}\n\nexport class SetAvailableLanguagesAction implements Action {\n  type = ActionTypes.SET_AVAIBLE_LANGUAGE;\n\n  constructor(public payload: any) { };\n}\n\nexport class UpdateSelectedAction implements Action {\n  type = ActionTypes.UPDATE_SELECT_ACTION;\n  constructor(public payload: any) { }\n}\n\nexport class DeleteItemSelectedAction implements Action {\n  type = ActionTypes.DELETE_ITEM_SELECT_ACTION;\n  constructor(public payload: any) { }\n}\n\nexport class ResetState implements Action {\n  type = ActionTypes.RESET_STATE;\n  constructor(public payload: any = null) { }\n}\n\n// DOCUMENT CREATE FEATURE\nexport class DocumentCreate implements Action {\n  type = ActionTypes.DOCUMENT_CREATE;\n  constructor(public payload: any = null) { };\n}\n\nexport class DocumentCreateSuccess implements Action {\n  type = ActionTypes.DOCUMENT_CREATE_SUCCESS;\n  constructor(public payload: any = null) { };\n}\n\nexport class DocumentCreateError implements Action {\n  type = ActionTypes.DOCUMENT_CREATE;\n  constructor(public payload: any = null) { };\n}\n// DOCUMENT CREATE FEATURE\n\nexport type Actions\n  = SetLanguageAction\n  | SetCultureAction\n  | LoadApiRolesAction\n  | SetAvailableRolesAction\n  | LoadFailAction\n  | LoadApiLangsAction\n  | SetAvailableLanguagesAction\n  | UpdateSelectedAction\n  | DeleteItemSelectedAction\n  | ResetState\n  | DocumentCreate\n  | DocumentCreateSuccess\n  | DocumentCreateError;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadFailAction.html":{"url":"classes/LoadFailAction.html","title":"class - LoadFailAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadFailAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/store/actions/dossier.action.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/store/actions/dossier.action.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/actions/dossier.action.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : ActionTypes.LOAD_FAIL\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/actions/dossier.action.ts:39\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { DossierNavigatorTreeModel as TreesModel, DossierFilterModel } from '../../models';\nimport { type } from '../../utility';\n\nexport const ActionTypes = {\n  // Actions Load data\n  LOAD: type('[Dossier nav Trees] Load'),\n  LOAD_SUCCESS: type('[Dossier nav Trees] Load Success'),\n  LOAD_FAIL: type('[Dossier nav Trees] Load Fail'),\n  GET_TREE_DETAIL: type('[GET_TREE_DETAIL] load'),\n  RESET_STATE: type('[RESET_STATE] reset state for dossier')\n};\n\nexport const SetVisibilityFilter = {\n  // Action set filter\n  ACTIVE: type('[SET_VISIBILITY_FILTER] --- Aktiv'),\n  CLOSED: type('[SET_VISIBILITY_FILTER] --- Closed'),\n  ARCHIVED: type('[SET_VISIBILITY_FILTER] --- Archived'),\n  INCLUDE_GROUP: type('[SET_VISIBILITY_FILTER] --- IncludeGroup'),\n  INCLUDE_GUEST: type('[SET_VISIBILITY_FILTER] --- IncludeGuest'),\n  INCLUDE_TASKS: type('[SET_VISIBILITY_FILTER] --- IncludeTasks'),\n};\n\n/**\n * Dossier nav Trees Action\n */\n\nexport class LoadAction implements Action {\n  type = ActionTypes.LOAD;\n  constructor(public payload: DossierFilterModel) { }\n}\n\nexport class LoadSuccessAction implements Action {\n  type = ActionTypes.LOAD_SUCCESS;\n  constructor(public payload: Array) { }\n}\n\nexport class LoadFailAction implements Action {\n  type = ActionTypes.LOAD_FAIL;\n  constructor(public payload: any = null) { }\n}\n\nexport class GetTreeDetailAction implements Action {\n  type = ActionTypes.GET_TREE_DETAIL;\n\n  constructor(public payload: any) { }\n}\n\nexport class ResetState implements Action {\n  type = ActionTypes.RESET_STATE;\n  constructor(public payload: any = null) { }\n}\n\n/**\n * ------------------------------------\n * Set Visibility dossier Filter Action\n * @param payload: DossierFilterModel\n * ------------------------------------\n*/\n\nexport namespace SetVisibilityFilterAction {\n  export class SetActiveAction implements Action {\n    type = SetVisibilityFilter.ACTIVE;\n    constructor(public payload?: DossierFilterModel) { }\n  }\n  export class SetClosedAction implements Action {\n    type = SetVisibilityFilter.CLOSED;\n    constructor(public payload?: DossierFilterModel) { }\n  }\n  export class SetArchivedAction implements Action {\n    type = SetVisibilityFilter.ARCHIVED;\n    constructor(public payload?: DossierFilterModel) { }\n  }\n  export class SetIncludeGroupAction implements Action {\n    type = SetVisibilityFilter.INCLUDE_GROUP;\n    constructor(public payload?: DossierFilterModel) { }\n  }\n  export class SetIncludeGuestAction implements Action {\n    type = SetVisibilityFilter.INCLUDE_GUEST;\n    constructor(public payload?: DossierFilterModel) { }\n  }\n  export class SetIncludeTasksAction implements Action {\n    type = SetVisibilityFilter.INCLUDE_TASKS;\n    constructor(public payload?: DossierFilterModel) { }\n  }\n}\n\n\nexport type Actions\n  = LoadAction\n  | LoadSuccessAction\n  | LoadFailAction\n  | GetTreeDetailAction\n  | ResetState;\n\nexport type FiltersAction\n  = SetVisibilityFilterAction.SetActiveAction\n  | SetVisibilityFilterAction.SetClosedAction\n  | SetVisibilityFilterAction.SetArchivedAction\n  | SetVisibilityFilterAction.SetIncludeGroupAction\n  | SetVisibilityFilterAction.SetIncludeGuestAction\n  | SetVisibilityFilterAction.SetIncludeTasksAction;\n\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadSuccessAction.html":{"url":"classes/LoadSuccessAction.html","title":"class - LoadSuccessAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadSuccessAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/store/actions/dossier.action.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: Array)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/store/actions/dossier.action.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    Array\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/actions/dossier.action.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : ActionTypes.LOAD_SUCCESS\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/actions/dossier.action.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { DossierNavigatorTreeModel as TreesModel, DossierFilterModel } from '../../models';\nimport { type } from '../../utility';\n\nexport const ActionTypes = {\n  // Actions Load data\n  LOAD: type('[Dossier nav Trees] Load'),\n  LOAD_SUCCESS: type('[Dossier nav Trees] Load Success'),\n  LOAD_FAIL: type('[Dossier nav Trees] Load Fail'),\n  GET_TREE_DETAIL: type('[GET_TREE_DETAIL] load'),\n  RESET_STATE: type('[RESET_STATE] reset state for dossier')\n};\n\nexport const SetVisibilityFilter = {\n  // Action set filter\n  ACTIVE: type('[SET_VISIBILITY_FILTER] --- Aktiv'),\n  CLOSED: type('[SET_VISIBILITY_FILTER] --- Closed'),\n  ARCHIVED: type('[SET_VISIBILITY_FILTER] --- Archived'),\n  INCLUDE_GROUP: type('[SET_VISIBILITY_FILTER] --- IncludeGroup'),\n  INCLUDE_GUEST: type('[SET_VISIBILITY_FILTER] --- IncludeGuest'),\n  INCLUDE_TASKS: type('[SET_VISIBILITY_FILTER] --- IncludeTasks'),\n};\n\n/**\n * Dossier nav Trees Action\n */\n\nexport class LoadAction implements Action {\n  type = ActionTypes.LOAD;\n  constructor(public payload: DossierFilterModel) { }\n}\n\nexport class LoadSuccessAction implements Action {\n  type = ActionTypes.LOAD_SUCCESS;\n  constructor(public payload: Array) { }\n}\n\nexport class LoadFailAction implements Action {\n  type = ActionTypes.LOAD_FAIL;\n  constructor(public payload: any = null) { }\n}\n\nexport class GetTreeDetailAction implements Action {\n  type = ActionTypes.GET_TREE_DETAIL;\n\n  constructor(public payload: any) { }\n}\n\nexport class ResetState implements Action {\n  type = ActionTypes.RESET_STATE;\n  constructor(public payload: any = null) { }\n}\n\n/**\n * ------------------------------------\n * Set Visibility dossier Filter Action\n * @param payload: DossierFilterModel\n * ------------------------------------\n*/\n\nexport namespace SetVisibilityFilterAction {\n  export class SetActiveAction implements Action {\n    type = SetVisibilityFilter.ACTIVE;\n    constructor(public payload?: DossierFilterModel) { }\n  }\n  export class SetClosedAction implements Action {\n    type = SetVisibilityFilter.CLOSED;\n    constructor(public payload?: DossierFilterModel) { }\n  }\n  export class SetArchivedAction implements Action {\n    type = SetVisibilityFilter.ARCHIVED;\n    constructor(public payload?: DossierFilterModel) { }\n  }\n  export class SetIncludeGroupAction implements Action {\n    type = SetVisibilityFilter.INCLUDE_GROUP;\n    constructor(public payload?: DossierFilterModel) { }\n  }\n  export class SetIncludeGuestAction implements Action {\n    type = SetVisibilityFilter.INCLUDE_GUEST;\n    constructor(public payload?: DossierFilterModel) { }\n  }\n  export class SetIncludeTasksAction implements Action {\n    type = SetVisibilityFilter.INCLUDE_TASKS;\n    constructor(public payload?: DossierFilterModel) { }\n  }\n}\n\n\nexport type Actions\n  = LoadAction\n  | LoadSuccessAction\n  | LoadFailAction\n  | GetTreeDetailAction\n  | ResetState;\n\nexport type FiltersAction\n  = SetVisibilityFilterAction.SetActiveAction\n  | SetVisibilityFilterAction.SetClosedAction\n  | SetVisibilityFilterAction.SetArchivedAction\n  | SetVisibilityFilterAction.SetIncludeGroupAction\n  | SetVisibilityFilterAction.SetIncludeGuestAction\n  | SetVisibilityFilterAction.SetIncludeTasksAction;\n\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/login/login.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                login\n            \n\n            \n                styleUrls\n                login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authSandbox\n                            \n                            \n                                copyRightName\n                            \n                            \n                                    Public\n                                loginForm\n                            \n                            \n                                    Public\n                                password\n                            \n                            \n                                    Public\n                                submitted\n                            \n                            \n                                    Public\n                                username\n                            \n                            \n                                    Protected\n                                permissions\n                            \n                            \n                                    Public\n                                titlePage\n                            \n                            \n                                    Private\n                                titleService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                initLoginForm\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                onSubmit\n                            \n                            \n                                    Public\n                                getTitle\n                            \n                            \n                                    Public\n                                setTitle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(injector: Injector, fb: FormBuilder, authSandbox: AuthSandbox)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/login/login.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                    Injector\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        authSandbox\n                                                  \n                                                        \n                                                                    AuthSandbox\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            initLoginForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initLoginForm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:58\n                            \n                        \n\n\n                \n                    \n                            Builds a form instance (using FormBuilder) with corresponding validation rules \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onSubmit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        onSubmit(event: Event, form: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:74\n                            \n                        \n\n\n                \n                    \n                            Handles form 'submit' event. Calls sandbox login function if form is valid.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    Event\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        form\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getTitle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getTitle()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setTitle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setTitle(newTitle: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        newTitle\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authSandbox\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authSandbox:     AuthSandbox\n\n                    \n                \n                    \n                        \n                            Type :     AuthSandbox\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            copyRightName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        copyRightName:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loginForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loginForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            password\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        password:     AbstractControl\n\n                    \n                \n                    \n                        \n                            Type :     AbstractControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            submitted\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        submitted:     Boolean\n\n                    \n                \n                    \n                        \n                            Type :     Boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            username\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        username:     AbstractControl\n\n                    \n                \n                    \n                        \n                            Type :     AbstractControl\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login/login.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            permissions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        permissions:     ClassRightModel\n\n                    \n                \n                    \n                        \n                            Type :     ClassRightModel\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            titlePage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        titlePage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            titleService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        titleService:     Title\n\n                    \n                \n                    \n                        \n                            Type :     Title\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Injector,\n  OnInit,\n  Component,\n  ChangeDetectionStrategy,\n  OnDestroy\n} from '@angular/core';\nimport {\n  FormBuilder,\n  FormGroup,\n  Validators,\n  AbstractControl\n} from '@angular/forms';\nimport { AuthSandbox } from '../auth.sandbox';\nimport { BaseComponent } from '../../shared/components/base.component';\nimport { RequestOptions } from '@angular/http';\nimport { clearCache } from '../../shared/utility/utilityHelpers';\n\n@Component({\n  selector: 'login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class LoginComponent extends BaseComponent implements OnInit, OnDestroy {\n\n  public submitted: Boolean = false;\n  public username: AbstractControl;\n  public password: AbstractControl;\n\n  public loginForm: FormGroup;\n  copyRightName: number;\n\n  constructor(\n    injector: Injector,\n    private fb: FormBuilder,\n    public authSandbox: AuthSandbox,\n\n  ) {\n    super(injector);\n  }\n\n  ngOnInit() {\n    this.setTitle('Login');\n    this.initLoginForm();\n    this.copyRightName = new Date().getFullYear();\n    clearCache();\n  }\n\n  ngOnDestroy() {\n    this.authSandbox.unregisterEvents();\n  }\n\n  /**\n   * Builds a form instance (using FormBuilder) with corresponding validation rules \n   */\n  public initLoginForm(): void {\n    this.loginForm = this.fb.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n\n    this.username = this.loginForm.controls['username'];\n    this.password = this.loginForm.controls['password'];\n  }\n\n  /**\n   * Handles form 'submit' event. Calls sandbox login function if form is valid.\n   *\n   * @param event\n   * @param form\n   */\n  public onSubmit(event: Event, form: any): void {\n\n    event.stopPropagation();\n    this.submitted = true;\n\n    const tokens = this.authSandbox.getConfigsToken();\n\n    form.client_id = tokens.client_id;\n    form.client_secret = tokens.client_secret;\n    form.grant_type = tokens.grant_type;\n    form.scope = tokens.scope;\n\n    // tslint:disable-next-line:curly\n    if (this.loginForm.valid) this.authSandbox.login(form);\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n      Aventis\n    \n    Login\n    \n      \n        \n        {{ 'Auth.UserName' | translate }}\n        {{ 'Auth.UserNameRequiredError' | translate }}\n        \n      \n      \n        \n        {{ 'Auth.Password' | translate }}\n        {{ 'Auth.PasswordRequiredError' | translate }}\n        \n      \n      \n        \n          {{ 'Auth.Login.Submit' | translate }}\n        \n      \n      \n        Forgot your password?\n      \n    \n  \n\n\n\n -->\n\n  \n     2018 Diartis AG, Diartis AG, Bahnhofstrasse 41, 5600 Lenzburg -->\n    &nbsp;{{ copyRightName }} Aventis\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Aventis        Login                          {{ \\'Auth.UserName\\' | translate }}        {{ \\'Auth.UserNameRequiredError\\' | translate }}                                    {{ \\'Auth.Password\\' | translate }}        {{ \\'Auth.PasswordRequiredError\\' | translate }}                                      {{ \\'Auth.Login.Submit\\' | translate }}                            Forgot your password?             -->       2018 Diartis AG, Diartis AG, Bahnhofstrasse 41, 5600 Lenzburg -->     {{ copyRightName }} Aventis'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'body'},{'name': 'BreadCrumbComponent', 'selector': 'app-bread-crumb'},{'name': 'ControlWebDavComponent', 'selector': 'app-control-web-dav'},{'name': 'DocumentGenerationComponent', 'selector': 'app-document-generation'},{'name': 'DocumentReportViewerComponent', 'selector': 'app-document-report-viewer'},{'name': 'DossierDetailsComponent', 'selector': 'app-dossier-details'},{'name': 'DossierNavigatorComponent', 'selector': 'app-dossier-navigator'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HorizontalNavigationComponent', 'selector': 'kiss-menu-header'},{'name': 'LanguageSelectorComponent', 'selector': 'language-selector'},{'name': 'LayoutContainer', 'selector': 'app-layout'},{'name': 'LeftSidebarComponent', 'selector': 'app-left-sidebar'},{'name': 'LoginComponent', 'selector': 'login'},{'name': 'NavFiltersComponent', 'selector': 'dossier-nav-filters'},{'name': 'NotificationBoxComponent', 'selector': 'app-notification-box'},{'name': 'PageBadGatewayComponent', 'selector': 'page-gate-way'},{'name': 'PageContentComponent', 'selector': 'page-content'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PersonFormComponent', 'selector': 'app-person-form'},{'name': 'PersonListComponent', 'selector': 'app-person-list'},{'name': 'PersonsComponent', 'selector': 'app-person'},{'name': 'ProfileBarComponent', 'selector': 'profile-bar'},{'name': 'ReportViewerComponent', 'selector': 'app-report-viewer'},{'name': 'SearchBoxComponent', 'selector': 'kiss-search-box'},{'name': 'SelectedActionsComponent', 'selector': 'app-selected-actions'},{'name': 'SpinnerComponent', 'selector': 'spinner'},{'name': 'ToolbarsComponent', 'selector': 'app-toolbars'},{'name': 'TreeDetailComponent', 'selector': 'app-tree-detail'},{'name': 'TreeListComponent', 'selector': 'app-tree-list'}];\n    var DIRECTIVES = [{'name': 'AuthorizeDirective', 'selector': '[appAuthorize]'},{'name': 'DynamicTabsDirective', 'selector': '[dynamic-tabs]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginForm.html":{"url":"classes/LoginForm.html","title":"class - LoginForm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/auth/login.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                client_id\n                            \n                            \n                                    Public\n                                client_secret\n                            \n                            \n                                    Public\n                                grant_type\n                            \n                            \n                                    Public\n                                password\n                            \n                            \n                                    Public\n                                scope\n                            \n                            \n                                    Public\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(loginForm: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/models/auth/login.model.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loginForm\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            client_id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        client_id:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/auth/login.model.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            client_secret\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        client_secret:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/auth/login.model.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            grant_type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        grant_type:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/auth/login.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            password\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        password:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/auth/login.model.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            scope\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        scope:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/auth/login.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            username\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        username:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/auth/login.model.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class LoginForm {\n  public client_id: any;\n  public client_secret: any;\n  public grant_type: any;\n  public scope: any;\n  public username: string;\n  public password: string;\n\n  constructor(loginForm: any) {\n    this.client_id = loginForm.client_id || null;\n    this.client_secret = loginForm.client_secret || null;\n    this.grant_type = loginForm.grant_type || null;\n    this.scope = loginForm.scope || null;\n    this.username = loginForm.username || '';\n    this.password = loginForm.password || '';\n  }\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MenuModel.html":{"url":"classes/MenuModel.html","title":"class - MenuModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  MenuModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/shared/menu.model.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        IMenuModel\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                disabled\n                            \n                            \n                                    Optional\n                                iconSrc\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                items\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                selected\n                            \n                            \n                                    Optional\n                                sort\n                            \n                            \n                                    Optional\n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data?: IMenuModel)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/models/shared/menu.model.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    IMenuModel\n                                                        \n                                                  \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            disabled\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        disabled:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/shared/menu.model.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            iconSrc\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        iconSrc:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/shared/menu.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     any | undefined\n\n                    \n                \n                    \n                        \n                            Type :     any | undefined\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/shared/menu.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            items\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        items:     IMenuModel[] | null\n\n                    \n                \n                    \n                        \n                            Type :     IMenuModel[] | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/shared/menu.model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/shared/menu.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            selected\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selected:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/shared/menu.model.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            sort\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sort:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/shared/menu.model.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            url\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        url:     string | undefined\n\n                    \n                \n                    \n                        \n                            Type :     string | undefined\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/shared/menu.model.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class MenuModel implements IMenuModel {\n    \n    id: any | undefined;\n    name: string;\n    iconSrc?: string;\n    sort?: number;\n    disabled?: boolean;\n    selected?: boolean;\n    items?: IMenuModel[] | null;\n    url?: string | undefined;\n\n    constructor(data?: IMenuModel) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (this)[property] = (data)[property];\n            }\n        }\n    }\n}\n\nexport interface IMenuModel {\n    id: any | undefined;\n    name: string;\n    iconSrc?: string;\n    sort?: number;\n    disabled?: boolean;\n    selected?: boolean;\n    items?: IMenuModel[] | null;\n    url?: string | undefined;\n}\n\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MenusEffects.html":{"url":"injectables/MenusEffects.html","title":"injectable - MenusEffects","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  MenusEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/store/effects/menus.effect.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getMenus$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, appState$: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/store/effects/menus.effect.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        appState$\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMenus$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getMenus$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n    .ofType(MenusActions.ActionTypes.LOAD)\n    .map((action: MenusActions.LoadAction) => action.payload)\n    .switchMap(state => {\n      return Observable.of(MenusMock)\n        .map(menus => new MenusActions.LoadSuccessAction(menus))\n        .catch(error  => Observable.of(new MenusActions.LoadFailAction()));\n    })\n                        \n                    \n                    \n                        \n                            Decorators : Effect\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/effects/menus.effect.ts:28\n                            \n                        \n\n                \n                    \n                        Menus list\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { MenusMock } from './../../mocks/menus.mock';\nimport { getMenusData } from './../index';\n\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/switchMap';\nimport { Injectable }             from '@angular/core';\nimport { Effect, Actions }        from '@ngrx/effects';\nimport { Action }                 from '@ngrx/store';\nimport { Observable }             from 'rxjs/Observable';\nimport { of }                     from 'rxjs/observable/of';\nimport * as MenusActions          from '../actions/menus.action';\nimport { Store }                  from '@ngrx/store';\nimport * as store                 from '../index';\nimport { MenuModel }              from '../../models';\n\n@Injectable()\nexport class MenusEffects {\n\n  constructor(\n    private actions$: Actions,\n    private appState$: Store) {}\n\n  /**\n   * Menus list\n   */\n  @Effect()\n  getMenus$: Observable = this.actions$\n    .ofType(MenusActions.ActionTypes.LOAD)\n    .map((action: MenusActions.LoadAction) => action.payload)\n    .switchMap(state => {\n      return Observable.of(MenusMock)\n        .map(menus => new MenusActions.LoadSuccessAction(menus))\n        .catch(error  => Observable.of(new MenusActions.LoadFailAction()));\n    });\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavFiltersComponent.html":{"url":"components/NavFiltersComponent.html","title":"component - NavFiltersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NavFiltersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dossier-navigator/nav-filters/nav-filters.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                dossier-nav-filters\n            \n\n            \n                styleUrls\n                nav-filters.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./nav-filters.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                onFiltersChanged\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                filter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onValuedActive\n                            \n                            \n                                onValuedArchived\n                            \n                            \n                                onValuedClosed\n                            \n                            \n                                onValuedIncludeGroup\n                            \n                            \n                                onValuedIncludeGuest\n                            \n                            \n                                onValuedIncludeTasks\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/dossier-navigator/nav-filters/nav-filters.component.ts:26\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        filter\n                    \n                    \n                            \n                            Type:    DossierFilterModel\n\n                            \n                        \n                            Default value: new DossierFilterModel()\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/dossier-navigator/nav-filters/nav-filters.component.ts:19\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onValuedActive\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/dossier-navigator/nav-filters/nav-filters.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onValuedArchived\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/dossier-navigator/nav-filters/nav-filters.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onValuedClosed\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/dossier-navigator/nav-filters/nav-filters.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onValuedIncludeGroup\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/dossier-navigator/nav-filters/nav-filters.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onValuedIncludeGuest\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/dossier-navigator/nav-filters/nav-filters.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onValuedIncludeTasks\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/dossier-navigator/nav-filters/nav-filters.component.ts:26\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onFiltersChanged\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        onFiltersChanged:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n        ckbActive: (e) => {\n            this.onValuedActive.emit(e);\n        },\n        ckbClosed: (e) => {\n            this.onValuedClosed.emit(e);\n        },\n        ckbArchived: (e) => {\n            this.onValuedArchived.emit(e);\n        },\n        ckbIncludeGroup: (e) => {\n            this.onValuedIncludeGroup.emit(e);\n        },\n        ckbIncludeGuest: (e) => {\n            this.onValuedIncludeGuest.emit(e);\n        },\n        ckbIncludeTasks: (e) => {\n            this.onValuedIncludeTasks.emit(e);\n        }\n    }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dossier-navigator/nav-filters/nav-filters.component.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n    Component, \n    Input,\n    Output, \n    EventEmitter,\n    ChangeDetectionStrategy,\n  }                                     from '@angular/core';\nimport { DossierFilterModel }              from '../../shared/models';\n\n@Component({\n    selector: 'dossier-nav-filters',\n    templateUrl: './nav-filters.component.html',\n    styleUrls: ['./nav-filters.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class NavFiltersComponent {\n\n    @Input() filter:                DossierFilterModel = new DossierFilterModel();\n\n    @Output() onValuedActive:       EventEmitter = new EventEmitter();\n    @Output() onValuedClosed:       EventEmitter = new EventEmitter();\n    @Output() onValuedArchived:     EventEmitter = new EventEmitter();\n    @Output() onValuedIncludeGroup: EventEmitter = new EventEmitter();\n    @Output() onValuedIncludeGuest: EventEmitter = new EventEmitter();\n    @Output() onValuedIncludeTasks: EventEmitter = new EventEmitter();\n\n    constructor() { }\n\n    onFiltersChanged = {\n        ckbActive: (e) => {\n            this.onValuedActive.emit(e);\n        },\n        ckbClosed: (e) => {\n            this.onValuedClosed.emit(e);\n        },\n        ckbArchived: (e) => {\n            this.onValuedArchived.emit(e);\n        },\n        ckbIncludeGroup: (e) => {\n            this.onValuedIncludeGroup.emit(e);\n        },\n        ckbIncludeGuest: (e) => {\n            this.onValuedIncludeGuest.emit(e);\n        },\n        ckbIncludeTasks: (e) => {\n            this.onValuedIncludeTasks.emit(e);\n        }\n    }\n\n}\n\n    \n\n    \n        \n\n    \n\n        \n            \n            \n        \n\n        \n            \n            \n        \n\n        \n            \n            \n          \n\n                \n            \n            \n        \n\n        \n            \n            \n        \n\n        \n            \n            \n        \n\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                                                                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'body'},{'name': 'BreadCrumbComponent', 'selector': 'app-bread-crumb'},{'name': 'ControlWebDavComponent', 'selector': 'app-control-web-dav'},{'name': 'DocumentGenerationComponent', 'selector': 'app-document-generation'},{'name': 'DocumentReportViewerComponent', 'selector': 'app-document-report-viewer'},{'name': 'DossierDetailsComponent', 'selector': 'app-dossier-details'},{'name': 'DossierNavigatorComponent', 'selector': 'app-dossier-navigator'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HorizontalNavigationComponent', 'selector': 'kiss-menu-header'},{'name': 'LanguageSelectorComponent', 'selector': 'language-selector'},{'name': 'LayoutContainer', 'selector': 'app-layout'},{'name': 'LeftSidebarComponent', 'selector': 'app-left-sidebar'},{'name': 'LoginComponent', 'selector': 'login'},{'name': 'NavFiltersComponent', 'selector': 'dossier-nav-filters'},{'name': 'NotificationBoxComponent', 'selector': 'app-notification-box'},{'name': 'PageBadGatewayComponent', 'selector': 'page-gate-way'},{'name': 'PageContentComponent', 'selector': 'page-content'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PersonFormComponent', 'selector': 'app-person-form'},{'name': 'PersonListComponent', 'selector': 'app-person-list'},{'name': 'PersonsComponent', 'selector': 'app-person'},{'name': 'ProfileBarComponent', 'selector': 'profile-bar'},{'name': 'ReportViewerComponent', 'selector': 'app-report-viewer'},{'name': 'SearchBoxComponent', 'selector': 'kiss-search-box'},{'name': 'SelectedActionsComponent', 'selector': 'app-selected-actions'},{'name': 'SpinnerComponent', 'selector': 'spinner'},{'name': 'ToolbarsComponent', 'selector': 'app-toolbars'},{'name': 'TreeDetailComponent', 'selector': 'app-tree-detail'},{'name': 'TreeListComponent', 'selector': 'app-tree-list'}];\n    var DIRECTIVES = [{'name': 'AuthorizeDirective', 'selector': '[appAuthorize]'},{'name': 'DynamicTabsDirective', 'selector': '[dynamic-tabs]'}];\n    var ACTUAL_COMPONENT = {'name': 'NavFiltersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotificationBoxComponent.html":{"url":"components/NotificationBoxComponent.html","title":"component - NotificationBoxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NotificationBoxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/layouts/headers/notification-box/notification-box.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-notification-box\n            \n\n            \n                styleUrls\n                notification-box.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./notification-box.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/layouts/headers/notification-box/notification-box.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/layouts/headers/notification-box/notification-box.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-notification-box',\n  templateUrl: './notification-box.component.html',\n  styleUrls: ['./notification-box.component.scss']\n})\nexport class NotificationBoxComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  notification-box works!\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  notification-box works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'body'},{'name': 'BreadCrumbComponent', 'selector': 'app-bread-crumb'},{'name': 'ControlWebDavComponent', 'selector': 'app-control-web-dav'},{'name': 'DocumentGenerationComponent', 'selector': 'app-document-generation'},{'name': 'DocumentReportViewerComponent', 'selector': 'app-document-report-viewer'},{'name': 'DossierDetailsComponent', 'selector': 'app-dossier-details'},{'name': 'DossierNavigatorComponent', 'selector': 'app-dossier-navigator'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HorizontalNavigationComponent', 'selector': 'kiss-menu-header'},{'name': 'LanguageSelectorComponent', 'selector': 'language-selector'},{'name': 'LayoutContainer', 'selector': 'app-layout'},{'name': 'LeftSidebarComponent', 'selector': 'app-left-sidebar'},{'name': 'LoginComponent', 'selector': 'login'},{'name': 'NavFiltersComponent', 'selector': 'dossier-nav-filters'},{'name': 'NotificationBoxComponent', 'selector': 'app-notification-box'},{'name': 'PageBadGatewayComponent', 'selector': 'page-gate-way'},{'name': 'PageContentComponent', 'selector': 'page-content'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PersonFormComponent', 'selector': 'app-person-form'},{'name': 'PersonListComponent', 'selector': 'app-person-list'},{'name': 'PersonsComponent', 'selector': 'app-person'},{'name': 'ProfileBarComponent', 'selector': 'profile-bar'},{'name': 'ReportViewerComponent', 'selector': 'app-report-viewer'},{'name': 'SearchBoxComponent', 'selector': 'kiss-search-box'},{'name': 'SelectedActionsComponent', 'selector': 'app-selected-actions'},{'name': 'SpinnerComponent', 'selector': 'spinner'},{'name': 'ToolbarsComponent', 'selector': 'app-toolbars'},{'name': 'TreeDetailComponent', 'selector': 'app-tree-detail'},{'name': 'TreeListComponent', 'selector': 'app-tree-list'}];\n    var DIRECTIVES = [{'name': 'AuthorizeDirective', 'selector': '[appAuthorize]'},{'name': 'DynamicTabsDirective', 'selector': '[dynamic-tabs]'}];\n    var ACTUAL_COMPONENT = {'name': 'NotificationBoxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageBadGatewayComponent.html":{"url":"components/PageBadGatewayComponent.html","title":"component - PageBadGatewayComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PageBadGatewayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/exceptions/pageBadGateway/pageBadGateway.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                page-gate-way\n            \n\n            \n                styleUrls\n                pageBadGateway.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./pageBadGateway.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                messager\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                goBack\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(location: Location, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/exceptions/pageBadGateway/pageBadGateway.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                    Location\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            goBack\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        goBack()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/exceptions/pageBadGateway/pageBadGateway.component.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/exceptions/pageBadGateway/pageBadGateway.component.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            messager\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        messager:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/exceptions/pageBadGateway/pageBadGateway.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { ActivatedRoute } from '@angular/router';\nimport { Component, ChangeDetectionStrategy, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'page-gate-way',\n  templateUrl: `./pageBadGateway.component.html`,\n  styleUrls: ['./pageBadGateway.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PageBadGatewayComponent implements OnInit {\n  constructor(private location: Location,\n  private route: ActivatedRoute) {}\n\n  messager: any;\n\n  ngOnInit() {\n    this.messager = this.route.snapshot.paramMap.get('roles');\n    console.log(this.messager);\n  }\n\n  public goBack() {\n    this.location.back();\n  }\n}\n    \n\n    \n        \n    \n        \n        {{ 'pageGateWay.Title' | translate }}\n        {{ 'pageGateWay.Subtitle' | translate }}\n        {{ messager }}\n        {{ 'pageGateWay.Button' | translate }}\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ \\'pageGateWay.Title\\' | translate }}        {{ \\'pageGateWay.Subtitle\\' | translate }}        {{ messager }}        {{ \\'pageGateWay.Button\\' | translate }}    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'body'},{'name': 'BreadCrumbComponent', 'selector': 'app-bread-crumb'},{'name': 'ControlWebDavComponent', 'selector': 'app-control-web-dav'},{'name': 'DocumentGenerationComponent', 'selector': 'app-document-generation'},{'name': 'DocumentReportViewerComponent', 'selector': 'app-document-report-viewer'},{'name': 'DossierDetailsComponent', 'selector': 'app-dossier-details'},{'name': 'DossierNavigatorComponent', 'selector': 'app-dossier-navigator'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HorizontalNavigationComponent', 'selector': 'kiss-menu-header'},{'name': 'LanguageSelectorComponent', 'selector': 'language-selector'},{'name': 'LayoutContainer', 'selector': 'app-layout'},{'name': 'LeftSidebarComponent', 'selector': 'app-left-sidebar'},{'name': 'LoginComponent', 'selector': 'login'},{'name': 'NavFiltersComponent', 'selector': 'dossier-nav-filters'},{'name': 'NotificationBoxComponent', 'selector': 'app-notification-box'},{'name': 'PageBadGatewayComponent', 'selector': 'page-gate-way'},{'name': 'PageContentComponent', 'selector': 'page-content'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PersonFormComponent', 'selector': 'app-person-form'},{'name': 'PersonListComponent', 'selector': 'app-person-list'},{'name': 'PersonsComponent', 'selector': 'app-person'},{'name': 'ProfileBarComponent', 'selector': 'profile-bar'},{'name': 'ReportViewerComponent', 'selector': 'app-report-viewer'},{'name': 'SearchBoxComponent', 'selector': 'kiss-search-box'},{'name': 'SelectedActionsComponent', 'selector': 'app-selected-actions'},{'name': 'SpinnerComponent', 'selector': 'spinner'},{'name': 'ToolbarsComponent', 'selector': 'app-toolbars'},{'name': 'TreeDetailComponent', 'selector': 'app-tree-detail'},{'name': 'TreeListComponent', 'selector': 'app-tree-list'}];\n    var DIRECTIVES = [{'name': 'AuthorizeDirective', 'selector': '[appAuthorize]'},{'name': 'DynamicTabsDirective', 'selector': '[dynamic-tabs]'}];\n    var ACTUAL_COMPONENT = {'name': 'PageBadGatewayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageContentComponent.html":{"url":"components/PageContentComponent.html","title":"component - PageContentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PageContentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/layouts/contents/page-content/page.content.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                page-content\n            \n\n\n\n\n            \n                templateUrl\n                ./page.content.component.html\n            \n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/layouts/contents/page-content/page.content.component.ts:12\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import {\n  Component,\n  ChangeDetectionStrategy\n} from '@angular/core';\n\n@Component({\n  selector: 'page-content',\n  templateUrl: './page.content.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class PageContentComponent {\n  constructor() { }\n}\n\n    \n\n    \n        \n    \n    \n        \n            \n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'body'},{'name': 'BreadCrumbComponent', 'selector': 'app-bread-crumb'},{'name': 'ControlWebDavComponent', 'selector': 'app-control-web-dav'},{'name': 'DocumentGenerationComponent', 'selector': 'app-document-generation'},{'name': 'DocumentReportViewerComponent', 'selector': 'app-document-report-viewer'},{'name': 'DossierDetailsComponent', 'selector': 'app-dossier-details'},{'name': 'DossierNavigatorComponent', 'selector': 'app-dossier-navigator'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HorizontalNavigationComponent', 'selector': 'kiss-menu-header'},{'name': 'LanguageSelectorComponent', 'selector': 'language-selector'},{'name': 'LayoutContainer', 'selector': 'app-layout'},{'name': 'LeftSidebarComponent', 'selector': 'app-left-sidebar'},{'name': 'LoginComponent', 'selector': 'login'},{'name': 'NavFiltersComponent', 'selector': 'dossier-nav-filters'},{'name': 'NotificationBoxComponent', 'selector': 'app-notification-box'},{'name': 'PageBadGatewayComponent', 'selector': 'page-gate-way'},{'name': 'PageContentComponent', 'selector': 'page-content'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PersonFormComponent', 'selector': 'app-person-form'},{'name': 'PersonListComponent', 'selector': 'app-person-list'},{'name': 'PersonsComponent', 'selector': 'app-person'},{'name': 'ProfileBarComponent', 'selector': 'profile-bar'},{'name': 'ReportViewerComponent', 'selector': 'app-report-viewer'},{'name': 'SearchBoxComponent', 'selector': 'kiss-search-box'},{'name': 'SelectedActionsComponent', 'selector': 'app-selected-actions'},{'name': 'SpinnerComponent', 'selector': 'spinner'},{'name': 'ToolbarsComponent', 'selector': 'app-toolbars'},{'name': 'TreeDetailComponent', 'selector': 'app-tree-detail'},{'name': 'TreeListComponent', 'selector': 'app-tree-list'}];\n    var DIRECTIVES = [{'name': 'AuthorizeDirective', 'selector': '[appAuthorize]'},{'name': 'DynamicTabsDirective', 'selector': '[dynamic-tabs]'}];\n    var ACTUAL_COMPONENT = {'name': 'PageContentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageNotFoundComponent.html":{"url":"components/PageNotFoundComponent.html","title":"component - PageNotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PageNotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/exceptions/pageNotFound/pageNotFound.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                page-not-found\n            \n\n            \n                styleUrls\n                pageNotFound.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./pageNotFound.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                goBack\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(location: Location)\n                    \n                \n                        \n                            \n                                Defined in src/app/exceptions/pageNotFound/pageNotFound.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                    Location\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            goBack\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        goBack()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/exceptions/pageNotFound/pageNotFound.component.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'page-not-found',\n  templateUrl: `./pageNotFound.component.html`,\n  styleUrls: ['./pageNotFound.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PageNotFoundComponent {\n\tconstructor(private location: Location) {}\n\n  public goBack() {\n    this.location.back();\n  }\n}\n    \n\n    \n        \n    \n        \n        {{ 'PageNotFound.Title' | translate }}\n        {{ 'PageNotFound.Subtitle' | translate }}\n        {{ 'PageNotFound.Button' | translate }}\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ \\'PageNotFound.Title\\' | translate }}        {{ \\'PageNotFound.Subtitle\\' | translate }}        {{ \\'PageNotFound.Button\\' | translate }}    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'body'},{'name': 'BreadCrumbComponent', 'selector': 'app-bread-crumb'},{'name': 'ControlWebDavComponent', 'selector': 'app-control-web-dav'},{'name': 'DocumentGenerationComponent', 'selector': 'app-document-generation'},{'name': 'DocumentReportViewerComponent', 'selector': 'app-document-report-viewer'},{'name': 'DossierDetailsComponent', 'selector': 'app-dossier-details'},{'name': 'DossierNavigatorComponent', 'selector': 'app-dossier-navigator'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HorizontalNavigationComponent', 'selector': 'kiss-menu-header'},{'name': 'LanguageSelectorComponent', 'selector': 'language-selector'},{'name': 'LayoutContainer', 'selector': 'app-layout'},{'name': 'LeftSidebarComponent', 'selector': 'app-left-sidebar'},{'name': 'LoginComponent', 'selector': 'login'},{'name': 'NavFiltersComponent', 'selector': 'dossier-nav-filters'},{'name': 'NotificationBoxComponent', 'selector': 'app-notification-box'},{'name': 'PageBadGatewayComponent', 'selector': 'page-gate-way'},{'name': 'PageContentComponent', 'selector': 'page-content'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PersonFormComponent', 'selector': 'app-person-form'},{'name': 'PersonListComponent', 'selector': 'app-person-list'},{'name': 'PersonsComponent', 'selector': 'app-person'},{'name': 'ProfileBarComponent', 'selector': 'profile-bar'},{'name': 'ReportViewerComponent', 'selector': 'app-report-viewer'},{'name': 'SearchBoxComponent', 'selector': 'kiss-search-box'},{'name': 'SelectedActionsComponent', 'selector': 'app-selected-actions'},{'name': 'SpinnerComponent', 'selector': 'spinner'},{'name': 'ToolbarsComponent', 'selector': 'app-toolbars'},{'name': 'TreeDetailComponent', 'selector': 'app-tree-detail'},{'name': 'TreeListComponent', 'selector': 'app-tree-list'}];\n    var DIRECTIVES = [{'name': 'AuthorizeDirective', 'selector': '[appAuthorize]'},{'name': 'DynamicTabsDirective', 'selector': '[dynamic-tabs]'}];\n    var ACTUAL_COMPONENT = {'name': 'PageNotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Person.html":{"url":"classes/Person.html","title":"class - Person","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Person\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/person.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                bffnummer\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                nnummer\n                            \n                            \n                                    Public\n                                vorname\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data?: IPerson)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/models/person.model.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    IPerson\n                                                        \n                                                  \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            bffnummer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bffnummer:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/person.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/person.model.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/person.model.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            nnummer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        nnummer:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/person.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            vorname\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        vorname:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/person.model.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Person {\n  public id: any;\n  public name: string;\n  public vorname: string;\n  public nnummer?: string;\n  public bffnummer?: any;\n  constructor(data?: IPerson) {\n    if (data) {\n      for (const property in data) {\n        if (data.hasOwnProperty(property)) { (this)[property] = (data)[property]; }\n      }\n    }\n  }\n}\n\nexport interface IPerson {\n  id: any;\n  name: string;\n  vorname: string;\n  nnummer?: string;\n  bffnummer?: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PersonFormComponent.html":{"url":"components/PersonFormComponent.html","title":"component - PersonFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PersonFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/persons/person-form/person-form.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-person-form\n            \n\n            \n                styleUrls\n                person-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./person-form.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actionCancel\n                            \n                            \n                                actionDelete\n                            \n                            \n                                actionSave\n                            \n                            \n                                colCountByScreen\n                            \n                            \n                                configFolder\n                            \n                            \n                                formData\n                            \n                            \n                                    Public\n                                personForm\n                            \n                            \n                                    Public\n                                personsSandbox\n                            \n                            \n                                reportViewerModel\n                            \n                            \n                                userFolder\n                            \n                            \n                                    Protected\n                                permissions\n                            \n                            \n                                    Public\n                                titlePage\n                            \n                            \n                                    Private\n                                titleService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getSizeScreen\n                            \n                            \n                                goBack\n                            \n                            \n                                    Private\n                                loadPersonDetail\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                setActionButtons\n                            \n                            \n                                    Public\n                                getTitle\n                            \n                            \n                                    Public\n                                setTitle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(injector: Injector, router: Router, personsSandbox: PersonsSandbox, appSandbox: AppSandbox, location: Location)\n                    \n                \n                        \n                            \n                                Defined in src/app/persons/person-form/person-form.component.ts:57\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                    Injector\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        personsSandbox\n                                                  \n                                                        \n                                                                    PersonsSandbox\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        appSandbox\n                                                  \n                                                        \n                                                                    AppSandbox\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                    Location\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getSizeScreen\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getSizeScreen(width: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/persons/person-form/person-form.component.ts:101\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        width\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     \"xs\" | \"sm\" | \"md\" | \"lg\"\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goBack\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoBack()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/persons/person-form/person-form.component.ts:108\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadPersonDetail\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loadPersonDetail()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/persons/person-form/person-form.component.ts:92\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/persons/person-form/person-form.component.ts:70\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            setActionButtons\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setActionButtons()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/persons/person-form/person-form.component.ts:75\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getTitle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getTitle()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setTitle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setTitle(newTitle: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        newTitle\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            actionCancel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        actionCancel:     ActionHandler\n\n                    \n                \n                    \n                        \n                            Type :     ActionHandler\n\n                        \n                    \n                    \n                        \n                            Default value : new ActionHandler()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/persons/person-form/person-form.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            actionDelete\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        actionDelete:     ActionHandler\n\n                    \n                \n                    \n                        \n                            Type :     ActionHandler\n\n                        \n                    \n                    \n                        \n                            Default value : new ActionHandler()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/persons/person-form/person-form.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            actionSave\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        actionSave:     ActionHandler\n\n                    \n                \n                    \n                        \n                            Type :     ActionHandler\n\n                        \n                    \n                    \n                        \n                            Default value : new ActionHandler()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/persons/person-form/person-form.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            colCountByScreen\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        colCountByScreen:     Object\n\n                    \n                \n                    \n                        \n                            Type :     Object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    xs: 1,\n    sm: 3,\n    md: 3,\n    lg: 3\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/persons/person-form/person-form.component.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            configFolder\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        configFolder:     \n\n                    \n                \n                    \n                        \n                            Default value : CONFIG_FOLDER_WEBDAV\n                        \n                    \n                        \n                            \n                                    Defined in src/app/persons/person-form/person-form.component.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        formData:     Pick\n\n                    \n                \n                    \n                        \n                            Type :     Pick\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/persons/person-form/person-form.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            personForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        personForm:     DxFormComponent\n\n                    \n                \n                    \n                        \n                            Type :     DxFormComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/persons/person-form/person-form.component.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            personsSandbox\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        personsSandbox:     PersonsSandbox\n\n                    \n                \n                    \n                        \n                            Type :     PersonsSandbox\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/persons/person-form/person-form.component.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reportViewerModel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        reportViewerModel:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/persons/person-form/person-form.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userFolder\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userFolder:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'diag_admin'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/persons/person-form/person-form.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            permissions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        permissions:     ClassRightModel\n\n                    \n                \n                    \n                        \n                            Type :     ClassRightModel\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            titlePage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        titlePage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            titleService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        titleService:     Title\n\n                    \n                \n                    \n                        \n                            Type :     Title\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { PersonsSandbox } from './../persons.sandbox';\nimport { Person } from './../../shared/models/person.model';\nimport {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  ViewChild,\n  Injector,\n  OnInit,\n} from '@angular/core';\n\nimport { DxFormComponent } from 'devextreme-angular';\nimport { BaseComponent } from '../../shared/components/base.component';\nimport { ActionHandler } from '../../shared/models';\nimport { SetClassRight } from '../../shared/authorize/authorize.decorators';\nimport { AppSandbox } from '../../app.sandbox';\n\nexport const CONFIG_FOLDER_WEBDAV = {\n  HOST: 'http://localhost:8001',\n  FOLDER_DOC: 'Documents',\n  FOLDER_TEMP: 'templates',\n  FOLDER_PLUGIN: 'assets/webdav/Plugins'\n};\n\n@Component({\n  selector: 'app-person-form',\n  templateUrl: './person-form.component.html',\n  styleUrls: ['./person-form.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n@SetClassRight('CtlPerson')\nexport class PersonFormComponent extends BaseComponent implements OnInit {\n\n  formData: Pick;\n  actionCancel: ActionHandler = new ActionHandler();\n  actionSave: ActionHandler = new ActionHandler();\n  actionDelete: ActionHandler = new ActionHandler();\n  reportViewerModel;\n\n  // webdav control\n  configFolder = CONFIG_FOLDER_WEBDAV;\n  userFolder = 'diag_admin';\n\n  @ViewChild('personForm')\n  public personForm: DxFormComponent;\n\n  colCountByScreen: Object = {\n    xs: 1,\n    sm: 3,\n    md: 3,\n    lg: 3\n  };\n\n  constructor(\n    injector: Injector,\n    private router: Router,\n    public personsSandbox: PersonsSandbox,\n    private appSandbox: AppSandbox,\n    private location: Location,\n    // private _document: DocumentsHelper,\n  ) {\n    super(injector);\n  }\n\n  ngOnInit() {\n    this.setActionButtons();\n    this.loadPersonDetail();\n  }\n\n  private setActionButtons() {\n    this.actionCancel.isVisible = true;\n    this.actionCancel.roles = [this.permissions.mayInsert, this.permissions.mayUpdate, this.permissions.mayDelete];\n\n    this.actionSave = new ActionHandler();\n    this.actionSave.isVisible = true;\n    this.actionSave.roles = [this.permissions.mayInsert, this.permissions.mayUpdate];\n\n    this.actionDelete = new ActionHandler();\n    this.actionDelete.isVisible = false;\n    if (!this.formData) return;\n    if (this.formData.id > 0) {\n      this.actionDelete.isVisible = true;\n      this.actionDelete.roles = [this.permissions.mayDelete];\n    }\n  }\n\n  private loadPersonDetail() {\n    this.personsSandbox.personDetails$.subscribe(person => {\n      if (!person) return;\n      this.formData = person;\n      this.titlePage = `Detail ${person.name}`;\n      this.setTitle(this.titlePage);\n    });\n  }\n\n  public getSizeScreen(width) {\n    if (width  {\n  //     if (!document) return;\n  //     // console.log(document);\n  //     this._document.downloadFile(document.fileBinary, document.docFormatCode, document.docTemplateName);\n  //   });\n  // }\n}\n\n    \n\n    \n        \n\n\n\n    \n        \n\n            \n\n                \n                    \n                        \n                        \n                    \n                    \n                        \n                        \n                    \n                    \n                        \n                        \n                    \n                \n\n                \n            \n        \n\n        \n        \n         -->\n\n        \n        \n            \n            \n         -->\n\n        \n        Control webdav\n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                                                                                                                                                                                             -->                                                 -->                Control webdav            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'body'},{'name': 'BreadCrumbComponent', 'selector': 'app-bread-crumb'},{'name': 'ControlWebDavComponent', 'selector': 'app-control-web-dav'},{'name': 'DocumentGenerationComponent', 'selector': 'app-document-generation'},{'name': 'DocumentReportViewerComponent', 'selector': 'app-document-report-viewer'},{'name': 'DossierDetailsComponent', 'selector': 'app-dossier-details'},{'name': 'DossierNavigatorComponent', 'selector': 'app-dossier-navigator'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HorizontalNavigationComponent', 'selector': 'kiss-menu-header'},{'name': 'LanguageSelectorComponent', 'selector': 'language-selector'},{'name': 'LayoutContainer', 'selector': 'app-layout'},{'name': 'LeftSidebarComponent', 'selector': 'app-left-sidebar'},{'name': 'LoginComponent', 'selector': 'login'},{'name': 'NavFiltersComponent', 'selector': 'dossier-nav-filters'},{'name': 'NotificationBoxComponent', 'selector': 'app-notification-box'},{'name': 'PageBadGatewayComponent', 'selector': 'page-gate-way'},{'name': 'PageContentComponent', 'selector': 'page-content'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PersonFormComponent', 'selector': 'app-person-form'},{'name': 'PersonListComponent', 'selector': 'app-person-list'},{'name': 'PersonsComponent', 'selector': 'app-person'},{'name': 'ProfileBarComponent', 'selector': 'profile-bar'},{'name': 'ReportViewerComponent', 'selector': 'app-report-viewer'},{'name': 'SearchBoxComponent', 'selector': 'kiss-search-box'},{'name': 'SelectedActionsComponent', 'selector': 'app-selected-actions'},{'name': 'SpinnerComponent', 'selector': 'spinner'},{'name': 'ToolbarsComponent', 'selector': 'app-toolbars'},{'name': 'TreeDetailComponent', 'selector': 'app-tree-detail'},{'name': 'TreeListComponent', 'selector': 'app-tree-list'}];\n    var DIRECTIVES = [{'name': 'AuthorizeDirective', 'selector': '[appAuthorize]'},{'name': 'DynamicTabsDirective', 'selector': '[dynamic-tabs]'}];\n    var ACTUAL_COMPONENT = {'name': 'PersonFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PersonListComponent.html":{"url":"components/PersonListComponent.html","title":"component - PersonListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PersonListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/persons/person-list/person-list.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-person-list\n            \n\n            \n                styleUrls\n                person-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./person-list.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actionNew\n                            \n                            \n                                personsData\n                            \n                            \n                                    Public\n                                personsSandbox\n                            \n                            \n                                    Protected\n                                permissions\n                            \n                            \n                                    Public\n                                titlePage\n                            \n                            \n                                    Private\n                                titleService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initActionNew\n                            \n                            \n                                    Private\n                                loadPersonDatas\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                onSelect\n                            \n                            \n                                    Public\n                                getTitle\n                            \n                            \n                                    Public\n                                setTitle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(injector: Injector, router: Router, personsSandbox: PersonsSandbox)\n                    \n                \n                        \n                            \n                                Defined in src/app/persons/person-list/person-list.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                    Injector\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        personsSandbox\n                                                  \n                                                        \n                                                                    PersonsSandbox\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            initActionNew\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initActionNew()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/persons/person-list/person-list.component.ts:43\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadPersonDatas\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loadPersonDatas()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/persons/person-list/person-list.component.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/persons/person-list/person-list.component.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onSelect\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        onSelect(data: Person)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/persons/person-list/person-list.component.ts:55\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    Person\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getTitle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getTitle()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setTitle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setTitle(newTitle: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        newTitle\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            actionNew\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        actionNew:     ActionHandler\n\n                    \n                \n                    \n                        \n                            Type :     ActionHandler\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/persons/person-list/person-list.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            personsData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        personsData:     Person[]\n\n                    \n                \n                    \n                        \n                            Type :     Person[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/persons/person-list/person-list.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            personsSandbox\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        personsSandbox:     PersonsSandbox\n\n                    \n                \n                    \n                        \n                            Type :     PersonsSandbox\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/persons/person-list/person-list.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            permissions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        permissions:     ClassRightModel\n\n                    \n                \n                    \n                        \n                            Type :     ClassRightModel\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            titlePage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        titlePage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            titleService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        titleService:     Title\n\n                    \n                \n                    \n                        \n                            Type :     Title\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { PersonsSandbox } from './../persons.sandbox';\nimport { Router } from '@angular/router';\nimport {\n  Component,\n  OnInit,\n  ChangeDetectionStrategy,\n  ViewChild,\n  Injector\n} from '@angular/core';\n\nimport { DxFormComponent } from 'devextreme-angular';\nimport { BaseComponent } from '../../shared/components/base.component';\nimport { Person, ActionHandler } from '../../shared/models';\nimport { SetClassRight } from '../../shared/authorize/authorize.decorators';\n\n@Component({\n  selector: 'app-person-list',\n  templateUrl: './person-list.component.html',\n  styleUrls: ['./person-list.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n@SetClassRight('CtlPerson')\nexport class PersonListComponent extends BaseComponent implements OnInit {\n\n  actionNew: ActionHandler;\n  personsData: Person[];\n\n  constructor(\n    injector: Injector,\n    private router: Router,\n    public personsSandbox: PersonsSandbox\n  ) {\n    super(injector);\n  }\n\n  ngOnInit() {\n    this.titlePage = 'Page manager persons';\n    this.setTitle(this.titlePage);\n    this.loadPersonDatas();\n    this.initActionNew();\n  }\n\n  private initActionNew() {\n    this.actionNew = new ActionHandler();\n    this.actionNew.isVisible = true;\n    this.actionNew.roles = [this.permissions.mayInsert];\n  }\n\n  private loadPersonDatas() {\n    this.personsSandbox.persons$.subscribe(persons => {\n      this.personsData = persons;\n    });\n  }\n\n  public onSelect(data: Person): void {\n    this.personsSandbox.selectPerson(data);\n    this.router.navigate([`persons/detail/${data.id}`]);\n  }\n}\n\n    \n\n    \n        \n\n\n\n  \n    \n      \n        \n        \n        \n        \n        \n        \n        \n        \n      \n    \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'body'},{'name': 'BreadCrumbComponent', 'selector': 'app-bread-crumb'},{'name': 'ControlWebDavComponent', 'selector': 'app-control-web-dav'},{'name': 'DocumentGenerationComponent', 'selector': 'app-document-generation'},{'name': 'DocumentReportViewerComponent', 'selector': 'app-document-report-viewer'},{'name': 'DossierDetailsComponent', 'selector': 'app-dossier-details'},{'name': 'DossierNavigatorComponent', 'selector': 'app-dossier-navigator'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HorizontalNavigationComponent', 'selector': 'kiss-menu-header'},{'name': 'LanguageSelectorComponent', 'selector': 'language-selector'},{'name': 'LayoutContainer', 'selector': 'app-layout'},{'name': 'LeftSidebarComponent', 'selector': 'app-left-sidebar'},{'name': 'LoginComponent', 'selector': 'login'},{'name': 'NavFiltersComponent', 'selector': 'dossier-nav-filters'},{'name': 'NotificationBoxComponent', 'selector': 'app-notification-box'},{'name': 'PageBadGatewayComponent', 'selector': 'page-gate-way'},{'name': 'PageContentComponent', 'selector': 'page-content'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PersonFormComponent', 'selector': 'app-person-form'},{'name': 'PersonListComponent', 'selector': 'app-person-list'},{'name': 'PersonsComponent', 'selector': 'app-person'},{'name': 'ProfileBarComponent', 'selector': 'profile-bar'},{'name': 'ReportViewerComponent', 'selector': 'app-report-viewer'},{'name': 'SearchBoxComponent', 'selector': 'kiss-search-box'},{'name': 'SelectedActionsComponent', 'selector': 'app-selected-actions'},{'name': 'SpinnerComponent', 'selector': 'spinner'},{'name': 'ToolbarsComponent', 'selector': 'app-toolbars'},{'name': 'TreeDetailComponent', 'selector': 'app-tree-detail'},{'name': 'TreeListComponent', 'selector': 'app-tree-list'}];\n    var DIRECTIVES = [{'name': 'AuthorizeDirective', 'selector': '[appAuthorize]'},{'name': 'DynamicTabsDirective', 'selector': '[dynamic-tabs]'}];\n    var ACTUAL_COMPONENT = {'name': 'PersonListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PersonsApiClient.html":{"url":"injectables/PersonsApiClient.html","title":"injectable - PersonsApiClient","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  PersonsApiClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/persons/personsApiClient.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                deletePerson\n                            \n                            \n                                    Public\n                                getPersonDetails\n                            \n                            \n                                    Public\n                                getPersons\n                            \n                            \n                                    Public\n                                insertPerson\n                            \n                            \n                                    Public\n                                updatePerson\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            deletePerson\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        deletePerson(id: number)\n                    \n                \n\n                    \n                        \n                            Decorators : DELETEAdapter\n                        \n                    \n\n                        \n                            \n                                    Defined in src/app/persons/personsApiClient.service.ts:72\n                            \n                        \n\n\n                \n                    \n                            Delete person by a given id\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getPersonDetails\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getPersonDetails(id: number)\n                    \n                \n\n                    \n                        \n                            Decorators : GETAdapter\n                        \n                    \n\n                        \n                            \n                                    Defined in src/app/persons/personsApiClient.service.ts:44\n                            \n                        \n\n\n                \n                    \n                            Retrieves person details by a given id\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getPersons\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getPersons()\n                    \n                \n\n                    \n                        \n                            Decorators : Adapter\n                        \n                    \n\n                        \n                            \n                                    Defined in src/app/persons/personsApiClient.service.ts:32\n                            \n                        \n\n\n                \n                    \n                            Retrieves all persons\n\n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            insertPerson\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        insertPerson(person: Person)\n                    \n                \n\n                    \n                        \n                            Decorators : POSTAdapter\n                        \n                    \n\n                        \n                            \n                                    Defined in src/app/persons/personsApiClient.service.ts:63\n                            \n                        \n\n\n                \n                    \n                            Submits login form to the server\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        person\n                                                        \n                                                                    Person\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            updatePerson\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        updatePerson(id: any, person: Person)\n                    \n                \n\n                    \n                        \n                            Decorators : PUTAdapter\n                        \n                    \n\n                        \n                            \n                                    Defined in src/app/persons/personsApiClient.service.ts:54\n                            \n                        \n\n\n                \n                    \n                            Submits person update by a given id\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        person\n                                                        \n                                                                    Person\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { PersonsMock } from './../shared/mocks';\nimport { Person } from './../shared/models/person.model';\nimport { Injectable } from '@angular/core';\nimport {\n  HttpService,\n  GET,\n  PUT,\n  POST,\n  DELETE,\n  Body,\n  Path,\n  Adapter,\n  DefaultHeaders\n} from '../shared/asyncServices/http';\nimport { Observable } from 'rxjs/Observable';\nimport { PersonsService } from './persons.service';\nimport { HttpHeaders } from '@angular/common/http';\n\n@Injectable()\n@DefaultHeaders({\n  'Accept': 'application/json',\n  'Content-Type': 'application/json',\n})\n\nexport class PersonsApiClient extends HttpService {\n\n  /**\n   * Retrieves all persons\n   */\n  // @GET('api/personen')\n  @Adapter(PersonsService.gridAdapter)\n  public getPersons(): Observable {\n    // mock data\n    return Observable.of(PersonsMock); // null;\n  };\n\n  /**\n   * Retrieves person details by a given id\n   * \n   * @param id\n   */\n  @GET('api/personen/{id}')\n  @Adapter(PersonsService.personDetailsAdapter)\n  public getPersonDetails(@Path('id') id: number): Observable { return null; };\n\n  /**\n   * Submits person update by a given id\n   * \n   * @param id\n   * @param person\n   */\n  @PUT('api/personen/{id}')\n  @Adapter(PersonsService.updatePersonAdapter)\n  public updatePerson(@Path('id') id: any, @Body person: Person): Observable { return null; }\n\n  /**\n   * Submits login form to the server\n   * \n   * @param person\n   */\n  @POST('api/personen')\n  @Adapter(PersonsService.insertPersonAdapter)\n  public insertPerson(@Body person: Person): Observable { return null; };\n\n  /**\n   * Delete person by a given id\n   *\n   * @param id\n   */\n  @DELETE('api/personen/{id}')\n  @Adapter(PersonsService.deletePersonAdapter)\n  public deletePerson(@Path('id') id: number): Observable { return null; };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PersonsComponent.html":{"url":"components/PersonsComponent.html","title":"component - PersonsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PersonsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/persons/person/person.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-person\n            \n\n            \n                styleUrls\n                person.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./person.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allowEdit\n                            \n                            \n                                    Public\n                                personsSandbox\n                            \n                            \n                                    Protected\n                                permissions\n                            \n                            \n                                    Public\n                                titlePage\n                            \n                            \n                                    Private\n                                titleService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onClickSelectAction\n                            \n                            \n                                onDeleteSelectAction\n                            \n                            \n                                    Public\n                                getTitle\n                            \n                            \n                                    Public\n                                setTitle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(injector: Injector, router: Router, personsSandbox: PersonsSandbox)\n                    \n                \n                        \n                            \n                                Defined in src/app/persons/person/person.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                    Injector\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        personsSandbox\n                                                  \n                                                        \n                                                                    PersonsSandbox\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/persons/person/person.component.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClickSelectAction\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClickSelectAction(itemData: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/persons/person/person.component.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        itemData\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onDeleteSelectAction\n                            \n                            \n                        \n                    \n                \n                \n                    \nonDeleteSelectAction(itemData: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/persons/person/person.component.ts:47\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        itemData\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getTitle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getTitle()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setTitle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setTitle(newTitle: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        newTitle\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allowEdit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        allowEdit:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'tesst'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/persons/person/person.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            personsSandbox\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        personsSandbox:     PersonsSandbox\n\n                    \n                \n                    \n                        \n                            Type :     PersonsSandbox\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/persons/person/person.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            permissions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        permissions:     ClassRightModel\n\n                    \n                \n                    \n                        \n                            Type :     ClassRightModel\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            titlePage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        titlePage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            titleService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        titleService:     Title\n\n                    \n                \n                    \n                        \n                            Type :     Title\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Injector,\n  OnInit,\n  Component,\n  ChangeDetectionStrategy,\n  ViewChild,\n  ViewContainerRef\n} from '@angular/core';\n\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs/rx';\nimport { PersonsSandbox } from '../persons.sandbox';\nimport { Person } from '../../shared/models';\nimport { BaseComponent } from '../../shared/components/base.component';\nimport { treeNavModels } from '../../shared/mocks';\nimport { Dialog } from '../../shared/utility';\nimport { SetClassRight } from '../../shared/authorize/authorize.decorators';\n\n@Component({\n  selector: 'app-person',\n  templateUrl: `./person.component.html`,\n  styleUrls: ['./person.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n@SetClassRight('CtlPerson')\nexport class PersonsComponent extends BaseComponent implements OnInit {\n\n  allowEdit = 'tesst';\n\n  constructor(\n    injector: Injector,\n    private router: Router,\n    public personsSandbox: PersonsSandbox\n  ) {\n    super(injector);\n  }\n\n  ngOnInit() {\n    this.personsSandbox.resetState();\n  }\n\n  onClickSelectAction(itemData) {\n    this.personsSandbox.selectPerson(itemData.data);\n    this.router.navigate([itemData.url]);\n  }\n\n  onDeleteSelectAction(itemData) {\n    this.personsSandbox.deletePersonItem(itemData);\n  }\n}\n\n    \n\n    \n        \n    \n        \n                \n                \n\n        \n\n        \n            \n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'body'},{'name': 'BreadCrumbComponent', 'selector': 'app-bread-crumb'},{'name': 'ControlWebDavComponent', 'selector': 'app-control-web-dav'},{'name': 'DocumentGenerationComponent', 'selector': 'app-document-generation'},{'name': 'DocumentReportViewerComponent', 'selector': 'app-document-report-viewer'},{'name': 'DossierDetailsComponent', 'selector': 'app-dossier-details'},{'name': 'DossierNavigatorComponent', 'selector': 'app-dossier-navigator'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HorizontalNavigationComponent', 'selector': 'kiss-menu-header'},{'name': 'LanguageSelectorComponent', 'selector': 'language-selector'},{'name': 'LayoutContainer', 'selector': 'app-layout'},{'name': 'LeftSidebarComponent', 'selector': 'app-left-sidebar'},{'name': 'LoginComponent', 'selector': 'login'},{'name': 'NavFiltersComponent', 'selector': 'dossier-nav-filters'},{'name': 'NotificationBoxComponent', 'selector': 'app-notification-box'},{'name': 'PageBadGatewayComponent', 'selector': 'page-gate-way'},{'name': 'PageContentComponent', 'selector': 'page-content'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PersonFormComponent', 'selector': 'app-person-form'},{'name': 'PersonListComponent', 'selector': 'app-person-list'},{'name': 'PersonsComponent', 'selector': 'app-person'},{'name': 'ProfileBarComponent', 'selector': 'profile-bar'},{'name': 'ReportViewerComponent', 'selector': 'app-report-viewer'},{'name': 'SearchBoxComponent', 'selector': 'kiss-search-box'},{'name': 'SelectedActionsComponent', 'selector': 'app-selected-actions'},{'name': 'SpinnerComponent', 'selector': 'spinner'},{'name': 'ToolbarsComponent', 'selector': 'app-toolbars'},{'name': 'TreeDetailComponent', 'selector': 'app-tree-detail'},{'name': 'TreeListComponent', 'selector': 'app-tree-list'}];\n    var DIRECTIVES = [{'name': 'AuthorizeDirective', 'selector': '[appAuthorize]'},{'name': 'DynamicTabsDirective', 'selector': '[dynamic-tabs]'}];\n    var ACTUAL_COMPONENT = {'name': 'PersonsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PersonsEffects.html":{"url":"injectables/PersonsEffects.html","title":"injectable - PersonsEffects","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  PersonsEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/store/effects/persons.effect.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addNewPerson$\n                            \n                            \n                                getPersonDetails$\n                            \n                            \n                                getPersons$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, personsApiClient: PersonsApiClient, appState$: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/store/effects/persons.effect.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        personsApiClient\n                                                  \n                                                        \n                                                                    PersonsApiClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        appState$\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addNewPerson$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        addNewPerson$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n    .ofType(personsActions.ActionTypes.ADD_NEW)\n    .map((action: personsActions.AddNewAction) => action.payload)\n    .switchMap(state => {\n      return this.personsApiClient.insertPerson(state)\n        .map(person => new personsActions.AddSuccessAction(person))\n        .catch(error => Observable.of(new personsActions.AddFailAction(error)));\n    })\n                        \n                    \n                    \n                        \n                            Decorators : Effect\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/effects/persons.effect.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPersonDetails$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getPersonDetails$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n    .ofType(personDetailsActions.ActionTypes.LOAD)\n    .map((action: personDetailsActions.LoadAction) => action.payload)\n    .switchMap(state => {\n      return this.personsApiClient.getPersonDetails(state)\n        .map(persons => new personDetailsActions.LoadSuccessAction(persons))\n        .catch(error  => Observable.of(new personDetailsActions.LoadFailAction()));\n    })\n                        \n                    \n                    \n                        \n                            Decorators : Effect\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/effects/persons.effect.ts:42\n                            \n                        \n\n                \n                    \n                        Person details\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPersons$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getPersons$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n    .ofType(personsActions.ActionTypes.LOAD)\n    .map((action: personsActions.LoadAction) => action.payload)\n    .switchMap(state => {\n      return this.personsApiClient.getPersons()\n        .map(persons => new personsActions.LoadSuccessAction(persons))\n        .catch(error  => Observable.of(new personsActions.LoadFailAction()));\n    })\n                        \n                    \n                    \n                        \n                            Decorators : Effect\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/effects/persons.effect.ts:29\n                            \n                        \n\n                \n                    \n                        Product list\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { RequestMethod } from '@angular/http';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/switchMap';\nimport { Injectable }             from '@angular/core';\nimport { Effect, Actions }        from '@ngrx/effects';\nimport { Action }                 from '@ngrx/store';\nimport { Observable }             from 'rxjs/Observable';\nimport { of }                     from 'rxjs/observable/of';\nimport { PersonsApiClient }      from '../../../persons/personsApiClient.service';\nimport * as personsActions       from '../actions/persons.action';\nimport * as personDetailsActions from '../actions/person-details.action';\nimport { Store }                  from '@ngrx/store';\nimport * as store                 from '../index';\nimport { Person }                from '../../models';\n\n@Injectable()\nexport class PersonsEffects {\n\n  constructor(\n    private actions$: Actions,\n    private personsApiClient: PersonsApiClient,\n    private appState$: Store) {}\n\n  /**\n   * Product list\n   */\n  @Effect()\n  getPersons$: Observable = this.actions$\n    .ofType(personsActions.ActionTypes.LOAD)\n    .map((action: personsActions.LoadAction) => action.payload)\n    .switchMap(state => {\n      return this.personsApiClient.getPersons()\n        .map(persons => new personsActions.LoadSuccessAction(persons))\n        .catch(error  => Observable.of(new personsActions.LoadFailAction()));\n    });\n\n  /**\n   * Person details\n   */\n  @Effect()\n  getPersonDetails$: Observable = this.actions$\n    .ofType(personDetailsActions.ActionTypes.LOAD)\n    .map((action: personDetailsActions.LoadAction) => action.payload)\n    .switchMap(state => {\n      return this.personsApiClient.getPersonDetails(state)\n        .map(persons => new personDetailsActions.LoadSuccessAction(persons))\n        .catch(error  => Observable.of(new personDetailsActions.LoadFailAction()));\n    });\n\n  // Addnew\n  @Effect()\n  addNewPerson$: Observable = this.actions$\n    .ofType(personsActions.ActionTypes.ADD_NEW)\n    .map((action: personsActions.AddNewAction) => action.payload)\n    .switchMap(state => {\n      return this.personsApiClient.insertPerson(state)\n        .map(person => new personsActions.AddSuccessAction(person))\n        .catch(error => Observable.of(new personsActions.AddFailAction(error)));\n    });\n\n  // UPDATE\n  // updatePerson$: Observable = this.actions$\n  // .ofType(personsActions.ActionTypes.UPDATE, personsActions.ActionTypes.UPDATE)\n  // .map((action: personsActions.UpdateAction) => action.payload)\n  // .switchMap((state, id) => {\n  //   return this.personsApiClient.updatePerson(id, state)\n  //   .map(person => new personsActions.UpdateSuccessAction(person))\n  //   .catch(error => Observable.of(new personsActions.UpdateFailAction(error)))\n  // })\n\n  // DELETE\n\n} \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PersonsModule.html":{"url":"modules/PersonsModule.html","title":"module - PersonsModule","body":"\n                   \n\n\n\n\n  Modules\n  PersonsModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PersonsModule\n\n\n\ncluster_PersonsModule_declarations\n\n\n\ncluster_PersonsModule_imports\n\n\n\ncluster_PersonsModule_providers\n\n\n\n\nPersonFormComponent\n\nPersonFormComponent\n\n\n\nPersonsModule\n\nPersonsModule\n\nPersonsModule -->\n\nPersonFormComponent->PersonsModule\n\n\n\n\n\nPersonListComponent\n\nPersonListComponent\n\nPersonsModule -->\n\nPersonListComponent->PersonsModule\n\n\n\n\n\nPersonsComponent\n\nPersonsComponent\n\nPersonsModule -->\n\nPersonsComponent->PersonsModule\n\n\n\n\n\nControlWebDavModule\n\nControlWebDavModule\n\nPersonsModule -->\n\nControlWebDavModule->PersonsModule\n\n\n\n\n\nDocumentGenerationModule\n\nDocumentGenerationModule\n\nPersonsModule -->\n\nDocumentGenerationModule->PersonsModule\n\n\n\n\n\nDocumentReportViewerModule\n\nDocumentReportViewerModule\n\nPersonsModule -->\n\nDocumentReportViewerModule->PersonsModule\n\n\n\n\n\nLayoutContainersModule\n\nLayoutContainersModule\n\nPersonsModule -->\n\nLayoutContainersModule->PersonsModule\n\n\n\n\n\nPersonsRoutingModule\n\nPersonsRoutingModule\n\nPersonsModule -->\n\nPersonsRoutingModule->PersonsModule\n\n\n\n\n\nPersonsApiClient\n\nPersonsApiClient\n\nPersonsModule -->\n\nPersonsApiClient->PersonsModule\n\n\n\n\n\nPersonsResolver\n\nPersonsResolver\n\nPersonsModule -->\n\nPersonsResolver->PersonsModule\n\n\n\n\n\nPersonsSandbox\n\nPersonsSandbox\n\nPersonsModule -->\n\nPersonsSandbox->PersonsModule\n\n\n\n\n\nPersonsService\n\nPersonsService\n\nPersonsModule -->\n\nPersonsService->PersonsModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/persons/persons.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                PersonFormComponent\n                            \n                            \n                                PersonListComponent\n                            \n                            \n                                PersonsComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     PersonsApiClient\n                            \n                            \n                                     PersonsResolver\n                            \n                            \n                                     PersonsSandbox\n                            \n                            \n                                     PersonsService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    ControlWebDavModule\n                            \n                            \n                                    DocumentGenerationModule\n                            \n                            \n                                    DocumentReportViewerModule\n                            \n                            \n                                    LayoutContainersModule\n                            \n                            \n                                    PersonsRoutingModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { ControlWebDavModule } from './../shared/components/control-web-dav/control-web-dav.module';\nimport { DocumentReportViewerModule } from './../shared/components/document-report-viewer/document-report-viewer.module';\nimport { DocumentGenerationModule } from './../shared/components/document-generation/document-generation.module';\nimport { DevExtremeModule } from 'devextreme-angular';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TranslateModule } from 'ng2-translate';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {\n  ReactiveFormsModule,\n  NG_VALIDATORS,\n  FormControl\n} from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { PersonsRoutingModule } from './persons-routing.module';\nimport { PersonsSandbox } from './persons.sandbox';\nimport { PersonsApiClient } from './personsApiClient.service';\nimport { PersonsService } from './persons.service';\nimport { PersonsResolver } from './persons.resolver';\n\n/**\n * Persons Modules\n */\nimport { ComponentsModule } from '../shared/components';\nimport { LayoutContainersModule } from '../shared/layouts/layout.module';\nimport { PersonFormComponent } from './person-form/person-form.component';\nimport { PersonListComponent } from './person-list/person-list.component';\nimport { PersonsComponent } from './person/person.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    DocumentGenerationModule,\n    DocumentReportViewerModule,\n    ControlWebDavModule,\n    ComponentsModule,\n    LayoutContainersModule,\n    DevExtremeModule,\n    TranslateModule,\n    ReactiveFormsModule,\n    RouterModule,\n    PersonsRoutingModule\n  ],\n  declarations: [\n    PersonsComponent,\n    PersonFormComponent,\n    PersonListComponent\n  ],\n  providers: [\n    PersonsSandbox,\n    PersonsService,\n    PersonsApiClient,\n    PersonsResolver\n  ],\n})\nexport class PersonsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PersonsResolver.html":{"url":"injectables/PersonsResolver.html","title":"injectable - PersonsResolver","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  PersonsResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/persons/persons.resolver.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                personsSandbox\n                            \n                            \n                                    Private\n                                personsSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(personsSandbox: PersonsSandbox)\n                    \n                \n                        \n                            \n                                Defined in src/app/persons/persons.resolver.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        personsSandbox\n                                                  \n                                                        \n                                                                    PersonsSandbox\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resolve\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        resolve(route: ActivatedRouteSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/persons/persons.resolver.ts:21\n                            \n                        \n\n\n                \n                    \n                            Triggered when application hits person details route.\nIt subscribes to person list data and finds one with id from the route params.  \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            personsSandbox\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        personsSandbox:     PersonsSandbox\n\n                    \n                \n                    \n                        \n                            Type :     PersonsSandbox\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/persons/persons.resolver.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            personsSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        personsSubscription:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/persons/persons.resolver.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable }       from '@angular/core';\nimport {\n  Resolve,\n  ActivatedRouteSnapshot\n}                           from '@angular/router';\nimport { PersonsSandbox }   from './persons.sandbox';\n\n@Injectable()\nexport class PersonsResolver implements Resolve {\n\n    private personsSubscription;\n\n    constructor(public personsSandbox: PersonsSandbox) { }\n\n    /**\n     * Triggered when application hits person details route.\n     * It subscribes to person list data and finds one with id from the route params.  \n     *\n     * @param route\n     */\n    public resolve(route: ActivatedRouteSnapshot) {\n        if (this.personsSubscription) return;\n\n        this.personsSubscription = this.personsSandbox.personDetails$.subscribe(person => {\n            if (!person) {\n                this.personsSandbox.loadPersonDetails(parseInt(route.params.id));\n                return;\n            }\n\n            this.personsSandbox.selectPerson(person);\n        });\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PersonsRoutingModule.html":{"url":"modules/PersonsRoutingModule.html","title":"module - PersonsRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  PersonsRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/persons/persons-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { PersonsComponent } from './person/person.component';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from '../shared/guards/auth.guard';\nimport { CanDeactivateGuard } from '../shared/guards/canDeactivate.guard';\nimport { PersonsResolver } from './persons.resolver';\nimport { AuthorizeGuard } from './../shared/authorize/authorize.guard';\n\nimport { PersonFormComponent } from './person-form/person-form.component';\nimport { PersonListComponent } from './person-list/person-list.component';\n\nconst personsRoutes: Routes = [\n    {\n        path: '',\n        component: PersonsComponent,\n        data: {\n            title: 'Persons Manager',\n            name: 'person-list',\n            roles: ['CtlPerson.mayInsert', 'CtlPerson.mayUpdate', 'CtlPerson.mayDelete']\n        },\n        canActivate: [AuthGuard, AuthorizeGuard],\n        children: [\n            { path: '', component: PersonListComponent },\n            { path: 'detail/:id', component: PersonFormComponent, resolve: { detail: PersonsResolver } }\n        ]\n    },\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forChild(personsRoutes)\n    ],\n    exports: [\n        RouterModule\n    ]\n})\nexport class PersonsRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PersonsSandbox.html":{"url":"injectables/PersonsSandbox.html","title":"injectable - PersonsSandbox","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  PersonsSandbox\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/persons/persons.sandbox.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                personAdded$\n                            \n                            \n                                    Public\n                                personDetails$\n                            \n                            \n                                    Public\n                                personDetailsLoading$\n                            \n                            \n                                    Public\n                                persons$\n                            \n                            \n                                    Public\n                                personsLoading$\n                            \n                            \n                                    Public\n                                statusAdding$\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createPerson\n                            \n                            \n                                    Public\n                                deletePersonItem\n                            \n                            \n                                    Public\n                                loadPersonDetails\n                            \n                            \n                                    Public\n                                loadPersons\n                            \n                            \n                                    Public\n                                notifyMessage\n                            \n                            \n                                    Private\n                                registerEvents\n                            \n                            \n                                    Public\n                                resetState\n                            \n                            \n                                    Public\n                                selectPerson\n                            \n                            \n                                    Public\n                                unregisterEvents\n                            \n                            \n                                    Public\n                                updateSelectedActions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(appState$: Store, personsApiClient: PersonsApiClient, utilService: UtilService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/persons/persons.sandbox.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        appState$\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        personsApiClient\n                                                  \n                                                        \n                                                                    PersonsApiClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        utilService\n                                                  \n                                                        \n                                                                    UtilService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            createPerson\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createPerson(person: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/persons/persons.sandbox.ts:56\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        person\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            deletePersonItem\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        deletePersonItem(person: Pick)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/persons/persons.sandbox.ts:76\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        person\n                                                        \n                                                                    Pick\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loadPersonDetails\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loadPersonDetails(id: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/persons/persons.sandbox.ts:51\n                            \n                        \n\n\n                \n                    \n                            Loads person details from the server\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loadPersons\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loadPersons()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/persons/persons.sandbox.ts:44\n                            \n                        \n\n\n                \n                    \n                            Loads persons from the server\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notifyMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        notifyMessage(messageTranslationCode: string, type: string, titleTranslationCode?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/persons/persons.sandbox.ts:91\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        messageTranslationCode\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        type\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                'info'\n                                                        \n\n                                                \n                                                \n                                                        titleTranslationCode\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            registerEvents\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        registerEvents()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/persons/persons.sandbox.ts:109\n                            \n                        \n\n\n                \n                    \n                            Subscribes to events\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resetState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        resetState()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/persons/persons.sandbox.ts:102\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selectPerson\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        selectPerson(person: Pick)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/persons/persons.sandbox.ts:63\n                            \n                        \n\n\n                \n                    \n                            Dispatches an action to select person details\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        person\n                                                        \n                                                                    Pick\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            unregisterEvents\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        unregisterEvents()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/persons/persons.sandbox.ts:98\n                            \n                        \n\n\n                \n                    \n                            Unsubscribes from events\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            updateSelectedActions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        updateSelectedActions(actions: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/persons/persons.sandbox.ts:87\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            personAdded$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        personAdded$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.appState$.select(store.getPersonAddNew)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/persons/persons.sandbox.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            personDetails$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        personDetails$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.appState$.select(store.getPersonDetailsData)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/persons/persons.sandbox.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            personDetailsLoading$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        personDetailsLoading$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.appState$.select(store.getPersonDetailsLoading)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/persons/persons.sandbox.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            persons$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        persons$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.appState$.select(store.getPersonsData)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/persons/persons.sandbox.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            personsLoading$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        personsLoading$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.appState$.select(store.getPersonsLoading)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/persons/persons.sandbox.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            statusAdding$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        statusAdding$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.appState$.select(store.getStatusAdding)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/persons/persons.sandbox.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscriptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscriptions:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/persons/persons.sandbox.ts:29\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Router } from '@angular/router';\nimport { PUT } from './../shared/asyncServices/http/http.decorator';\nimport { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Subscription } from 'rxjs/rx';\nimport { Sandbox } from '../shared/sandbox/base.sandbox';\nimport { PersonsApiClient } from './personsApiClient.service';\nimport * as store from '../shared/store';\nimport * as personsActions from '../shared/store/actions/persons.action';\nimport * as personDetailsActions from '../shared/store/actions/person-details.action';\nimport * as settingsActions from '../shared/store/actions/settings.action';\nimport {\n  Person,\n  User,\n  SelectedActionsModel\n} from '../shared/models';\nimport { UtilService } from '../shared/utility';\n\n@Injectable()\nexport class PersonsSandbox extends Sandbox {\n\n  public persons$ = this.appState$.select(store.getPersonsData);\n  public personsLoading$ = this.appState$.select(store.getPersonsLoading);\n  public personDetails$ = this.appState$.select(store.getPersonDetailsData);\n  public personDetailsLoading$ = this.appState$.select(store.getPersonDetailsLoading);\n  public personAdded$ = this.appState$.select(store.getPersonAddNew);\n  public statusAdding$ = this.appState$.select(store.getStatusAdding);\n\n  private subscriptions: Array = [];\n\n  constructor(\n    protected appState$: Store,\n    private personsApiClient: PersonsApiClient,\n    private utilService: UtilService,\n    private router: Router\n  ) {\n    super(appState$);\n    this.registerEvents();\n  }\n\n  /**\n* Loads persons from the server\n*/\n  public loadPersons(): void {\n    this.appState$.dispatch(new personsActions.LoadAction())\n  }\n\n  /**\n   * Loads person details from the server\n   */\n  public loadPersonDetails(id: any): void {\n    this.appState$.dispatch(new personDetailsActions.LoadAction(id))\n  }\n\n  // ADD NEW\n  public createPerson(person: any): void {\n    this.appState$.dispatch(new personsActions.AddNewAction(new Person(person)));\n  }\n\n  /**\n   * Dispatches an action to select person details\n   */\n  public selectPerson(person: Pick): void {\n    this.appState$.dispatch(new personDetailsActions.LoadSuccessAction(person));\n    if (person != null) {\n      localStorage.setItem('select:person', JSON.stringify(person));\n      const actions = new SelectedActionsModel();\n      actions.id = person.id;\n      actions.name = `${person.name}`;\n      actions.data = person;\n      actions.url = `persons/detail/${person.id}`;\n      this.updateSelectedActions(actions);\n    }\n  }\n\n  public deletePersonItem(person: Pick): void {\n    this.appState$.dispatch(new settingsActions.DeleteItemSelectedAction(person));\n    this.selectedAction$.subscribe(dossiers => {\n      if (dossiers.length === 0) {\n        localStorage.setItem('select:dossier', null);\n        localStorage.setItem('select:person', null);\n        this.router.navigate(['dossier']);\n      }\n    });\n  }\n\n  public updateSelectedActions(actions: any) {\n    this.appState$.dispatch(new settingsActions.UpdateSelectedAction(actions));\n  }\n\n  public notifyMessage(messageTranslationCode: string, type: string = 'info', titleTranslationCode?: string): any {\n    this.utilService.displayNotification(messageTranslationCode, type, titleTranslationCode);\n  }\n\n  /**\n   * Unsubscribes from events\n   */\n  public unregisterEvents() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  public resetState() {\n    this.appState$.dispatch(new personDetailsActions.ResetState());\n  }\n\n  /**\n   * Subscribes to events\n   */\n  private registerEvents(): void {\n    // Subscribes to culture\n    this.subscriptions.push(this.culture$.subscribe((culture: string) => this.culture = culture));\n\n    this.subscriptions.push(this.loggedUser$.subscribe((user: User) => {\n      // tslint:disable-next-line:curly\n      if (user.isLoggedIn) this.loadPersons();\n    }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PersonsService.html":{"url":"injectables/PersonsService.html","title":"injectable - PersonsService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  PersonsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/persons/persons.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                personsSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                deletePersonAdapter\n                            \n                            \n                                    Static\n                                gridAdapter\n                            \n                            \n                                    Static\n                                insertPersonAdapter\n                            \n                            \n                                    Static\n                                personDetailsAdapter\n                            \n                            \n                                    Static\n                                updatePersonAdapter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            deletePersonAdapter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        deletePersonAdapter(id: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/persons/persons.service.ts:55\n                            \n                        \n\n\n                \n                    \n                            Delete person  by id\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            gridAdapter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        gridAdapter(persons: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/persons/persons.service.ts:20\n                            \n                        \n\n\n                \n                    \n                            Transforms grid data persons recieved from the API into array of 'Person' instances\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        persons\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Array\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            insertPersonAdapter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        insertPersonAdapter(person: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/persons/persons.service.ts:47\n                            \n                        \n\n\n                \n                    \n                            Post new person \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        person\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                : Person\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Person\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            personDetailsAdapter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        personDetailsAdapter(person: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/persons/persons.service.ts:30\n                            \n                        \n\n\n                \n                    \n                            Transforms product details recieved from the API into instance of 'Product'\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        person\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            updatePersonAdapter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        updatePersonAdapter(id: any, person: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/persons/persons.service.ts:39\n                            \n                        \n\n\n                \n                    \n                            Update person \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                : number, \n\n                                                        \n                                                \n                                                \n                                                        person\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                : Person\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Person\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            personsSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        personsSubscription:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/persons/persons.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  Inject,\n  forwardRef\n} from '@angular/core';\nimport { Person } from '../shared/models';\nimport { PersonsSandbox } from './persons.sandbox';\nimport { Observable } from 'rxjs/Observable';\n\n@Injectable()\nexport class PersonsService {\n\n  private personsSubscription;\n\n  /**\n   * Transforms grid data persons recieved from the API into array of 'Person' instances\n   *\n   * @param persons\n   */\n  static gridAdapter(persons: any): Array {\n    console.log(persons);\n    return null;\n  }\n\n  /**\n   * Transforms product details recieved from the API into instance of 'Product'\n   *\n   * @param person\n   */\n  static personDetailsAdapter(person: any) {\n    return person;\n  }\n\n  /**\n   * Update person \n   * @param id: number, \n   * @param person: Person\n   */\n  static updatePersonAdapter(id: any, person: any): Person {\n    return person.map(person => new Person(person))[0];\n  }\n\n  /**\n   * Post new person \n   * @param person: Person\n   */\n  static insertPersonAdapter(person: any): Person {\n    return new Person(person);\n  }\n\n  /**\n   * Delete person  by id\n   * @param id\n   */\n  static deletePersonAdapter(id: number): any {\n    return id;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PipesModule.html":{"url":"modules/PipesModule.html","title":"module - PipesModule","body":"\n                   \n\n\n\n\n  Modules\n  PipesModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PipesModule\n\n\n\ncluster_PipesModule_declarations\n\n\n\ncluster_PipesModule_exports\n\n\n\n\nSanitizeHtmlPipe\n\nSanitizeHtmlPipe\n\n\n\nPipesModule\n\nPipesModule\n\nPipesModule -->\n\nSanitizeHtmlPipe->PipesModule\n\n\n\n\n\nSanitizeHtmlPipe \n\nSanitizeHtmlPipe \n\nSanitizeHtmlPipe  -->\n\nPipesModule->SanitizeHtmlPipe \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/pipes/index.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                SanitizeHtmlPipe\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    SanitizeHtmlPipe\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule }         from '@angular/core';\nimport { SanitizeHtmlPipe } from './sanitizeHtml.pipe';\n\nexport const PIPES = [\n  SanitizeHtmlPipe\n];\n\n@NgModule({\n  imports: [],\n  declarations: PIPES,\n  exports: PIPES\n})\nexport class PipesModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileBarComponent.html":{"url":"components/ProfileBarComponent.html","title":"component - ProfileBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProfileBarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/layouts/headers/profile-bar/profile-bar.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                profile-bar\n            \n\n            \n                styleUrls\n                profile-bar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./profile-bar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                userEmail\n                            \n                            \n                                userImage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/layouts/headers/profile-bar/profile-bar.component.ts:13\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        userEmail\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/layouts/headers/profile-bar/profile-bar.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        userImage\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/layouts/headers/profile-bar/profile-bar.component.ts:11\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        logout\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/layouts/headers/profile-bar/profile-bar.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n    \n        import { Component, Output, EventEmitter, ChangeDetectionStrategy, Input } from '@angular/core';\n\n@Component({\n  selector: 'profile-bar',\n  templateUrl: `./profile-bar.component.html`,\n  styleUrls: ['./profile-bar.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ProfileBarComponent {\n\n  @Input() userImage: string;\n  @Input() userEmail: string;\n  @Output() logout: EventEmitter = new EventEmitter();\n\n  constructor() { }\n}\n\n    \n\n    \n        \n    \n        \n            \n        \n        {{ userEmail }}\n        {{ 'ProfileActionBar.Logout' | translate }}\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{ userEmail }}        {{ \\'ProfileActionBar.Logout\\' | translate }}    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'body'},{'name': 'BreadCrumbComponent', 'selector': 'app-bread-crumb'},{'name': 'ControlWebDavComponent', 'selector': 'app-control-web-dav'},{'name': 'DocumentGenerationComponent', 'selector': 'app-document-generation'},{'name': 'DocumentReportViewerComponent', 'selector': 'app-document-report-viewer'},{'name': 'DossierDetailsComponent', 'selector': 'app-dossier-details'},{'name': 'DossierNavigatorComponent', 'selector': 'app-dossier-navigator'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HorizontalNavigationComponent', 'selector': 'kiss-menu-header'},{'name': 'LanguageSelectorComponent', 'selector': 'language-selector'},{'name': 'LayoutContainer', 'selector': 'app-layout'},{'name': 'LeftSidebarComponent', 'selector': 'app-left-sidebar'},{'name': 'LoginComponent', 'selector': 'login'},{'name': 'NavFiltersComponent', 'selector': 'dossier-nav-filters'},{'name': 'NotificationBoxComponent', 'selector': 'app-notification-box'},{'name': 'PageBadGatewayComponent', 'selector': 'page-gate-way'},{'name': 'PageContentComponent', 'selector': 'page-content'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PersonFormComponent', 'selector': 'app-person-form'},{'name': 'PersonListComponent', 'selector': 'app-person-list'},{'name': 'PersonsComponent', 'selector': 'app-person'},{'name': 'ProfileBarComponent', 'selector': 'profile-bar'},{'name': 'ReportViewerComponent', 'selector': 'app-report-viewer'},{'name': 'SearchBoxComponent', 'selector': 'kiss-search-box'},{'name': 'SelectedActionsComponent', 'selector': 'app-selected-actions'},{'name': 'SpinnerComponent', 'selector': 'spinner'},{'name': 'ToolbarsComponent', 'selector': 'app-toolbars'},{'name': 'TreeDetailComponent', 'selector': 'app-tree-detail'},{'name': 'TreeListComponent', 'selector': 'app-tree-list'}];\n    var DIRECTIVES = [{'name': 'AuthorizeDirective', 'selector': '[appAuthorize]'},{'name': 'DynamicTabsDirective', 'selector': '[dynamic-tabs]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProfileBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoveUserAction.html":{"url":"classes/RemoveUserAction.html","title":"class - RemoveUserAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoveUserAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/store/actions/auth.action.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/store/actions/auth.action.ts:71\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/actions/auth.action.ts:73\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : ActionTypes.REMOVE_USER\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/actions/auth.action.ts:71\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport {\n  LoginForm\n}                 from '../../models';\nimport { type }   from '../../utility';\n\nexport const ActionTypes = {\n  DO_LOGIN:                  type('[Auth] Do Login'),\n  DO_LOGIN_SUCCESS:          type('[Auth] Do Login Success'),\n  DO_LOGIN_FAIL:             type('[Auth] Do Login Fail'),\n  DO_LOGOUT:                 type('[Auth] Do Logout'),\n  DO_LOGOUT_SUCCESS:         type('[Auth] Do Logout Success'),\n  DO_LOGOUT_FAIL:            type('[Auth] Do Logout Fail'),\n  ADD_USER:                  type('[Auth] Add user'),\n  REMOVE_USER:               type('[Auth] Remove user')\n};\n\n/**\n * Login Actions\n */\nexport class DoLoginAction implements Action {\n  type = ActionTypes.DO_LOGIN;\n\n  constructor(public payload: LoginForm) { }\n}\n\nexport class DoLoginSuccessAction implements Action {\n  type = ActionTypes.DO_LOGIN_SUCCESS;\n\n  constructor(public payload: any) { }\n}\n\nexport class DoLoginFailAction implements Action {\n  type = ActionTypes.DO_LOGIN_FAIL;\n\n  constructor(public payload: any = null) { }\n}\n\n/**\n * Logout Actions\n */\nexport class DoLogoutAction implements Action {\n  type = ActionTypes.DO_LOGOUT;\n\n  constructor(public payload: any = null) { }\n}\n\nexport class DoLogoutSuccessAction implements Action {\n  type = ActionTypes.DO_LOGOUT_SUCCESS;\n\n  constructor(public payload: any = null) { }\n}\n\nexport class DoLogoutFailAction implements Action {\n  type = ActionTypes.DO_LOGOUT_FAIL;\n\n  constructor(public payload: any = null) { }\n}\n\n\n/**\n * User Actions\n */\nexport class AddUserAction implements Action {\n  type = ActionTypes.ADD_USER;\n\n  constructor(public payload: any) { }\n}\n\nexport class RemoveUserAction implements Action {\n  type = ActionTypes.REMOVE_USER;\n\n  constructor(public payload: any) { }\n}\n\nexport type Actions\n  = DoLoginAction\n  | DoLoginSuccessAction\n  | DoLoginFailAction\n  | DoLogoutAction\n  | DoLogoutSuccessAction\n  | DoLogoutFailAction\n  | AddUserAction\n  | RemoveUserAction;\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ReportService.html":{"url":"injectables/ReportService.html","title":"injectable - ReportService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ReportService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/components/document-report-viewer/report.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                errorHandler\n                            \n                            \n                                getReportViewer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/document-report-viewer/report.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorHandler\n                            \n                            \n                        \n                    \n                \n                \n                    \nerrorHandler(error: HttpErrorResponse)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/components/document-report-viewer/report.service.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    HttpErrorResponse\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getReportViewer\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetReportViewer()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/components/document-report-viewer/report.service.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable>\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _url\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _url:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '/assets/data/test_report.json'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/document-report-viewer/report.service.ts:7\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs/Observable';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ReportService {\n    private _url = '/assets/data/test_report.json';\n\n    constructor(private http: HttpClient) { }\n\n    getReportViewer(): Observable> {\n        return this.http.get>(this._url)\n            .catch(this.errorHandler);\n    }\n\n    errorHandler(error: HttpErrorResponse) {\n        return Observable.throw(error.message || 'Server Error');\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ReportViewerComponent.html":{"url":"components/ReportViewerComponent.html","title":"component - ReportViewerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ReportViewerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/document-report-viewer/report-viewer/report-viewer.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-report-viewer\n            \n\n            \n                styleUrls\n                report-viewer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./report-viewer.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onDocClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                contextValues\n                            \n                            \n                                displayStyle\n                            \n                            \n                                displayText\n                            \n                            \n                                queryName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onClickEvent\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/document-report-viewer/report-viewer/report-viewer.component.ts:14\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        contextValues\n                    \n                    \n                            \n                            Type:    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/document-report-viewer/report-viewer/report-viewer.component.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        displayStyle\n                    \n                    \n                            \n                            Type:    any\n\n                            \n                        \n                            Default value: 'btn btn-default'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/document-report-viewer/report-viewer/report-viewer.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        displayText\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/document-report-viewer/report-viewer/report-viewer.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        queryName\n                    \n                    \n                            \n                            Type:    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/document-report-viewer/report-viewer/report-viewer.component.ts:13\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onClickEvent\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/document-report-viewer/report-viewer/report-viewer.component.ts:14\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onDocClick\n                            \n                            \n                        \n                    \n                \n                \n                    \nonDocClick(report: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/components/document-report-viewer/report-viewer/report-viewer.component.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        report\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-report-viewer',\n  templateUrl: './report-viewer.component.html',\n  styleUrls: ['./report-viewer.component.scss']\n})\nexport class ReportViewerComponent {\n\n  @Input() contextValues: any;\n  @Input() displayText: string;\n  @Input() displayStyle: any = 'btn btn-default';\n  @Input() queryName: any;\n  @Output() onClickEvent: EventEmitter = new EventEmitter();\n\n  constructor() { }\n\n  onDocClick(report) {\n    if (report === undefined || !report) { return; }\n    // console.log('documents log: ', documents);\n    this.onClickEvent.emit(report);\n  }\n}\n\n    \n\n    \n        {{ displayText }}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ displayText }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'body'},{'name': 'BreadCrumbComponent', 'selector': 'app-bread-crumb'},{'name': 'ControlWebDavComponent', 'selector': 'app-control-web-dav'},{'name': 'DocumentGenerationComponent', 'selector': 'app-document-generation'},{'name': 'DocumentReportViewerComponent', 'selector': 'app-document-report-viewer'},{'name': 'DossierDetailsComponent', 'selector': 'app-dossier-details'},{'name': 'DossierNavigatorComponent', 'selector': 'app-dossier-navigator'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HorizontalNavigationComponent', 'selector': 'kiss-menu-header'},{'name': 'LanguageSelectorComponent', 'selector': 'language-selector'},{'name': 'LayoutContainer', 'selector': 'app-layout'},{'name': 'LeftSidebarComponent', 'selector': 'app-left-sidebar'},{'name': 'LoginComponent', 'selector': 'login'},{'name': 'NavFiltersComponent', 'selector': 'dossier-nav-filters'},{'name': 'NotificationBoxComponent', 'selector': 'app-notification-box'},{'name': 'PageBadGatewayComponent', 'selector': 'page-gate-way'},{'name': 'PageContentComponent', 'selector': 'page-content'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PersonFormComponent', 'selector': 'app-person-form'},{'name': 'PersonListComponent', 'selector': 'app-person-list'},{'name': 'PersonsComponent', 'selector': 'app-person'},{'name': 'ProfileBarComponent', 'selector': 'profile-bar'},{'name': 'ReportViewerComponent', 'selector': 'app-report-viewer'},{'name': 'SearchBoxComponent', 'selector': 'kiss-search-box'},{'name': 'SelectedActionsComponent', 'selector': 'app-selected-actions'},{'name': 'SpinnerComponent', 'selector': 'spinner'},{'name': 'ToolbarsComponent', 'selector': 'app-toolbars'},{'name': 'TreeDetailComponent', 'selector': 'app-tree-detail'},{'name': 'TreeListComponent', 'selector': 'app-tree-list'}];\n    var DIRECTIVES = [{'name': 'AuthorizeDirective', 'selector': '[appAuthorize]'},{'name': 'DynamicTabsDirective', 'selector': '[dynamic-tabs]'}];\n    var ACTUAL_COMPONENT = {'name': 'ReportViewerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResetState.html":{"url":"classes/ResetState.html","title":"class - ResetState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResetState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/store/actions/dossier.action.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/store/actions/dossier.action.ts:50\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/actions/dossier.action.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : ActionTypes.RESET_STATE\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/actions/dossier.action.ts:50\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { DossierNavigatorTreeModel as TreesModel, DossierFilterModel } from '../../models';\nimport { type } from '../../utility';\n\nexport const ActionTypes = {\n  // Actions Load data\n  LOAD: type('[Dossier nav Trees] Load'),\n  LOAD_SUCCESS: type('[Dossier nav Trees] Load Success'),\n  LOAD_FAIL: type('[Dossier nav Trees] Load Fail'),\n  GET_TREE_DETAIL: type('[GET_TREE_DETAIL] load'),\n  RESET_STATE: type('[RESET_STATE] reset state for dossier')\n};\n\nexport const SetVisibilityFilter = {\n  // Action set filter\n  ACTIVE: type('[SET_VISIBILITY_FILTER] --- Aktiv'),\n  CLOSED: type('[SET_VISIBILITY_FILTER] --- Closed'),\n  ARCHIVED: type('[SET_VISIBILITY_FILTER] --- Archived'),\n  INCLUDE_GROUP: type('[SET_VISIBILITY_FILTER] --- IncludeGroup'),\n  INCLUDE_GUEST: type('[SET_VISIBILITY_FILTER] --- IncludeGuest'),\n  INCLUDE_TASKS: type('[SET_VISIBILITY_FILTER] --- IncludeTasks'),\n};\n\n/**\n * Dossier nav Trees Action\n */\n\nexport class LoadAction implements Action {\n  type = ActionTypes.LOAD;\n  constructor(public payload: DossierFilterModel) { }\n}\n\nexport class LoadSuccessAction implements Action {\n  type = ActionTypes.LOAD_SUCCESS;\n  constructor(public payload: Array) { }\n}\n\nexport class LoadFailAction implements Action {\n  type = ActionTypes.LOAD_FAIL;\n  constructor(public payload: any = null) { }\n}\n\nexport class GetTreeDetailAction implements Action {\n  type = ActionTypes.GET_TREE_DETAIL;\n\n  constructor(public payload: any) { }\n}\n\nexport class ResetState implements Action {\n  type = ActionTypes.RESET_STATE;\n  constructor(public payload: any = null) { }\n}\n\n/**\n * ------------------------------------\n * Set Visibility dossier Filter Action\n * @param payload: DossierFilterModel\n * ------------------------------------\n*/\n\nexport namespace SetVisibilityFilterAction {\n  export class SetActiveAction implements Action {\n    type = SetVisibilityFilter.ACTIVE;\n    constructor(public payload?: DossierFilterModel) { }\n  }\n  export class SetClosedAction implements Action {\n    type = SetVisibilityFilter.CLOSED;\n    constructor(public payload?: DossierFilterModel) { }\n  }\n  export class SetArchivedAction implements Action {\n    type = SetVisibilityFilter.ARCHIVED;\n    constructor(public payload?: DossierFilterModel) { }\n  }\n  export class SetIncludeGroupAction implements Action {\n    type = SetVisibilityFilter.INCLUDE_GROUP;\n    constructor(public payload?: DossierFilterModel) { }\n  }\n  export class SetIncludeGuestAction implements Action {\n    type = SetVisibilityFilter.INCLUDE_GUEST;\n    constructor(public payload?: DossierFilterModel) { }\n  }\n  export class SetIncludeTasksAction implements Action {\n    type = SetVisibilityFilter.INCLUDE_TASKS;\n    constructor(public payload?: DossierFilterModel) { }\n  }\n}\n\n\nexport type Actions\n  = LoadAction\n  | LoadSuccessAction\n  | LoadFailAction\n  | GetTreeDetailAction\n  | ResetState;\n\nexport type FiltersAction\n  = SetVisibilityFilterAction.SetActiveAction\n  | SetVisibilityFilterAction.SetClosedAction\n  | SetVisibilityFilterAction.SetArchivedAction\n  | SetVisibilityFilterAction.SetIncludeGroupAction\n  | SetVisibilityFilterAction.SetIncludeGuestAction\n  | SetVisibilityFilterAction.SetIncludeTasksAction;\n\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Sandbox.html":{"url":"classes/Sandbox.html","title":"class - Sandbox","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Sandbox\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/sandbox/base.sandbox.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                availableRoles$\n                            \n                            \n                                    Public\n                                culture\n                            \n                            \n                                    Public\n                                culture$\n                            \n                            \n                                    Public\n                                loggedUser$\n                            \n                            \n                                    Public\n                                selectedAction$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                formatDate\n                            \n                            \n                                    Public\n                                loadUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(appState$: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/sandbox/base.sandbox.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        appState$\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            availableRoles$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        availableRoles$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.appState$.select(store.getAvailableRoles)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/sandbox/base.sandbox.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            culture\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        culture:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/sandbox/base.sandbox.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            culture$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        culture$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.appState$.select(store.getSelectedCulture)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/sandbox/base.sandbox.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loggedUser$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loggedUser$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.appState$.select(store.getLoggedUser)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/sandbox/base.sandbox.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selectedAction$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedAction$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.appState$.select(store.getSelectedActions)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/sandbox/base.sandbox.ts:15\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            formatDate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        formatDate(value: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/sandbox/base.sandbox.ts:32\n                            \n                        \n\n\n                \n                    \n                            Formats date string based on selected culture\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loadUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loadUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/sandbox/base.sandbox.ts:22\n                            \n                        \n\n\n                \n                    \n                            Pulls user from local storage and saves it to the store\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs/Observable';\nimport * as store from '../store';\nimport * as authActions from '../store/actions/auth.action';\nimport { User } from '../models';\nimport { localeDateString } from '../utility';\n\nexport abstract class Sandbox {\n\n  public loggedUser$: Observable = this.appState$.select(store.getLoggedUser);\n  public culture$: Observable = this.appState$.select(store.getSelectedCulture);\n  public culture: string;\n  public availableRoles$: Observable = this.appState$.select(store.getAvailableRoles);\n  public selectedAction$: Observable = this.appState$.select(store.getSelectedActions);\n\n  constructor(protected appState$: Store) { }\n\n  /**\n   * Pulls user from local storage and saves it to the store\n   */\n  public loadUser(): void {\n    const user = JSON.parse(localStorage.getItem('currentUser'));\n    this.appState$.dispatch(new authActions.AddUserAction(new User(user)));\n  }\n\n  /**\n   * Formats date string based on selected culture\n   * \n   * @param value\n   */\n  public formatDate(value: string) {\n    return localeDateString(value, this.culture);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/SanitizeHtmlPipe.html":{"url":"pipes/SanitizeHtmlPipe.html","title":"pipe - SanitizeHtmlPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  SanitizeHtmlPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/pipes/sanitizeHtml.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        sanitizeHtml\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(v: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/pipes/sanitizeHtml.pipe.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        v\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     SafeHtml\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {\n\tPipe,\n\tPipeTransform\n} \t\t\t\t\t\t\tfrom '@angular/core';\nimport {\n\tDomSanitizer,\n\tSafeHtml\n}    \t\t\t\t\t\tfrom '@angular/platform-browser';\n\n@Pipe({\n  name: 'sanitizeHtml'\n})\nexport class SanitizeHtmlPipe implements PipeTransform  {\n  constructor(private sanitizer: DomSanitizer){}  \n\n  transform(v: string) : SafeHtml {\n    return this.sanitizer.bypassSecurityTrustHtml(v); \n  } \n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchBoxComponent.html":{"url":"components/SearchBoxComponent.html","title":"component - SearchBoxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SearchBoxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/layouts/headers/search-box/search-box.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                kiss-search-box\n            \n\n            \n                styleUrls\n                search-box.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./search-box.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                searchBoxsData\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        searchBoxsData\n                    \n                    \n                            \n                            Type:    Array\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/layouts/headers/search-box/search-box.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import {\n    Component,\n    Output,\n    Input,\n    EventEmitter,\n    ChangeDetectionStrategy\n} from '@angular/core';\n\n@Component({\n    selector: 'kiss-search-box',\n    templateUrl: './search-box.component.html',\n    styleUrls: ['./search-box.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SearchBoxComponent {\n    @Input() searchBoxsData: Array;\n}\n\n    \n\n    \n        \n    \n        \n            \n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'body'},{'name': 'BreadCrumbComponent', 'selector': 'app-bread-crumb'},{'name': 'ControlWebDavComponent', 'selector': 'app-control-web-dav'},{'name': 'DocumentGenerationComponent', 'selector': 'app-document-generation'},{'name': 'DocumentReportViewerComponent', 'selector': 'app-document-report-viewer'},{'name': 'DossierDetailsComponent', 'selector': 'app-dossier-details'},{'name': 'DossierNavigatorComponent', 'selector': 'app-dossier-navigator'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HorizontalNavigationComponent', 'selector': 'kiss-menu-header'},{'name': 'LanguageSelectorComponent', 'selector': 'language-selector'},{'name': 'LayoutContainer', 'selector': 'app-layout'},{'name': 'LeftSidebarComponent', 'selector': 'app-left-sidebar'},{'name': 'LoginComponent', 'selector': 'login'},{'name': 'NavFiltersComponent', 'selector': 'dossier-nav-filters'},{'name': 'NotificationBoxComponent', 'selector': 'app-notification-box'},{'name': 'PageBadGatewayComponent', 'selector': 'page-gate-way'},{'name': 'PageContentComponent', 'selector': 'page-content'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PersonFormComponent', 'selector': 'app-person-form'},{'name': 'PersonListComponent', 'selector': 'app-person-list'},{'name': 'PersonsComponent', 'selector': 'app-person'},{'name': 'ProfileBarComponent', 'selector': 'profile-bar'},{'name': 'ReportViewerComponent', 'selector': 'app-report-viewer'},{'name': 'SearchBoxComponent', 'selector': 'kiss-search-box'},{'name': 'SelectedActionsComponent', 'selector': 'app-selected-actions'},{'name': 'SpinnerComponent', 'selector': 'spinner'},{'name': 'ToolbarsComponent', 'selector': 'app-toolbars'},{'name': 'TreeDetailComponent', 'selector': 'app-tree-detail'},{'name': 'TreeListComponent', 'selector': 'app-tree-list'}];\n    var DIRECTIVES = [{'name': 'AuthorizeDirective', 'selector': '[appAuthorize]'},{'name': 'DynamicTabsDirective', 'selector': '[dynamic-tabs]'}];\n    var ACTUAL_COMPONENT = {'name': 'SearchBoxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SearchBoxDatasEffects.html":{"url":"injectables/SearchBoxDatasEffects.html","title":"injectable - SearchBoxDatasEffects","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  SearchBoxDatasEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/store/effects/search-box.effect.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getSearchBoxDatas$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, appState$: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/store/effects/search-box.effect.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        appState$\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getSearchBoxDatas$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getSearchBoxDatas$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n    .ofType(SearchBoxActions.ActionTypes.LOAD)\n    .map((action: SearchBoxActions.LoadAction) => action.payload)\n    .switchMap(state => {\n      return Observable.of(SearchBoxsMock)\n        .map(datas => new SearchBoxActions.LoadSuccessAction(datas))\n        .catch(error  => Observable.of(new SearchBoxActions.LoadFailAction()));\n    })\n                        \n                    \n                    \n                        \n                            Decorators : Effect\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/effects/search-box.effect.ts:28\n                            \n                        \n\n                \n                    \n                        Menus list\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { getMenusData } from './../index';\n\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/switchMap';\nimport { Injectable }             from '@angular/core';\nimport { Effect, Actions }        from '@ngrx/effects';\nimport { Action }                 from '@ngrx/store';\nimport { Observable }             from 'rxjs/Observable';\nimport { of }                     from 'rxjs/observable/of';\nimport * as SearchBoxActions      from '../actions/search-box.action';\nimport { Store }                  from '@ngrx/store';\nimport * as store                 from '../index';\nimport { SearchBoxModel }         from '../../models';\nimport { SearchBoxsMock } from '../../mocks';\n\n@Injectable()\nexport class SearchBoxDatasEffects {\n\n  constructor(\n    private actions$: Actions,\n    private appState$: Store) {}\n\n  /**\n   * Menus list\n   */\n  @Effect()\n  getSearchBoxDatas$: Observable = this.actions$\n    .ofType(SearchBoxActions.ActionTypes.LOAD)\n    .map((action: SearchBoxActions.LoadAction) => action.payload)\n    .switchMap(state => {\n      return Observable.of(SearchBoxsMock)\n        .map(datas => new SearchBoxActions.LoadSuccessAction(datas))\n        .catch(error  => Observable.of(new SearchBoxActions.LoadFailAction()));\n    });\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SearchBoxModel.html":{"url":"classes/SearchBoxModel.html","title":"class - SearchBoxModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  SearchBoxModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/shared/search-box.model.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ISearchBoxModel\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                GroupName\n                            \n                            \n                                    Optional\n                                IconNameDX\n                            \n                            \n                                    Optional\n                                IconSrc\n                            \n                            \n                                ID\n                            \n                            \n                                Name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data?: ISearchBoxModel)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/models/shared/search-box.model.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    ISearchBoxModel\n                                                        \n                                                  \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            GroupName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        GroupName:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/shared/search-box.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            IconNameDX\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        IconNameDX:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/shared/search-box.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            IconSrc\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        IconSrc:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/shared/search-box.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ID\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ID:     any | undefined\n\n                    \n                \n                    \n                        \n                            Type :     any | undefined\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/shared/search-box.model.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        Name:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/shared/search-box.model.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SearchBoxModel implements ISearchBoxModel {\n    ID: any | undefined;\n    Name: any;\n    GroupName: any;\n    IconNameDX?: any;\n    IconSrc?: any;\n\n    constructor(data?: ISearchBoxModel) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (this)[property] = (data)[property];\n            }\n        }\n    }\n}\n\nexport interface ISearchBoxModel {\n    ID: any | undefined;\n    Name: any;\n    GroupName: any;\n    IconNameDX?: any;\n    IconSrc?: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SelectAction.html":{"url":"classes/SelectAction.html","title":"class - SelectAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  SelectAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/store/actions/menus.action.ts\n        \n\n            \n                Description\n            \n            \n                Menu Action\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/store/actions/menus.action.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/actions/menus.action.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : ActionTypes.SELECT\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/actions/menus.action.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { MenuModel } from '../../models';\nimport { type } from '../../utility';\n\nexport const ActionTypes = {\n  SELECT: type('[Menus] select'),\n  AVAIABLE_MENU: type('[Menu] udpates AVAIABLE_MENU'),\n  LOAD: type('[Menus] Load'),\n  LOAD_SUCCESS: type('[Menus] Load Success'),\n  LOAD_FAIL: type('[Menus] Load Fail')\n};\n\n/**\n * Menu Action\n */\nexport class SelectAction implements Action {\n  type = ActionTypes.SELECT;\n\n  constructor(public payload: any) { }\n}\n\nexport class SetAvaiableMenu implements Action {\n  type = ActionTypes.AVAIABLE_MENU;\n\n  constructor(public payload: any) { }\n}\n\nexport class LoadAction implements Action {\n  type = ActionTypes.LOAD;\n\n  constructor(public payload: any = null) { }\n}\n\nexport class LoadSuccessAction implements Action {\n  type = ActionTypes.LOAD_SUCCESS;\n\n  constructor(public payload: Array) { }\n}\n\nexport class LoadFailAction implements Action {\n  type = ActionTypes.LOAD_FAIL;\n\n  constructor(public payload: any = null) { }\n}\n\nexport type Actions\n  = SelectAction\n  | SetAvaiableMenu\n  | LoadAction\n  | LoadSuccessAction\n  | LoadFailAction;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SelectedActionsComponent.html":{"url":"components/SelectedActionsComponent.html","title":"component - SelectedActionsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SelectedActionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/layouts/left-sidebars/selected-actions/selected-actions.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-selected-actions\n            \n\n            \n                styleUrls\n                selected-actions.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./selected-actions.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allowDeleting\n                            \n                            \n                                deleteType\n                            \n                            \n                                height\n                            \n                            \n                                iconUrl\n                            \n                            \n                                selectionMode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onClickItem\n                            \n                            \n                                onDeleteItem\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectedActions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onDeleteClick\n                            \n                            \n                                onItemClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/layouts/left-sidebars/selected-actions/selected-actions.component.ts:20\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        selectedActions\n                    \n                    \n                            \n                            Type:    Array\n\n                            \n                        \n                            Default value: []\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/layouts/left-sidebars/selected-actions/selected-actions.component.ts:18\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onDeleteClick\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/layouts/left-sidebars/selected-actions/selected-actions.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onItemClick\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/layouts/left-sidebars/selected-actions/selected-actions.component.ts:19\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/layouts/left-sidebars/selected-actions/selected-actions.component.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onClickItem\n                            \n                            \n                        \n                    \n                \n                \n                    \nonClickItem(e: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/layouts/left-sidebars/selected-actions/selected-actions.component.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onDeleteItem\n                            \n                            \n                        \n                    \n                \n                \n                    \nonDeleteItem(e: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/layouts/left-sidebars/selected-actions/selected-actions.component.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allowDeleting\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        allowDeleting:     Boolean\n\n                    \n                \n                    \n                        \n                            Type :     Boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/layouts/left-sidebars/selected-actions/selected-actions.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        deleteType:     String\n\n                    \n                \n                    \n                        \n                            Type :     String\n\n                        \n                    \n                    \n                        \n                            Default value : 'static'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/layouts/left-sidebars/selected-actions/selected-actions.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            height\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        height:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : 'auto'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/layouts/left-sidebars/selected-actions/selected-actions.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            iconUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        iconUrl:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : 'assets/icon/'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/layouts/left-sidebars/selected-actions/selected-actions.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectionMode\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectionMode:     String\n\n                    \n                \n                    \n                        \n                            Type :     String\n\n                        \n                    \n                    \n                        \n                            Default value : 'single'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/layouts/left-sidebars/selected-actions/selected-actions.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ChangeDetectionStrategy, ViewChild, Input, EventEmitter, Output } from '@angular/core';\nimport { DxTreeViewComponent } from 'devextreme-angular';\n\n@Component({\n  selector: 'app-selected-actions',\n  templateUrl: './selected-actions.component.html',\n  styleUrls: ['./selected-actions.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SelectedActionsComponent implements OnInit {\n\n  allowDeleting: Boolean = true;\n  deleteType: String = 'static';\n  selectionMode: String = 'single';\n  height: any = 'auto';\n  iconUrl: any = 'assets/icon/';\n\n  @Input() selectedActions: Array = [];\n  @Output() onItemClick: EventEmitter = new EventEmitter();\n  @Output() onDeleteClick: EventEmitter = new EventEmitter();\n\n  constructor() {\n  }\n\n  ngOnInit() {\n    console.log(this.selectedActions);\n  }\n\n  onClickItem(e: any): void {\n    console.log(e);\n    this.onItemClick.emit(e);\n  }\n\n  onDeleteItem(e: any): void {\n    this.onDeleteClick.emit(e);\n  }\n}\n\n    \n\n    \n         0)\">\n  \n    \n          \n              \n                  \n                {{ data.name }}\n                (w 44)\n              \n          \n      \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' 0)\">                                                                {{ data.name }}                (w 44)                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'body'},{'name': 'BreadCrumbComponent', 'selector': 'app-bread-crumb'},{'name': 'ControlWebDavComponent', 'selector': 'app-control-web-dav'},{'name': 'DocumentGenerationComponent', 'selector': 'app-document-generation'},{'name': 'DocumentReportViewerComponent', 'selector': 'app-document-report-viewer'},{'name': 'DossierDetailsComponent', 'selector': 'app-dossier-details'},{'name': 'DossierNavigatorComponent', 'selector': 'app-dossier-navigator'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HorizontalNavigationComponent', 'selector': 'kiss-menu-header'},{'name': 'LanguageSelectorComponent', 'selector': 'language-selector'},{'name': 'LayoutContainer', 'selector': 'app-layout'},{'name': 'LeftSidebarComponent', 'selector': 'app-left-sidebar'},{'name': 'LoginComponent', 'selector': 'login'},{'name': 'NavFiltersComponent', 'selector': 'dossier-nav-filters'},{'name': 'NotificationBoxComponent', 'selector': 'app-notification-box'},{'name': 'PageBadGatewayComponent', 'selector': 'page-gate-way'},{'name': 'PageContentComponent', 'selector': 'page-content'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PersonFormComponent', 'selector': 'app-person-form'},{'name': 'PersonListComponent', 'selector': 'app-person-list'},{'name': 'PersonsComponent', 'selector': 'app-person'},{'name': 'ProfileBarComponent', 'selector': 'profile-bar'},{'name': 'ReportViewerComponent', 'selector': 'app-report-viewer'},{'name': 'SearchBoxComponent', 'selector': 'kiss-search-box'},{'name': 'SelectedActionsComponent', 'selector': 'app-selected-actions'},{'name': 'SpinnerComponent', 'selector': 'spinner'},{'name': 'ToolbarsComponent', 'selector': 'app-toolbars'},{'name': 'TreeDetailComponent', 'selector': 'app-tree-detail'},{'name': 'TreeListComponent', 'selector': 'app-tree-list'}];\n    var DIRECTIVES = [{'name': 'AuthorizeDirective', 'selector': '[appAuthorize]'},{'name': 'DynamicTabsDirective', 'selector': '[dynamic-tabs]'}];\n    var ACTUAL_COMPONENT = {'name': 'SelectedActionsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SelectedActionsModel.html":{"url":"classes/SelectedActionsModel.html","title":"class - SelectedActionsModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  SelectedActionsModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/shared/selectedActions.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        data:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/shared/selectedActions.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/shared/selectedActions.model.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/shared/selectedActions.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        url:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/shared/selectedActions.model.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SelectedActionsModel {\n    id: any;\n    url: any;\n    name: any;\n    data: any;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetActiveAction.html":{"url":"classes/SetActiveAction.html","title":"class - SetActiveAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetActiveAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/store/actions/dossier.action.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                payload\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload?: DossierFilterModel)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/store/actions/dossier.action.ts:63\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    DossierFilterModel\n                                                        \n                                                  \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     DossierFilterModel\n\n                    \n                \n                    \n                        \n                            Type :     DossierFilterModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/actions/dossier.action.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SetVisibilityFilter.ACTIVE\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/actions/dossier.action.ts:63\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { DossierNavigatorTreeModel as TreesModel, DossierFilterModel } from '../../models';\nimport { type } from '../../utility';\n\nexport const ActionTypes = {\n  // Actions Load data\n  LOAD: type('[Dossier nav Trees] Load'),\n  LOAD_SUCCESS: type('[Dossier nav Trees] Load Success'),\n  LOAD_FAIL: type('[Dossier nav Trees] Load Fail'),\n  GET_TREE_DETAIL: type('[GET_TREE_DETAIL] load'),\n  RESET_STATE: type('[RESET_STATE] reset state for dossier')\n};\n\nexport const SetVisibilityFilter = {\n  // Action set filter\n  ACTIVE: type('[SET_VISIBILITY_FILTER] --- Aktiv'),\n  CLOSED: type('[SET_VISIBILITY_FILTER] --- Closed'),\n  ARCHIVED: type('[SET_VISIBILITY_FILTER] --- Archived'),\n  INCLUDE_GROUP: type('[SET_VISIBILITY_FILTER] --- IncludeGroup'),\n  INCLUDE_GUEST: type('[SET_VISIBILITY_FILTER] --- IncludeGuest'),\n  INCLUDE_TASKS: type('[SET_VISIBILITY_FILTER] --- IncludeTasks'),\n};\n\n/**\n * Dossier nav Trees Action\n */\n\nexport class LoadAction implements Action {\n  type = ActionTypes.LOAD;\n  constructor(public payload: DossierFilterModel) { }\n}\n\nexport class LoadSuccessAction implements Action {\n  type = ActionTypes.LOAD_SUCCESS;\n  constructor(public payload: Array) { }\n}\n\nexport class LoadFailAction implements Action {\n  type = ActionTypes.LOAD_FAIL;\n  constructor(public payload: any = null) { }\n}\n\nexport class GetTreeDetailAction implements Action {\n  type = ActionTypes.GET_TREE_DETAIL;\n\n  constructor(public payload: any) { }\n}\n\nexport class ResetState implements Action {\n  type = ActionTypes.RESET_STATE;\n  constructor(public payload: any = null) { }\n}\n\n/**\n * ------------------------------------\n * Set Visibility dossier Filter Action\n * @param payload: DossierFilterModel\n * ------------------------------------\n*/\n\nexport namespace SetVisibilityFilterAction {\n  export class SetActiveAction implements Action {\n    type = SetVisibilityFilter.ACTIVE;\n    constructor(public payload?: DossierFilterModel) { }\n  }\n  export class SetClosedAction implements Action {\n    type = SetVisibilityFilter.CLOSED;\n    constructor(public payload?: DossierFilterModel) { }\n  }\n  export class SetArchivedAction implements Action {\n    type = SetVisibilityFilter.ARCHIVED;\n    constructor(public payload?: DossierFilterModel) { }\n  }\n  export class SetIncludeGroupAction implements Action {\n    type = SetVisibilityFilter.INCLUDE_GROUP;\n    constructor(public payload?: DossierFilterModel) { }\n  }\n  export class SetIncludeGuestAction implements Action {\n    type = SetVisibilityFilter.INCLUDE_GUEST;\n    constructor(public payload?: DossierFilterModel) { }\n  }\n  export class SetIncludeTasksAction implements Action {\n    type = SetVisibilityFilter.INCLUDE_TASKS;\n    constructor(public payload?: DossierFilterModel) { }\n  }\n}\n\n\nexport type Actions\n  = LoadAction\n  | LoadSuccessAction\n  | LoadFailAction\n  | GetTreeDetailAction\n  | ResetState;\n\nexport type FiltersAction\n  = SetVisibilityFilterAction.SetActiveAction\n  | SetVisibilityFilterAction.SetClosedAction\n  | SetVisibilityFilterAction.SetArchivedAction\n  | SetVisibilityFilterAction.SetIncludeGroupAction\n  | SetVisibilityFilterAction.SetIncludeGuestAction\n  | SetVisibilityFilterAction.SetIncludeTasksAction;\n\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetArchivedAction.html":{"url":"classes/SetArchivedAction.html","title":"class - SetArchivedAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetArchivedAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/store/actions/dossier.action.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                payload\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload?: DossierFilterModel)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/store/actions/dossier.action.ts:71\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    DossierFilterModel\n                                                        \n                                                  \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     DossierFilterModel\n\n                    \n                \n                    \n                        \n                            Type :     DossierFilterModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/actions/dossier.action.ts:72\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SetVisibilityFilter.ARCHIVED\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/actions/dossier.action.ts:71\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { DossierNavigatorTreeModel as TreesModel, DossierFilterModel } from '../../models';\nimport { type } from '../../utility';\n\nexport const ActionTypes = {\n  // Actions Load data\n  LOAD: type('[Dossier nav Trees] Load'),\n  LOAD_SUCCESS: type('[Dossier nav Trees] Load Success'),\n  LOAD_FAIL: type('[Dossier nav Trees] Load Fail'),\n  GET_TREE_DETAIL: type('[GET_TREE_DETAIL] load'),\n  RESET_STATE: type('[RESET_STATE] reset state for dossier')\n};\n\nexport const SetVisibilityFilter = {\n  // Action set filter\n  ACTIVE: type('[SET_VISIBILITY_FILTER] --- Aktiv'),\n  CLOSED: type('[SET_VISIBILITY_FILTER] --- Closed'),\n  ARCHIVED: type('[SET_VISIBILITY_FILTER] --- Archived'),\n  INCLUDE_GROUP: type('[SET_VISIBILITY_FILTER] --- IncludeGroup'),\n  INCLUDE_GUEST: type('[SET_VISIBILITY_FILTER] --- IncludeGuest'),\n  INCLUDE_TASKS: type('[SET_VISIBILITY_FILTER] --- IncludeTasks'),\n};\n\n/**\n * Dossier nav Trees Action\n */\n\nexport class LoadAction implements Action {\n  type = ActionTypes.LOAD;\n  constructor(public payload: DossierFilterModel) { }\n}\n\nexport class LoadSuccessAction implements Action {\n  type = ActionTypes.LOAD_SUCCESS;\n  constructor(public payload: Array) { }\n}\n\nexport class LoadFailAction implements Action {\n  type = ActionTypes.LOAD_FAIL;\n  constructor(public payload: any = null) { }\n}\n\nexport class GetTreeDetailAction implements Action {\n  type = ActionTypes.GET_TREE_DETAIL;\n\n  constructor(public payload: any) { }\n}\n\nexport class ResetState implements Action {\n  type = ActionTypes.RESET_STATE;\n  constructor(public payload: any = null) { }\n}\n\n/**\n * ------------------------------------\n * Set Visibility dossier Filter Action\n * @param payload: DossierFilterModel\n * ------------------------------------\n*/\n\nexport namespace SetVisibilityFilterAction {\n  export class SetActiveAction implements Action {\n    type = SetVisibilityFilter.ACTIVE;\n    constructor(public payload?: DossierFilterModel) { }\n  }\n  export class SetClosedAction implements Action {\n    type = SetVisibilityFilter.CLOSED;\n    constructor(public payload?: DossierFilterModel) { }\n  }\n  export class SetArchivedAction implements Action {\n    type = SetVisibilityFilter.ARCHIVED;\n    constructor(public payload?: DossierFilterModel) { }\n  }\n  export class SetIncludeGroupAction implements Action {\n    type = SetVisibilityFilter.INCLUDE_GROUP;\n    constructor(public payload?: DossierFilterModel) { }\n  }\n  export class SetIncludeGuestAction implements Action {\n    type = SetVisibilityFilter.INCLUDE_GUEST;\n    constructor(public payload?: DossierFilterModel) { }\n  }\n  export class SetIncludeTasksAction implements Action {\n    type = SetVisibilityFilter.INCLUDE_TASKS;\n    constructor(public payload?: DossierFilterModel) { }\n  }\n}\n\n\nexport type Actions\n  = LoadAction\n  | LoadSuccessAction\n  | LoadFailAction\n  | GetTreeDetailAction\n  | ResetState;\n\nexport type FiltersAction\n  = SetVisibilityFilterAction.SetActiveAction\n  | SetVisibilityFilterAction.SetClosedAction\n  | SetVisibilityFilterAction.SetArchivedAction\n  | SetVisibilityFilterAction.SetIncludeGroupAction\n  | SetVisibilityFilterAction.SetIncludeGuestAction\n  | SetVisibilityFilterAction.SetIncludeTasksAction;\n\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetAvaiableMenu.html":{"url":"classes/SetAvaiableMenu.html","title":"class - SetAvaiableMenu","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetAvaiableMenu\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/store/actions/menus.action.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/store/actions/menus.action.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/actions/menus.action.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : ActionTypes.AVAIABLE_MENU\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/actions/menus.action.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { MenuModel } from '../../models';\nimport { type } from '../../utility';\n\nexport const ActionTypes = {\n  SELECT: type('[Menus] select'),\n  AVAIABLE_MENU: type('[Menu] udpates AVAIABLE_MENU'),\n  LOAD: type('[Menus] Load'),\n  LOAD_SUCCESS: type('[Menus] Load Success'),\n  LOAD_FAIL: type('[Menus] Load Fail')\n};\n\n/**\n * Menu Action\n */\nexport class SelectAction implements Action {\n  type = ActionTypes.SELECT;\n\n  constructor(public payload: any) { }\n}\n\nexport class SetAvaiableMenu implements Action {\n  type = ActionTypes.AVAIABLE_MENU;\n\n  constructor(public payload: any) { }\n}\n\nexport class LoadAction implements Action {\n  type = ActionTypes.LOAD;\n\n  constructor(public payload: any = null) { }\n}\n\nexport class LoadSuccessAction implements Action {\n  type = ActionTypes.LOAD_SUCCESS;\n\n  constructor(public payload: Array) { }\n}\n\nexport class LoadFailAction implements Action {\n  type = ActionTypes.LOAD_FAIL;\n\n  constructor(public payload: any = null) { }\n}\n\nexport type Actions\n  = SelectAction\n  | SetAvaiableMenu\n  | LoadAction\n  | LoadSuccessAction\n  | LoadFailAction;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetAvailableLanguagesAction.html":{"url":"classes/SetAvailableLanguagesAction.html","title":"class - SetAvailableLanguagesAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetAvailableLanguagesAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/store/actions/settings.action.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/store/actions/settings.action.ts:61\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/actions/settings.action.ts:63\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : ActionTypes.SET_AVAIBLE_LANGUAGE\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/actions/settings.action.ts:61\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { type } from '../../utility';\n\nexport const ActionTypes = {\n  SET_LANGUAGE: type('[Settings] SetLanguage'),\n  SET_CULTURE: type('[Settings] SetCulture'),\n  LOAD_API_ROLES: type('[LOAD_API_ROLES] call api'),\n  SET_AVAIBLE_ROLES: type('[SET_AVAIBLE_ROLES] Get data'),\n  LOAD_FAIL: type('[LOAD_FAIL] Load Fail'),\n  LOAD_API_LANGUAGE: type('[LOAD_API_LANGUAGE] call api translations'),\n  SET_AVAIBLE_LANGUAGE: type('[SET_AVAIBLE_LANGUAGE] Get data'),\n  UPDATE_SELECT_ACTION: type('[UPDATE_SELECT_ACTION] Set'),\n  DELETE_ITEM_SELECT_ACTION: type('[DELETE_ITEM_SELECT_ACTION] update'),\n  RESET_STATE: type('[RESET_STATE] reset state for setting'),\n  DOCUMENT_CREATE: type('[Document create action] call'),\n  DOCUMENT_CREATE_SUCCESS: type('[Document create action] Success'),\n  DOCUMENT_CREATE_ERROR: type('[Document create action] Error')\n};\n\n/**\n * Settings Actions\n */\nexport class SetLanguageAction implements Action {\n  type = ActionTypes.SET_LANGUAGE;\n\n  constructor(public payload: string) { }\n}\n\nexport class SetCultureAction implements Action {\n  type = ActionTypes.SET_CULTURE;\n\n  constructor(public payload: string) { }\n}\n\nexport class LoadApiRolesAction implements Action {\n  type = ActionTypes.LOAD_API_ROLES;\n\n  constructor(public payload: any = null) { };\n}\n\nexport class SetAvailableRolesAction implements Action {\n  type = ActionTypes.SET_AVAIBLE_ROLES;\n\n  constructor(public payload: any) { };\n}\n\nexport class LoadFailAction implements Action {\n  type = ActionTypes.LOAD_FAIL;\n\n  constructor(public payload: any = null) { };\n}\n\n// language\nexport class LoadApiLangsAction implements Action {\n  type = ActionTypes.LOAD_API_LANGUAGE;\n\n  constructor(public payload: any = null) { };\n}\n\nexport class SetAvailableLanguagesAction implements Action {\n  type = ActionTypes.SET_AVAIBLE_LANGUAGE;\n\n  constructor(public payload: any) { };\n}\n\nexport class UpdateSelectedAction implements Action {\n  type = ActionTypes.UPDATE_SELECT_ACTION;\n  constructor(public payload: any) { }\n}\n\nexport class DeleteItemSelectedAction implements Action {\n  type = ActionTypes.DELETE_ITEM_SELECT_ACTION;\n  constructor(public payload: any) { }\n}\n\nexport class ResetState implements Action {\n  type = ActionTypes.RESET_STATE;\n  constructor(public payload: any = null) { }\n}\n\n// DOCUMENT CREATE FEATURE\nexport class DocumentCreate implements Action {\n  type = ActionTypes.DOCUMENT_CREATE;\n  constructor(public payload: any = null) { };\n}\n\nexport class DocumentCreateSuccess implements Action {\n  type = ActionTypes.DOCUMENT_CREATE_SUCCESS;\n  constructor(public payload: any = null) { };\n}\n\nexport class DocumentCreateError implements Action {\n  type = ActionTypes.DOCUMENT_CREATE;\n  constructor(public payload: any = null) { };\n}\n// DOCUMENT CREATE FEATURE\n\nexport type Actions\n  = SetLanguageAction\n  | SetCultureAction\n  | LoadApiRolesAction\n  | SetAvailableRolesAction\n  | LoadFailAction\n  | LoadApiLangsAction\n  | SetAvailableLanguagesAction\n  | UpdateSelectedAction\n  | DeleteItemSelectedAction\n  | ResetState\n  | DocumentCreate\n  | DocumentCreateSuccess\n  | DocumentCreateError;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetAvailableRolesAction.html":{"url":"classes/SetAvailableRolesAction.html","title":"class - SetAvailableRolesAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetAvailableRolesAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/store/actions/settings.action.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/store/actions/settings.action.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/actions/settings.action.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : ActionTypes.SET_AVAIBLE_ROLES\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/actions/settings.action.ts:42\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { type } from '../../utility';\n\nexport const ActionTypes = {\n  SET_LANGUAGE: type('[Settings] SetLanguage'),\n  SET_CULTURE: type('[Settings] SetCulture'),\n  LOAD_API_ROLES: type('[LOAD_API_ROLES] call api'),\n  SET_AVAIBLE_ROLES: type('[SET_AVAIBLE_ROLES] Get data'),\n  LOAD_FAIL: type('[LOAD_FAIL] Load Fail'),\n  LOAD_API_LANGUAGE: type('[LOAD_API_LANGUAGE] call api translations'),\n  SET_AVAIBLE_LANGUAGE: type('[SET_AVAIBLE_LANGUAGE] Get data'),\n  UPDATE_SELECT_ACTION: type('[UPDATE_SELECT_ACTION] Set'),\n  DELETE_ITEM_SELECT_ACTION: type('[DELETE_ITEM_SELECT_ACTION] update'),\n  RESET_STATE: type('[RESET_STATE] reset state for setting'),\n  DOCUMENT_CREATE: type('[Document create action] call'),\n  DOCUMENT_CREATE_SUCCESS: type('[Document create action] Success'),\n  DOCUMENT_CREATE_ERROR: type('[Document create action] Error')\n};\n\n/**\n * Settings Actions\n */\nexport class SetLanguageAction implements Action {\n  type = ActionTypes.SET_LANGUAGE;\n\n  constructor(public payload: string) { }\n}\n\nexport class SetCultureAction implements Action {\n  type = ActionTypes.SET_CULTURE;\n\n  constructor(public payload: string) { }\n}\n\nexport class LoadApiRolesAction implements Action {\n  type = ActionTypes.LOAD_API_ROLES;\n\n  constructor(public payload: any = null) { };\n}\n\nexport class SetAvailableRolesAction implements Action {\n  type = ActionTypes.SET_AVAIBLE_ROLES;\n\n  constructor(public payload: any) { };\n}\n\nexport class LoadFailAction implements Action {\n  type = ActionTypes.LOAD_FAIL;\n\n  constructor(public payload: any = null) { };\n}\n\n// language\nexport class LoadApiLangsAction implements Action {\n  type = ActionTypes.LOAD_API_LANGUAGE;\n\n  constructor(public payload: any = null) { };\n}\n\nexport class SetAvailableLanguagesAction implements Action {\n  type = ActionTypes.SET_AVAIBLE_LANGUAGE;\n\n  constructor(public payload: any) { };\n}\n\nexport class UpdateSelectedAction implements Action {\n  type = ActionTypes.UPDATE_SELECT_ACTION;\n  constructor(public payload: any) { }\n}\n\nexport class DeleteItemSelectedAction implements Action {\n  type = ActionTypes.DELETE_ITEM_SELECT_ACTION;\n  constructor(public payload: any) { }\n}\n\nexport class ResetState implements Action {\n  type = ActionTypes.RESET_STATE;\n  constructor(public payload: any = null) { }\n}\n\n// DOCUMENT CREATE FEATURE\nexport class DocumentCreate implements Action {\n  type = ActionTypes.DOCUMENT_CREATE;\n  constructor(public payload: any = null) { };\n}\n\nexport class DocumentCreateSuccess implements Action {\n  type = ActionTypes.DOCUMENT_CREATE_SUCCESS;\n  constructor(public payload: any = null) { };\n}\n\nexport class DocumentCreateError implements Action {\n  type = ActionTypes.DOCUMENT_CREATE;\n  constructor(public payload: any = null) { };\n}\n// DOCUMENT CREATE FEATURE\n\nexport type Actions\n  = SetLanguageAction\n  | SetCultureAction\n  | LoadApiRolesAction\n  | SetAvailableRolesAction\n  | LoadFailAction\n  | LoadApiLangsAction\n  | SetAvailableLanguagesAction\n  | UpdateSelectedAction\n  | DeleteItemSelectedAction\n  | ResetState\n  | DocumentCreate\n  | DocumentCreateSuccess\n  | DocumentCreateError;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetClosedAction.html":{"url":"classes/SetClosedAction.html","title":"class - SetClosedAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetClosedAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/store/actions/dossier.action.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                payload\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload?: DossierFilterModel)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/store/actions/dossier.action.ts:67\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    DossierFilterModel\n                                                        \n                                                  \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     DossierFilterModel\n\n                    \n                \n                    \n                        \n                            Type :     DossierFilterModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/actions/dossier.action.ts:68\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SetVisibilityFilter.CLOSED\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/actions/dossier.action.ts:67\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { DossierNavigatorTreeModel as TreesModel, DossierFilterModel } from '../../models';\nimport { type } from '../../utility';\n\nexport const ActionTypes = {\n  // Actions Load data\n  LOAD: type('[Dossier nav Trees] Load'),\n  LOAD_SUCCESS: type('[Dossier nav Trees] Load Success'),\n  LOAD_FAIL: type('[Dossier nav Trees] Load Fail'),\n  GET_TREE_DETAIL: type('[GET_TREE_DETAIL] load'),\n  RESET_STATE: type('[RESET_STATE] reset state for dossier')\n};\n\nexport const SetVisibilityFilter = {\n  // Action set filter\n  ACTIVE: type('[SET_VISIBILITY_FILTER] --- Aktiv'),\n  CLOSED: type('[SET_VISIBILITY_FILTER] --- Closed'),\n  ARCHIVED: type('[SET_VISIBILITY_FILTER] --- Archived'),\n  INCLUDE_GROUP: type('[SET_VISIBILITY_FILTER] --- IncludeGroup'),\n  INCLUDE_GUEST: type('[SET_VISIBILITY_FILTER] --- IncludeGuest'),\n  INCLUDE_TASKS: type('[SET_VISIBILITY_FILTER] --- IncludeTasks'),\n};\n\n/**\n * Dossier nav Trees Action\n */\n\nexport class LoadAction implements Action {\n  type = ActionTypes.LOAD;\n  constructor(public payload: DossierFilterModel) { }\n}\n\nexport class LoadSuccessAction implements Action {\n  type = ActionTypes.LOAD_SUCCESS;\n  constructor(public payload: Array) { }\n}\n\nexport class LoadFailAction implements Action {\n  type = ActionTypes.LOAD_FAIL;\n  constructor(public payload: any = null) { }\n}\n\nexport class GetTreeDetailAction implements Action {\n  type = ActionTypes.GET_TREE_DETAIL;\n\n  constructor(public payload: any) { }\n}\n\nexport class ResetState implements Action {\n  type = ActionTypes.RESET_STATE;\n  constructor(public payload: any = null) { }\n}\n\n/**\n * ------------------------------------\n * Set Visibility dossier Filter Action\n * @param payload: DossierFilterModel\n * ------------------------------------\n*/\n\nexport namespace SetVisibilityFilterAction {\n  export class SetActiveAction implements Action {\n    type = SetVisibilityFilter.ACTIVE;\n    constructor(public payload?: DossierFilterModel) { }\n  }\n  export class SetClosedAction implements Action {\n    type = SetVisibilityFilter.CLOSED;\n    constructor(public payload?: DossierFilterModel) { }\n  }\n  export class SetArchivedAction implements Action {\n    type = SetVisibilityFilter.ARCHIVED;\n    constructor(public payload?: DossierFilterModel) { }\n  }\n  export class SetIncludeGroupAction implements Action {\n    type = SetVisibilityFilter.INCLUDE_GROUP;\n    constructor(public payload?: DossierFilterModel) { }\n  }\n  export class SetIncludeGuestAction implements Action {\n    type = SetVisibilityFilter.INCLUDE_GUEST;\n    constructor(public payload?: DossierFilterModel) { }\n  }\n  export class SetIncludeTasksAction implements Action {\n    type = SetVisibilityFilter.INCLUDE_TASKS;\n    constructor(public payload?: DossierFilterModel) { }\n  }\n}\n\n\nexport type Actions\n  = LoadAction\n  | LoadSuccessAction\n  | LoadFailAction\n  | GetTreeDetailAction\n  | ResetState;\n\nexport type FiltersAction\n  = SetVisibilityFilterAction.SetActiveAction\n  | SetVisibilityFilterAction.SetClosedAction\n  | SetVisibilityFilterAction.SetArchivedAction\n  | SetVisibilityFilterAction.SetIncludeGroupAction\n  | SetVisibilityFilterAction.SetIncludeGuestAction\n  | SetVisibilityFilterAction.SetIncludeTasksAction;\n\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetCultureAction.html":{"url":"classes/SetCultureAction.html","title":"class - SetCultureAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetCultureAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/store/actions/settings.action.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/store/actions/settings.action.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/actions/settings.action.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : ActionTypes.SET_CULTURE\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/actions/settings.action.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { type } from '../../utility';\n\nexport const ActionTypes = {\n  SET_LANGUAGE: type('[Settings] SetLanguage'),\n  SET_CULTURE: type('[Settings] SetCulture'),\n  LOAD_API_ROLES: type('[LOAD_API_ROLES] call api'),\n  SET_AVAIBLE_ROLES: type('[SET_AVAIBLE_ROLES] Get data'),\n  LOAD_FAIL: type('[LOAD_FAIL] Load Fail'),\n  LOAD_API_LANGUAGE: type('[LOAD_API_LANGUAGE] call api translations'),\n  SET_AVAIBLE_LANGUAGE: type('[SET_AVAIBLE_LANGUAGE] Get data'),\n  UPDATE_SELECT_ACTION: type('[UPDATE_SELECT_ACTION] Set'),\n  DELETE_ITEM_SELECT_ACTION: type('[DELETE_ITEM_SELECT_ACTION] update'),\n  RESET_STATE: type('[RESET_STATE] reset state for setting'),\n  DOCUMENT_CREATE: type('[Document create action] call'),\n  DOCUMENT_CREATE_SUCCESS: type('[Document create action] Success'),\n  DOCUMENT_CREATE_ERROR: type('[Document create action] Error')\n};\n\n/**\n * Settings Actions\n */\nexport class SetLanguageAction implements Action {\n  type = ActionTypes.SET_LANGUAGE;\n\n  constructor(public payload: string) { }\n}\n\nexport class SetCultureAction implements Action {\n  type = ActionTypes.SET_CULTURE;\n\n  constructor(public payload: string) { }\n}\n\nexport class LoadApiRolesAction implements Action {\n  type = ActionTypes.LOAD_API_ROLES;\n\n  constructor(public payload: any = null) { };\n}\n\nexport class SetAvailableRolesAction implements Action {\n  type = ActionTypes.SET_AVAIBLE_ROLES;\n\n  constructor(public payload: any) { };\n}\n\nexport class LoadFailAction implements Action {\n  type = ActionTypes.LOAD_FAIL;\n\n  constructor(public payload: any = null) { };\n}\n\n// language\nexport class LoadApiLangsAction implements Action {\n  type = ActionTypes.LOAD_API_LANGUAGE;\n\n  constructor(public payload: any = null) { };\n}\n\nexport class SetAvailableLanguagesAction implements Action {\n  type = ActionTypes.SET_AVAIBLE_LANGUAGE;\n\n  constructor(public payload: any) { };\n}\n\nexport class UpdateSelectedAction implements Action {\n  type = ActionTypes.UPDATE_SELECT_ACTION;\n  constructor(public payload: any) { }\n}\n\nexport class DeleteItemSelectedAction implements Action {\n  type = ActionTypes.DELETE_ITEM_SELECT_ACTION;\n  constructor(public payload: any) { }\n}\n\nexport class ResetState implements Action {\n  type = ActionTypes.RESET_STATE;\n  constructor(public payload: any = null) { }\n}\n\n// DOCUMENT CREATE FEATURE\nexport class DocumentCreate implements Action {\n  type = ActionTypes.DOCUMENT_CREATE;\n  constructor(public payload: any = null) { };\n}\n\nexport class DocumentCreateSuccess implements Action {\n  type = ActionTypes.DOCUMENT_CREATE_SUCCESS;\n  constructor(public payload: any = null) { };\n}\n\nexport class DocumentCreateError implements Action {\n  type = ActionTypes.DOCUMENT_CREATE;\n  constructor(public payload: any = null) { };\n}\n// DOCUMENT CREATE FEATURE\n\nexport type Actions\n  = SetLanguageAction\n  | SetCultureAction\n  | LoadApiRolesAction\n  | SetAvailableRolesAction\n  | LoadFailAction\n  | LoadApiLangsAction\n  | SetAvailableLanguagesAction\n  | UpdateSelectedAction\n  | DeleteItemSelectedAction\n  | ResetState\n  | DocumentCreate\n  | DocumentCreateSuccess\n  | DocumentCreateError;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetIncludeGroupAction.html":{"url":"classes/SetIncludeGroupAction.html","title":"class - SetIncludeGroupAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetIncludeGroupAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/store/actions/dossier.action.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                payload\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload?: DossierFilterModel)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/store/actions/dossier.action.ts:75\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    DossierFilterModel\n                                                        \n                                                  \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     DossierFilterModel\n\n                    \n                \n                    \n                        \n                            Type :     DossierFilterModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/actions/dossier.action.ts:76\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SetVisibilityFilter.INCLUDE_GROUP\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/actions/dossier.action.ts:75\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { DossierNavigatorTreeModel as TreesModel, DossierFilterModel } from '../../models';\nimport { type } from '../../utility';\n\nexport const ActionTypes = {\n  // Actions Load data\n  LOAD: type('[Dossier nav Trees] Load'),\n  LOAD_SUCCESS: type('[Dossier nav Trees] Load Success'),\n  LOAD_FAIL: type('[Dossier nav Trees] Load Fail'),\n  GET_TREE_DETAIL: type('[GET_TREE_DETAIL] load'),\n  RESET_STATE: type('[RESET_STATE] reset state for dossier')\n};\n\nexport const SetVisibilityFilter = {\n  // Action set filter\n  ACTIVE: type('[SET_VISIBILITY_FILTER] --- Aktiv'),\n  CLOSED: type('[SET_VISIBILITY_FILTER] --- Closed'),\n  ARCHIVED: type('[SET_VISIBILITY_FILTER] --- Archived'),\n  INCLUDE_GROUP: type('[SET_VISIBILITY_FILTER] --- IncludeGroup'),\n  INCLUDE_GUEST: type('[SET_VISIBILITY_FILTER] --- IncludeGuest'),\n  INCLUDE_TASKS: type('[SET_VISIBILITY_FILTER] --- IncludeTasks'),\n};\n\n/**\n * Dossier nav Trees Action\n */\n\nexport class LoadAction implements Action {\n  type = ActionTypes.LOAD;\n  constructor(public payload: DossierFilterModel) { }\n}\n\nexport class LoadSuccessAction implements Action {\n  type = ActionTypes.LOAD_SUCCESS;\n  constructor(public payload: Array) { }\n}\n\nexport class LoadFailAction implements Action {\n  type = ActionTypes.LOAD_FAIL;\n  constructor(public payload: any = null) { }\n}\n\nexport class GetTreeDetailAction implements Action {\n  type = ActionTypes.GET_TREE_DETAIL;\n\n  constructor(public payload: any) { }\n}\n\nexport class ResetState implements Action {\n  type = ActionTypes.RESET_STATE;\n  constructor(public payload: any = null) { }\n}\n\n/**\n * ------------------------------------\n * Set Visibility dossier Filter Action\n * @param payload: DossierFilterModel\n * ------------------------------------\n*/\n\nexport namespace SetVisibilityFilterAction {\n  export class SetActiveAction implements Action {\n    type = SetVisibilityFilter.ACTIVE;\n    constructor(public payload?: DossierFilterModel) { }\n  }\n  export class SetClosedAction implements Action {\n    type = SetVisibilityFilter.CLOSED;\n    constructor(public payload?: DossierFilterModel) { }\n  }\n  export class SetArchivedAction implements Action {\n    type = SetVisibilityFilter.ARCHIVED;\n    constructor(public payload?: DossierFilterModel) { }\n  }\n  export class SetIncludeGroupAction implements Action {\n    type = SetVisibilityFilter.INCLUDE_GROUP;\n    constructor(public payload?: DossierFilterModel) { }\n  }\n  export class SetIncludeGuestAction implements Action {\n    type = SetVisibilityFilter.INCLUDE_GUEST;\n    constructor(public payload?: DossierFilterModel) { }\n  }\n  export class SetIncludeTasksAction implements Action {\n    type = SetVisibilityFilter.INCLUDE_TASKS;\n    constructor(public payload?: DossierFilterModel) { }\n  }\n}\n\n\nexport type Actions\n  = LoadAction\n  | LoadSuccessAction\n  | LoadFailAction\n  | GetTreeDetailAction\n  | ResetState;\n\nexport type FiltersAction\n  = SetVisibilityFilterAction.SetActiveAction\n  | SetVisibilityFilterAction.SetClosedAction\n  | SetVisibilityFilterAction.SetArchivedAction\n  | SetVisibilityFilterAction.SetIncludeGroupAction\n  | SetVisibilityFilterAction.SetIncludeGuestAction\n  | SetVisibilityFilterAction.SetIncludeTasksAction;\n\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetIncludeGuestAction.html":{"url":"classes/SetIncludeGuestAction.html","title":"class - SetIncludeGuestAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetIncludeGuestAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/store/actions/dossier.action.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                payload\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload?: DossierFilterModel)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/store/actions/dossier.action.ts:79\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    DossierFilterModel\n                                                        \n                                                  \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     DossierFilterModel\n\n                    \n                \n                    \n                        \n                            Type :     DossierFilterModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/actions/dossier.action.ts:80\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SetVisibilityFilter.INCLUDE_GUEST\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/actions/dossier.action.ts:79\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { DossierNavigatorTreeModel as TreesModel, DossierFilterModel } from '../../models';\nimport { type } from '../../utility';\n\nexport const ActionTypes = {\n  // Actions Load data\n  LOAD: type('[Dossier nav Trees] Load'),\n  LOAD_SUCCESS: type('[Dossier nav Trees] Load Success'),\n  LOAD_FAIL: type('[Dossier nav Trees] Load Fail'),\n  GET_TREE_DETAIL: type('[GET_TREE_DETAIL] load'),\n  RESET_STATE: type('[RESET_STATE] reset state for dossier')\n};\n\nexport const SetVisibilityFilter = {\n  // Action set filter\n  ACTIVE: type('[SET_VISIBILITY_FILTER] --- Aktiv'),\n  CLOSED: type('[SET_VISIBILITY_FILTER] --- Closed'),\n  ARCHIVED: type('[SET_VISIBILITY_FILTER] --- Archived'),\n  INCLUDE_GROUP: type('[SET_VISIBILITY_FILTER] --- IncludeGroup'),\n  INCLUDE_GUEST: type('[SET_VISIBILITY_FILTER] --- IncludeGuest'),\n  INCLUDE_TASKS: type('[SET_VISIBILITY_FILTER] --- IncludeTasks'),\n};\n\n/**\n * Dossier nav Trees Action\n */\n\nexport class LoadAction implements Action {\n  type = ActionTypes.LOAD;\n  constructor(public payload: DossierFilterModel) { }\n}\n\nexport class LoadSuccessAction implements Action {\n  type = ActionTypes.LOAD_SUCCESS;\n  constructor(public payload: Array) { }\n}\n\nexport class LoadFailAction implements Action {\n  type = ActionTypes.LOAD_FAIL;\n  constructor(public payload: any = null) { }\n}\n\nexport class GetTreeDetailAction implements Action {\n  type = ActionTypes.GET_TREE_DETAIL;\n\n  constructor(public payload: any) { }\n}\n\nexport class ResetState implements Action {\n  type = ActionTypes.RESET_STATE;\n  constructor(public payload: any = null) { }\n}\n\n/**\n * ------------------------------------\n * Set Visibility dossier Filter Action\n * @param payload: DossierFilterModel\n * ------------------------------------\n*/\n\nexport namespace SetVisibilityFilterAction {\n  export class SetActiveAction implements Action {\n    type = SetVisibilityFilter.ACTIVE;\n    constructor(public payload?: DossierFilterModel) { }\n  }\n  export class SetClosedAction implements Action {\n    type = SetVisibilityFilter.CLOSED;\n    constructor(public payload?: DossierFilterModel) { }\n  }\n  export class SetArchivedAction implements Action {\n    type = SetVisibilityFilter.ARCHIVED;\n    constructor(public payload?: DossierFilterModel) { }\n  }\n  export class SetIncludeGroupAction implements Action {\n    type = SetVisibilityFilter.INCLUDE_GROUP;\n    constructor(public payload?: DossierFilterModel) { }\n  }\n  export class SetIncludeGuestAction implements Action {\n    type = SetVisibilityFilter.INCLUDE_GUEST;\n    constructor(public payload?: DossierFilterModel) { }\n  }\n  export class SetIncludeTasksAction implements Action {\n    type = SetVisibilityFilter.INCLUDE_TASKS;\n    constructor(public payload?: DossierFilterModel) { }\n  }\n}\n\n\nexport type Actions\n  = LoadAction\n  | LoadSuccessAction\n  | LoadFailAction\n  | GetTreeDetailAction\n  | ResetState;\n\nexport type FiltersAction\n  = SetVisibilityFilterAction.SetActiveAction\n  | SetVisibilityFilterAction.SetClosedAction\n  | SetVisibilityFilterAction.SetArchivedAction\n  | SetVisibilityFilterAction.SetIncludeGroupAction\n  | SetVisibilityFilterAction.SetIncludeGuestAction\n  | SetVisibilityFilterAction.SetIncludeTasksAction;\n\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetIncludeTasksAction.html":{"url":"classes/SetIncludeTasksAction.html","title":"class - SetIncludeTasksAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetIncludeTasksAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/store/actions/dossier.action.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                payload\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload?: DossierFilterModel)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/store/actions/dossier.action.ts:83\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    DossierFilterModel\n                                                        \n                                                  \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     DossierFilterModel\n\n                    \n                \n                    \n                        \n                            Type :     DossierFilterModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/actions/dossier.action.ts:84\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : SetVisibilityFilter.INCLUDE_TASKS\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/actions/dossier.action.ts:83\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { DossierNavigatorTreeModel as TreesModel, DossierFilterModel } from '../../models';\nimport { type } from '../../utility';\n\nexport const ActionTypes = {\n  // Actions Load data\n  LOAD: type('[Dossier nav Trees] Load'),\n  LOAD_SUCCESS: type('[Dossier nav Trees] Load Success'),\n  LOAD_FAIL: type('[Dossier nav Trees] Load Fail'),\n  GET_TREE_DETAIL: type('[GET_TREE_DETAIL] load'),\n  RESET_STATE: type('[RESET_STATE] reset state for dossier')\n};\n\nexport const SetVisibilityFilter = {\n  // Action set filter\n  ACTIVE: type('[SET_VISIBILITY_FILTER] --- Aktiv'),\n  CLOSED: type('[SET_VISIBILITY_FILTER] --- Closed'),\n  ARCHIVED: type('[SET_VISIBILITY_FILTER] --- Archived'),\n  INCLUDE_GROUP: type('[SET_VISIBILITY_FILTER] --- IncludeGroup'),\n  INCLUDE_GUEST: type('[SET_VISIBILITY_FILTER] --- IncludeGuest'),\n  INCLUDE_TASKS: type('[SET_VISIBILITY_FILTER] --- IncludeTasks'),\n};\n\n/**\n * Dossier nav Trees Action\n */\n\nexport class LoadAction implements Action {\n  type = ActionTypes.LOAD;\n  constructor(public payload: DossierFilterModel) { }\n}\n\nexport class LoadSuccessAction implements Action {\n  type = ActionTypes.LOAD_SUCCESS;\n  constructor(public payload: Array) { }\n}\n\nexport class LoadFailAction implements Action {\n  type = ActionTypes.LOAD_FAIL;\n  constructor(public payload: any = null) { }\n}\n\nexport class GetTreeDetailAction implements Action {\n  type = ActionTypes.GET_TREE_DETAIL;\n\n  constructor(public payload: any) { }\n}\n\nexport class ResetState implements Action {\n  type = ActionTypes.RESET_STATE;\n  constructor(public payload: any = null) { }\n}\n\n/**\n * ------------------------------------\n * Set Visibility dossier Filter Action\n * @param payload: DossierFilterModel\n * ------------------------------------\n*/\n\nexport namespace SetVisibilityFilterAction {\n  export class SetActiveAction implements Action {\n    type = SetVisibilityFilter.ACTIVE;\n    constructor(public payload?: DossierFilterModel) { }\n  }\n  export class SetClosedAction implements Action {\n    type = SetVisibilityFilter.CLOSED;\n    constructor(public payload?: DossierFilterModel) { }\n  }\n  export class SetArchivedAction implements Action {\n    type = SetVisibilityFilter.ARCHIVED;\n    constructor(public payload?: DossierFilterModel) { }\n  }\n  export class SetIncludeGroupAction implements Action {\n    type = SetVisibilityFilter.INCLUDE_GROUP;\n    constructor(public payload?: DossierFilterModel) { }\n  }\n  export class SetIncludeGuestAction implements Action {\n    type = SetVisibilityFilter.INCLUDE_GUEST;\n    constructor(public payload?: DossierFilterModel) { }\n  }\n  export class SetIncludeTasksAction implements Action {\n    type = SetVisibilityFilter.INCLUDE_TASKS;\n    constructor(public payload?: DossierFilterModel) { }\n  }\n}\n\n\nexport type Actions\n  = LoadAction\n  | LoadSuccessAction\n  | LoadFailAction\n  | GetTreeDetailAction\n  | ResetState;\n\nexport type FiltersAction\n  = SetVisibilityFilterAction.SetActiveAction\n  | SetVisibilityFilterAction.SetClosedAction\n  | SetVisibilityFilterAction.SetArchivedAction\n  | SetVisibilityFilterAction.SetIncludeGroupAction\n  | SetVisibilityFilterAction.SetIncludeGuestAction\n  | SetVisibilityFilterAction.SetIncludeTasksAction;\n\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetLanguageAction.html":{"url":"classes/SetLanguageAction.html","title":"class - SetLanguageAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetLanguageAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/store/actions/settings.action.ts\n        \n\n            \n                Description\n            \n            \n                Settings Actions\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/store/actions/settings.action.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/actions/settings.action.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : ActionTypes.SET_LANGUAGE\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/actions/settings.action.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { type } from '../../utility';\n\nexport const ActionTypes = {\n  SET_LANGUAGE: type('[Settings] SetLanguage'),\n  SET_CULTURE: type('[Settings] SetCulture'),\n  LOAD_API_ROLES: type('[LOAD_API_ROLES] call api'),\n  SET_AVAIBLE_ROLES: type('[SET_AVAIBLE_ROLES] Get data'),\n  LOAD_FAIL: type('[LOAD_FAIL] Load Fail'),\n  LOAD_API_LANGUAGE: type('[LOAD_API_LANGUAGE] call api translations'),\n  SET_AVAIBLE_LANGUAGE: type('[SET_AVAIBLE_LANGUAGE] Get data'),\n  UPDATE_SELECT_ACTION: type('[UPDATE_SELECT_ACTION] Set'),\n  DELETE_ITEM_SELECT_ACTION: type('[DELETE_ITEM_SELECT_ACTION] update'),\n  RESET_STATE: type('[RESET_STATE] reset state for setting'),\n  DOCUMENT_CREATE: type('[Document create action] call'),\n  DOCUMENT_CREATE_SUCCESS: type('[Document create action] Success'),\n  DOCUMENT_CREATE_ERROR: type('[Document create action] Error')\n};\n\n/**\n * Settings Actions\n */\nexport class SetLanguageAction implements Action {\n  type = ActionTypes.SET_LANGUAGE;\n\n  constructor(public payload: string) { }\n}\n\nexport class SetCultureAction implements Action {\n  type = ActionTypes.SET_CULTURE;\n\n  constructor(public payload: string) { }\n}\n\nexport class LoadApiRolesAction implements Action {\n  type = ActionTypes.LOAD_API_ROLES;\n\n  constructor(public payload: any = null) { };\n}\n\nexport class SetAvailableRolesAction implements Action {\n  type = ActionTypes.SET_AVAIBLE_ROLES;\n\n  constructor(public payload: any) { };\n}\n\nexport class LoadFailAction implements Action {\n  type = ActionTypes.LOAD_FAIL;\n\n  constructor(public payload: any = null) { };\n}\n\n// language\nexport class LoadApiLangsAction implements Action {\n  type = ActionTypes.LOAD_API_LANGUAGE;\n\n  constructor(public payload: any = null) { };\n}\n\nexport class SetAvailableLanguagesAction implements Action {\n  type = ActionTypes.SET_AVAIBLE_LANGUAGE;\n\n  constructor(public payload: any) { };\n}\n\nexport class UpdateSelectedAction implements Action {\n  type = ActionTypes.UPDATE_SELECT_ACTION;\n  constructor(public payload: any) { }\n}\n\nexport class DeleteItemSelectedAction implements Action {\n  type = ActionTypes.DELETE_ITEM_SELECT_ACTION;\n  constructor(public payload: any) { }\n}\n\nexport class ResetState implements Action {\n  type = ActionTypes.RESET_STATE;\n  constructor(public payload: any = null) { }\n}\n\n// DOCUMENT CREATE FEATURE\nexport class DocumentCreate implements Action {\n  type = ActionTypes.DOCUMENT_CREATE;\n  constructor(public payload: any = null) { };\n}\n\nexport class DocumentCreateSuccess implements Action {\n  type = ActionTypes.DOCUMENT_CREATE_SUCCESS;\n  constructor(public payload: any = null) { };\n}\n\nexport class DocumentCreateError implements Action {\n  type = ActionTypes.DOCUMENT_CREATE;\n  constructor(public payload: any = null) { };\n}\n// DOCUMENT CREATE FEATURE\n\nexport type Actions\n  = SetLanguageAction\n  | SetCultureAction\n  | LoadApiRolesAction\n  | SetAvailableRolesAction\n  | LoadFailAction\n  | LoadApiLangsAction\n  | SetAvailableLanguagesAction\n  | UpdateSelectedAction\n  | DeleteItemSelectedAction\n  | ResetState\n  | DocumentCreate\n  | DocumentCreateSuccess\n  | DocumentCreateError;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SettingsEffects.html":{"url":"injectables/SettingsEffects.html","title":"injectable - SettingsEffects","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  SettingsEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/store/effects/settings.effect.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getDocument$\n                            \n                            \n                                getRoles$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, appApiClient: AppApiClient, appState$: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/store/effects/settings.effect.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        appApiClient\n                                                  \n                                                        \n                                                                    AppApiClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        appState$\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getDocument$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getDocument$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n    .ofType(settingsAction.ActionTypes.DOCUMENT_CREATE)\n    .map((action: settingsAction.DocumentCreate) => action.payload)\n    .switchMap((state: any) => {\n      return this.appApiClient.DocumentCreate(state.templateId, state.contextValues)\n        .map(document => new settingsAction.DocumentCreateSuccess(document))\n        .catch(error => Observable.of(new settingsAction.DocumentCreateError()));\n    })\n                        \n                    \n                    \n                        \n                            Decorators : Effect\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/effects/settings.effect.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRoles$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        getRoles$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.actions$\n    .ofType(settingsAction.ActionTypes.LOAD_API_ROLES)\n    .map((action: settingsAction.LoadApiRolesAction) => action.payload)\n    .switchMap(() => {\n      return this.appApiClient.getRoles()\n        .map(roles => new settingsAction.SetAvailableRolesAction(roles))\n        .catch(error => Observable.of(new settingsAction.LoadFailAction()));\n    })\n                        \n                    \n                    \n                        \n                            Decorators : Effect\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/effects/settings.effect.ts:28\n                            \n                        \n\n                \n                    \n                        Trees list\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { AppApiClient } from './../../../appApiClient.service';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/switchMap';\nimport { Injectable } from '@angular/core';\nimport { Effect, Actions } from '@ngrx/effects';\nimport { Action } from '@ngrx/store';\nimport { Observable } from 'rxjs/Observable';\nimport { of } from 'rxjs/observable/of';\nimport * as settingsAction from '../actions/settings.action';\n\nimport { Store } from '@ngrx/store';\nimport * as store from '../index';\nimport { role } from '../../models';\n\n@Injectable()\nexport class SettingsEffects {\n\n  constructor(\n    private actions$: Actions,\n    private appApiClient: AppApiClient,\n    private appState$: Store) { }\n\n  /**\n   * Trees list\n   */\n  @Effect()\n  getRoles$: Observable = this.actions$\n    .ofType(settingsAction.ActionTypes.LOAD_API_ROLES)\n    .map((action: settingsAction.LoadApiRolesAction) => action.payload)\n    .switchMap(() => {\n      return this.appApiClient.getRoles()\n        .map(roles => new settingsAction.SetAvailableRolesAction(roles))\n        .catch(error => Observable.of(new settingsAction.LoadFailAction()));\n    });\n\n  @Effect()\n  getDocument$: Observable = this.actions$\n    .ofType(settingsAction.ActionTypes.DOCUMENT_CREATE)\n    .map((action: settingsAction.DocumentCreate) => action.payload)\n    .switchMap((state: any) => {\n      return this.appApiClient.DocumentCreate(state.templateId, state.contextValues)\n        .map(document => new settingsAction.DocumentCreateSuccess(document))\n        .catch(error => Observable.of(new settingsAction.DocumentCreateError()));\n    });\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SidebarMenuModel.html":{"url":"classes/SidebarMenuModel.html","title":"class - SidebarMenuModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  SidebarMenuModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/shared/sidebar-menu.model.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ISidebarMenuModel\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                disabled\n                            \n                            \n                                    Optional\n                                expanded\n                            \n                            \n                                    Optional\n                                iconFa\n                            \n                            \n                                    Optional\n                                iconSrc\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                parentId\n                            \n                            \n                                    Optional\n                                queryParams\n                            \n                            \n                                    Optional\n                                selected\n                            \n                            \n                                    Optional\n                                sort\n                            \n                            \n                                    Optional\n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data?: ISidebarMenuModel)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/models/shared/sidebar-menu.model.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    ISidebarMenuModel\n                                                        \n                                                  \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            disabled\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        disabled:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/shared/sidebar-menu.model.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            expanded\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        expanded:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/shared/sidebar-menu.model.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            iconFa\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        iconFa:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/shared/sidebar-menu.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            iconSrc\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        iconSrc:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/shared/sidebar-menu.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     any | undefined\n\n                    \n                \n                    \n                        \n                            Type :     any | undefined\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/shared/sidebar-menu.model.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/shared/sidebar-menu.model.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            parentId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        parentId:     any | null\n\n                    \n                \n                    \n                        \n                            Type :     any | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/shared/sidebar-menu.model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            queryParams\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        queryParams:     object | literal type\n\n                    \n                \n                    \n                        \n                            Type :     object | literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/shared/sidebar-menu.model.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            selected\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selected:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/shared/sidebar-menu.model.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            sort\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sort:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/shared/sidebar-menu.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            url\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        url:     string | undefined\n\n                    \n                \n                    \n                        \n                            Type :     string | undefined\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/shared/sidebar-menu.model.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SidebarMenuModel implements ISidebarMenuModel {\n    id: any | undefined;\n    name: string;\n    iconFa?: string;\n    iconSrc?: string;\n    sort?: number;\n    disabled?: boolean;\n    selected?: boolean;\n    expanded?: boolean;\n    parentId?: any | null;\n    url?: string | undefined;\n    queryParams?: object | {};\n    \n    constructor(data?: ISidebarMenuModel) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (this)[property] = (data)[property];\n            }\n        }\n    }\n}\n\nexport interface ISidebarMenuModel {\n    id: any | undefined;\n    name: string;\n    iconFa?: string;\n    iconSrc?: string;\n    sort?: number;\n    disabled?: boolean;\n    selected?: boolean;\n    expanded?: boolean;\n    parentId?: any | null;\n    url?: string | undefined;\n    queryParams?: object | {};\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SpinnerComponent.html":{"url":"components/SpinnerComponent.html","title":"component - SpinnerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SpinnerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/spinner/spinner.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spinner\n            \n\n            \n                styleUrls\n                spinner.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./spinner.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                isRunning\n                            \n                            \n                                isSmall\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        isRunning\n                    \n                    \n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/spinner/spinner.component.ts:9\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isSmall\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/spinner/spinner.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'spinner',\n  templateUrl: `./spinner.component.html`,\n  styleUrls: ['./spinner.component.scss']\n})\nexport class SpinnerComponent {\n  @Input() isRunning: boolean;\n  @Input() isSmall: string;\n}\n\n    \n\n    \n        \n    \n        \n            \n        \n        \n            \n        \n        \n            \n        \n    \n    \n        \n            \n            \n            \n        \n    \n    \n        \n            \n                \n            \n            Loading...\n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                        Loading...            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'body'},{'name': 'BreadCrumbComponent', 'selector': 'app-bread-crumb'},{'name': 'ControlWebDavComponent', 'selector': 'app-control-web-dav'},{'name': 'DocumentGenerationComponent', 'selector': 'app-document-generation'},{'name': 'DocumentReportViewerComponent', 'selector': 'app-document-report-viewer'},{'name': 'DossierDetailsComponent', 'selector': 'app-dossier-details'},{'name': 'DossierNavigatorComponent', 'selector': 'app-dossier-navigator'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HorizontalNavigationComponent', 'selector': 'kiss-menu-header'},{'name': 'LanguageSelectorComponent', 'selector': 'language-selector'},{'name': 'LayoutContainer', 'selector': 'app-layout'},{'name': 'LeftSidebarComponent', 'selector': 'app-left-sidebar'},{'name': 'LoginComponent', 'selector': 'login'},{'name': 'NavFiltersComponent', 'selector': 'dossier-nav-filters'},{'name': 'NotificationBoxComponent', 'selector': 'app-notification-box'},{'name': 'PageBadGatewayComponent', 'selector': 'page-gate-way'},{'name': 'PageContentComponent', 'selector': 'page-content'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PersonFormComponent', 'selector': 'app-person-form'},{'name': 'PersonListComponent', 'selector': 'app-person-list'},{'name': 'PersonsComponent', 'selector': 'app-person'},{'name': 'ProfileBarComponent', 'selector': 'profile-bar'},{'name': 'ReportViewerComponent', 'selector': 'app-report-viewer'},{'name': 'SearchBoxComponent', 'selector': 'kiss-search-box'},{'name': 'SelectedActionsComponent', 'selector': 'app-selected-actions'},{'name': 'SpinnerComponent', 'selector': 'spinner'},{'name': 'ToolbarsComponent', 'selector': 'app-toolbars'},{'name': 'TreeDetailComponent', 'selector': 'app-tree-detail'},{'name': 'TreeListComponent', 'selector': 'app-tree-list'}];\n    var DIRECTIVES = [{'name': 'AuthorizeDirective', 'selector': '[appAuthorize]'},{'name': 'DynamicTabsDirective', 'selector': '[dynamic-tabs]'}];\n    var ACTUAL_COMPONENT = {'name': 'SpinnerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State.html":{"url":"interfaces/State.html","title":"interface - State","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/store/index.ts\n        \n\n            \n                Description\n            \n            \n                We treat each reducer like a table in a database. This means\nour top level state interface is just a map of keys to inner state types.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        dossierDatas\n                                \n                                \n                                        login\n                                \n                                \n                                        menus\n                                \n                                \n                                        personDetails\n                                \n                                \n                                        persons\n                                \n                                \n                                        searchBoxDatas\n                                \n                                \n                                        settings\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dossierDatas\n                                    \n                                \n                                \n                                    \n                                        dossierDatas:     fromDossiersData.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromDossiersData.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        login\n                                    \n                                \n                                \n                                    \n                                        login:     fromAuth.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromAuth.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menus\n                                    \n                                \n                                \n                                    \n                                        menus:     fromMenus.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromMenus.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        personDetails\n                                    \n                                \n                                \n                                    \n                                        personDetails:     fromPersonDetails.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromPersonDetails.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        persons\n                                    \n                                \n                                \n                                    \n                                        persons:     fromPersons.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromPersons.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        searchBoxDatas\n                                    \n                                \n                                \n                                    \n                                        searchBoxDatas:     fromSearchBoxData.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromSearchBoxData.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        settings\n                                    \n                                \n                                \n                                    \n                                        settings:     fromSettings.State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     fromSettings.State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { state } from '@angular/animations';\nimport { createSelector } from 'reselect';\n\n/**\n * More info: https://egghead.io/lessons/javascript-redux-implementing-combinereducers-from-scratch\n */\nimport { ActionReducer, combineReducers, Action } from '@ngrx/store';\n\n/**\n * More info: https://drboolean.gitbooks.io/mostly-adequate-guide/content/ch5.html\n */\nimport { compose } from '@ngrx/core/compose';\n\n/**\n * Every reducer module's default export is the reducer function itself. In\n * addition, each module should export a type or interface that describes\n * the state of the reducer plus any selector functions. The `* as`\n * notation packages up all of the exports into a single object.\n */\n// tslint:disable-next-line:import-spacing\nimport * as fromSettings from './reducers/settings.reducer';\n// tslint:disable-next-line:import-spacing\nimport * as fromAuth from './reducers/auth.reducer';\n// tslint:disable-next-line:import-spacing\nimport * as fromPersons from './reducers/persons.reducer';\n// tslint:disable-next-line:import-spacing\nimport * as fromPersonDetails from './reducers/person-details.reducer';\n// tslint:disable-next-line:import-spacing\nimport * as fromMenus from './reducers/menus.reducer';\n// tslint:disable-next-line:import-spacing\nimport * as fromSearchBoxData from './reducers/search-box.reducer';\n// tslint:disable-next-line:import-spacing\nimport * as fromDossiersData from './reducers/dossier.reducer';\n\n/**\n * We treat each reducer like a table in a database. This means\n * our top level state interface is just a map of keys to inner state types.\n */\nexport interface State {\n  settings: fromSettings.State;\n  login: fromAuth.State;\n  persons: fromPersons.State;\n  personDetails: fromPersonDetails.State;\n  menus: fromMenus.State;\n  searchBoxDatas: fromSearchBoxData.State;\n  dossierDatas: fromDossiersData.State;\n}\n\n/**\n * Because metareducers take a reducer function and return a new reducer,\n * we can use our compose helper to chain them together. Here we are\n * using combineReducers to make our top level reducer, and then\n * wrapping that in storeLogger. Remember that compose applies\n * the result from right to left.\n */\nconst reducers = {\n  settings: fromSettings.reducer,\n  login: fromAuth.reducer,\n  persons: fromPersons.reducer,\n  personDetails: fromPersonDetails.reducer,\n  menus: fromMenus.reducer,\n  searchBoxDatas: fromSearchBoxData.reducer,\n  dossierDatas: fromDossiersData.reducer\n};\n\nexport function store(state: any, action: any) {\n  const store: ActionReducer = compose(combineReducers)(reducers);\n  return store(state, action);\n}\n\n/**\n * Every reducer module exports selector functions, however child reducers\n * have no knowledge of the overall state tree. To make them useable, we\n * need to make new selectors that wrap them.\n */\n\n/**\n * Settings store functions\n */\nexport const getSettingsState = (state: State) => state.settings;\nexport const getSelectedLanguage = createSelector(getSettingsState, fromSettings.getSelectedLanguage);\nexport const getSelectedCulture = createSelector(getSettingsState, fromSettings.getSelectedCulture);\nexport const getAvailableLanguages = createSelector(getSettingsState, fromSettings.getAvailableLanguages);\nexport const getAvailableRoles = createSelector(getSettingsState, fromSettings.getAvailableRoles);\nexport const getSelectedActions = createSelector(getSettingsState, fromSettings.getSelectedActions);\nexport const getXDocumentCreate = createSelector(getSettingsState, fromSettings.getXDocumentCreate);\nexport const getDocumentCreateObject = createSelector(getSettingsState, fromSettings.getDocumentCreateObject);\n/**\n * Auth store functions\n */\nexport const getAuthState = (state: State) => state.login;\nexport const getAuthLoaded = createSelector(getAuthState, fromAuth.getLoaded);\nexport const getAuthLoading = createSelector(getAuthState, fromAuth.getLoading);\nexport const getAuthFailed = createSelector(getAuthState, fromAuth.getFailed);\nexport const getLoggedUser = createSelector(getAuthState, fromAuth.getLoggedUser);\n\n/**\n * Persons store functions\n */\nexport const getPersonsState = (state: State) => state.persons;\nexport const getPersonsLoaded = createSelector(getPersonsState, fromPersons.getLoaded);\nexport const getPersonsLoading = createSelector(getPersonsState, fromPersons.getLoading);\nexport const getPersonsFailed = createSelector(getPersonsState, fromPersons.getFailed);\nexport const getPersonsData = createSelector(getPersonsState, fromPersons.getData);\nexport const getPersonAddNew = createSelector(getPersonsState, fromPersons.getPerson);\nexport const getStatusAdding = createSelector(getPersonsState, fromPersons.getAdding);\n\n/**\n  * Person details store functions\n  */\nexport const getPersonDetailsState = (state: State) => state.personDetails;\nexport const getPersonDetailsLoaded = createSelector(getPersonDetailsState, fromPersonDetails.getLoaded);\nexport const getPersonDetailsLoading = createSelector(getPersonDetailsState, fromPersonDetails.getLoading);\nexport const getPersonDetailsFailed = createSelector(getPersonDetailsState, fromPersonDetails.getFailed);\nexport const getPersonDetailsData = createSelector(getPersonDetailsState, fromPersonDetails.getData);\n\n/**\n * Menus store functions\n */\nexport const getMenusState = (state: State) => state.menus;\nexport const getMenusLoaded = createSelector(getMenusState, fromMenus.getLoaded);\nexport const getMenusLoading = createSelector(getMenusState, fromMenus.getLoading);\nexport const getMenusFailed = createSelector(getMenusState, fromMenus.getFailed);\nexport const getMenusData = createSelector(getMenusState, fromMenus.getData);\nexport const getSelectMenu = createSelector(getMenusState, fromMenus.getSelectItem);\nexport const getAvaiableMenus = createSelector(getMenusState, fromMenus.getAvaiableMenus);\n/**\n * search box data store functions\n */\nexport const getSearchBoxDatasState = (state: State) => state.searchBoxDatas;\nexport const getSearchBoxDatasLoaded = createSelector(getSearchBoxDatasState, fromSearchBoxData.getLoaded);\nexport const getSearchBoxDatasLoading = createSelector(getSearchBoxDatasState, fromSearchBoxData.getLoading);\nexport const getSearchBoxDatasFailed = createSelector(getSearchBoxDatasState, fromSearchBoxData.getFailed);\nexport const getSearchBoxDatasData = createSelector(getSearchBoxDatasState, fromSearchBoxData.getData);\n\n/**\n * get Trees Dossier Navigator\n * \n */\nexport const getDossierTreeDataState = (state: State) => state.dossierDatas;\nexport const getDossierTreesLoaded = createSelector(getDossierTreeDataState, fromDossiersData.getLoaded);\nexport const getDossierTreesLoading = createSelector(getDossierTreeDataState, fromDossiersData.getLoading);\nexport const getDossierTreesFailed = createSelector(getDossierTreeDataState, fromDossiersData.getFailed);\nexport const getDossierTreesData = createSelector(getDossierTreeDataState, fromDossiersData.getTrees);\nexport const getFiltersDossier = createSelector(getDossierTreeDataState, fromDossiersData.getFilters);\nexport const getTreeDetail = createSelector(getDossierTreeDataState, fromDossiersData.getTreeDetail);\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TemplateModel.html":{"url":"classes/TemplateModel.html","title":"class - TemplateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  TemplateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/components/control-web-dav/template.model.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ITemplateModel\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                DisplayName\n                            \n                            \n                                FileName\n                            \n                            \n                                Href\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(model?: ITemplateModel)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/control-web-dav/template.model.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                  \n                                                        \n                                                                    ITemplateModel\n                                                        \n                                                  \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DisplayName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DisplayName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/control-web-dav/template.model.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            FileName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        FileName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/control-web-dav/template.model.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Href\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        Href:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/components/control-web-dav/template.model.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class TemplateModel implements ITemplateModel {\n    FileName: string;\n    DisplayName: string;\n    Href: string;\n    constructor(model?: ITemplateModel) {\n        if (model) {\n            this.FileName = model.DisplayName;\n            this.DisplayName = model.DisplayName !== null ? model.DisplayName.split('.')[0] : '_blank';\n            this.Href = model.Href;\n        }\n    }\n}\n\nexport interface ITemplateModel {\n    FileName: string;\n    DisplayName: string;\n    Href: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToolbarsComponent.html":{"url":"components/ToolbarsComponent.html","title":"component - ToolbarsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToolbarsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/layouts/contents/toolbars/toolbars.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-toolbars\n            \n\n            \n                styleUrls\n                toolbars.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./toolbars.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                goBack\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                actionCancel\n                            \n                            \n                                actionDelete\n                            \n                            \n                                actionNew\n                            \n                            \n                                actionSave\n                            \n                            \n                                isBack\n                            \n                            \n                                titlePage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onGoBack\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/layouts/contents/toolbars/toolbars.component.ts:27\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        actionCancel\n                    \n                    \n                            \n                            Type:    ActionHandler\n\n                            \n                        \n                            Default value: new ActionHandler()\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/layouts/contents/toolbars/toolbars.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        actionDelete\n                    \n                    \n                            \n                            Type:    ActionHandler\n\n                            \n                        \n                            Default value: new ActionHandler()\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/layouts/contents/toolbars/toolbars.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        actionNew\n                    \n                    \n                            \n                            Type:    ActionHandler\n\n                            \n                        \n                            Default value: new ActionHandler()\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/layouts/contents/toolbars/toolbars.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        actionSave\n                    \n                    \n                            \n                            Type:    ActionHandler\n\n                            \n                        \n                            Default value: new ActionHandler()\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/layouts/contents/toolbars/toolbars.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isBack\n                    \n                    \n                            \n                            Type:    Boolean\n\n                            \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/layouts/contents/toolbars/toolbars.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        titlePage\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/layouts/contents/toolbars/toolbars.component.ts:25\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onGoBack\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/layouts/contents/toolbars/toolbars.component.ts:27\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            goBack\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        goBack(e: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/layouts/contents/toolbars/toolbars.component.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { ActionHandler } from '../../../models';\n\nimport {\n  Component,\n  Input,\n  EventEmitter,\n  Output,\n  ChangeDetectionStrategy,\n} from '@angular/core';\n\n@Component({\n  selector: 'app-toolbars',\n  templateUrl: './toolbars.component.html',\n  styleUrls: ['./toolbars.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class ToolbarsComponent {\n\n  // actionHandler\n  @Input() actionNew: ActionHandler = new ActionHandler();\n  @Input() actionCancel: ActionHandler = new ActionHandler();\n  @Input() actionSave: ActionHandler = new ActionHandler();\n  @Input() actionDelete: ActionHandler = new ActionHandler();\n  @Input() titlePage: string;\n  @Input() isBack: Boolean = false;\n  @Output() onGoBack: EventEmitter = new EventEmitter();\n\n  constructor() { }\n\n  public goBack(e): void {\n    this.onGoBack.emit(e);\n  }\n}\n\n    \n\n    \n        \n    \n        \n            \n        \n        {{ titlePage }}\n        \n            \n                \n                    \n                    \n                    \n                    \n\n                    \n                        \n                        \n                    \n\n                    \n                        \n                        \n                    \n\n                    \n                        \n                        \n                    \n\n                    \n                        \n                        \n                    \n                \n            \n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{ titlePage }}n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'body'},{'name': 'BreadCrumbComponent', 'selector': 'app-bread-crumb'},{'name': 'ControlWebDavComponent', 'selector': 'app-control-web-dav'},{'name': 'DocumentGenerationComponent', 'selector': 'app-document-generation'},{'name': 'DocumentReportViewerComponent', 'selector': 'app-document-report-viewer'},{'name': 'DossierDetailsComponent', 'selector': 'app-dossier-details'},{'name': 'DossierNavigatorComponent', 'selector': 'app-dossier-navigator'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HorizontalNavigationComponent', 'selector': 'kiss-menu-header'},{'name': 'LanguageSelectorComponent', 'selector': 'language-selector'},{'name': 'LayoutContainer', 'selector': 'app-layout'},{'name': 'LeftSidebarComponent', 'selector': 'app-left-sidebar'},{'name': 'LoginComponent', 'selector': 'login'},{'name': 'NavFiltersComponent', 'selector': 'dossier-nav-filters'},{'name': 'NotificationBoxComponent', 'selector': 'app-notification-box'},{'name': 'PageBadGatewayComponent', 'selector': 'page-gate-way'},{'name': 'PageContentComponent', 'selector': 'page-content'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PersonFormComponent', 'selector': 'app-person-form'},{'name': 'PersonListComponent', 'selector': 'app-person-list'},{'name': 'PersonsComponent', 'selector': 'app-person'},{'name': 'ProfileBarComponent', 'selector': 'profile-bar'},{'name': 'ReportViewerComponent', 'selector': 'app-report-viewer'},{'name': 'SearchBoxComponent', 'selector': 'kiss-search-box'},{'name': 'SelectedActionsComponent', 'selector': 'app-selected-actions'},{'name': 'SpinnerComponent', 'selector': 'spinner'},{'name': 'ToolbarsComponent', 'selector': 'app-toolbars'},{'name': 'TreeDetailComponent', 'selector': 'app-tree-detail'},{'name': 'TreeListComponent', 'selector': 'app-tree-list'}];\n    var DIRECTIVES = [{'name': 'AuthorizeDirective', 'selector': '[appAuthorize]'},{'name': 'DynamicTabsDirective', 'selector': '[dynamic-tabs]'}];\n    var ACTUAL_COMPONENT = {'name': 'ToolbarsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TreeDetailComponent.html":{"url":"components/TreeDetailComponent.html","title":"component - TreeDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TreeDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dossier-navigator/tree-detail/tree-detail.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tree-detail\n            \n\n            \n                styleUrls\n                tree-detail.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tree-detail.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                colCountByScreen\n                            \n                            \n                                    Public\n                                dossierSandbox\n                            \n                            \n                                formData\n                            \n                            \n                                    Public\n                                treeForm\n                            \n                            \n                                    Protected\n                                permissions\n                            \n                            \n                                    Public\n                                titlePage\n                            \n                            \n                                    Private\n                                titleService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getSizeScreen\n                            \n                            \n                                goBack\n                            \n                            \n                                    Private\n                                loadDetail\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                getTitle\n                            \n                            \n                                    Public\n                                setTitle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(injector: Injector, dossierSandbox: DossierSandbox, router: Router, location: Location)\n                    \n                \n                        \n                            \n                                Defined in src/app/dossier-navigator/tree-detail/tree-detail.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                    Injector\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        dossierSandbox\n                                                  \n                                                        \n                                                                    DossierSandbox\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                    Location\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getSizeScreen\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetSizeScreen(width: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dossier-navigator/tree-detail/tree-detail.component.ts:52\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        width\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     \"xs\" | \"sm\" | \"md\" | \"lg\"\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goBack\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoBack()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dossier-navigator/tree-detail/tree-detail.component.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadDetail\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loadDetail()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dossier-navigator/tree-detail/tree-detail.component.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dossier-navigator/tree-detail/tree-detail.component.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getTitle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getTitle()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setTitle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setTitle(newTitle: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        newTitle\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            colCountByScreen\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        colCountByScreen:     Object\n\n                    \n                \n                    \n                        \n                            Type :     Object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    xs: 1,\n    sm: 3,\n    md: 3,\n    lg: 3\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dossier-navigator/tree-detail/tree-detail.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dossierSandbox\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dossierSandbox:     DossierSandbox\n\n                    \n                \n                    \n                        \n                            Type :     DossierSandbox\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dossier-navigator/tree-detail/tree-detail.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        formData:     TreeModel\n\n                    \n                \n                    \n                        \n                            Type :     TreeModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dossier-navigator/tree-detail/tree-detail.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            treeForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        treeForm:     DxFormComponent\n\n                    \n                \n                    \n                        \n                            Type :     DxFormComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dossier-navigator/tree-detail/tree-detail.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            permissions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        permissions:     ClassRightModel\n\n                    \n                \n                    \n                        \n                            Type :     ClassRightModel\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            titlePage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        titlePage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            titleService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        titleService:     Title\n\n                    \n                \n                    \n                        \n                            Type :     Title\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { DossierSandbox } from './../dossier.sandbox';\nimport { DxFormComponent } from 'devextreme-angular';\nimport { Component, OnInit, Input, ViewChild, Injector } from '@angular/core';\nimport {\n  DossierNavigatorTreeModel as TreeModel\n} from '../../shared/models';\nimport { BaseComponent } from '../../shared/components/base.component';\n\n@Component({\n  selector: 'app-tree-detail',\n  templateUrl: './tree-detail.component.html',\n  styleUrls: ['./tree-detail.component.scss']\n})\n\nexport class TreeDetailComponent extends BaseComponent implements OnInit {\n\n  formData: TreeModel;\n  @ViewChild('treeForm')\n  public treeForm: DxFormComponent;\n\n  colCountByScreen: Object = {\n    xs: 1,\n    sm: 3,\n    md: 3,\n    lg: 3\n  };\n\n  constructor(\n    injector: Injector,\n    public dossierSandbox: DossierSandbox,\n    private router: Router,\n    private location: Location) {\n    super(injector);\n  }\n\n  ngOnInit(): void {\n    this.loadDetail();\n  }\n\n  private loadDetail(): void {\n    this.dossierSandbox.dossierDetail$.subscribe((dossier: any) => {\n      if (dossier) {\n        this.formData = dossier;\n        this.titlePage = `Detail ${dossier.name}`;\n        this.setTitle(this.titlePage);\n      }\n    });\n  }\n\n  getSizeScreen(width) {\n    if (width \n    \n\n    \n        \n\n\n  \n    \n      This is dossiers detail\n      \n\n        \n          \n            \n          \n          \n            \n          \n        \n\n        \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            This is dossiers detail                                                                                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'body'},{'name': 'BreadCrumbComponent', 'selector': 'app-bread-crumb'},{'name': 'ControlWebDavComponent', 'selector': 'app-control-web-dav'},{'name': 'DocumentGenerationComponent', 'selector': 'app-document-generation'},{'name': 'DocumentReportViewerComponent', 'selector': 'app-document-report-viewer'},{'name': 'DossierDetailsComponent', 'selector': 'app-dossier-details'},{'name': 'DossierNavigatorComponent', 'selector': 'app-dossier-navigator'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HorizontalNavigationComponent', 'selector': 'kiss-menu-header'},{'name': 'LanguageSelectorComponent', 'selector': 'language-selector'},{'name': 'LayoutContainer', 'selector': 'app-layout'},{'name': 'LeftSidebarComponent', 'selector': 'app-left-sidebar'},{'name': 'LoginComponent', 'selector': 'login'},{'name': 'NavFiltersComponent', 'selector': 'dossier-nav-filters'},{'name': 'NotificationBoxComponent', 'selector': 'app-notification-box'},{'name': 'PageBadGatewayComponent', 'selector': 'page-gate-way'},{'name': 'PageContentComponent', 'selector': 'page-content'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PersonFormComponent', 'selector': 'app-person-form'},{'name': 'PersonListComponent', 'selector': 'app-person-list'},{'name': 'PersonsComponent', 'selector': 'app-person'},{'name': 'ProfileBarComponent', 'selector': 'profile-bar'},{'name': 'ReportViewerComponent', 'selector': 'app-report-viewer'},{'name': 'SearchBoxComponent', 'selector': 'kiss-search-box'},{'name': 'SelectedActionsComponent', 'selector': 'app-selected-actions'},{'name': 'SpinnerComponent', 'selector': 'spinner'},{'name': 'ToolbarsComponent', 'selector': 'app-toolbars'},{'name': 'TreeDetailComponent', 'selector': 'app-tree-detail'},{'name': 'TreeListComponent', 'selector': 'app-tree-list'}];\n    var DIRECTIVES = [{'name': 'AuthorizeDirective', 'selector': '[appAuthorize]'},{'name': 'DynamicTabsDirective', 'selector': '[dynamic-tabs]'}];\n    var ACTUAL_COMPONENT = {'name': 'TreeDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TreeListComponent.html":{"url":"components/TreeListComponent.html","title":"component - TreeListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TreeListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dossier-navigator/tree-list/tree-list.component.ts\n\n\n\n    \n        Extends\n    \n    \n            BaseComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tree-list\n            \n\n            \n                styleUrls\n                tree-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tree-list.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dossierSandbox\n                            \n                            \n                                icon_Characters_Url\n                            \n                            \n                                icon_Name_Url\n                            \n                            \n                                TreesData\n                            \n                            \n                                    Protected\n                                permissions\n                            \n                            \n                                    Public\n                                titlePage\n                            \n                            \n                                    Private\n                                titleService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                onSelect\n                            \n                            \n                                    Public\n                                getTitle\n                            \n                            \n                                    Public\n                                setTitle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(injector: Injector, dossierSandbox: DossierSandbox, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/dossier-navigator/tree-list/tree-list.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                    Injector\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        dossierSandbox\n                                                  \n                                                        \n                                                                    DossierSandbox\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dossier-navigator/tree-list/tree-list.component.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onSelect\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        onSelect(treeModel: TreeModel)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/dossier-navigator/tree-list/tree-list.component.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        treeModel\n                                                        \n                                                                    TreeModel\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getTitle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getTitle()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setTitle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setTitle(newTitle: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        newTitle\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dossierSandbox\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dossierSandbox:     DossierSandbox\n\n                    \n                \n                    \n                        \n                            Type :     DossierSandbox\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dossier-navigator/tree-list/tree-list.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            icon_Characters_Url\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        icon_Characters_Url:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : 'assets/icon/characters-and-numbers/svg/'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dossier-navigator/tree-list/tree-list.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            icon_Name_Url\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        icon_Name_Url:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : 'assets/icon/'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dossier-navigator/tree-list/tree-list.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TreesData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        TreesData:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dossier-navigator/tree-list/tree-list.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            permissions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        permissions:     ClassRightModel\n\n                    \n                \n                    \n                        \n                            Type :     ClassRightModel\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            titlePage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        titlePage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            titleService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        titleService:     Title\n\n                    \n                \n                    \n                        \n                            Type :     Title\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseComponent:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { SelectedActionsModel } from './../../shared/models';\nimport { Router } from '@angular/router';\nimport { DossierSandbox } from './../dossier.sandbox';\nimport {\n    Component,\n    ChangeDetectionStrategy,\n    OnInit,\n    Injector,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { DossierNavigatorTreeModel as TreeModel } from './../../shared/models';\nimport { BaseComponent } from '../../shared/components/base.component';\n\n@Component({\n    selector: 'app-tree-list',\n    templateUrl: './tree-list.component.html',\n    styleUrls: ['./tree-list.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class TreeListComponent extends BaseComponent implements OnInit {\n\n    TreesData: Array;\n    icon_Name_Url: any = 'assets/icon/';\n    icon_Characters_Url: any = 'assets/icon/characters-and-numbers/svg/';\n\n    constructor(\n        injector: Injector,\n        public dossierSandbox: DossierSandbox,\n        private router: Router) {\n        super(injector);\n    }\n\n    ngOnInit(): void {\n        this.titlePage = 'Dossiernavigator';\n        this.setTitle(this.titlePage);\n    }\n\n    public onSelect(treeModel: TreeModel): void {\n        this.dossierSandbox.selectDossier(treeModel);\n        this.router.navigate([`dossier/detail/${treeModel.id}/${treeModel.faLeistungId}`]);\n    }\n}\n\n    \n\n    \n        \n\n\n    \n        \n        \n    \n\n    \n        \n            \n\n                 -->\n                 -->\n                 -->\n                 -->\n                 -->\n                 -->\n                \n                \n                \n                \n                \n                \n                \n                \n                \n                 -->\n                \n                \n\n                \n                    \n                    {{options.data.name}}\n                \n                \n                     0\" style.background-image=\"url('{{icon_Characters_Url}}{{options.data.b}}.svg')\">\n                \n                \n                     0\" style.background-image=\"url('{{icon_Characters_Url}}{{options.data.f}}.svg')\">\n                \n                \n                     0\" style.background-image=\"url('{{icon_Characters_Url}}{{options.data.s}}.svg')\">\n                \n                \n                     0\" style.background-image=\"url('{{icon_Characters_Url}}{{options.data.i}}.svg')\">\n                \n                \n                     0\" style.background-image=\"url('{{icon_Characters_Url}}{{options.data.m}}.svg')\">\n                \n                \n                     0\" style.background-image=\"url('{{icon_Characters_Url}}{{options.data.a}}.svg')\">\n                \n                \n                     0\" style.background-image=\"url('{{icon_Characters_Url}}{{options.data.k}}.svg')\">\n                \n            \n        \n\n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                 -->                 -->                 -->                 -->                 -->                 -->                                                                                                                                                                 -->                                                                                        {{options.data.name}}                                                     0\" style.background-image=\"url(\\'{{icon_Characters_Url}}{{options.data.b}}.svg\\')\">                                                     0\" style.background-image=\"url(\\'{{icon_Characters_Url}}{{options.data.f}}.svg\\')\">                                                     0\" style.background-image=\"url(\\'{{icon_Characters_Url}}{{options.data.s}}.svg\\')\">                                                     0\" style.background-image=\"url(\\'{{icon_Characters_Url}}{{options.data.i}}.svg\\')\">                                                     0\" style.background-image=\"url(\\'{{icon_Characters_Url}}{{options.data.m}}.svg\\')\">                                                     0\" style.background-image=\"url(\\'{{icon_Characters_Url}}{{options.data.a}}.svg\\')\">                                                     0\" style.background-image=\"url(\\'{{icon_Characters_Url}}{{options.data.k}}.svg\\')\">                                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'body'},{'name': 'BreadCrumbComponent', 'selector': 'app-bread-crumb'},{'name': 'ControlWebDavComponent', 'selector': 'app-control-web-dav'},{'name': 'DocumentGenerationComponent', 'selector': 'app-document-generation'},{'name': 'DocumentReportViewerComponent', 'selector': 'app-document-report-viewer'},{'name': 'DossierDetailsComponent', 'selector': 'app-dossier-details'},{'name': 'DossierNavigatorComponent', 'selector': 'app-dossier-navigator'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HorizontalNavigationComponent', 'selector': 'kiss-menu-header'},{'name': 'LanguageSelectorComponent', 'selector': 'language-selector'},{'name': 'LayoutContainer', 'selector': 'app-layout'},{'name': 'LeftSidebarComponent', 'selector': 'app-left-sidebar'},{'name': 'LoginComponent', 'selector': 'login'},{'name': 'NavFiltersComponent', 'selector': 'dossier-nav-filters'},{'name': 'NotificationBoxComponent', 'selector': 'app-notification-box'},{'name': 'PageBadGatewayComponent', 'selector': 'page-gate-way'},{'name': 'PageContentComponent', 'selector': 'page-content'},{'name': 'PageNotFoundComponent', 'selector': 'page-not-found'},{'name': 'PersonFormComponent', 'selector': 'app-person-form'},{'name': 'PersonListComponent', 'selector': 'app-person-list'},{'name': 'PersonsComponent', 'selector': 'app-person'},{'name': 'ProfileBarComponent', 'selector': 'profile-bar'},{'name': 'ReportViewerComponent', 'selector': 'app-report-viewer'},{'name': 'SearchBoxComponent', 'selector': 'kiss-search-box'},{'name': 'SelectedActionsComponent', 'selector': 'app-selected-actions'},{'name': 'SpinnerComponent', 'selector': 'spinner'},{'name': 'ToolbarsComponent', 'selector': 'app-toolbars'},{'name': 'TreeDetailComponent', 'selector': 'app-tree-detail'},{'name': 'TreeListComponent', 'selector': 'app-tree-list'}];\n    var DIRECTIVES = [{'name': 'AuthorizeDirective', 'selector': '[appAuthorize]'},{'name': 'DynamicTabsDirective', 'selector': '[dynamic-tabs]'}];\n    var ACTUAL_COMPONENT = {'name': 'TreeListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TreeNavModel.html":{"url":"classes/TreeNavModel.html","title":"class - TreeNavModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  TreeNavModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/dossier/tree-nav.model.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ITreeNavModel\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                icon\n                            \n                            \n                                id\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data?: ITreeNavModel)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/models/dossier/tree-nav.model.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    ITreeNavModel\n                                                        \n                                                  \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        content:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/dossier/tree-nav.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            icon\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        icon:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/dossier/tree-nav.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/dossier/tree-nav.model.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            text\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        text:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/dossier/tree-nav.model.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class TreeNavModel implements ITreeNavModel {\n    id: number;\n    text: string;\n    icon: string;\n    content: string;\n    constructor(data?: ITreeNavModel) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (this)[property] = (data)[property];\n            }\n        }\n    }\n}\n\n\nexport class ITreeNavModel {\n    id: number;\n    text: string;\n    icon: string;\n    content: string;\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateAction.html":{"url":"classes/UpdateAction.html","title":"class - UpdateAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/store/actions/persons.action.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: any, payload: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/store/actions/persons.action.ts:71\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/actions/persons.action.ts:72\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : ActionTypes.UPDATE\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/actions/persons.action.ts:71\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { DELETE } from './../../asyncServices/http/http.decorator';\nimport { Account } from './../../models/account.model';\nimport { Action }   from '@ngrx/store';\nimport { Person }  from '../../models';\nimport { type }     from '../../utility';\n\nexport const ActionTypes = {\n  // Actions Load data\n  LOAD:               type('[Persons] Load'),\n  LOAD_SUCCESS:       type('[Persons] Load Success'),\n  LOAD_FAIL:          type('[Persons] Load Fail'),\n  // Actions Add New person\n  ADD_NEW:            type('[Person] User Add new'),\n  ADDING:             type('[Person] Adding'),\n  ADD_SUCCESS:        type('[Person] Add new person success'),\n  Add_FAIL:           type('[Person] Add new person Fail'),\n  // Action Update\n  UPDATE:             type('[Person] Update'),\n  UPDATING:           type('[Person] Updating'),\n  UPDATE_SUCCESS:     type('[Person] Update success'),\n  UPDATE_FAIL:        type('[Person] Update fail'),\n  // Action Delete\n  DELETE:             type('[Person] Delete person'),\n  DELETING:           type('[Person] Deleting'),\n  DELETE_SUCCESS:     type('[Person] Delete success'),\n  DELETE_FAIL:        type('[Person] Delete fail'),\n  \n  // page details\n  LOAD_DETAIL:        type('Person Load detail')\n};\n\n/**\n * Person Action\n */\n\n export class LoadAction implements Action {\n    type = ActionTypes.LOAD;\n\n    constructor(public payload: any = null) {}\n }\n\n export class LoadSuccessAction implements Action {\n    type = ActionTypes.LOAD_SUCCESS;\n  \n    constructor(public payload: Array) { }\n  }\n  \n  export class LoadFailAction implements Action {\n    type = ActionTypes.LOAD_FAIL;\n  \n    constructor(public payload: any = null) { }\n  }\n\n  export class AddNewAction implements Action {\n    type = ActionTypes.ADD_NEW;\n\n    constructor(public payload: Person) {}\n  }\n\n  export class AddSuccessAction implements Action {\n    type = ActionTypes.ADD_SUCCESS;\n    constructor(public payload: Person){}\n  }\n\n  export class AddFailAction implements Action {\n    type = ActionTypes.Add_FAIL;\n    constructor(public payload: any = null){}\n  }\n\n  export class UpdateAction implements Action {\n    type = ActionTypes.UPDATE;\n    constructor(id: any, public payload: any = null) {}\n  }\n\n  export class UpdateSuccessAction implements Action {\n    type = ActionTypes.UPDATE_SUCCESS;\n    constructor(public payload: any = null){}\n  }\n\n  export class UpdateFailAction implements Action {\n    type = ActionTypes.UPDATE_FAIL;\n    constructor(public payload: any = null){}\n  }\n\n  export class DeleteAction implements Action {\n    type = ActionTypes.DELETE;\n    constructor(public payload: any){}\n  }\n\n  export class DeleteSuccessAction implements Action {\n    type = ActionTypes.DELETE_SUCCESS;\n    constructor(public payload: any = null){}\n  }\n\n  export class DeleteFailAction implements Action {\n    type = ActionTypes.DELETE_FAIL;\n    constructor(public payload: any = null){}\n  }\n  \n  export type Actions\n    = LoadAction\n    | LoadSuccessAction\n    | LoadFailAction\n    | AddNewAction\n    | AddSuccessAction\n    | AddFailAction\n    | UpdateAction\n    | UpdateSuccessAction\n    | UpdateFailAction\n    | DeleteAction\n    | DeleteSuccessAction\n    | DeleteFailAction\n \n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateFailAction.html":{"url":"classes/UpdateFailAction.html","title":"class - UpdateFailAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateFailAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/store/actions/persons.action.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/store/actions/persons.action.ts:81\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/actions/persons.action.ts:82\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : ActionTypes.UPDATE_FAIL\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/actions/persons.action.ts:81\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { DELETE } from './../../asyncServices/http/http.decorator';\nimport { Account } from './../../models/account.model';\nimport { Action }   from '@ngrx/store';\nimport { Person }  from '../../models';\nimport { type }     from '../../utility';\n\nexport const ActionTypes = {\n  // Actions Load data\n  LOAD:               type('[Persons] Load'),\n  LOAD_SUCCESS:       type('[Persons] Load Success'),\n  LOAD_FAIL:          type('[Persons] Load Fail'),\n  // Actions Add New person\n  ADD_NEW:            type('[Person] User Add new'),\n  ADDING:             type('[Person] Adding'),\n  ADD_SUCCESS:        type('[Person] Add new person success'),\n  Add_FAIL:           type('[Person] Add new person Fail'),\n  // Action Update\n  UPDATE:             type('[Person] Update'),\n  UPDATING:           type('[Person] Updating'),\n  UPDATE_SUCCESS:     type('[Person] Update success'),\n  UPDATE_FAIL:        type('[Person] Update fail'),\n  // Action Delete\n  DELETE:             type('[Person] Delete person'),\n  DELETING:           type('[Person] Deleting'),\n  DELETE_SUCCESS:     type('[Person] Delete success'),\n  DELETE_FAIL:        type('[Person] Delete fail'),\n  \n  // page details\n  LOAD_DETAIL:        type('Person Load detail')\n};\n\n/**\n * Person Action\n */\n\n export class LoadAction implements Action {\n    type = ActionTypes.LOAD;\n\n    constructor(public payload: any = null) {}\n }\n\n export class LoadSuccessAction implements Action {\n    type = ActionTypes.LOAD_SUCCESS;\n  \n    constructor(public payload: Array) { }\n  }\n  \n  export class LoadFailAction implements Action {\n    type = ActionTypes.LOAD_FAIL;\n  \n    constructor(public payload: any = null) { }\n  }\n\n  export class AddNewAction implements Action {\n    type = ActionTypes.ADD_NEW;\n\n    constructor(public payload: Person) {}\n  }\n\n  export class AddSuccessAction implements Action {\n    type = ActionTypes.ADD_SUCCESS;\n    constructor(public payload: Person){}\n  }\n\n  export class AddFailAction implements Action {\n    type = ActionTypes.Add_FAIL;\n    constructor(public payload: any = null){}\n  }\n\n  export class UpdateAction implements Action {\n    type = ActionTypes.UPDATE;\n    constructor(id: any, public payload: any = null) {}\n  }\n\n  export class UpdateSuccessAction implements Action {\n    type = ActionTypes.UPDATE_SUCCESS;\n    constructor(public payload: any = null){}\n  }\n\n  export class UpdateFailAction implements Action {\n    type = ActionTypes.UPDATE_FAIL;\n    constructor(public payload: any = null){}\n  }\n\n  export class DeleteAction implements Action {\n    type = ActionTypes.DELETE;\n    constructor(public payload: any){}\n  }\n\n  export class DeleteSuccessAction implements Action {\n    type = ActionTypes.DELETE_SUCCESS;\n    constructor(public payload: any = null){}\n  }\n\n  export class DeleteFailAction implements Action {\n    type = ActionTypes.DELETE_FAIL;\n    constructor(public payload: any = null){}\n  }\n  \n  export type Actions\n    = LoadAction\n    | LoadSuccessAction\n    | LoadFailAction\n    | AddNewAction\n    | AddSuccessAction\n    | AddFailAction\n    | UpdateAction\n    | UpdateSuccessAction\n    | UpdateFailAction\n    | DeleteAction\n    | DeleteSuccessAction\n    | DeleteFailAction\n \n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSelectedAction.html":{"url":"classes/UpdateSelectedAction.html","title":"class - UpdateSelectedAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSelectedAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/store/actions/settings.action.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/store/actions/settings.action.ts:67\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/actions/settings.action.ts:68\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : ActionTypes.UPDATE_SELECT_ACTION\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/actions/settings.action.ts:67\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\nimport { type } from '../../utility';\n\nexport const ActionTypes = {\n  SET_LANGUAGE: type('[Settings] SetLanguage'),\n  SET_CULTURE: type('[Settings] SetCulture'),\n  LOAD_API_ROLES: type('[LOAD_API_ROLES] call api'),\n  SET_AVAIBLE_ROLES: type('[SET_AVAIBLE_ROLES] Get data'),\n  LOAD_FAIL: type('[LOAD_FAIL] Load Fail'),\n  LOAD_API_LANGUAGE: type('[LOAD_API_LANGUAGE] call api translations'),\n  SET_AVAIBLE_LANGUAGE: type('[SET_AVAIBLE_LANGUAGE] Get data'),\n  UPDATE_SELECT_ACTION: type('[UPDATE_SELECT_ACTION] Set'),\n  DELETE_ITEM_SELECT_ACTION: type('[DELETE_ITEM_SELECT_ACTION] update'),\n  RESET_STATE: type('[RESET_STATE] reset state for setting'),\n  DOCUMENT_CREATE: type('[Document create action] call'),\n  DOCUMENT_CREATE_SUCCESS: type('[Document create action] Success'),\n  DOCUMENT_CREATE_ERROR: type('[Document create action] Error')\n};\n\n/**\n * Settings Actions\n */\nexport class SetLanguageAction implements Action {\n  type = ActionTypes.SET_LANGUAGE;\n\n  constructor(public payload: string) { }\n}\n\nexport class SetCultureAction implements Action {\n  type = ActionTypes.SET_CULTURE;\n\n  constructor(public payload: string) { }\n}\n\nexport class LoadApiRolesAction implements Action {\n  type = ActionTypes.LOAD_API_ROLES;\n\n  constructor(public payload: any = null) { };\n}\n\nexport class SetAvailableRolesAction implements Action {\n  type = ActionTypes.SET_AVAIBLE_ROLES;\n\n  constructor(public payload: any) { };\n}\n\nexport class LoadFailAction implements Action {\n  type = ActionTypes.LOAD_FAIL;\n\n  constructor(public payload: any = null) { };\n}\n\n// language\nexport class LoadApiLangsAction implements Action {\n  type = ActionTypes.LOAD_API_LANGUAGE;\n\n  constructor(public payload: any = null) { };\n}\n\nexport class SetAvailableLanguagesAction implements Action {\n  type = ActionTypes.SET_AVAIBLE_LANGUAGE;\n\n  constructor(public payload: any) { };\n}\n\nexport class UpdateSelectedAction implements Action {\n  type = ActionTypes.UPDATE_SELECT_ACTION;\n  constructor(public payload: any) { }\n}\n\nexport class DeleteItemSelectedAction implements Action {\n  type = ActionTypes.DELETE_ITEM_SELECT_ACTION;\n  constructor(public payload: any) { }\n}\n\nexport class ResetState implements Action {\n  type = ActionTypes.RESET_STATE;\n  constructor(public payload: any = null) { }\n}\n\n// DOCUMENT CREATE FEATURE\nexport class DocumentCreate implements Action {\n  type = ActionTypes.DOCUMENT_CREATE;\n  constructor(public payload: any = null) { };\n}\n\nexport class DocumentCreateSuccess implements Action {\n  type = ActionTypes.DOCUMENT_CREATE_SUCCESS;\n  constructor(public payload: any = null) { };\n}\n\nexport class DocumentCreateError implements Action {\n  type = ActionTypes.DOCUMENT_CREATE;\n  constructor(public payload: any = null) { };\n}\n// DOCUMENT CREATE FEATURE\n\nexport type Actions\n  = SetLanguageAction\n  | SetCultureAction\n  | LoadApiRolesAction\n  | SetAvailableRolesAction\n  | LoadFailAction\n  | LoadApiLangsAction\n  | SetAvailableLanguagesAction\n  | UpdateSelectedAction\n  | DeleteItemSelectedAction\n  | ResetState\n  | DocumentCreate\n  | DocumentCreateSuccess\n  | DocumentCreateError;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSuccessAction.html":{"url":"classes/UpdateSuccessAction.html","title":"class - UpdateSuccessAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSuccessAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/store/actions/persons.action.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/store/actions/persons.action.ts:76\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/actions/persons.action.ts:77\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : ActionTypes.UPDATE_SUCCESS\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/store/actions/persons.action.ts:76\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { DELETE } from './../../asyncServices/http/http.decorator';\nimport { Account } from './../../models/account.model';\nimport { Action }   from '@ngrx/store';\nimport { Person }  from '../../models';\nimport { type }     from '../../utility';\n\nexport const ActionTypes = {\n  // Actions Load data\n  LOAD:               type('[Persons] Load'),\n  LOAD_SUCCESS:       type('[Persons] Load Success'),\n  LOAD_FAIL:          type('[Persons] Load Fail'),\n  // Actions Add New person\n  ADD_NEW:            type('[Person] User Add new'),\n  ADDING:             type('[Person] Adding'),\n  ADD_SUCCESS:        type('[Person] Add new person success'),\n  Add_FAIL:           type('[Person] Add new person Fail'),\n  // Action Update\n  UPDATE:             type('[Person] Update'),\n  UPDATING:           type('[Person] Updating'),\n  UPDATE_SUCCESS:     type('[Person] Update success'),\n  UPDATE_FAIL:        type('[Person] Update fail'),\n  // Action Delete\n  DELETE:             type('[Person] Delete person'),\n  DELETING:           type('[Person] Deleting'),\n  DELETE_SUCCESS:     type('[Person] Delete success'),\n  DELETE_FAIL:        type('[Person] Delete fail'),\n  \n  // page details\n  LOAD_DETAIL:        type('Person Load detail')\n};\n\n/**\n * Person Action\n */\n\n export class LoadAction implements Action {\n    type = ActionTypes.LOAD;\n\n    constructor(public payload: any = null) {}\n }\n\n export class LoadSuccessAction implements Action {\n    type = ActionTypes.LOAD_SUCCESS;\n  \n    constructor(public payload: Array) { }\n  }\n  \n  export class LoadFailAction implements Action {\n    type = ActionTypes.LOAD_FAIL;\n  \n    constructor(public payload: any = null) { }\n  }\n\n  export class AddNewAction implements Action {\n    type = ActionTypes.ADD_NEW;\n\n    constructor(public payload: Person) {}\n  }\n\n  export class AddSuccessAction implements Action {\n    type = ActionTypes.ADD_SUCCESS;\n    constructor(public payload: Person){}\n  }\n\n  export class AddFailAction implements Action {\n    type = ActionTypes.Add_FAIL;\n    constructor(public payload: any = null){}\n  }\n\n  export class UpdateAction implements Action {\n    type = ActionTypes.UPDATE;\n    constructor(id: any, public payload: any = null) {}\n  }\n\n  export class UpdateSuccessAction implements Action {\n    type = ActionTypes.UPDATE_SUCCESS;\n    constructor(public payload: any = null){}\n  }\n\n  export class UpdateFailAction implements Action {\n    type = ActionTypes.UPDATE_FAIL;\n    constructor(public payload: any = null){}\n  }\n\n  export class DeleteAction implements Action {\n    type = ActionTypes.DELETE;\n    constructor(public payload: any){}\n  }\n\n  export class DeleteSuccessAction implements Action {\n    type = ActionTypes.DELETE_SUCCESS;\n    constructor(public payload: any = null){}\n  }\n\n  export class DeleteFailAction implements Action {\n    type = ActionTypes.DELETE_FAIL;\n    constructor(public payload: any = null){}\n  }\n  \n  export type Actions\n    = LoadAction\n    | LoadSuccessAction\n    | LoadFailAction\n    | AddNewAction\n    | AddSuccessAction\n    | AddFailAction\n    | UpdateAction\n    | UpdateSuccessAction\n    | UpdateFailAction\n    | DeleteAction\n    | DeleteSuccessAction\n    | DeleteFailAction\n \n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/auth/user.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                access_token\n                            \n                            \n                                    Public\n                                    Optional\n                                expires_in\n                            \n                            \n                                    Public\n                                    Optional\n                                isLoggedIn\n                            \n                            \n                                    Public\n                                    Optional\n                                token_type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                remove\n                            \n                            \n                                    Public\n                                save\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(user?: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/models/auth/user.model.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            access_token\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        access_token:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/auth/user.model.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            expires_in\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        expires_in:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/auth/user.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            isLoggedIn\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isLoggedIn:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/auth/user.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            token_type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        token_type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/models/auth/user.model.ts:6\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            remove\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        remove()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/models/auth/user.model.ts:28\n                            \n                        \n\n\n                \n                    \n                            Saves user into local storage\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            save\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        save()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/models/auth/user.model.ts:20\n                            \n                        \n\n\n                \n                    \n                            Saves user into local storage\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n\n  public access_token?: string;\n  public expires_in? : any;\n  public isLoggedIn?:    boolean;\n  public token_type?:  string;\n\n  constructor(user?: any) {\n    this.access_token  = user ? user.access_token : '';\n    this.isLoggedIn   = this.access_token ? true : false;\n    this.token_type = user ? user.token_type : '';\n    this.expires_in = user ? user.expires_in : null;\n  }\n\n  /**\n   * Saves user into local storage\n   *\n   * @param user\n   */\n  public save(): void {\n    localStorage.setItem('currentUser', JSON.stringify(this));\n    localStorage.setItem('token', this.access_token);\n  }\n\n  /**\n   * Saves user into local storage\n   */\n  public remove(): void {\n    localStorage.setItem('currentUser', null);\n    localStorage.setItem('token', null);\n    localStorage.setItem('user', null);\n  }\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UtilService.html":{"url":"injectables/UtilService.html","title":"injectable - UtilService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  UtilService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/utility/utility.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                displayNotification\n                            \n                            \n                                    Public\n                                getConfig\n                            \n                            \n                                    Public\n                                translateLookupData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(translateService: TranslateService, notificationService: NotificationsService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/utility/utility.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            displayNotification\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        displayNotification(messageTranslationCode: string, type: string, titleTranslationCode?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/utility/utility.service.ts:23\n                            \n                        \n\n\n                \n                    \n                            Translates given message code and title code and displays corresponding notification\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        messageTranslationCode\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        type\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                'info'\n                                                        \n\n                                                \n                                                \n                                                        titleTranslationCode\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getConfig(key: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/utility/utility.service.ts:61\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translateLookupData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        translateLookupData(data: Array)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/utility/utility.service.ts:53\n                            \n                        \n\n\n                \n                    \n                            Translates lookup names by looking into lookup code\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Array\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { TranslateService } from 'ng2-translate';\nimport { NotificationsService } from 'angular2-notifications';\nimport { ConfigService } from '../../app-config.service';\nimport { Observable } from 'rxjs/rx';\n\n@Injectable()\nexport class UtilService {\n\n  constructor(\n    private translateService: TranslateService,\n    private notificationService: NotificationsService,\n    private configService: ConfigService\n  ) { }\n\n  /**\n   * Translates given message code and title code and displays corresponding notification\n   *\n   * @param messageTranslationCode\n   * @param type\n   * @param titleTranslationCode\n   */\n  public displayNotification(messageTranslationCode: string, type: string = 'info', titleTranslationCode?: string) {\n    const message: string = this.translateService.instant(messageTranslationCode);\n    let title: string = titleTranslationCode ? this.translateService.instant(titleTranslationCode) : null;\n\n    switch (type) {\n      case 'error':\n        title = this.translateService.instant('ErrorNotificationTitle');\n        break;\n\n      case 'success':\n        title = this.translateService.instant('SuccessNotificationTitle');\n        break;\n\n      case 'alert':\n        title = this.translateService.instant('WarningNotificationTitle');\n        break;\n\n      default:\n        title = this.translateService.instant('InfoNotificationTitle');\n        break;\n    }\n\n    this.notificationService[type](title, message, this.configService.get('notifications').options);\n  }\n\n  /**\n   * Translates lookup names by looking into lookup code\n   *\n   * @param data\n   */\n  public translateLookupData(data: Array): Array {\n    // Translate quantity stock adjustment reasons\n    return data.map(lookup => {\n      lookup.name = lookup.code ? this.translateService.instant('Lookups')[lookup.code] : lookup.name;\n      return lookup;\n    });\n  }\n\n  public getConfig(key: string): any {\n    return this.configService.get(key);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UtilityModule.html":{"url":"modules/UtilityModule.html","title":"module - UtilityModule","body":"\n                   \n\n\n\n\n  Modules\n  UtilityModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/utility/utility.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import {\n  NgModule,\n  ModuleWithProviders\n}                            from \"@angular/core\";\nimport { UtilService }       from './utility.service';\nimport { ValidationService } from './validation.service';\n\n@NgModule()\nexport class UtilityModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: UtilityModule,\n\n      providers: [\n        UtilService,\n        ValidationService\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValidationService.html":{"url":"injectables/ValidationService.html","title":"injectable - ValidationService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ValidationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/utility/validation.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                matchingPasswords\n                            \n                            \n                                    Public\n                                numericRequired\n                            \n                            \n                                    Public\n                                validateEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            matchingPasswords\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        matchingPasswords(controlKey: string, matchingControlKey: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/utility/validation.service.ts:34\n                            \n                        \n\n\n                \n                    \n                            Validates matching string values\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlKey\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        matchingControlKey\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     literal type\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            numericRequired\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        numericRequired(formControl: FormControl)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/utility/validation.service.ts:24\n                            \n                        \n\n\n                \n                    \n                            Validates required numeric values\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formControl\n                                                        \n                                                                    FormControl\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     literal type\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            validateEmail\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        validateEmail(formControl: FormControl)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/utility/validation.service.ts:14\n                            \n                        \n\n\n                \n                    \n                            Validates email address\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formControl\n                                                        \n                                                                    FormControl\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     literal type\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { \n  FormControl,\n  FormGroup\n}                     from '@angular/forms';\n@Injectable()\nexport class ValidationService {\n\n  /**\n   * Validates email address\n   *\n   * @param formControl\n   */\n  public validateEmail(formControl: FormControl): {[error: string]: any} {\n    let EMAIL_REGEXP = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return EMAIL_REGEXP.test(formControl.value) ? null : { validateEmail: { valid: false } };\n  }\n\n  /**\n   * Validates required numeric values\n   *\n   * @param formControl\n   */\n  public numericRequired(formControl: FormControl): {[error: string]: any} {\n    return (formControl.value && formControl.value > 0) ? null : { numericRequired: { valid: false } };\n  }\n\n  /**\n   * Validates matching string values\n   *\n   * @param controlKey\n   * @param matchingControlKey\n   */\n  public matchingPasswords(controlKey: string, matchingControlKey: string): {[error: string]: any} {\n    return (group: FormGroup): {[key: string]: any} => {\n      if (group.controls[controlKey].value !== group.controls[matchingControlKey].value) {\n        return { mismatch: { valid: false } };\n      }\n    }\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^4.0.2\n        \n            @angular/common : ^4.0.2\n        \n            @angular/compiler : ^4.0.2\n        \n            @angular/core : ^4.0.2\n        \n            @angular/forms : ^4.0.2\n        \n            @angular/http : ^4.0.2\n        \n            @angular/platform-browser : ^4.0.2\n        \n            @angular/platform-browser-dynamic : ^4.0.2\n        \n            @angular/router : ^4.0.2\n        \n            @ngrx/core : ^1.2.0\n        \n            @ngrx/effects : ^2.0.3\n        \n            @ngrx/entity : ^5.2.0\n        \n            @ngrx/store : ^2.2.2\n        \n            @ngrx/store-devtools : ^3.2.4\n        \n            @types/circular-json : ^0.4.0\n        \n            @types/jwt-decode : ^2.2.1\n        \n            @types/knockout : ^3.4.54\n        \n            angular-in-memory-web-api : ^0.5.4\n        \n            angular2-notifications : ^0.4.53\n        \n            circular-json : ^0.5.1\n        \n            cldr-data : ^32.0.1\n        \n            core-js : ^2.4.1\n        \n            faker : ^4.1.0\n        \n            font-awesome : ^4.7.0\n        \n            globalize : ^1.3.0\n        \n            json-server : ^0.12.1\n        \n            jsonwebtoken : ^8.2.0\n        \n            knockout : ^3.4.2\n        \n            ng2-popover : 0.0.13\n        \n            ng2-translate : ^5.0.0\n        \n            redux-localstorage : ^0.4.1\n        \n            reselect : ^2.5.4\n        \n            rxjs : ^5.2.0\n        \n            ts-helpers : 1.1.2\n        \n            zone.js : ^0.8.4\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DocFormat   (src/.../doc-format.enum.ts)\n                        \n                        \n                            MediaType   (src/.../http.service.ts)\n                        \n                        \n                            typeAction   (src/.../control-web-dav.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/components/document-generation/doc-format.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        DocFormat\n                    \n                \n                        \n                            \n                                 Word\n                            \n                        \n                        \n                            \n                                Value: 1\n                            \n                        \n                        \n                            \n                                 Excel\n                            \n                        \n                        \n                            \n                                Value: 2\n                            \n                        \n                        \n                            \n                                 Pdf\n                            \n                        \n                        \n                            \n                                Value: 3\n                            \n                        \n                        \n                            \n                                 Unbekannt\n                            \n                        \n                        \n                            \n                                Value: 0\n                            \n                        \n            \n        \n\n    src/app/shared/asyncServices/http/http.service.ts\n    \n        \n            \n                \n                    \n                        \n                        MediaType\n                    \n                \n                    \n                        \n                            Supported @Produces media types\n\n                        \n                    \n                        \n                            \n                                 JSON\n                            \n                        \n                        \n                            \n                                 FORM_DATA\n                            \n                        \n            \n        \n\n    src/app/shared/components/control-web-dav/control-web-dav.component.ts\n    \n        \n            \n                \n                    \n                        \n                        typeAction\n                    \n                \n                        \n                            \n                                 new\n                            \n                        \n                        \n                            \n                                 delete\n                            \n                        \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n﻿### $_Getting Started\n$_Clone or download the repo pattern download\nRun npm install\nRun npm run run-allThis will run the server and launch the browser with the applicatition http://localhost:4100 and server api http://localhost:3000\n$_Features\n\nPersons Management\n  New\n  Edit\n  Delete\nLogin \n  authen guard\n  Json web token\nResponsive simple\nTheme core style \nMock api backend\n\n$_user cases\n\nGet Detail person with id\nWhen user click button\nWhen user Refresh page, load page from url\n\n\nNavbar smat options component\nEdit: Has actions new, delete, save\nManager: Only has action new\n\n\nInsert new person\n\nStep 1: Given input FirstName \nStep 1.2: Save state given firstName\nStep 2: Given input LastName\nStep 2.2: Save state given lastName\nStep 3: Given input Address\nStep 3.2: Save state given address\nStep 4: Click button submit\nStep 5: Send request\nStep 6: receive response\nStep 7: handle error if error\nStep 8: Notifie to screen\nstep 9: Finish action Insert new person\n\n\nEdit person with 2 users\n\nuser 1 edit record 1 input firstName: Nguyen Nam -> Nguyen Nam 1\nuser 2 edit record 1 , Input first Name: bindding state firstName of user 1\nManage State subscriptions ???\n\n\nEdit person with 1 user on multil tabs\n\nuser 1 edit record 1 on tab 1\nuser 1 edit record 1 on tab 2\nuser 1 edit record 1 on tab n.....\nManage State subscriptions ???\n\n\n\n$_Build component interaction for childs componnent app-toolbar1, app-toolbar2, & parrent component app-navbar\nhttps://angular.io/guide/component-interaction\n$_generate service\n    ng generate service Api --module app.module.ts\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ComponentsModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ControlWebDavModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DocumentGenerationModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DocumentReportViewerModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DossierNavigatorModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DossierRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ExceptionsModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ExceptionsRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HttpServiceModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LayoutContainersModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PersonsModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PersonsRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PipesModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UtilityModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_AppComponent_providers\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_ComponentsModule\n\n\n\ncluster_ComponentsModule_declarations\n\n\n\ncluster_ComponentsModule_exports\n\n\n\ncluster_ControlWebDavModule\n\n\n\ncluster_ControlWebDavModule_declarations\n\n\n\ncluster_ControlWebDavModule_exports\n\n\n\ncluster_DocumentGenerationModule\n\n\n\ncluster_DocumentGenerationModule_declarations\n\n\n\ncluster_DocumentGenerationModule_exports\n\n\n\ncluster_DocumentGenerationModule_providers\n\n\n\ncluster_DocumentReportViewerModule\n\n\n\ncluster_DocumentReportViewerModule_declarations\n\n\n\ncluster_DocumentReportViewerModule_exports\n\n\n\ncluster_DocumentReportViewerModule_providers\n\n\n\ncluster_DossierNavigatorModule\n\n\n\ncluster_DossierNavigatorModule_declarations\n\n\n\ncluster_DossierNavigatorModule_imports\n\n\n\ncluster_DossierNavigatorModule_providers\n\n\n\ncluster_ExceptionsModule\n\n\n\ncluster_ExceptionsModule_declarations\n\n\n\ncluster_ExceptionsModule_imports\n\n\n\ncluster_LayoutContainersModule\n\n\n\ncluster_LayoutContainersModule_declarations\n\n\n\ncluster_LayoutContainersModule_exports\n\n\n\ncluster_LayoutContainersModule_providers\n\n\n\ncluster_PersonsModule\n\n\n\ncluster_PersonsModule_declarations\n\n\n\ncluster_PersonsModule_imports\n\n\n\ncluster_PersonsModule_providers\n\n\n\ncluster_PipesModule\n\n\n\ncluster_PipesModule_declarations\n\n\n\ncluster_PipesModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppSandbox\n\nAppSandbox\n\nAppComponent -->\n\nAppSandbox->AppComponent\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nHttpServiceModule\n\nHttpServiceModule\n\nAppModule -->\n\nHttpServiceModule->AppModule\n\n\n\n\n\nUtilityModule\n\nUtilityModule\n\nAppModule -->\n\nUtilityModule->AppModule\n\n\n\n\n\nAppApiClient\n\nAppApiClient\n\nAppModule -->\n\nAppApiClient->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthApiClient\n\nAuthApiClient\n\nAppModule -->\n\nAuthApiClient->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthApiClient->AuthModule\n\n\n\n\n\nAuthGuard\n\nAuthGuard\n\nAppModule -->\n\nAuthGuard->AppModule\n\n\n\n\n\nAuthSandbox\n\nAuthSandbox\n\nAppModule -->\n\nAuthSandbox->AppModule\n\n\n\nAuthModule -->\n\nAuthSandbox->AuthModule\n\n\n\n\n\nAuthorizeGuard\n\nAuthorizeGuard\n\nAppModule -->\n\nAuthorizeGuard->AppModule\n\n\n\n\n\nCanDeactivateGuard\n\nCanDeactivateGuard\n\nAppModule -->\n\nCanDeactivateGuard->AppModule\n\n\n\n\n\nConfigService\n\nConfigService\n\nAppModule -->\n\nConfigService->AppModule\n\n\n\n\n\nDossierApiClient\n\nDossierApiClient\n\nAppModule -->\n\nDossierApiClient->AppModule\n\n\n\n\n\nDossierNavigatorModule\n\nDossierNavigatorModule\n\nDossierNavigatorModule -->\n\nDossierApiClient->DossierNavigatorModule\n\n\n\n\n\nPersonsApiClient\n\nPersonsApiClient\n\nAppModule -->\n\nPersonsApiClient->AppModule\n\n\n\n\n\nPersonsModule\n\nPersonsModule\n\nPersonsModule -->\n\nPersonsApiClient->PersonsModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nAuthorizeDirective\n\nAuthorizeDirective\n\n\n\nComponentsModule\n\nComponentsModule\n\nComponentsModule -->\n\nAuthorizeDirective->ComponentsModule\n\n\n\n\n\nDynamicTabsDirective\n\nDynamicTabsDirective\n\nComponentsModule -->\n\nDynamicTabsDirective->ComponentsModule\n\n\n\n\n\nSpinnerComponent\n\nSpinnerComponent\n\nComponentsModule -->\n\nSpinnerComponent->ComponentsModule\n\n\n\n\n\nAuthorizeDirective \n\nAuthorizeDirective \n\nAuthorizeDirective  -->\n\nComponentsModule->AuthorizeDirective \n\n\n\n\n\nDynamicTabsDirective \n\nDynamicTabsDirective \n\nDynamicTabsDirective  -->\n\nComponentsModule->DynamicTabsDirective \n\n\n\n\n\nSpinnerComponent \n\nSpinnerComponent \n\nSpinnerComponent  -->\n\nComponentsModule->SpinnerComponent \n\n\n\n\n\nControlWebDavComponent\n\nControlWebDavComponent\n\n\n\nControlWebDavModule\n\nControlWebDavModule\n\nControlWebDavModule -->\n\nControlWebDavComponent->ControlWebDavModule\n\n\n\n\n\nControlWebDavComponent \n\nControlWebDavComponent \n\nControlWebDavComponent  -->\n\nControlWebDavModule->ControlWebDavComponent \n\n\n\nPersonsModule -->\n\nControlWebDavModule->PersonsModule\n\n\n\n\n\nDocumentGenerationComponent\n\nDocumentGenerationComponent\n\n\n\nDocumentGenerationModule\n\nDocumentGenerationModule\n\nDocumentGenerationModule -->\n\nDocumentGenerationComponent->DocumentGenerationModule\n\n\n\n\n\nDocumentGenerationComponent \n\nDocumentGenerationComponent \n\nDocumentGenerationComponent  -->\n\nDocumentGenerationModule->DocumentGenerationComponent \n\n\n\nPersonsModule -->\n\nDocumentGenerationModule->PersonsModule\n\n\n\n\n\nDocumentsHelper\n\nDocumentsHelper\n\nDocumentGenerationModule -->\n\nDocumentsHelper->DocumentGenerationModule\n\n\n\n\n\nDocumentReportViewerComponent\n\nDocumentReportViewerComponent\n\n\n\nDocumentReportViewerModule\n\nDocumentReportViewerModule\n\nDocumentReportViewerModule -->\n\nDocumentReportViewerComponent->DocumentReportViewerModule\n\n\n\n\n\nReportViewerComponent\n\nReportViewerComponent\n\nDocumentReportViewerModule -->\n\nReportViewerComponent->DocumentReportViewerModule\n\n\n\n\n\nDocumentReportViewerComponent \n\nDocumentReportViewerComponent \n\nDocumentReportViewerComponent  -->\n\nDocumentReportViewerModule->DocumentReportViewerComponent \n\n\n\n\n\nReportViewerComponent \n\nReportViewerComponent \n\nReportViewerComponent  -->\n\nDocumentReportViewerModule->ReportViewerComponent \n\n\n\nPersonsModule -->\n\nDocumentReportViewerModule->PersonsModule\n\n\n\n\n\nReportService\n\nReportService\n\nDocumentReportViewerModule -->\n\nReportService->DocumentReportViewerModule\n\n\n\n\n\nDossierNavigatorComponent\n\nDossierNavigatorComponent\n\nDossierNavigatorModule -->\n\nDossierNavigatorComponent->DossierNavigatorModule\n\n\n\n\n\nNavFiltersComponent\n\nNavFiltersComponent\n\nDossierNavigatorModule -->\n\nNavFiltersComponent->DossierNavigatorModule\n\n\n\n\n\nTreeDetailComponent\n\nTreeDetailComponent\n\nDossierNavigatorModule -->\n\nTreeDetailComponent->DossierNavigatorModule\n\n\n\n\n\nTreeListComponent\n\nTreeListComponent\n\nDossierNavigatorModule -->\n\nTreeListComponent->DossierNavigatorModule\n\n\n\n\n\nDossierRoutingModule\n\nDossierRoutingModule\n\nDossierNavigatorModule -->\n\nDossierRoutingModule->DossierNavigatorModule\n\n\n\n\n\nLayoutContainersModule\n\nLayoutContainersModule\n\nDossierNavigatorModule -->\n\nLayoutContainersModule->DossierNavigatorModule\n\n\n\n\n\nBreadCrumbComponent \n\nBreadCrumbComponent \n\nBreadCrumbComponent  -->\n\nLayoutContainersModule->BreadCrumbComponent \n\n\n\n\n\nDossierDetailsComponent \n\nDossierDetailsComponent \n\nDossierDetailsComponent  -->\n\nLayoutContainersModule->DossierDetailsComponent \n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nLayoutContainersModule->HeaderComponent \n\n\n\n\n\nHorizontalNavigationComponent \n\nHorizontalNavigationComponent \n\nHorizontalNavigationComponent  -->\n\nLayoutContainersModule->HorizontalNavigationComponent \n\n\n\n\n\nLanguageSelectorComponent \n\nLanguageSelectorComponent \n\nLanguageSelectorComponent  -->\n\nLayoutContainersModule->LanguageSelectorComponent \n\n\n\n\n\nLayoutContainer \n\nLayoutContainer \n\nLayoutContainer  -->\n\nLayoutContainersModule->LayoutContainer \n\n\n\n\n\nLeftSidebarComponent \n\nLeftSidebarComponent \n\nLeftSidebarComponent  -->\n\nLayoutContainersModule->LeftSidebarComponent \n\n\n\n\n\nNotificationBoxComponent \n\nNotificationBoxComponent \n\nNotificationBoxComponent  -->\n\nLayoutContainersModule->NotificationBoxComponent \n\n\n\n\n\nPageContentComponent \n\nPageContentComponent \n\nPageContentComponent  -->\n\nLayoutContainersModule->PageContentComponent \n\n\n\n\n\nProfileBarComponent \n\nProfileBarComponent \n\nProfileBarComponent  -->\n\nLayoutContainersModule->ProfileBarComponent \n\n\n\n\n\nSearchBoxComponent \n\nSearchBoxComponent \n\nSearchBoxComponent  -->\n\nLayoutContainersModule->SearchBoxComponent \n\n\n\n\n\nSelectedActionsComponent \n\nSelectedActionsComponent \n\nSelectedActionsComponent  -->\n\nLayoutContainersModule->SelectedActionsComponent \n\n\n\n\n\nToolbarsComponent \n\nToolbarsComponent \n\nToolbarsComponent  -->\n\nLayoutContainersModule->ToolbarsComponent \n\n\n\nPersonsModule -->\n\nLayoutContainersModule->PersonsModule\n\n\n\n\n\nDossierSandbox\n\nDossierSandbox\n\nDossierNavigatorModule -->\n\nDossierSandbox->DossierNavigatorModule\n\n\n\n\n\nDossierService\n\nDossierService\n\nDossierNavigatorModule -->\n\nDossierService->DossierNavigatorModule\n\n\n\n\n\nPageBadGatewayComponent\n\nPageBadGatewayComponent\n\n\n\nExceptionsModule\n\nExceptionsModule\n\nExceptionsModule -->\n\nPageBadGatewayComponent->ExceptionsModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nExceptionsModule -->\n\nPageNotFoundComponent->ExceptionsModule\n\n\n\n\n\nExceptionsRoutingModule\n\nExceptionsRoutingModule\n\nExceptionsModule -->\n\nExceptionsRoutingModule->ExceptionsModule\n\n\n\n\n\nBreadCrumbComponent\n\nBreadCrumbComponent\n\nLayoutContainersModule -->\n\nBreadCrumbComponent->LayoutContainersModule\n\n\n\n\n\nDossierDetailsComponent\n\nDossierDetailsComponent\n\nLayoutContainersModule -->\n\nDossierDetailsComponent->LayoutContainersModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nLayoutContainersModule -->\n\nHeaderComponent->LayoutContainersModule\n\n\n\n\n\nHorizontalNavigationComponent\n\nHorizontalNavigationComponent\n\nLayoutContainersModule -->\n\nHorizontalNavigationComponent->LayoutContainersModule\n\n\n\n\n\nLanguageSelectorComponent\n\nLanguageSelectorComponent\n\nLayoutContainersModule -->\n\nLanguageSelectorComponent->LayoutContainersModule\n\n\n\n\n\nLayoutContainer\n\nLayoutContainer\n\nLayoutContainersModule -->\n\nLayoutContainer->LayoutContainersModule\n\n\n\n\n\nLeftSidebarComponent\n\nLeftSidebarComponent\n\nLayoutContainersModule -->\n\nLeftSidebarComponent->LayoutContainersModule\n\n\n\n\n\nNotificationBoxComponent\n\nNotificationBoxComponent\n\nLayoutContainersModule -->\n\nNotificationBoxComponent->LayoutContainersModule\n\n\n\n\n\nPageContentComponent\n\nPageContentComponent\n\nLayoutContainersModule -->\n\nPageContentComponent->LayoutContainersModule\n\n\n\n\n\nProfileBarComponent\n\nProfileBarComponent\n\nLayoutContainersModule -->\n\nProfileBarComponent->LayoutContainersModule\n\n\n\n\n\nSearchBoxComponent\n\nSearchBoxComponent\n\nLayoutContainersModule -->\n\nSearchBoxComponent->LayoutContainersModule\n\n\n\n\n\nSelectedActionsComponent\n\nSelectedActionsComponent\n\nLayoutContainersModule -->\n\nSelectedActionsComponent->LayoutContainersModule\n\n\n\n\n\nToolbarsComponent\n\nToolbarsComponent\n\nLayoutContainersModule -->\n\nToolbarsComponent->LayoutContainersModule\n\n\n\n\n\nLayoutSandbox\n\nLayoutSandbox\n\nLayoutContainersModule -->\n\nLayoutSandbox->LayoutContainersModule\n\n\n\n\n\nPersonFormComponent\n\nPersonFormComponent\n\nPersonsModule -->\n\nPersonFormComponent->PersonsModule\n\n\n\n\n\nPersonListComponent\n\nPersonListComponent\n\nPersonsModule -->\n\nPersonListComponent->PersonsModule\n\n\n\n\n\nPersonsComponent\n\nPersonsComponent\n\nPersonsModule -->\n\nPersonsComponent->PersonsModule\n\n\n\n\n\nPersonsRoutingModule\n\nPersonsRoutingModule\n\nPersonsModule -->\n\nPersonsRoutingModule->PersonsModule\n\n\n\n\n\nPersonsResolver\n\nPersonsResolver\n\nPersonsModule -->\n\nPersonsResolver->PersonsModule\n\n\n\n\n\nPersonsSandbox\n\nPersonsSandbox\n\nPersonsModule -->\n\nPersonsSandbox->PersonsModule\n\n\n\n\n\nPersonsService\n\nPersonsService\n\nPersonsModule -->\n\nPersonsService->PersonsModule\n\n\n\n\n\nSanitizeHtmlPipe\n\nSanitizeHtmlPipe\n\n\n\nPipesModule\n\nPipesModule\n\nPipesModule -->\n\nSanitizeHtmlPipe->PipesModule\n\n\n\n\n\nSanitizeHtmlPipe \n\nSanitizeHtmlPipe \n\nSanitizeHtmlPipe  -->\n\nPipesModule->SanitizeHtmlPipe \n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            18 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        29 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        2 directives\n                    \n                \n            \n            \n                \n                    \n                        \n                        33 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 pipe\n                    \n                \n            \n            \n                \n                    \n                        \n                        74 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        18 interfaces\n                    \n                \n            \n            \n                \n                    \n                        \n                        \n                            24 routes\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/role.html":{"url":"interfaces/role.html","title":"interface - role","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/models/auth/role.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        className\n                                \n                                \n                                            Optional\n                                        mayDelete\n                                \n                                \n                                            Optional\n                                        mayInsert\n                                \n                                \n                                            Optional\n                                        mayUpdate\n                                \n                                \n                                            Optional\n                                        rightName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        className\n                                    \n                                \n                                \n                                    \n                                        className:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mayDelete\n                                    \n                                \n                                \n                                    \n                                        mayDelete:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mayInsert\n                                    \n                                \n                                \n                                    \n                                        mayInsert:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mayUpdate\n                                    \n                                \n                                \n                                    \n                                        mayUpdate:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rightName\n                                    \n                                \n                                \n                                    \n                                        rightName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface role {\n  className?: string;\n  rightName?: string;\n  mayInsert?: boolean;\n  mayUpdate?: boolean,\n  mayDelete?: boolean;\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Actions   (src/.../auth.action.ts)\n                        \n                        \n                            Actions   (src/.../dossier.action.ts)\n                        \n                        \n                            Actions   (src/.../menus.action.ts)\n                        \n                        \n                            Actions   (src/.../person-details.action.ts)\n                        \n                        \n                            Actions   (src/.../persons.action.ts)\n                        \n                        \n                            Actions   (src/.../search-box.action.ts)\n                        \n                        \n                            Actions   (src/.../settings.action.ts)\n                        \n                        \n                            FiltersAction   (src/.../dossier.action.ts)\n                        \n                        \n                            Predicate   (src/.../utilityHelpers.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/store/actions/auth.action.ts\n    \n        \n            \n                \n                    \n                        \n                        Actions\n                    \n                \n                \n                    \n                        Actions:     DoLoginAction | DoLoginSuccessAction | DoLoginFailAction | DoLogoutAction | DoLogoutSuccessAction | DoLogoutFailAction | AddUserAction | RemoveUserAction\n\n                    \n                \n            \n        \n\n    src/app/shared/store/actions/dossier.action.ts\n    \n        \n            \n                \n                    \n                        \n                        Actions\n                    \n                \n                \n                    \n                        Actions:     LoadAction | LoadSuccessAction | LoadFailAction | GetTreeDetailAction | ResetState\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        FiltersAction\n                    \n                \n                \n                    \n                        FiltersAction:     SetVisibilityFilterAction.SetActiveAction | SetVisibilityFilterAction.SetClosedAction | SetVisibilityFilterAction.SetArchivedAction | SetVisibilityFilterAction.SetIncludeGroupAction | SetVisibilityFilterAction.SetIncludeGuestAction | SetVisibilityFilterAction.SetIncludeTasksAction\n\n                    \n                \n            \n        \n\n    src/app/shared/store/actions/menus.action.ts\n    \n        \n            \n                \n                    \n                        \n                        Actions\n                    \n                \n                \n                    \n                        Actions:     SelectAction | SetAvaiableMenu | LoadAction | LoadSuccessAction | LoadFailAction\n\n                    \n                \n            \n        \n\n    src/app/shared/store/actions/person-details.action.ts\n    \n        \n            \n                \n                    \n                        \n                        Actions\n                    \n                \n                \n                    \n                        Actions:     LoadAction | LoadSuccessAction | LoadFailAction | ResetState\n\n                    \n                \n            \n        \n\n    src/app/shared/store/actions/persons.action.ts\n    \n        \n            \n                \n                    \n                        \n                        Actions\n                    \n                \n                \n                    \n                        Actions:     LoadAction | LoadSuccessAction | LoadFailAction | AddNewAction | AddSuccessAction | AddFailAction | UpdateAction | UpdateSuccessAction | UpdateFailAction | DeleteAction | DeleteSuccessAction | DeleteFailAction\n\n                    \n                \n            \n        \n\n    src/app/shared/store/actions/search-box.action.ts\n    \n        \n            \n                \n                    \n                        \n                        Actions\n                    \n                \n                \n                    \n                        Actions:     LoadAction | LoadSuccessAction | LoadFailAction\n\n                    \n                \n            \n        \n\n    src/app/shared/store/actions/settings.action.ts\n    \n        \n            \n                \n                    \n                        \n                        Actions\n                    \n                \n                \n                    \n                        Actions:     SetLanguageAction | SetCultureAction | LoadApiRolesAction | SetAvailableRolesAction | LoadFailAction | LoadApiLangsAction | SetAvailableLanguagesAction | UpdateSelectedAction | DeleteItemSelectedAction | ResetState | DocumentCreate | DocumentCreateSuccess | DocumentCreateError\n\n                    \n                \n            \n        \n\n    src/app/shared/utility/utilityHelpers.ts\n    \n        \n            \n                \n                    \n                        \n                        Predicate\n                    \n                \n                \n                    \n                        Predicate:     function\n\n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
